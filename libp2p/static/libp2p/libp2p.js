!function(e) {
    if ("object" == typeof exports && "undefined" != typeof module)
        module.exports = e();
    else if ("function" == typeof define && define.amd)
        define([], e);
    else {
        ("undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : this).libp2p = e()
    }
}((function() {
    var define, module, exports;
    return function e(t, r, i) {
        function n(o, a) {
            if (!r[o]) {
                if (!t[o]) {
                    var c = "function" == typeof require && require;
                    if (!a && c)
                        return c(o, !0);
                    if (s)
                        return s(o, !0);
                    var u = new Error("Cannot find module '" + o + "'");
                    throw u.code = "MODULE_NOT_FOUND",
                    u
                }
                var f = r[o] = {
                    exports: {}
                };
                t[o][0].call(f.exports, (function(e) {
                    return n(t[o][1][e] || e)
                }
                ), f, f.exports, e, t, r, i)
            }
            return r[o].exports
        }
        for (var s = "function" == typeof require && require, o = 0; o < i.length; o++)
            n(i[o]);
        return n
    }({
        1: [function(e, t, r) {
            var i = r;
            i.bignum = e("bn.js"),
            i.define = e("./asn1/api").define,
            i.base = e("./asn1/base"),
            i.constants = e("./asn1/constants"),
            i.decoders = e("./asn1/decoders"),
            i.encoders = e("./asn1/encoders")
        }
        , {
            "./asn1/api": 2,
            "./asn1/base": 4,
            "./asn1/constants": 8,
            "./asn1/decoders": 10,
            "./asn1/encoders": 13,
            "bn.js": 16
        }],
        2: [function(e, t, r) {
            var i = e("../asn1")
              , n = e("inherits");
            function s(e, t) {
                this.name = e,
                this.body = t,
                this.decoders = {},
                this.encoders = {}
            }
            r.define = function(e, t) {
                return new s(e,t)
            }
            ,
            s.prototype._createNamed = function(t) {
                var r;
                try {
                    r = e("vm").runInThisContext("(function " + this.name + "(entity) {\n  this._initNamed(entity);\n})")
                } catch (e) {
                    r = function(e) {
                        this._initNamed(e)
                    }
                }
                return n(r, t),
                r.prototype._initNamed = function(e) {
                    t.call(this, e)
                }
                ,
                new r(this)
            }
            ,
            s.prototype._getDecoder = function(e) {
                return e = e || "der",
                this.decoders.hasOwnProperty(e) || (this.decoders[e] = this._createNamed(i.decoders[e])),
                this.decoders[e]
            }
            ,
            s.prototype.decode = function(e, t, r) {
                return this._getDecoder(t).decode(e, r)
            }
            ,
            s.prototype._getEncoder = function(e) {
                return e = e || "der",
                this.encoders.hasOwnProperty(e) || (this.encoders[e] = this._createNamed(i.encoders[e])),
                this.encoders[e]
            }
            ,
            s.prototype.encode = function(e, t, r) {
                return this._getEncoder(t).encode(e, r)
            }
        }
        , {
            "../asn1": 1,
            inherits: 100,
            vm: 156
        }],
        3: [function(e, t, r) {
            var i = e("inherits")
              , n = e("../base").Reporter
              , s = e("buffer").Buffer;
            function o(e, t) {
                n.call(this, t),
                s.isBuffer(e) ? (this.base = e,
                this.offset = 0,
                this.length = e.length) : this.error("Input not Buffer")
            }
            function a(e, t) {
                if (Array.isArray(e))
                    this.length = 0,
                    this.value = e.map((function(e) {
                        return e instanceof a || (e = new a(e,t)),
                        this.length += e.length,
                        e
                    }
                    ), this);
                else if ("number" == typeof e) {
                    if (!(0 <= e && e <= 255))
                        return t.error("non-byte EncoderBuffer value");
                    this.value = e,
                    this.length = 1
                } else if ("string" == typeof e)
                    this.value = e,
                    this.length = s.byteLength(e);
                else {
                    if (!s.isBuffer(e))
                        return t.error("Unsupported type: " + typeof e);
                    this.value = e,
                    this.length = e.length
                }
            }
            i(o, n),
            r.DecoderBuffer = o,
            o.prototype.save = function() {
                return {
                    offset: this.offset,
                    reporter: n.prototype.save.call(this)
                }
            }
            ,
            o.prototype.restore = function(e) {
                var t = new o(this.base);
                return t.offset = e.offset,
                t.length = this.offset,
                this.offset = e.offset,
                n.prototype.restore.call(this, e.reporter),
                t
            }
            ,
            o.prototype.isEmpty = function() {
                return this.offset === this.length
            }
            ,
            o.prototype.readUInt8 = function(e) {
                return this.offset + 1 <= this.length ? this.base.readUInt8(this.offset++, !0) : this.error(e || "DecoderBuffer overrun")
            }
            ,
            o.prototype.skip = function(e, t) {
                if (!(this.offset + e <= this.length))
                    return this.error(t || "DecoderBuffer overrun");
                var r = new o(this.base);
                return r._reporterState = this._reporterState,
                r.offset = this.offset,
                r.length = this.offset + e,
                this.offset += e,
                r
            }
            ,
            o.prototype.raw = function(e) {
                return this.base.slice(e ? e.offset : this.offset, this.length)
            }
            ,
            r.EncoderBuffer = a,
            a.prototype.join = function(e, t) {
                return e || (e = new s(this.length)),
                t || (t = 0),
                0 === this.length ? e : (Array.isArray(this.value) ? this.value.forEach((function(r) {
                    r.join(e, t),
                    t += r.length
                }
                )) : ("number" == typeof this.value ? e[t] = this.value : "string" == typeof this.value ? e.write(this.value, t) : s.isBuffer(this.value) && this.value.copy(e, t),
                t += this.length),
                e)
            }
        }
        , {
            "../base": 4,
            buffer: 48,
            inherits: 100
        }],
        4: [function(e, t, r) {
            var i = r;
            i.Reporter = e("./reporter").Reporter,
            i.DecoderBuffer = e("./buffer").DecoderBuffer,
            i.EncoderBuffer = e("./buffer").EncoderBuffer,
            i.Node = e("./node")
        }
        , {
            "./buffer": 3,
            "./node": 5,
            "./reporter": 6
        }],
        5: [function(e, t, r) {
            var i = e("../base").Reporter
              , n = e("../base").EncoderBuffer
              , s = e("../base").DecoderBuffer
              , o = e("minimalistic-assert")
              , a = ["seq", "seqof", "set", "setof", "objid", "bool", "gentime", "utctime", "null_", "enum", "int", "objDesc", "bitstr", "bmpstr", "charstr", "genstr", "graphstr", "ia5str", "iso646str", "numstr", "octstr", "printstr", "t61str", "unistr", "utf8str", "videostr"]
              , c = ["key", "obj", "use", "optional", "explicit", "implicit", "def", "choice", "any", "contains"].concat(a);
            function u(e, t) {
                var r = {};
                this._baseState = r,
                r.enc = e,
                r.parent = t || null,
                r.children = null,
                r.tag = null,
                r.args = null,
                r.reverseArgs = null,
                r.choice = null,
                r.optional = !1,
                r.any = !1,
                r.obj = !1,
                r.use = null,
                r.useDecoder = null,
                r.key = null,
                r.default = null,
                r.explicit = null,
                r.implicit = null,
                r.contains = null,
                r.parent || (r.children = [],
                this._wrap())
            }
            t.exports = u;
            var f = ["enc", "parent", "children", "tag", "args", "reverseArgs", "choice", "optional", "any", "obj", "use", "alteredUse", "key", "default", "explicit", "implicit", "contains"];
            u.prototype.clone = function() {
                var e = this._baseState
                  , t = {};
                f.forEach((function(r) {
                    t[r] = e[r]
                }
                ));
                var r = new this.constructor(t.parent);
                return r._baseState = t,
                r
            }
            ,
            u.prototype._wrap = function() {
                var e = this._baseState;
                c.forEach((function(t) {
                    this[t] = function() {
                        var r = new this.constructor(this);
                        return e.children.push(r),
                        r[t].apply(r, arguments)
                    }
                }
                ), this)
            }
            ,
            u.prototype._init = function(e) {
                var t = this._baseState;
                o(null === t.parent),
                e.call(this),
                t.children = t.children.filter((function(e) {
                    return e._baseState.parent === this
                }
                ), this),
                o.equal(t.children.length, 1, "Root node can have only one child")
            }
            ,
            u.prototype._useArgs = function(e) {
                var t = this._baseState
                  , r = e.filter((function(e) {
                    return e instanceof this.constructor
                }
                ), this);
                e = e.filter((function(e) {
                    return !(e instanceof this.constructor)
                }
                ), this),
                0 !== r.length && (o(null === t.children),
                t.children = r,
                r.forEach((function(e) {
                    e._baseState.parent = this
                }
                ), this)),
                0 !== e.length && (o(null === t.args),
                t.args = e,
                t.reverseArgs = e.map((function(e) {
                    if ("object" != typeof e || e.constructor !== Object)
                        return e;
                    var t = {};
                    return Object.keys(e).forEach((function(r) {
                        r == (0 | r) && (r |= 0);
                        var i = e[r];
                        t[i] = r
                    }
                    )),
                    t
                }
                )))
            }
            ,
            ["_peekTag", "_decodeTag", "_use", "_decodeStr", "_decodeObjid", "_decodeTime", "_decodeNull", "_decodeInt", "_decodeBool", "_decodeList", "_encodeComposite", "_encodeStr", "_encodeObjid", "_encodeTime", "_encodeNull", "_encodeInt", "_encodeBool"].forEach((function(e) {
                u.prototype[e] = function() {
                    var t = this._baseState;
                    throw new Error(e + " not implemented for encoding: " + t.enc)
                }
            }
            )),
            a.forEach((function(e) {
                u.prototype[e] = function() {
                    var t = this._baseState
                      , r = Array.prototype.slice.call(arguments);
                    return o(null === t.tag),
                    t.tag = e,
                    this._useArgs(r),
                    this
                }
            }
            )),
            u.prototype.use = function(e) {
                o(e);
                var t = this._baseState;
                return o(null === t.use),
                t.use = e,
                this
            }
            ,
            u.prototype.optional = function() {
                return this._baseState.optional = !0,
                this
            }
            ,
            u.prototype.def = function(e) {
                var t = this._baseState;
                return o(null === t.default),
                t.default = e,
                t.optional = !0,
                this
            }
            ,
            u.prototype.explicit = function(e) {
                var t = this._baseState;
                return o(null === t.explicit && null === t.implicit),
                t.explicit = e,
                this
            }
            ,
            u.prototype.implicit = function(e) {
                var t = this._baseState;
                return o(null === t.explicit && null === t.implicit),
                t.implicit = e,
                this
            }
            ,
            u.prototype.obj = function() {
                var e = this._baseState
                  , t = Array.prototype.slice.call(arguments);
                return e.obj = !0,
                0 !== t.length && this._useArgs(t),
                this
            }
            ,
            u.prototype.key = function(e) {
                var t = this._baseState;
                return o(null === t.key),
                t.key = e,
                this
            }
            ,
            u.prototype.any = function() {
                return this._baseState.any = !0,
                this
            }
            ,
            u.prototype.choice = function(e) {
                var t = this._baseState;
                return o(null === t.choice),
                t.choice = e,
                this._useArgs(Object.keys(e).map((function(t) {
                    return e[t]
                }
                ))),
                this
            }
            ,
            u.prototype.contains = function(e) {
                var t = this._baseState;
                return o(null === t.use),
                t.contains = e,
                this
            }
            ,
            u.prototype._decode = function(e, t) {
                var r = this._baseState;
                if (null === r.parent)
                    return e.wrapResult(r.children[0]._decode(e, t));
                var i, n = r.default, o = !0, a = null;
                if (null !== r.key && (a = e.enterKey(r.key)),
                r.optional) {
                    var c = null;
                    if (null !== r.explicit ? c = r.explicit : null !== r.implicit ? c = r.implicit : null !== r.tag && (c = r.tag),
                    null !== c || r.any) {
                        if (o = this._peekTag(e, c, r.any),
                        e.isError(o))
                            return o
                    } else {
                        var u = e.save();
                        try {
                            null === r.choice ? this._decodeGeneric(r.tag, e, t) : this._decodeChoice(e, t),
                            o = !0
                        } catch (e) {
                            o = !1
                        }
                        e.restore(u)
                    }
                }
                if (r.obj && o && (i = e.enterObject()),
                o) {
                    if (null !== r.explicit) {
                        var f = this._decodeTag(e, r.explicit);
                        if (e.isError(f))
                            return f;
                        e = f
                    }
                    var h = e.offset;
                    if (null === r.use && null === r.choice) {
                        if (r.any)
                            u = e.save();
                        var l = this._decodeTag(e, null !== r.implicit ? r.implicit : r.tag, r.any);
                        if (e.isError(l))
                            return l;
                        r.any ? n = e.raw(u) : e = l
                    }
                    if (t && t.track && null !== r.tag && t.track(e.path(), h, e.length, "tagged"),
                    t && t.track && null !== r.tag && t.track(e.path(), e.offset, e.length, "content"),
                    n = r.any ? n : null === r.choice ? this._decodeGeneric(r.tag, e, t) : this._decodeChoice(e, t),
                    e.isError(n))
                        return n;
                    if (r.any || null !== r.choice || null === r.children || r.children.forEach((function(r) {
                        r._decode(e, t)
                    }
                    )),
                    r.contains && ("octstr" === r.tag || "bitstr" === r.tag)) {
                        var d = new s(n);
                        n = this._getUse(r.contains, e._reporterState.obj)._decode(d, t)
                    }
                }
                return r.obj && o && (n = e.leaveObject(i)),
                null === r.key || null === n && !0 !== o ? null !== a && e.exitKey(a) : e.leaveKey(a, r.key, n),
                n
            }
            ,
            u.prototype._decodeGeneric = function(e, t, r) {
                var i = this._baseState;
                return "seq" === e || "set" === e ? null : "seqof" === e || "setof" === e ? this._decodeList(t, e, i.args[0], r) : /str$/.test(e) ? this._decodeStr(t, e, r) : "objid" === e && i.args ? this._decodeObjid(t, i.args[0], i.args[1], r) : "objid" === e ? this._decodeObjid(t, null, null, r) : "gentime" === e || "utctime" === e ? this._decodeTime(t, e, r) : "null_" === e ? this._decodeNull(t, r) : "bool" === e ? this._decodeBool(t, r) : "objDesc" === e ? this._decodeStr(t, e, r) : "int" === e || "enum" === e ? this._decodeInt(t, i.args && i.args[0], r) : null !== i.use ? this._getUse(i.use, t._reporterState.obj)._decode(t, r) : t.error("unknown tag: " + e)
            }
            ,
            u.prototype._getUse = function(e, t) {
                var r = this._baseState;
                return r.useDecoder = this._use(e, t),
                o(null === r.useDecoder._baseState.parent),
                r.useDecoder = r.useDecoder._baseState.children[0],
                r.implicit !== r.useDecoder._baseState.implicit && (r.useDecoder = r.useDecoder.clone(),
                r.useDecoder._baseState.implicit = r.implicit),
                r.useDecoder
            }
            ,
            u.prototype._decodeChoice = function(e, t) {
                var r = this._baseState
                  , i = null
                  , n = !1;
                return Object.keys(r.choice).some((function(s) {
                    var o = e.save()
                      , a = r.choice[s];
                    try {
                        var c = a._decode(e, t);
                        if (e.isError(c))
                            return !1;
                        i = {
                            type: s,
                            value: c
                        },
                        n = !0
                    } catch (t) {
                        return e.restore(o),
                        !1
                    }
                    return !0
                }
                ), this),
                n ? i : e.error("Choice not matched")
            }
            ,
            u.prototype._createEncoderBuffer = function(e) {
                return new n(e,this.reporter)
            }
            ,
            u.prototype._encode = function(e, t, r) {
                var i = this._baseState;
                if (null === i.default || i.default !== e) {
                    var n = this._encodeValue(e, t, r);
                    if (void 0 !== n && !this._skipDefault(n, t, r))
                        return n
                }
            }
            ,
            u.prototype._encodeValue = function(e, t, r) {
                var n = this._baseState;
                if (null === n.parent)
                    return n.children[0]._encode(e, t || new i);
                var s = null;
                if (this.reporter = t,
                n.optional && void 0 === e) {
                    if (null === n.default)
                        return;
                    e = n.default
                }
                var o = null
                  , a = !1;
                if (n.any)
                    s = this._createEncoderBuffer(e);
                else if (n.choice)
                    s = this._encodeChoice(e, t);
                else if (n.contains)
                    o = this._getUse(n.contains, r)._encode(e, t),
                    a = !0;
                else if (n.children)
                    o = n.children.map((function(r) {
                        if ("null_" === r._baseState.tag)
                            return r._encode(null, t, e);
                        if (null === r._baseState.key)
                            return t.error("Child should have a key");
                        var i = t.enterKey(r._baseState.key);
                        if ("object" != typeof e)
                            return t.error("Child expected, but input is not object");
                        var n = r._encode(e[r._baseState.key], t, e);
                        return t.leaveKey(i),
                        n
                    }
                    ), this).filter((function(e) {
                        return e
                    }
                    )),
                    o = this._createEncoderBuffer(o);
                else if ("seqof" === n.tag || "setof" === n.tag) {
                    if (!n.args || 1 !== n.args.length)
                        return t.error("Too many args for : " + n.tag);
                    if (!Array.isArray(e))
                        return t.error("seqof/setof, but data is not Array");
                    var c = this.clone();
                    c._baseState.implicit = null,
                    o = this._createEncoderBuffer(e.map((function(r) {
                        var i = this._baseState;
                        return this._getUse(i.args[0], e)._encode(r, t)
                    }
                    ), c))
                } else
                    null !== n.use ? s = this._getUse(n.use, r)._encode(e, t) : (o = this._encodePrimitive(n.tag, e),
                    a = !0);
                if (!n.any && null === n.choice) {
                    var u = null !== n.implicit ? n.implicit : n.tag
                      , f = null === n.implicit ? "universal" : "context";
                    null === u ? null === n.use && t.error("Tag could be omitted only for .use()") : null === n.use && (s = this._encodeComposite(u, a, f, o))
                }
                return null !== n.explicit && (s = this._encodeComposite(n.explicit, !1, "context", s)),
                s
            }
            ,
            u.prototype._encodeChoice = function(e, t) {
                var r = this._baseState
                  , i = r.choice[e.type];
                return i || o(!1, e.type + " not found in " + JSON.stringify(Object.keys(r.choice))),
                i._encode(e.value, t)
            }
            ,
            u.prototype._encodePrimitive = function(e, t) {
                var r = this._baseState;
                if (/str$/.test(e))
                    return this._encodeStr(t, e);
                if ("objid" === e && r.args)
                    return this._encodeObjid(t, r.reverseArgs[0], r.args[1]);
                if ("objid" === e)
                    return this._encodeObjid(t, null, null);
                if ("gentime" === e || "utctime" === e)
                    return this._encodeTime(t, e);
                if ("null_" === e)
                    return this._encodeNull();
                if ("int" === e || "enum" === e)
                    return this._encodeInt(t, r.args && r.reverseArgs[0]);
                if ("bool" === e)
                    return this._encodeBool(t);
                if ("objDesc" === e)
                    return this._encodeStr(t, e);
                throw new Error("Unsupported tag: " + e)
            }
            ,
            u.prototype._isNumstr = function(e) {
                return /^[0-9 ]*$/.test(e)
            }
            ,
            u.prototype._isPrintstr = function(e) {
                return /^[A-Za-z0-9 '\(\)\+,\-\.\/:=\?]*$/.test(e)
            }
        }
        , {
            "../base": 4,
            "minimalistic-assert": 105
        }],
        6: [function(e, t, r) {
            var i = e("inherits");
            function n(e) {
                this._reporterState = {
                    obj: null,
                    path: [],
                    options: e || {},
                    errors: []
                }
            }
            function s(e, t) {
                this.path = e,
                this.rethrow(t)
            }
            r.Reporter = n,
            n.prototype.isError = function(e) {
                return e instanceof s
            }
            ,
            n.prototype.save = function() {
                var e = this._reporterState;
                return {
                    obj: e.obj,
                    pathLen: e.path.length
                }
            }
            ,
            n.prototype.restore = function(e) {
                var t = this._reporterState;
                t.obj = e.obj,
                t.path = t.path.slice(0, e.pathLen)
            }
            ,
            n.prototype.enterKey = function(e) {
                return this._reporterState.path.push(e)
            }
            ,
            n.prototype.exitKey = function(e) {
                var t = this._reporterState;
                t.path = t.path.slice(0, e - 1)
            }
            ,
            n.prototype.leaveKey = function(e, t, r) {
                var i = this._reporterState;
                this.exitKey(e),
                null !== i.obj && (i.obj[t] = r)
            }
            ,
            n.prototype.path = function() {
                return this._reporterState.path.join("/")
            }
            ,
            n.prototype.enterObject = function() {
                var e = this._reporterState
                  , t = e.obj;
                return e.obj = {},
                t
            }
            ,
            n.prototype.leaveObject = function(e) {
                var t = this._reporterState
                  , r = t.obj;
                return t.obj = e,
                r
            }
            ,
            n.prototype.error = function(e) {
                var t, r = this._reporterState, i = e instanceof s;
                if (t = i ? e : new s(r.path.map((function(e) {
                    return "[" + JSON.stringify(e) + "]"
                }
                )).join(""),e.message || e,e.stack),
                !r.options.partial)
                    throw t;
                return i || r.errors.push(t),
                t
            }
            ,
            n.prototype.wrapResult = function(e) {
                var t = this._reporterState;
                return t.options.partial ? {
                    result: this.isError(e) ? null : e,
                    errors: t.errors
                } : e
            }
            ,
            i(s, Error),
            s.prototype.rethrow = function(e) {
                if (this.message = e + " at: " + (this.path || "(shallow)"),
                Error.captureStackTrace && Error.captureStackTrace(this, s),
                !this.stack)
                    try {
                        throw new Error(this.message)
                    } catch (e) {
                        this.stack = e.stack
                    }
                return this
            }
        }
        , {
            inherits: 100
        }],
        7: [function(e, t, r) {
            var i = e("../constants");
            r.tagClass = {
                0: "universal",
                1: "application",
                2: "context",
                3: "private"
            },
            r.tagClassByName = i._reverse(r.tagClass),
            r.tag = {
                0: "end",
                1: "bool",
                2: "int",
                3: "bitstr",
                4: "octstr",
                5: "null_",
                6: "objid",
                7: "objDesc",
                8: "external",
                9: "real",
                10: "enum",
                11: "embed",
                12: "utf8str",
                13: "relativeOid",
                16: "seq",
                17: "set",
                18: "numstr",
                19: "printstr",
                20: "t61str",
                21: "videostr",
                22: "ia5str",
                23: "utctime",
                24: "gentime",
                25: "graphstr",
                26: "iso646str",
                27: "genstr",
                28: "unistr",
                29: "charstr",
                30: "bmpstr"
            },
            r.tagByName = i._reverse(r.tag)
        }
        , {
            "../constants": 8
        }],
        8: [function(e, t, r) {
            var i = r;
            i._reverse = function(e) {
                var t = {};
                return Object.keys(e).forEach((function(r) {
                    (0 | r) == r && (r |= 0);
                    var i = e[r];
                    t[i] = r
                }
                )),
                t
            }
            ,
            i.der = e("./der")
        }
        , {
            "./der": 7
        }],
        9: [function(e, t, r) {
            var i = e("inherits")
              , n = e("../../asn1")
              , s = n.base
              , o = n.bignum
              , a = n.constants.der;
            function c(e) {
                this.enc = "der",
                this.name = e.name,
                this.entity = e,
                this.tree = new u,
                this.tree._init(e.body)
            }
            function u(e) {
                s.Node.call(this, "der", e)
            }
            function f(e, t) {
                var r = e.readUInt8(t);
                if (e.isError(r))
                    return r;
                var i = a.tagClass[r >> 6]
                  , n = 0 == (32 & r);
                if (31 == (31 & r)) {
                    var s = r;
                    for (r = 0; 128 == (128 & s); ) {
                        if (s = e.readUInt8(t),
                        e.isError(s))
                            return s;
                        r <<= 7,
                        r |= 127 & s
                    }
                } else
                    r &= 31;
                return {
                    cls: i,
                    primitive: n,
                    tag: r,
                    tagStr: a.tag[r]
                }
            }
            function h(e, t, r) {
                var i = e.readUInt8(r);
                if (e.isError(i))
                    return i;
                if (!t && 128 === i)
                    return null;
                if (0 == (128 & i))
                    return i;
                var n = 127 & i;
                if (n > 4)
                    return e.error("length octect is too long");
                i = 0;
                for (var s = 0; s < n; s++) {
                    i <<= 8;
                    var o = e.readUInt8(r);
                    if (e.isError(o))
                        return o;
                    i |= o
                }
                return i
            }
            t.exports = c,
            c.prototype.decode = function(e, t) {
                return e instanceof s.DecoderBuffer || (e = new s.DecoderBuffer(e,t)),
                this.tree._decode(e, t)
            }
            ,
            i(u, s.Node),
            u.prototype._peekTag = function(e, t, r) {
                if (e.isEmpty())
                    return !1;
                var i = e.save()
                  , n = f(e, 'Failed to peek tag: "' + t + '"');
                return e.isError(n) ? n : (e.restore(i),
                n.tag === t || n.tagStr === t || n.tagStr + "of" === t || r)
            }
            ,
            u.prototype._decodeTag = function(e, t, r) {
                var i = f(e, 'Failed to decode tag of "' + t + '"');
                if (e.isError(i))
                    return i;
                var n = h(e, i.primitive, 'Failed to get length of "' + t + '"');
                if (e.isError(n))
                    return n;
                if (!r && i.tag !== t && i.tagStr !== t && i.tagStr + "of" !== t)
                    return e.error('Failed to match tag: "' + t + '"');
                if (i.primitive || null !== n)
                    return e.skip(n, 'Failed to match body of: "' + t + '"');
                var s = e.save()
                  , o = this._skipUntilEnd(e, 'Failed to skip indefinite length body: "' + this.tag + '"');
                return e.isError(o) ? o : (n = e.offset - s.offset,
                e.restore(s),
                e.skip(n, 'Failed to match body of: "' + t + '"'))
            }
            ,
            u.prototype._skipUntilEnd = function(e, t) {
                for (; ; ) {
                    var r = f(e, t);
                    if (e.isError(r))
                        return r;
                    var i, n = h(e, r.primitive, t);
                    if (e.isError(n))
                        return n;
                    if (i = r.primitive || null !== n ? e.skip(n) : this._skipUntilEnd(e, t),
                    e.isError(i))
                        return i;
                    if ("end" === r.tagStr)
                        break
                }
            }
            ,
            u.prototype._decodeList = function(e, t, r, i) {
                for (var n = []; !e.isEmpty(); ) {
                    var s = this._peekTag(e, "end");
                    if (e.isError(s))
                        return s;
                    var o = r.decode(e, "der", i);
                    if (e.isError(o) && s)
                        break;
                    n.push(o)
                }
                return n
            }
            ,
            u.prototype._decodeStr = function(e, t) {
                if ("bitstr" === t) {
                    var r = e.readUInt8();
                    return e.isError(r) ? r : {
                        unused: r,
                        data: e.raw()
                    }
                }
                if ("bmpstr" === t) {
                    var i = e.raw();
                    if (i.length % 2 == 1)
                        return e.error("Decoding of string type: bmpstr length mismatch");
                    for (var n = "", s = 0; s < i.length / 2; s++)
                        n += String.fromCharCode(i.readUInt16BE(2 * s));
                    return n
                }
                if ("numstr" === t) {
                    var o = e.raw().toString("ascii");
                    return this._isNumstr(o) ? o : e.error("Decoding of string type: numstr unsupported characters")
                }
                if ("octstr" === t)
                    return e.raw();
                if ("objDesc" === t)
                    return e.raw();
                if ("printstr" === t) {
                    var a = e.raw().toString("ascii");
                    return this._isPrintstr(a) ? a : e.error("Decoding of string type: printstr unsupported characters")
                }
                return /str$/.test(t) ? e.raw().toString() : e.error("Decoding of string type: " + t + " unsupported")
            }
            ,
            u.prototype._decodeObjid = function(e, t, r) {
                for (var i, n = [], s = 0; !e.isEmpty(); ) {
                    var o = e.readUInt8();
                    s <<= 7,
                    s |= 127 & o,
                    0 == (128 & o) && (n.push(s),
                    s = 0)
                }
                128 & o && n.push(s);
                var a = n[0] / 40 | 0
                  , c = n[0] % 40;
                if (i = r ? n : [a, c].concat(n.slice(1)),
                t) {
                    var u = t[i.join(" ")];
                    void 0 === u && (u = t[i.join(".")]),
                    void 0 !== u && (i = u)
                }
                return i
            }
            ,
            u.prototype._decodeTime = function(e, t) {
                var r = e.raw().toString();
                if ("gentime" === t)
                    var i = 0 | r.slice(0, 4)
                      , n = 0 | r.slice(4, 6)
                      , s = 0 | r.slice(6, 8)
                      , o = 0 | r.slice(8, 10)
                      , a = 0 | r.slice(10, 12)
                      , c = 0 | r.slice(12, 14);
                else {
                    if ("utctime" !== t)
                        return e.error("Decoding " + t + " time is not supported yet");
                    i = 0 | r.slice(0, 2),
                    n = 0 | r.slice(2, 4),
                    s = 0 | r.slice(4, 6),
                    o = 0 | r.slice(6, 8),
                    a = 0 | r.slice(8, 10),
                    c = 0 | r.slice(10, 12);
                    i = i < 70 ? 2e3 + i : 1900 + i
                }
                return Date.UTC(i, n - 1, s, o, a, c, 0)
            }
            ,
            u.prototype._decodeNull = function(e) {
                return null
            }
            ,
            u.prototype._decodeBool = function(e) {
                var t = e.readUInt8();
                return e.isError(t) ? t : 0 !== t
            }
            ,
            u.prototype._decodeInt = function(e, t) {
                var r = e.raw()
                  , i = new o(r);
                return t && (i = t[i.toString(10)] || i),
                i
            }
            ,
            u.prototype._use = function(e, t) {
                return "function" == typeof e && (e = e(t)),
                e._getDecoder("der").tree
            }
        }
        , {
            "../../asn1": 1,
            inherits: 100
        }],
        10: [function(e, t, r) {
            var i = r;
            i.der = e("./der"),
            i.pem = e("./pem")
        }
        , {
            "./der": 9,
            "./pem": 11
        }],
        11: [function(e, t, r) {
            var i = e("inherits")
              , n = e("buffer").Buffer
              , s = e("./der");
            function o(e) {
                s.call(this, e),
                this.enc = "pem"
            }
            i(o, s),
            t.exports = o,
            o.prototype.decode = function(e, t) {
                for (var r = e.toString().split(/[\r\n]+/g), i = t.label.toUpperCase(), o = /^-----(BEGIN|END) ([^-]+)-----$/, a = -1, c = -1, u = 0; u < r.length; u++) {
                    var f = r[u].match(o);
                    if (null !== f && f[2] === i) {
                        if (-1 !== a) {
                            if ("END" !== f[1])
                                break;
                            c = u;
                            break
                        }
                        if ("BEGIN" !== f[1])
                            break;
                        a = u
                    }
                }
                if (-1 === a || -1 === c)
                    throw new Error("PEM section not found for: " + i);
                var h = r.slice(a + 1, c).join("");
                h.replace(/[^a-z0-9\+\/=]+/gi, "");
                var l = new n(h,"base64");
                return s.prototype.decode.call(this, l, t)
            }
        }
        , {
            "./der": 9,
            buffer: 48,
            inherits: 100
        }],
        12: [function(e, t, r) {
            var i = e("inherits")
              , n = e("buffer").Buffer
              , s = e("../../asn1")
              , o = s.base
              , a = s.constants.der;
            function c(e) {
                this.enc = "der",
                this.name = e.name,
                this.entity = e,
                this.tree = new u,
                this.tree._init(e.body)
            }
            function u(e) {
                o.Node.call(this, "der", e)
            }
            function f(e) {
                return e < 10 ? "0" + e : e
            }
            t.exports = c,
            c.prototype.encode = function(e, t) {
                return this.tree._encode(e, t).join()
            }
            ,
            i(u, o.Node),
            u.prototype._encodeComposite = function(e, t, r, i) {
                var s, o = function(e, t, r, i) {
                    var n;
                    "seqof" === e ? e = "seq" : "setof" === e && (e = "set");
                    if (a.tagByName.hasOwnProperty(e))
                        n = a.tagByName[e];
                    else {
                        if ("number" != typeof e || (0 | e) !== e)
                            return i.error("Unknown tag: " + e);
                        n = e
                    }
                    if (n >= 31)
                        return i.error("Multi-octet tag encoding unsupported");
                    t || (n |= 32);
                    return n |= a.tagClassByName[r || "universal"] << 6
                }(e, t, r, this.reporter);
                if (i.length < 128)
                    return (s = new n(2))[0] = o,
                    s[1] = i.length,
                    this._createEncoderBuffer([s, i]);
                for (var c = 1, u = i.length; u >= 256; u >>= 8)
                    c++;
                (s = new n(2 + c))[0] = o,
                s[1] = 128 | c;
                u = 1 + c;
                for (var f = i.length; f > 0; u--,
                f >>= 8)
                    s[u] = 255 & f;
                return this._createEncoderBuffer([s, i])
            }
            ,
            u.prototype._encodeStr = function(e, t) {
                if ("bitstr" === t)
                    return this._createEncoderBuffer([0 | e.unused, e.data]);
                if ("bmpstr" === t) {
                    for (var r = new n(2 * e.length), i = 0; i < e.length; i++)
                        r.writeUInt16BE(e.charCodeAt(i), 2 * i);
                    return this._createEncoderBuffer(r)
                }
                return "numstr" === t ? this._isNumstr(e) ? this._createEncoderBuffer(e) : this.reporter.error("Encoding of string type: numstr supports only digits and space") : "printstr" === t ? this._isPrintstr(e) ? this._createEncoderBuffer(e) : this.reporter.error("Encoding of string type: printstr supports only latin upper and lower case letters, digits, space, apostrophe, left and rigth parenthesis, plus sign, comma, hyphen, dot, slash, colon, equal sign, question mark") : /str$/.test(t) ? this._createEncoderBuffer(e) : "objDesc" === t ? this._createEncoderBuffer(e) : this.reporter.error("Encoding of string type: " + t + " unsupported")
            }
            ,
            u.prototype._encodeObjid = function(e, t, r) {
                if ("string" == typeof e) {
                    if (!t)
                        return this.reporter.error("string objid given, but no values map found");
                    if (!t.hasOwnProperty(e))
                        return this.reporter.error("objid not found in values map");
                    e = t[e].split(/[\s\.]+/g);
                    for (var i = 0; i < e.length; i++)
                        e[i] |= 0
                } else if (Array.isArray(e)) {
                    e = e.slice();
                    for (i = 0; i < e.length; i++)
                        e[i] |= 0
                }
                if (!Array.isArray(e))
                    return this.reporter.error("objid() should be either array or string, got: " + JSON.stringify(e));
                if (!r) {
                    if (e[1] >= 40)
                        return this.reporter.error("Second objid identifier OOB");
                    e.splice(0, 2, 40 * e[0] + e[1])
                }
                var s = 0;
                for (i = 0; i < e.length; i++) {
                    var o = e[i];
                    for (s++; o >= 128; o >>= 7)
                        s++
                }
                var a = new n(s)
                  , c = a.length - 1;
                for (i = e.length - 1; i >= 0; i--) {
                    o = e[i];
                    for (a[c--] = 127 & o; (o >>= 7) > 0; )
                        a[c--] = 128 | 127 & o
                }
                return this._createEncoderBuffer(a)
            }
            ,
            u.prototype._encodeTime = function(e, t) {
                var r, i = new Date(e);
                return "gentime" === t ? r = [f(i.getFullYear()), f(i.getUTCMonth() + 1), f(i.getUTCDate()), f(i.getUTCHours()), f(i.getUTCMinutes()), f(i.getUTCSeconds()), "Z"].join("") : "utctime" === t ? r = [f(i.getFullYear() % 100), f(i.getUTCMonth() + 1), f(i.getUTCDate()), f(i.getUTCHours()), f(i.getUTCMinutes()), f(i.getUTCSeconds()), "Z"].join("") : this.reporter.error("Encoding " + t + " time is not supported yet"),
                this._encodeStr(r, "octstr")
            }
            ,
            u.prototype._encodeNull = function() {
                return this._createEncoderBuffer("")
            }
            ,
            u.prototype._encodeInt = function(e, t) {
                if ("string" == typeof e) {
                    if (!t)
                        return this.reporter.error("String int or enum given, but no values map");
                    if (!t.hasOwnProperty(e))
                        return this.reporter.error("Values map doesn't contain: " + JSON.stringify(e));
                    e = t[e]
                }
                if ("number" != typeof e && !n.isBuffer(e)) {
                    var r = e.toArray();
                    !e.sign && 128 & r[0] && r.unshift(0),
                    e = new n(r)
                }
                if (n.isBuffer(e)) {
                    var i = e.length;
                    0 === e.length && i++;
                    var s = new n(i);
                    return e.copy(s),
                    0 === e.length && (s[0] = 0),
                    this._createEncoderBuffer(s)
                }
                if (e < 128)
                    return this._createEncoderBuffer(e);
                if (e < 256)
                    return this._createEncoderBuffer([0, e]);
                i = 1;
                for (var o = e; o >= 256; o >>= 8)
                    i++;
                for (o = (s = new Array(i)).length - 1; o >= 0; o--)
                    s[o] = 255 & e,
                    e >>= 8;
                return 128 & s[0] && s.unshift(0),
                this._createEncoderBuffer(new n(s))
            }
            ,
            u.prototype._encodeBool = function(e) {
                return this._createEncoderBuffer(e ? 255 : 0)
            }
            ,
            u.prototype._use = function(e, t) {
                return "function" == typeof e && (e = e(t)),
                e._getEncoder("der").tree
            }
            ,
            u.prototype._skipDefault = function(e, t, r) {
                var i, n = this._baseState;
                if (null === n.default)
                    return !1;
                var s = e.join();
                if (void 0 === n.defaultBuffer && (n.defaultBuffer = this._encodeValue(n.default, t, r).join()),
                s.length !== n.defaultBuffer.length)
                    return !1;
                for (i = 0; i < s.length; i++)
                    if (s[i] !== n.defaultBuffer[i])
                        return !1;
                return !0
            }
        }
        , {
            "../../asn1": 1,
            buffer: 48,
            inherits: 100
        }],
        13: [function(e, t, r) {
            var i = r;
            i.der = e("./der"),
            i.pem = e("./pem")
        }
        , {
            "./der": 12,
            "./pem": 14
        }],
        14: [function(e, t, r) {
            var i = e("inherits")
              , n = e("./der");
            function s(e) {
                n.call(this, e),
                this.enc = "pem"
            }
            i(s, n),
            t.exports = s,
            s.prototype.encode = function(e, t) {
                for (var r = n.prototype.encode.call(this, e).toString("base64"), i = ["-----BEGIN " + t.label + "-----"], s = 0; s < r.length; s += 64)
                    i.push(r.slice(s, s + 64));
                return i.push("-----END " + t.label + "-----"),
                i.join("\n")
            }
        }
        , {
            "./der": 12,
            inherits: 100
        }],
        15: [function(e, t, r) {
            "use strict";
            r.byteLength = function(e) {
                var t = u(e)
                  , r = t[0]
                  , i = t[1];
                return 3 * (r + i) / 4 - i
            }
            ,
            r.toByteArray = function(e) {
                var t, r, i = u(e), o = i[0], a = i[1], c = new s(function(e, t, r) {
                    return 3 * (t + r) / 4 - r
                }(0, o, a)), f = 0, h = a > 0 ? o - 4 : o;
                for (r = 0; r < h; r += 4)
                    t = n[e.charCodeAt(r)] << 18 | n[e.charCodeAt(r + 1)] << 12 | n[e.charCodeAt(r + 2)] << 6 | n[e.charCodeAt(r + 3)],
                    c[f++] = t >> 16 & 255,
                    c[f++] = t >> 8 & 255,
                    c[f++] = 255 & t;
                2 === a && (t = n[e.charCodeAt(r)] << 2 | n[e.charCodeAt(r + 1)] >> 4,
                c[f++] = 255 & t);
                1 === a && (t = n[e.charCodeAt(r)] << 10 | n[e.charCodeAt(r + 1)] << 4 | n[e.charCodeAt(r + 2)] >> 2,
                c[f++] = t >> 8 & 255,
                c[f++] = 255 & t);
                return c
            }
            ,
            r.fromByteArray = function(e) {
                for (var t, r = e.length, n = r % 3, s = [], o = 0, a = r - n; o < a; o += 16383)
                    s.push(f(e, o, o + 16383 > a ? a : o + 16383));
                1 === n ? (t = e[r - 1],
                s.push(i[t >> 2] + i[t << 4 & 63] + "==")) : 2 === n && (t = (e[r - 2] << 8) + e[r - 1],
                s.push(i[t >> 10] + i[t >> 4 & 63] + i[t << 2 & 63] + "="));
                return s.join("")
            }
            ;
            for (var i = [], n = [], s = "undefined" != typeof Uint8Array ? Uint8Array : Array, o = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", a = 0, c = o.length; a < c; ++a)
                i[a] = o[a],
                n[o.charCodeAt(a)] = a;
            function u(e) {
                var t = e.length;
                if (t % 4 > 0)
                    throw new Error("Invalid string. Length must be a multiple of 4");
                var r = e.indexOf("=");
                return -1 === r && (r = t),
                [r, r === t ? 0 : 4 - r % 4]
            }
            function f(e, t, r) {
                for (var n, s, o = [], a = t; a < r; a += 3)
                    n = (e[a] << 16 & 16711680) + (e[a + 1] << 8 & 65280) + (255 & e[a + 2]),
                    o.push(i[(s = n) >> 18 & 63] + i[s >> 12 & 63] + i[s >> 6 & 63] + i[63 & s]);
                return o.join("")
            }
            n["-".charCodeAt(0)] = 62,
            n["_".charCodeAt(0)] = 63
        }
        , {}],
        16: [function(e, t, r) {
            !function(t, r) {
                "use strict";
                function i(e, t) {
                    if (!e)
                        throw new Error(t || "Assertion failed")
                }
                function n(e, t) {
                    e.super_ = t;
                    var r = function() {};
                    r.prototype = t.prototype,
                    e.prototype = new r,
                    e.prototype.constructor = e
                }
                function s(e, t, r) {
                    if (s.isBN(e))
                        return e;
                    this.negative = 0,
                    this.words = null,
                    this.length = 0,
                    this.red = null,
                    null !== e && ("le" !== t && "be" !== t || (r = t,
                    t = 10),
                    this._init(e || 0, t || 10, r || "be"))
                }
                var o;
                "object" == typeof t ? t.exports = s : r.BN = s,
                s.BN = s,
                s.wordSize = 26;
                try {
                    o = e("buffer").Buffer
                } catch (e) {}
                function a(e, t, r) {
                    for (var i = 0, n = Math.min(e.length, r), s = t; s < n; s++) {
                        var o = e.charCodeAt(s) - 48;
                        i <<= 4,
                        i |= o >= 49 && o <= 54 ? o - 49 + 10 : o >= 17 && o <= 22 ? o - 17 + 10 : 15 & o
                    }
                    return i
                }
                function c(e, t, r, i) {
                    for (var n = 0, s = Math.min(e.length, r), o = t; o < s; o++) {
                        var a = e.charCodeAt(o) - 48;
                        n *= i,
                        n += a >= 49 ? a - 49 + 10 : a >= 17 ? a - 17 + 10 : a
                    }
                    return n
                }
                s.isBN = function(e) {
                    return e instanceof s || null !== e && "object" == typeof e && e.constructor.wordSize === s.wordSize && Array.isArray(e.words)
                }
                ,
                s.max = function(e, t) {
                    return e.cmp(t) > 0 ? e : t
                }
                ,
                s.min = function(e, t) {
                    return e.cmp(t) < 0 ? e : t
                }
                ,
                s.prototype._init = function(e, t, r) {
                    if ("number" == typeof e)
                        return this._initNumber(e, t, r);
                    if ("object" == typeof e)
                        return this._initArray(e, t, r);
                    "hex" === t && (t = 16),
                    i(t === (0 | t) && t >= 2 && t <= 36);
                    var n = 0;
                    "-" === (e = e.toString().replace(/\s+/g, ""))[0] && n++,
                    16 === t ? this._parseHex(e, n) : this._parseBase(e, t, n),
                    "-" === e[0] && (this.negative = 1),
                    this.strip(),
                    "le" === r && this._initArray(this.toArray(), t, r)
                }
                ,
                s.prototype._initNumber = function(e, t, r) {
                    e < 0 && (this.negative = 1,
                    e = -e),
                    e < 67108864 ? (this.words = [67108863 & e],
                    this.length = 1) : e < 4503599627370496 ? (this.words = [67108863 & e, e / 67108864 & 67108863],
                    this.length = 2) : (i(e < 9007199254740992),
                    this.words = [67108863 & e, e / 67108864 & 67108863, 1],
                    this.length = 3),
                    "le" === r && this._initArray(this.toArray(), t, r)
                }
                ,
                s.prototype._initArray = function(e, t, r) {
                    if (i("number" == typeof e.length),
                    e.length <= 0)
                        return this.words = [0],
                        this.length = 1,
                        this;
                    this.length = Math.ceil(e.length / 3),
                    this.words = new Array(this.length);
                    for (var n = 0; n < this.length; n++)
                        this.words[n] = 0;
                    var s, o, a = 0;
                    if ("be" === r)
                        for (n = e.length - 1,
                        s = 0; n >= 0; n -= 3)
                            o = e[n] | e[n - 1] << 8 | e[n - 2] << 16,
                            this.words[s] |= o << a & 67108863,
                            this.words[s + 1] = o >>> 26 - a & 67108863,
                            (a += 24) >= 26 && (a -= 26,
                            s++);
                    else if ("le" === r)
                        for (n = 0,
                        s = 0; n < e.length; n += 3)
                            o = e[n] | e[n + 1] << 8 | e[n + 2] << 16,
                            this.words[s] |= o << a & 67108863,
                            this.words[s + 1] = o >>> 26 - a & 67108863,
                            (a += 24) >= 26 && (a -= 26,
                            s++);
                    return this.strip()
                }
                ,
                s.prototype._parseHex = function(e, t) {
                    this.length = Math.ceil((e.length - t) / 6),
                    this.words = new Array(this.length);
                    for (var r = 0; r < this.length; r++)
                        this.words[r] = 0;
                    var i, n, s = 0;
                    for (r = e.length - 6,
                    i = 0; r >= t; r -= 6)
                        n = a(e, r, r + 6),
                        this.words[i] |= n << s & 67108863,
                        this.words[i + 1] |= n >>> 26 - s & 4194303,
                        (s += 24) >= 26 && (s -= 26,
                        i++);
                    r + 6 !== t && (n = a(e, t, r + 6),
                    this.words[i] |= n << s & 67108863,
                    this.words[i + 1] |= n >>> 26 - s & 4194303),
                    this.strip()
                }
                ,
                s.prototype._parseBase = function(e, t, r) {
                    this.words = [0],
                    this.length = 1;
                    for (var i = 0, n = 1; n <= 67108863; n *= t)
                        i++;
                    i--,
                    n = n / t | 0;
                    for (var s = e.length - r, o = s % i, a = Math.min(s, s - o) + r, u = 0, f = r; f < a; f += i)
                        u = c(e, f, f + i, t),
                        this.imuln(n),
                        this.words[0] + u < 67108864 ? this.words[0] += u : this._iaddn(u);
                    if (0 !== o) {
                        var h = 1;
                        for (u = c(e, f, e.length, t),
                        f = 0; f < o; f++)
                            h *= t;
                        this.imuln(h),
                        this.words[0] + u < 67108864 ? this.words[0] += u : this._iaddn(u)
                    }
                }
                ,
                s.prototype.copy = function(e) {
                    e.words = new Array(this.length);
                    for (var t = 0; t < this.length; t++)
                        e.words[t] = this.words[t];
                    e.length = this.length,
                    e.negative = this.negative,
                    e.red = this.red
                }
                ,
                s.prototype.clone = function() {
                    var e = new s(null);
                    return this.copy(e),
                    e
                }
                ,
                s.prototype._expand = function(e) {
                    for (; this.length < e; )
                        this.words[this.length++] = 0;
                    return this
                }
                ,
                s.prototype.strip = function() {
                    for (; this.length > 1 && 0 === this.words[this.length - 1]; )
                        this.length--;
                    return this._normSign()
                }
                ,
                s.prototype._normSign = function() {
                    return 1 === this.length && 0 === this.words[0] && (this.negative = 0),
                    this
                }
                ,
                s.prototype.inspect = function() {
                    return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">"
                }
                ;
                var u = ["", "0", "00", "000", "0000", "00000", "000000", "0000000", "00000000", "000000000", "0000000000", "00000000000", "000000000000", "0000000000000", "00000000000000", "000000000000000", "0000000000000000", "00000000000000000", "000000000000000000", "0000000000000000000", "00000000000000000000", "000000000000000000000", "0000000000000000000000", "00000000000000000000000", "000000000000000000000000", "0000000000000000000000000"]
                  , f = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
                  , h = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64e6, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 243e5, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];
                function l(e, t, r) {
                    r.negative = t.negative ^ e.negative;
                    var i = e.length + t.length | 0;
                    r.length = i,
                    i = i - 1 | 0;
                    var n = 0 | e.words[0]
                      , s = 0 | t.words[0]
                      , o = n * s
                      , a = 67108863 & o
                      , c = o / 67108864 | 0;
                    r.words[0] = a;
                    for (var u = 1; u < i; u++) {
                        for (var f = c >>> 26, h = 67108863 & c, l = Math.min(u, t.length - 1), d = Math.max(0, u - e.length + 1); d <= l; d++) {
                            var p = u - d | 0;
                            f += (o = (n = 0 | e.words[p]) * (s = 0 | t.words[d]) + h) / 67108864 | 0,
                            h = 67108863 & o
                        }
                        r.words[u] = 0 | h,
                        c = 0 | f
                    }
                    return 0 !== c ? r.words[u] = 0 | c : r.length--,
                    r.strip()
                }
                s.prototype.toString = function(e, t) {
                    var r;
                    if (t = 0 | t || 1,
                    16 === (e = e || 10) || "hex" === e) {
                        r = "";
                        for (var n = 0, s = 0, o = 0; o < this.length; o++) {
                            var a = this.words[o]
                              , c = (16777215 & (a << n | s)).toString(16);
                            r = 0 !== (s = a >>> 24 - n & 16777215) || o !== this.length - 1 ? u[6 - c.length] + c + r : c + r,
                            (n += 2) >= 26 && (n -= 26,
                            o--)
                        }
                        for (0 !== s && (r = s.toString(16) + r); r.length % t != 0; )
                            r = "0" + r;
                        return 0 !== this.negative && (r = "-" + r),
                        r
                    }
                    if (e === (0 | e) && e >= 2 && e <= 36) {
                        var l = f[e]
                          , d = h[e];
                        r = "";
                        var p = this.clone();
                        for (p.negative = 0; !p.isZero(); ) {
                            var b = p.modn(d).toString(e);
                            r = (p = p.idivn(d)).isZero() ? b + r : u[l - b.length] + b + r
                        }
                        for (this.isZero() && (r = "0" + r); r.length % t != 0; )
                            r = "0" + r;
                        return 0 !== this.negative && (r = "-" + r),
                        r
                    }
                    i(!1, "Base should be between 2 and 36")
                }
                ,
                s.prototype.toNumber = function() {
                    var e = this.words[0];
                    return 2 === this.length ? e += 67108864 * this.words[1] : 3 === this.length && 1 === this.words[2] ? e += 4503599627370496 + 67108864 * this.words[1] : this.length > 2 && i(!1, "Number can only safely store up to 53 bits"),
                    0 !== this.negative ? -e : e
                }
                ,
                s.prototype.toJSON = function() {
                    return this.toString(16)
                }
                ,
                s.prototype.toBuffer = function(e, t) {
                    return i(void 0 !== o),
                    this.toArrayLike(o, e, t)
                }
                ,
                s.prototype.toArray = function(e, t) {
                    return this.toArrayLike(Array, e, t)
                }
                ,
                s.prototype.toArrayLike = function(e, t, r) {
                    var n = this.byteLength()
                      , s = r || Math.max(1, n);
                    i(n <= s, "byte array longer than desired length"),
                    i(s > 0, "Requested array length <= 0"),
                    this.strip();
                    var o, a, c = "le" === t, u = new e(s), f = this.clone();
                    if (c) {
                        for (a = 0; !f.isZero(); a++)
                            o = f.andln(255),
                            f.iushrn(8),
                            u[a] = o;
                        for (; a < s; a++)
                            u[a] = 0
                    } else {
                        for (a = 0; a < s - n; a++)
                            u[a] = 0;
                        for (a = 0; !f.isZero(); a++)
                            o = f.andln(255),
                            f.iushrn(8),
                            u[s - a - 1] = o
                    }
                    return u
                }
                ,
                Math.clz32 ? s.prototype._countBits = function(e) {
                    return 32 - Math.clz32(e)
                }
                : s.prototype._countBits = function(e) {
                    var t = e
                      , r = 0;
                    return t >= 4096 && (r += 13,
                    t >>>= 13),
                    t >= 64 && (r += 7,
                    t >>>= 7),
                    t >= 8 && (r += 4,
                    t >>>= 4),
                    t >= 2 && (r += 2,
                    t >>>= 2),
                    r + t
                }
                ,
                s.prototype._zeroBits = function(e) {
                    if (0 === e)
                        return 26;
                    var t = e
                      , r = 0;
                    return 0 == (8191 & t) && (r += 13,
                    t >>>= 13),
                    0 == (127 & t) && (r += 7,
                    t >>>= 7),
                    0 == (15 & t) && (r += 4,
                    t >>>= 4),
                    0 == (3 & t) && (r += 2,
                    t >>>= 2),
                    0 == (1 & t) && r++,
                    r
                }
                ,
                s.prototype.bitLength = function() {
                    var e = this.words[this.length - 1]
                      , t = this._countBits(e);
                    return 26 * (this.length - 1) + t
                }
                ,
                s.prototype.zeroBits = function() {
                    if (this.isZero())
                        return 0;
                    for (var e = 0, t = 0; t < this.length; t++) {
                        var r = this._zeroBits(this.words[t]);
                        if (e += r,
                        26 !== r)
                            break
                    }
                    return e
                }
                ,
                s.prototype.byteLength = function() {
                    return Math.ceil(this.bitLength() / 8)
                }
                ,
                s.prototype.toTwos = function(e) {
                    return 0 !== this.negative ? this.abs().inotn(e).iaddn(1) : this.clone()
                }
                ,
                s.prototype.fromTwos = function(e) {
                    return this.testn(e - 1) ? this.notn(e).iaddn(1).ineg() : this.clone()
                }
                ,
                s.prototype.isNeg = function() {
                    return 0 !== this.negative
                }
                ,
                s.prototype.neg = function() {
                    return this.clone().ineg()
                }
                ,
                s.prototype.ineg = function() {
                    return this.isZero() || (this.negative ^= 1),
                    this
                }
                ,
                s.prototype.iuor = function(e) {
                    for (; this.length < e.length; )
                        this.words[this.length++] = 0;
                    for (var t = 0; t < e.length; t++)
                        this.words[t] = this.words[t] | e.words[t];
                    return this.strip()
                }
                ,
                s.prototype.ior = function(e) {
                    return i(0 == (this.negative | e.negative)),
                    this.iuor(e)
                }
                ,
                s.prototype.or = function(e) {
                    return this.length > e.length ? this.clone().ior(e) : e.clone().ior(this)
                }
                ,
                s.prototype.uor = function(e) {
                    return this.length > e.length ? this.clone().iuor(e) : e.clone().iuor(this)
                }
                ,
                s.prototype.iuand = function(e) {
                    var t;
                    t = this.length > e.length ? e : this;
                    for (var r = 0; r < t.length; r++)
                        this.words[r] = this.words[r] & e.words[r];
                    return this.length = t.length,
                    this.strip()
                }
                ,
                s.prototype.iand = function(e) {
                    return i(0 == (this.negative | e.negative)),
                    this.iuand(e)
                }
                ,
                s.prototype.and = function(e) {
                    return this.length > e.length ? this.clone().iand(e) : e.clone().iand(this)
                }
                ,
                s.prototype.uand = function(e) {
                    return this.length > e.length ? this.clone().iuand(e) : e.clone().iuand(this)
                }
                ,
                s.prototype.iuxor = function(e) {
                    var t, r;
                    this.length > e.length ? (t = this,
                    r = e) : (t = e,
                    r = this);
                    for (var i = 0; i < r.length; i++)
                        this.words[i] = t.words[i] ^ r.words[i];
                    if (this !== t)
                        for (; i < t.length; i++)
                            this.words[i] = t.words[i];
                    return this.length = t.length,
                    this.strip()
                }
                ,
                s.prototype.ixor = function(e) {
                    return i(0 == (this.negative | e.negative)),
                    this.iuxor(e)
                }
                ,
                s.prototype.xor = function(e) {
                    return this.length > e.length ? this.clone().ixor(e) : e.clone().ixor(this)
                }
                ,
                s.prototype.uxor = function(e) {
                    return this.length > e.length ? this.clone().iuxor(e) : e.clone().iuxor(this)
                }
                ,
                s.prototype.inotn = function(e) {
                    i("number" == typeof e && e >= 0);
                    var t = 0 | Math.ceil(e / 26)
                      , r = e % 26;
                    this._expand(t),
                    r > 0 && t--;
                    for (var n = 0; n < t; n++)
                        this.words[n] = 67108863 & ~this.words[n];
                    return r > 0 && (this.words[n] = ~this.words[n] & 67108863 >> 26 - r),
                    this.strip()
                }
                ,
                s.prototype.notn = function(e) {
                    return this.clone().inotn(e)
                }
                ,
                s.prototype.setn = function(e, t) {
                    i("number" == typeof e && e >= 0);
                    var r = e / 26 | 0
                      , n = e % 26;
                    return this._expand(r + 1),
                    this.words[r] = t ? this.words[r] | 1 << n : this.words[r] & ~(1 << n),
                    this.strip()
                }
                ,
                s.prototype.iadd = function(e) {
                    var t, r, i;
                    if (0 !== this.negative && 0 === e.negative)
                        return this.negative = 0,
                        t = this.isub(e),
                        this.negative ^= 1,
                        this._normSign();
                    if (0 === this.negative && 0 !== e.negative)
                        return e.negative = 0,
                        t = this.isub(e),
                        e.negative = 1,
                        t._normSign();
                    this.length > e.length ? (r = this,
                    i = e) : (r = e,
                    i = this);
                    for (var n = 0, s = 0; s < i.length; s++)
                        t = (0 | r.words[s]) + (0 | i.words[s]) + n,
                        this.words[s] = 67108863 & t,
                        n = t >>> 26;
                    for (; 0 !== n && s < r.length; s++)
                        t = (0 | r.words[s]) + n,
                        this.words[s] = 67108863 & t,
                        n = t >>> 26;
                    if (this.length = r.length,
                    0 !== n)
                        this.words[this.length] = n,
                        this.length++;
                    else if (r !== this)
                        for (; s < r.length; s++)
                            this.words[s] = r.words[s];
                    return this
                }
                ,
                s.prototype.add = function(e) {
                    var t;
                    return 0 !== e.negative && 0 === this.negative ? (e.negative = 0,
                    t = this.sub(e),
                    e.negative ^= 1,
                    t) : 0 === e.negative && 0 !== this.negative ? (this.negative = 0,
                    t = e.sub(this),
                    this.negative = 1,
                    t) : this.length > e.length ? this.clone().iadd(e) : e.clone().iadd(this)
                }
                ,
                s.prototype.isub = function(e) {
                    if (0 !== e.negative) {
                        e.negative = 0;
                        var t = this.iadd(e);
                        return e.negative = 1,
                        t._normSign()
                    }
                    if (0 !== this.negative)
                        return this.negative = 0,
                        this.iadd(e),
                        this.negative = 1,
                        this._normSign();
                    var r, i, n = this.cmp(e);
                    if (0 === n)
                        return this.negative = 0,
                        this.length = 1,
                        this.words[0] = 0,
                        this;
                    n > 0 ? (r = this,
                    i = e) : (r = e,
                    i = this);
                    for (var s = 0, o = 0; o < i.length; o++)
                        s = (t = (0 | r.words[o]) - (0 | i.words[o]) + s) >> 26,
                        this.words[o] = 67108863 & t;
                    for (; 0 !== s && o < r.length; o++)
                        s = (t = (0 | r.words[o]) + s) >> 26,
                        this.words[o] = 67108863 & t;
                    if (0 === s && o < r.length && r !== this)
                        for (; o < r.length; o++)
                            this.words[o] = r.words[o];
                    return this.length = Math.max(this.length, o),
                    r !== this && (this.negative = 1),
                    this.strip()
                }
                ,
                s.prototype.sub = function(e) {
                    return this.clone().isub(e)
                }
                ;
                var d = function(e, t, r) {
                    var i, n, s, o = e.words, a = t.words, c = r.words, u = 0, f = 0 | o[0], h = 8191 & f, l = f >>> 13, d = 0 | o[1], p = 8191 & d, b = d >>> 13, g = 0 | o[2], m = 8191 & g, y = g >>> 13, v = 0 | o[3], w = 8191 & v, E = v >>> 13, _ = 0 | o[4], S = 8191 & _, k = _ >>> 13, A = 0 | o[5], C = 8191 & A, I = A >>> 13, T = 0 | o[6], B = 8191 & T, M = T >>> 13, R = 0 | o[7], x = 8191 & R, N = R >>> 13, P = 0 | o[8], D = 8191 & P, L = P >>> 13, O = 0 | o[9], j = 8191 & O, U = O >>> 13, K = 0 | a[0], q = 8191 & K, V = K >>> 13, F = 0 | a[1], z = 8191 & F, H = F >>> 13, G = 0 | a[2], $ = 8191 & G, Y = G >>> 13, W = 0 | a[3], Q = 8191 & W, X = W >>> 13, Z = 0 | a[4], J = 8191 & Z, ee = Z >>> 13, te = 0 | a[5], re = 8191 & te, ie = te >>> 13, ne = 0 | a[6], se = 8191 & ne, oe = ne >>> 13, ae = 0 | a[7], ce = 8191 & ae, ue = ae >>> 13, fe = 0 | a[8], he = 8191 & fe, le = fe >>> 13, de = 0 | a[9], pe = 8191 & de, be = de >>> 13;
                    r.negative = e.negative ^ t.negative,
                    r.length = 19;
                    var ge = (u + (i = Math.imul(h, q)) | 0) + ((8191 & (n = (n = Math.imul(h, V)) + Math.imul(l, q) | 0)) << 13) | 0;
                    u = ((s = Math.imul(l, V)) + (n >>> 13) | 0) + (ge >>> 26) | 0,
                    ge &= 67108863,
                    i = Math.imul(p, q),
                    n = (n = Math.imul(p, V)) + Math.imul(b, q) | 0,
                    s = Math.imul(b, V);
                    var me = (u + (i = i + Math.imul(h, z) | 0) | 0) + ((8191 & (n = (n = n + Math.imul(h, H) | 0) + Math.imul(l, z) | 0)) << 13) | 0;
                    u = ((s = s + Math.imul(l, H) | 0) + (n >>> 13) | 0) + (me >>> 26) | 0,
                    me &= 67108863,
                    i = Math.imul(m, q),
                    n = (n = Math.imul(m, V)) + Math.imul(y, q) | 0,
                    s = Math.imul(y, V),
                    i = i + Math.imul(p, z) | 0,
                    n = (n = n + Math.imul(p, H) | 0) + Math.imul(b, z) | 0,
                    s = s + Math.imul(b, H) | 0;
                    var ye = (u + (i = i + Math.imul(h, $) | 0) | 0) + ((8191 & (n = (n = n + Math.imul(h, Y) | 0) + Math.imul(l, $) | 0)) << 13) | 0;
                    u = ((s = s + Math.imul(l, Y) | 0) + (n >>> 13) | 0) + (ye >>> 26) | 0,
                    ye &= 67108863,
                    i = Math.imul(w, q),
                    n = (n = Math.imul(w, V)) + Math.imul(E, q) | 0,
                    s = Math.imul(E, V),
                    i = i + Math.imul(m, z) | 0,
                    n = (n = n + Math.imul(m, H) | 0) + Math.imul(y, z) | 0,
                    s = s + Math.imul(y, H) | 0,
                    i = i + Math.imul(p, $) | 0,
                    n = (n = n + Math.imul(p, Y) | 0) + Math.imul(b, $) | 0,
                    s = s + Math.imul(b, Y) | 0;
                    var ve = (u + (i = i + Math.imul(h, Q) | 0) | 0) + ((8191 & (n = (n = n + Math.imul(h, X) | 0) + Math.imul(l, Q) | 0)) << 13) | 0;
                    u = ((s = s + Math.imul(l, X) | 0) + (n >>> 13) | 0) + (ve >>> 26) | 0,
                    ve &= 67108863,
                    i = Math.imul(S, q),
                    n = (n = Math.imul(S, V)) + Math.imul(k, q) | 0,
                    s = Math.imul(k, V),
                    i = i + Math.imul(w, z) | 0,
                    n = (n = n + Math.imul(w, H) | 0) + Math.imul(E, z) | 0,
                    s = s + Math.imul(E, H) | 0,
                    i = i + Math.imul(m, $) | 0,
                    n = (n = n + Math.imul(m, Y) | 0) + Math.imul(y, $) | 0,
                    s = s + Math.imul(y, Y) | 0,
                    i = i + Math.imul(p, Q) | 0,
                    n = (n = n + Math.imul(p, X) | 0) + Math.imul(b, Q) | 0,
                    s = s + Math.imul(b, X) | 0;
                    var we = (u + (i = i + Math.imul(h, J) | 0) | 0) + ((8191 & (n = (n = n + Math.imul(h, ee) | 0) + Math.imul(l, J) | 0)) << 13) | 0;
                    u = ((s = s + Math.imul(l, ee) | 0) + (n >>> 13) | 0) + (we >>> 26) | 0,
                    we &= 67108863,
                    i = Math.imul(C, q),
                    n = (n = Math.imul(C, V)) + Math.imul(I, q) | 0,
                    s = Math.imul(I, V),
                    i = i + Math.imul(S, z) | 0,
                    n = (n = n + Math.imul(S, H) | 0) + Math.imul(k, z) | 0,
                    s = s + Math.imul(k, H) | 0,
                    i = i + Math.imul(w, $) | 0,
                    n = (n = n + Math.imul(w, Y) | 0) + Math.imul(E, $) | 0,
                    s = s + Math.imul(E, Y) | 0,
                    i = i + Math.imul(m, Q) | 0,
                    n = (n = n + Math.imul(m, X) | 0) + Math.imul(y, Q) | 0,
                    s = s + Math.imul(y, X) | 0,
                    i = i + Math.imul(p, J) | 0,
                    n = (n = n + Math.imul(p, ee) | 0) + Math.imul(b, J) | 0,
                    s = s + Math.imul(b, ee) | 0;
                    var Ee = (u + (i = i + Math.imul(h, re) | 0) | 0) + ((8191 & (n = (n = n + Math.imul(h, ie) | 0) + Math.imul(l, re) | 0)) << 13) | 0;
                    u = ((s = s + Math.imul(l, ie) | 0) + (n >>> 13) | 0) + (Ee >>> 26) | 0,
                    Ee &= 67108863,
                    i = Math.imul(B, q),
                    n = (n = Math.imul(B, V)) + Math.imul(M, q) | 0,
                    s = Math.imul(M, V),
                    i = i + Math.imul(C, z) | 0,
                    n = (n = n + Math.imul(C, H) | 0) + Math.imul(I, z) | 0,
                    s = s + Math.imul(I, H) | 0,
                    i = i + Math.imul(S, $) | 0,
                    n = (n = n + Math.imul(S, Y) | 0) + Math.imul(k, $) | 0,
                    s = s + Math.imul(k, Y) | 0,
                    i = i + Math.imul(w, Q) | 0,
                    n = (n = n + Math.imul(w, X) | 0) + Math.imul(E, Q) | 0,
                    s = s + Math.imul(E, X) | 0,
                    i = i + Math.imul(m, J) | 0,
                    n = (n = n + Math.imul(m, ee) | 0) + Math.imul(y, J) | 0,
                    s = s + Math.imul(y, ee) | 0,
                    i = i + Math.imul(p, re) | 0,
                    n = (n = n + Math.imul(p, ie) | 0) + Math.imul(b, re) | 0,
                    s = s + Math.imul(b, ie) | 0;
                    var _e = (u + (i = i + Math.imul(h, se) | 0) | 0) + ((8191 & (n = (n = n + Math.imul(h, oe) | 0) + Math.imul(l, se) | 0)) << 13) | 0;
                    u = ((s = s + Math.imul(l, oe) | 0) + (n >>> 13) | 0) + (_e >>> 26) | 0,
                    _e &= 67108863,
                    i = Math.imul(x, q),
                    n = (n = Math.imul(x, V)) + Math.imul(N, q) | 0,
                    s = Math.imul(N, V),
                    i = i + Math.imul(B, z) | 0,
                    n = (n = n + Math.imul(B, H) | 0) + Math.imul(M, z) | 0,
                    s = s + Math.imul(M, H) | 0,
                    i = i + Math.imul(C, $) | 0,
                    n = (n = n + Math.imul(C, Y) | 0) + Math.imul(I, $) | 0,
                    s = s + Math.imul(I, Y) | 0,
                    i = i + Math.imul(S, Q) | 0,
                    n = (n = n + Math.imul(S, X) | 0) + Math.imul(k, Q) | 0,
                    s = s + Math.imul(k, X) | 0,
                    i = i + Math.imul(w, J) | 0,
                    n = (n = n + Math.imul(w, ee) | 0) + Math.imul(E, J) | 0,
                    s = s + Math.imul(E, ee) | 0,
                    i = i + Math.imul(m, re) | 0,
                    n = (n = n + Math.imul(m, ie) | 0) + Math.imul(y, re) | 0,
                    s = s + Math.imul(y, ie) | 0,
                    i = i + Math.imul(p, se) | 0,
                    n = (n = n + Math.imul(p, oe) | 0) + Math.imul(b, se) | 0,
                    s = s + Math.imul(b, oe) | 0;
                    var Se = (u + (i = i + Math.imul(h, ce) | 0) | 0) + ((8191 & (n = (n = n + Math.imul(h, ue) | 0) + Math.imul(l, ce) | 0)) << 13) | 0;
                    u = ((s = s + Math.imul(l, ue) | 0) + (n >>> 13) | 0) + (Se >>> 26) | 0,
                    Se &= 67108863,
                    i = Math.imul(D, q),
                    n = (n = Math.imul(D, V)) + Math.imul(L, q) | 0,
                    s = Math.imul(L, V),
                    i = i + Math.imul(x, z) | 0,
                    n = (n = n + Math.imul(x, H) | 0) + Math.imul(N, z) | 0,
                    s = s + Math.imul(N, H) | 0,
                    i = i + Math.imul(B, $) | 0,
                    n = (n = n + Math.imul(B, Y) | 0) + Math.imul(M, $) | 0,
                    s = s + Math.imul(M, Y) | 0,
                    i = i + Math.imul(C, Q) | 0,
                    n = (n = n + Math.imul(C, X) | 0) + Math.imul(I, Q) | 0,
                    s = s + Math.imul(I, X) | 0,
                    i = i + Math.imul(S, J) | 0,
                    n = (n = n + Math.imul(S, ee) | 0) + Math.imul(k, J) | 0,
                    s = s + Math.imul(k, ee) | 0,
                    i = i + Math.imul(w, re) | 0,
                    n = (n = n + Math.imul(w, ie) | 0) + Math.imul(E, re) | 0,
                    s = s + Math.imul(E, ie) | 0,
                    i = i + Math.imul(m, se) | 0,
                    n = (n = n + Math.imul(m, oe) | 0) + Math.imul(y, se) | 0,
                    s = s + Math.imul(y, oe) | 0,
                    i = i + Math.imul(p, ce) | 0,
                    n = (n = n + Math.imul(p, ue) | 0) + Math.imul(b, ce) | 0,
                    s = s + Math.imul(b, ue) | 0;
                    var ke = (u + (i = i + Math.imul(h, he) | 0) | 0) + ((8191 & (n = (n = n + Math.imul(h, le) | 0) + Math.imul(l, he) | 0)) << 13) | 0;
                    u = ((s = s + Math.imul(l, le) | 0) + (n >>> 13) | 0) + (ke >>> 26) | 0,
                    ke &= 67108863,
                    i = Math.imul(j, q),
                    n = (n = Math.imul(j, V)) + Math.imul(U, q) | 0,
                    s = Math.imul(U, V),
                    i = i + Math.imul(D, z) | 0,
                    n = (n = n + Math.imul(D, H) | 0) + Math.imul(L, z) | 0,
                    s = s + Math.imul(L, H) | 0,
                    i = i + Math.imul(x, $) | 0,
                    n = (n = n + Math.imul(x, Y) | 0) + Math.imul(N, $) | 0,
                    s = s + Math.imul(N, Y) | 0,
                    i = i + Math.imul(B, Q) | 0,
                    n = (n = n + Math.imul(B, X) | 0) + Math.imul(M, Q) | 0,
                    s = s + Math.imul(M, X) | 0,
                    i = i + Math.imul(C, J) | 0,
                    n = (n = n + Math.imul(C, ee) | 0) + Math.imul(I, J) | 0,
                    s = s + Math.imul(I, ee) | 0,
                    i = i + Math.imul(S, re) | 0,
                    n = (n = n + Math.imul(S, ie) | 0) + Math.imul(k, re) | 0,
                    s = s + Math.imul(k, ie) | 0,
                    i = i + Math.imul(w, se) | 0,
                    n = (n = n + Math.imul(w, oe) | 0) + Math.imul(E, se) | 0,
                    s = s + Math.imul(E, oe) | 0,
                    i = i + Math.imul(m, ce) | 0,
                    n = (n = n + Math.imul(m, ue) | 0) + Math.imul(y, ce) | 0,
                    s = s + Math.imul(y, ue) | 0,
                    i = i + Math.imul(p, he) | 0,
                    n = (n = n + Math.imul(p, le) | 0) + Math.imul(b, he) | 0,
                    s = s + Math.imul(b, le) | 0;
                    var Ae = (u + (i = i + Math.imul(h, pe) | 0) | 0) + ((8191 & (n = (n = n + Math.imul(h, be) | 0) + Math.imul(l, pe) | 0)) << 13) | 0;
                    u = ((s = s + Math.imul(l, be) | 0) + (n >>> 13) | 0) + (Ae >>> 26) | 0,
                    Ae &= 67108863,
                    i = Math.imul(j, z),
                    n = (n = Math.imul(j, H)) + Math.imul(U, z) | 0,
                    s = Math.imul(U, H),
                    i = i + Math.imul(D, $) | 0,
                    n = (n = n + Math.imul(D, Y) | 0) + Math.imul(L, $) | 0,
                    s = s + Math.imul(L, Y) | 0,
                    i = i + Math.imul(x, Q) | 0,
                    n = (n = n + Math.imul(x, X) | 0) + Math.imul(N, Q) | 0,
                    s = s + Math.imul(N, X) | 0,
                    i = i + Math.imul(B, J) | 0,
                    n = (n = n + Math.imul(B, ee) | 0) + Math.imul(M, J) | 0,
                    s = s + Math.imul(M, ee) | 0,
                    i = i + Math.imul(C, re) | 0,
                    n = (n = n + Math.imul(C, ie) | 0) + Math.imul(I, re) | 0,
                    s = s + Math.imul(I, ie) | 0,
                    i = i + Math.imul(S, se) | 0,
                    n = (n = n + Math.imul(S, oe) | 0) + Math.imul(k, se) | 0,
                    s = s + Math.imul(k, oe) | 0,
                    i = i + Math.imul(w, ce) | 0,
                    n = (n = n + Math.imul(w, ue) | 0) + Math.imul(E, ce) | 0,
                    s = s + Math.imul(E, ue) | 0,
                    i = i + Math.imul(m, he) | 0,
                    n = (n = n + Math.imul(m, le) | 0) + Math.imul(y, he) | 0,
                    s = s + Math.imul(y, le) | 0;
                    var Ce = (u + (i = i + Math.imul(p, pe) | 0) | 0) + ((8191 & (n = (n = n + Math.imul(p, be) | 0) + Math.imul(b, pe) | 0)) << 13) | 0;
                    u = ((s = s + Math.imul(b, be) | 0) + (n >>> 13) | 0) + (Ce >>> 26) | 0,
                    Ce &= 67108863,
                    i = Math.imul(j, $),
                    n = (n = Math.imul(j, Y)) + Math.imul(U, $) | 0,
                    s = Math.imul(U, Y),
                    i = i + Math.imul(D, Q) | 0,
                    n = (n = n + Math.imul(D, X) | 0) + Math.imul(L, Q) | 0,
                    s = s + Math.imul(L, X) | 0,
                    i = i + Math.imul(x, J) | 0,
                    n = (n = n + Math.imul(x, ee) | 0) + Math.imul(N, J) | 0,
                    s = s + Math.imul(N, ee) | 0,
                    i = i + Math.imul(B, re) | 0,
                    n = (n = n + Math.imul(B, ie) | 0) + Math.imul(M, re) | 0,
                    s = s + Math.imul(M, ie) | 0,
                    i = i + Math.imul(C, se) | 0,
                    n = (n = n + Math.imul(C, oe) | 0) + Math.imul(I, se) | 0,
                    s = s + Math.imul(I, oe) | 0,
                    i = i + Math.imul(S, ce) | 0,
                    n = (n = n + Math.imul(S, ue) | 0) + Math.imul(k, ce) | 0,
                    s = s + Math.imul(k, ue) | 0,
                    i = i + Math.imul(w, he) | 0,
                    n = (n = n + Math.imul(w, le) | 0) + Math.imul(E, he) | 0,
                    s = s + Math.imul(E, le) | 0;
                    var Ie = (u + (i = i + Math.imul(m, pe) | 0) | 0) + ((8191 & (n = (n = n + Math.imul(m, be) | 0) + Math.imul(y, pe) | 0)) << 13) | 0;
                    u = ((s = s + Math.imul(y, be) | 0) + (n >>> 13) | 0) + (Ie >>> 26) | 0,
                    Ie &= 67108863,
                    i = Math.imul(j, Q),
                    n = (n = Math.imul(j, X)) + Math.imul(U, Q) | 0,
                    s = Math.imul(U, X),
                    i = i + Math.imul(D, J) | 0,
                    n = (n = n + Math.imul(D, ee) | 0) + Math.imul(L, J) | 0,
                    s = s + Math.imul(L, ee) | 0,
                    i = i + Math.imul(x, re) | 0,
                    n = (n = n + Math.imul(x, ie) | 0) + Math.imul(N, re) | 0,
                    s = s + Math.imul(N, ie) | 0,
                    i = i + Math.imul(B, se) | 0,
                    n = (n = n + Math.imul(B, oe) | 0) + Math.imul(M, se) | 0,
                    s = s + Math.imul(M, oe) | 0,
                    i = i + Math.imul(C, ce) | 0,
                    n = (n = n + Math.imul(C, ue) | 0) + Math.imul(I, ce) | 0,
                    s = s + Math.imul(I, ue) | 0,
                    i = i + Math.imul(S, he) | 0,
                    n = (n = n + Math.imul(S, le) | 0) + Math.imul(k, he) | 0,
                    s = s + Math.imul(k, le) | 0;
                    var Te = (u + (i = i + Math.imul(w, pe) | 0) | 0) + ((8191 & (n = (n = n + Math.imul(w, be) | 0) + Math.imul(E, pe) | 0)) << 13) | 0;
                    u = ((s = s + Math.imul(E, be) | 0) + (n >>> 13) | 0) + (Te >>> 26) | 0,
                    Te &= 67108863,
                    i = Math.imul(j, J),
                    n = (n = Math.imul(j, ee)) + Math.imul(U, J) | 0,
                    s = Math.imul(U, ee),
                    i = i + Math.imul(D, re) | 0,
                    n = (n = n + Math.imul(D, ie) | 0) + Math.imul(L, re) | 0,
                    s = s + Math.imul(L, ie) | 0,
                    i = i + Math.imul(x, se) | 0,
                    n = (n = n + Math.imul(x, oe) | 0) + Math.imul(N, se) | 0,
                    s = s + Math.imul(N, oe) | 0,
                    i = i + Math.imul(B, ce) | 0,
                    n = (n = n + Math.imul(B, ue) | 0) + Math.imul(M, ce) | 0,
                    s = s + Math.imul(M, ue) | 0,
                    i = i + Math.imul(C, he) | 0,
                    n = (n = n + Math.imul(C, le) | 0) + Math.imul(I, he) | 0,
                    s = s + Math.imul(I, le) | 0;
                    var Be = (u + (i = i + Math.imul(S, pe) | 0) | 0) + ((8191 & (n = (n = n + Math.imul(S, be) | 0) + Math.imul(k, pe) | 0)) << 13) | 0;
                    u = ((s = s + Math.imul(k, be) | 0) + (n >>> 13) | 0) + (Be >>> 26) | 0,
                    Be &= 67108863,
                    i = Math.imul(j, re),
                    n = (n = Math.imul(j, ie)) + Math.imul(U, re) | 0,
                    s = Math.imul(U, ie),
                    i = i + Math.imul(D, se) | 0,
                    n = (n = n + Math.imul(D, oe) | 0) + Math.imul(L, se) | 0,
                    s = s + Math.imul(L, oe) | 0,
                    i = i + Math.imul(x, ce) | 0,
                    n = (n = n + Math.imul(x, ue) | 0) + Math.imul(N, ce) | 0,
                    s = s + Math.imul(N, ue) | 0,
                    i = i + Math.imul(B, he) | 0,
                    n = (n = n + Math.imul(B, le) | 0) + Math.imul(M, he) | 0,
                    s = s + Math.imul(M, le) | 0;
                    var Me = (u + (i = i + Math.imul(C, pe) | 0) | 0) + ((8191 & (n = (n = n + Math.imul(C, be) | 0) + Math.imul(I, pe) | 0)) << 13) | 0;
                    u = ((s = s + Math.imul(I, be) | 0) + (n >>> 13) | 0) + (Me >>> 26) | 0,
                    Me &= 67108863,
                    i = Math.imul(j, se),
                    n = (n = Math.imul(j, oe)) + Math.imul(U, se) | 0,
                    s = Math.imul(U, oe),
                    i = i + Math.imul(D, ce) | 0,
                    n = (n = n + Math.imul(D, ue) | 0) + Math.imul(L, ce) | 0,
                    s = s + Math.imul(L, ue) | 0,
                    i = i + Math.imul(x, he) | 0,
                    n = (n = n + Math.imul(x, le) | 0) + Math.imul(N, he) | 0,
                    s = s + Math.imul(N, le) | 0;
                    var Re = (u + (i = i + Math.imul(B, pe) | 0) | 0) + ((8191 & (n = (n = n + Math.imul(B, be) | 0) + Math.imul(M, pe) | 0)) << 13) | 0;
                    u = ((s = s + Math.imul(M, be) | 0) + (n >>> 13) | 0) + (Re >>> 26) | 0,
                    Re &= 67108863,
                    i = Math.imul(j, ce),
                    n = (n = Math.imul(j, ue)) + Math.imul(U, ce) | 0,
                    s = Math.imul(U, ue),
                    i = i + Math.imul(D, he) | 0,
                    n = (n = n + Math.imul(D, le) | 0) + Math.imul(L, he) | 0,
                    s = s + Math.imul(L, le) | 0;
                    var xe = (u + (i = i + Math.imul(x, pe) | 0) | 0) + ((8191 & (n = (n = n + Math.imul(x, be) | 0) + Math.imul(N, pe) | 0)) << 13) | 0;
                    u = ((s = s + Math.imul(N, be) | 0) + (n >>> 13) | 0) + (xe >>> 26) | 0,
                    xe &= 67108863,
                    i = Math.imul(j, he),
                    n = (n = Math.imul(j, le)) + Math.imul(U, he) | 0,
                    s = Math.imul(U, le);
                    var Ne = (u + (i = i + Math.imul(D, pe) | 0) | 0) + ((8191 & (n = (n = n + Math.imul(D, be) | 0) + Math.imul(L, pe) | 0)) << 13) | 0;
                    u = ((s = s + Math.imul(L, be) | 0) + (n >>> 13) | 0) + (Ne >>> 26) | 0,
                    Ne &= 67108863;
                    var Pe = (u + (i = Math.imul(j, pe)) | 0) + ((8191 & (n = (n = Math.imul(j, be)) + Math.imul(U, pe) | 0)) << 13) | 0;
                    return u = ((s = Math.imul(U, be)) + (n >>> 13) | 0) + (Pe >>> 26) | 0,
                    Pe &= 67108863,
                    c[0] = ge,
                    c[1] = me,
                    c[2] = ye,
                    c[3] = ve,
                    c[4] = we,
                    c[5] = Ee,
                    c[6] = _e,
                    c[7] = Se,
                    c[8] = ke,
                    c[9] = Ae,
                    c[10] = Ce,
                    c[11] = Ie,
                    c[12] = Te,
                    c[13] = Be,
                    c[14] = Me,
                    c[15] = Re,
                    c[16] = xe,
                    c[17] = Ne,
                    c[18] = Pe,
                    0 !== u && (c[19] = u,
                    r.length++),
                    r
                };
                function p(e, t, r) {
                    return (new b).mulp(e, t, r)
                }
                function b(e, t) {
                    this.x = e,
                    this.y = t
                }
                Math.imul || (d = l),
                s.prototype.mulTo = function(e, t) {
                    var r = this.length + e.length;
                    return 10 === this.length && 10 === e.length ? d(this, e, t) : r < 63 ? l(this, e, t) : r < 1024 ? function(e, t, r) {
                        r.negative = t.negative ^ e.negative,
                        r.length = e.length + t.length;
                        for (var i = 0, n = 0, s = 0; s < r.length - 1; s++) {
                            var o = n;
                            n = 0;
                            for (var a = 67108863 & i, c = Math.min(s, t.length - 1), u = Math.max(0, s - e.length + 1); u <= c; u++) {
                                var f = s - u
                                  , h = (0 | e.words[f]) * (0 | t.words[u])
                                  , l = 67108863 & h;
                                a = 67108863 & (l = l + a | 0),
                                n += (o = (o = o + (h / 67108864 | 0) | 0) + (l >>> 26) | 0) >>> 26,
                                o &= 67108863
                            }
                            r.words[s] = a,
                            i = o,
                            o = n
                        }
                        return 0 !== i ? r.words[s] = i : r.length--,
                        r.strip()
                    }(this, e, t) : p(this, e, t)
                }
                ,
                b.prototype.makeRBT = function(e) {
                    for (var t = new Array(e), r = s.prototype._countBits(e) - 1, i = 0; i < e; i++)
                        t[i] = this.revBin(i, r, e);
                    return t
                }
                ,
                b.prototype.revBin = function(e, t, r) {
                    if (0 === e || e === r - 1)
                        return e;
                    for (var i = 0, n = 0; n < t; n++)
                        i |= (1 & e) << t - n - 1,
                        e >>= 1;
                    return i
                }
                ,
                b.prototype.permute = function(e, t, r, i, n, s) {
                    for (var o = 0; o < s; o++)
                        i[o] = t[e[o]],
                        n[o] = r[e[o]]
                }
                ,
                b.prototype.transform = function(e, t, r, i, n, s) {
                    this.permute(s, e, t, r, i, n);
                    for (var o = 1; o < n; o <<= 1)
                        for (var a = o << 1, c = Math.cos(2 * Math.PI / a), u = Math.sin(2 * Math.PI / a), f = 0; f < n; f += a)
                            for (var h = c, l = u, d = 0; d < o; d++) {
                                var p = r[f + d]
                                  , b = i[f + d]
                                  , g = r[f + d + o]
                                  , m = i[f + d + o]
                                  , y = h * g - l * m;
                                m = h * m + l * g,
                                g = y,
                                r[f + d] = p + g,
                                i[f + d] = b + m,
                                r[f + d + o] = p - g,
                                i[f + d + o] = b - m,
                                d !== a && (y = c * h - u * l,
                                l = c * l + u * h,
                                h = y)
                            }
                }
                ,
                b.prototype.guessLen13b = function(e, t) {
                    var r = 1 | Math.max(t, e)
                      , i = 1 & r
                      , n = 0;
                    for (r = r / 2 | 0; r; r >>>= 1)
                        n++;
                    return 1 << n + 1 + i
                }
                ,
                b.prototype.conjugate = function(e, t, r) {
                    if (!(r <= 1))
                        for (var i = 0; i < r / 2; i++) {
                            var n = e[i];
                            e[i] = e[r - i - 1],
                            e[r - i - 1] = n,
                            n = t[i],
                            t[i] = -t[r - i - 1],
                            t[r - i - 1] = -n
                        }
                }
                ,
                b.prototype.normalize13b = function(e, t) {
                    for (var r = 0, i = 0; i < t / 2; i++) {
                        var n = 8192 * Math.round(e[2 * i + 1] / t) + Math.round(e[2 * i] / t) + r;
                        e[i] = 67108863 & n,
                        r = n < 67108864 ? 0 : n / 67108864 | 0
                    }
                    return e
                }
                ,
                b.prototype.convert13b = function(e, t, r, n) {
                    for (var s = 0, o = 0; o < t; o++)
                        s += 0 | e[o],
                        r[2 * o] = 8191 & s,
                        s >>>= 13,
                        r[2 * o + 1] = 8191 & s,
                        s >>>= 13;
                    for (o = 2 * t; o < n; ++o)
                        r[o] = 0;
                    i(0 === s),
                    i(0 == (-8192 & s))
                }
                ,
                b.prototype.stub = function(e) {
                    for (var t = new Array(e), r = 0; r < e; r++)
                        t[r] = 0;
                    return t
                }
                ,
                b.prototype.mulp = function(e, t, r) {
                    var i = 2 * this.guessLen13b(e.length, t.length)
                      , n = this.makeRBT(i)
                      , s = this.stub(i)
                      , o = new Array(i)
                      , a = new Array(i)
                      , c = new Array(i)
                      , u = new Array(i)
                      , f = new Array(i)
                      , h = new Array(i)
                      , l = r.words;
                    l.length = i,
                    this.convert13b(e.words, e.length, o, i),
                    this.convert13b(t.words, t.length, u, i),
                    this.transform(o, s, a, c, i, n),
                    this.transform(u, s, f, h, i, n);
                    for (var d = 0; d < i; d++) {
                        var p = a[d] * f[d] - c[d] * h[d];
                        c[d] = a[d] * h[d] + c[d] * f[d],
                        a[d] = p
                    }
                    return this.conjugate(a, c, i),
                    this.transform(a, c, l, s, i, n),
                    this.conjugate(l, s, i),
                    this.normalize13b(l, i),
                    r.negative = e.negative ^ t.negative,
                    r.length = e.length + t.length,
                    r.strip()
                }
                ,
                s.prototype.mul = function(e) {
                    var t = new s(null);
                    return t.words = new Array(this.length + e.length),
                    this.mulTo(e, t)
                }
                ,
                s.prototype.mulf = function(e) {
                    var t = new s(null);
                    return t.words = new Array(this.length + e.length),
                    p(this, e, t)
                }
                ,
                s.prototype.imul = function(e) {
                    return this.clone().mulTo(e, this)
                }
                ,
                s.prototype.imuln = function(e) {
                    i("number" == typeof e),
                    i(e < 67108864);
                    for (var t = 0, r = 0; r < this.length; r++) {
                        var n = (0 | this.words[r]) * e
                          , s = (67108863 & n) + (67108863 & t);
                        t >>= 26,
                        t += n / 67108864 | 0,
                        t += s >>> 26,
                        this.words[r] = 67108863 & s
                    }
                    return 0 !== t && (this.words[r] = t,
                    this.length++),
                    this
                }
                ,
                s.prototype.muln = function(e) {
                    return this.clone().imuln(e)
                }
                ,
                s.prototype.sqr = function() {
                    return this.mul(this)
                }
                ,
                s.prototype.isqr = function() {
                    return this.imul(this.clone())
                }
                ,
                s.prototype.pow = function(e) {
                    var t = function(e) {
                        for (var t = new Array(e.bitLength()), r = 0; r < t.length; r++) {
                            var i = r / 26 | 0
                              , n = r % 26;
                            t[r] = (e.words[i] & 1 << n) >>> n
                        }
                        return t
                    }(e);
                    if (0 === t.length)
                        return new s(1);
                    for (var r = this, i = 0; i < t.length && 0 === t[i]; i++,
                    r = r.sqr())
                        ;
                    if (++i < t.length)
                        for (var n = r.sqr(); i < t.length; i++,
                        n = n.sqr())
                            0 !== t[i] && (r = r.mul(n));
                    return r
                }
                ,
                s.prototype.iushln = function(e) {
                    i("number" == typeof e && e >= 0);
                    var t, r = e % 26, n = (e - r) / 26, s = 67108863 >>> 26 - r << 26 - r;
                    if (0 !== r) {
                        var o = 0;
                        for (t = 0; t < this.length; t++) {
                            var a = this.words[t] & s
                              , c = (0 | this.words[t]) - a << r;
                            this.words[t] = c | o,
                            o = a >>> 26 - r
                        }
                        o && (this.words[t] = o,
                        this.length++)
                    }
                    if (0 !== n) {
                        for (t = this.length - 1; t >= 0; t--)
                            this.words[t + n] = this.words[t];
                        for (t = 0; t < n; t++)
                            this.words[t] = 0;
                        this.length += n
                    }
                    return this.strip()
                }
                ,
                s.prototype.ishln = function(e) {
                    return i(0 === this.negative),
                    this.iushln(e)
                }
                ,
                s.prototype.iushrn = function(e, t, r) {
                    var n;
                    i("number" == typeof e && e >= 0),
                    n = t ? (t - t % 26) / 26 : 0;
                    var s = e % 26
                      , o = Math.min((e - s) / 26, this.length)
                      , a = 67108863 ^ 67108863 >>> s << s
                      , c = r;
                    if (n -= o,
                    n = Math.max(0, n),
                    c) {
                        for (var u = 0; u < o; u++)
                            c.words[u] = this.words[u];
                        c.length = o
                    }
                    if (0 === o)
                        ;
                    else if (this.length > o)
                        for (this.length -= o,
                        u = 0; u < this.length; u++)
                            this.words[u] = this.words[u + o];
                    else
                        this.words[0] = 0,
                        this.length = 1;
                    var f = 0;
                    for (u = this.length - 1; u >= 0 && (0 !== f || u >= n); u--) {
                        var h = 0 | this.words[u];
                        this.words[u] = f << 26 - s | h >>> s,
                        f = h & a
                    }
                    return c && 0 !== f && (c.words[c.length++] = f),
                    0 === this.length && (this.words[0] = 0,
                    this.length = 1),
                    this.strip()
                }
                ,
                s.prototype.ishrn = function(e, t, r) {
                    return i(0 === this.negative),
                    this.iushrn(e, t, r)
                }
                ,
                s.prototype.shln = function(e) {
                    return this.clone().ishln(e)
                }
                ,
                s.prototype.ushln = function(e) {
                    return this.clone().iushln(e)
                }
                ,
                s.prototype.shrn = function(e) {
                    return this.clone().ishrn(e)
                }
                ,
                s.prototype.ushrn = function(e) {
                    return this.clone().iushrn(e)
                }
                ,
                s.prototype.testn = function(e) {
                    i("number" == typeof e && e >= 0);
                    var t = e % 26
                      , r = (e - t) / 26
                      , n = 1 << t;
                    return !(this.length <= r) && !!(this.words[r] & n)
                }
                ,
                s.prototype.imaskn = function(e) {
                    i("number" == typeof e && e >= 0);
                    var t = e % 26
                      , r = (e - t) / 26;
                    if (i(0 === this.negative, "imaskn works only with positive numbers"),
                    this.length <= r)
                        return this;
                    if (0 !== t && r++,
                    this.length = Math.min(r, this.length),
                    0 !== t) {
                        var n = 67108863 ^ 67108863 >>> t << t;
                        this.words[this.length - 1] &= n
                    }
                    return this.strip()
                }
                ,
                s.prototype.maskn = function(e) {
                    return this.clone().imaskn(e)
                }
                ,
                s.prototype.iaddn = function(e) {
                    return i("number" == typeof e),
                    i(e < 67108864),
                    e < 0 ? this.isubn(-e) : 0 !== this.negative ? 1 === this.length && (0 | this.words[0]) < e ? (this.words[0] = e - (0 | this.words[0]),
                    this.negative = 0,
                    this) : (this.negative = 0,
                    this.isubn(e),
                    this.negative = 1,
                    this) : this._iaddn(e)
                }
                ,
                s.prototype._iaddn = function(e) {
                    this.words[0] += e;
                    for (var t = 0; t < this.length && this.words[t] >= 67108864; t++)
                        this.words[t] -= 67108864,
                        t === this.length - 1 ? this.words[t + 1] = 1 : this.words[t + 1]++;
                    return this.length = Math.max(this.length, t + 1),
                    this
                }
                ,
                s.prototype.isubn = function(e) {
                    if (i("number" == typeof e),
                    i(e < 67108864),
                    e < 0)
                        return this.iaddn(-e);
                    if (0 !== this.negative)
                        return this.negative = 0,
                        this.iaddn(e),
                        this.negative = 1,
                        this;
                    if (this.words[0] -= e,
                    1 === this.length && this.words[0] < 0)
                        this.words[0] = -this.words[0],
                        this.negative = 1;
                    else
                        for (var t = 0; t < this.length && this.words[t] < 0; t++)
                            this.words[t] += 67108864,
                            this.words[t + 1] -= 1;
                    return this.strip()
                }
                ,
                s.prototype.addn = function(e) {
                    return this.clone().iaddn(e)
                }
                ,
                s.prototype.subn = function(e) {
                    return this.clone().isubn(e)
                }
                ,
                s.prototype.iabs = function() {
                    return this.negative = 0,
                    this
                }
                ,
                s.prototype.abs = function() {
                    return this.clone().iabs()
                }
                ,
                s.prototype._ishlnsubmul = function(e, t, r) {
                    var n, s, o = e.length + r;
                    this._expand(o);
                    var a = 0;
                    for (n = 0; n < e.length; n++) {
                        s = (0 | this.words[n + r]) + a;
                        var c = (0 | e.words[n]) * t;
                        a = ((s -= 67108863 & c) >> 26) - (c / 67108864 | 0),
                        this.words[n + r] = 67108863 & s
                    }
                    for (; n < this.length - r; n++)
                        a = (s = (0 | this.words[n + r]) + a) >> 26,
                        this.words[n + r] = 67108863 & s;
                    if (0 === a)
                        return this.strip();
                    for (i(-1 === a),
                    a = 0,
                    n = 0; n < this.length; n++)
                        a = (s = -(0 | this.words[n]) + a) >> 26,
                        this.words[n] = 67108863 & s;
                    return this.negative = 1,
                    this.strip()
                }
                ,
                s.prototype._wordDiv = function(e, t) {
                    var r = (this.length,
                    e.length)
                      , i = this.clone()
                      , n = e
                      , o = 0 | n.words[n.length - 1];
                    0 !== (r = 26 - this._countBits(o)) && (n = n.ushln(r),
                    i.iushln(r),
                    o = 0 | n.words[n.length - 1]);
                    var a, c = i.length - n.length;
                    if ("mod" !== t) {
                        (a = new s(null)).length = c + 1,
                        a.words = new Array(a.length);
                        for (var u = 0; u < a.length; u++)
                            a.words[u] = 0
                    }
                    var f = i.clone()._ishlnsubmul(n, 1, c);
                    0 === f.negative && (i = f,
                    a && (a.words[c] = 1));
                    for (var h = c - 1; h >= 0; h--) {
                        var l = 67108864 * (0 | i.words[n.length + h]) + (0 | i.words[n.length + h - 1]);
                        for (l = Math.min(l / o | 0, 67108863),
                        i._ishlnsubmul(n, l, h); 0 !== i.negative; )
                            l--,
                            i.negative = 0,
                            i._ishlnsubmul(n, 1, h),
                            i.isZero() || (i.negative ^= 1);
                        a && (a.words[h] = l)
                    }
                    return a && a.strip(),
                    i.strip(),
                    "div" !== t && 0 !== r && i.iushrn(r),
                    {
                        div: a || null,
                        mod: i
                    }
                }
                ,
                s.prototype.divmod = function(e, t, r) {
                    return i(!e.isZero()),
                    this.isZero() ? {
                        div: new s(0),
                        mod: new s(0)
                    } : 0 !== this.negative && 0 === e.negative ? (a = this.neg().divmod(e, t),
                    "mod" !== t && (n = a.div.neg()),
                    "div" !== t && (o = a.mod.neg(),
                    r && 0 !== o.negative && o.iadd(e)),
                    {
                        div: n,
                        mod: o
                    }) : 0 === this.negative && 0 !== e.negative ? (a = this.divmod(e.neg(), t),
                    "mod" !== t && (n = a.div.neg()),
                    {
                        div: n,
                        mod: a.mod
                    }) : 0 != (this.negative & e.negative) ? (a = this.neg().divmod(e.neg(), t),
                    "div" !== t && (o = a.mod.neg(),
                    r && 0 !== o.negative && o.isub(e)),
                    {
                        div: a.div,
                        mod: o
                    }) : e.length > this.length || this.cmp(e) < 0 ? {
                        div: new s(0),
                        mod: this
                    } : 1 === e.length ? "div" === t ? {
                        div: this.divn(e.words[0]),
                        mod: null
                    } : "mod" === t ? {
                        div: null,
                        mod: new s(this.modn(e.words[0]))
                    } : {
                        div: this.divn(e.words[0]),
                        mod: new s(this.modn(e.words[0]))
                    } : this._wordDiv(e, t);
                    var n, o, a
                }
                ,
                s.prototype.div = function(e) {
                    return this.divmod(e, "div", !1).div
                }
                ,
                s.prototype.mod = function(e) {
                    return this.divmod(e, "mod", !1).mod
                }
                ,
                s.prototype.umod = function(e) {
                    return this.divmod(e, "mod", !0).mod
                }
                ,
                s.prototype.divRound = function(e) {
                    var t = this.divmod(e);
                    if (t.mod.isZero())
                        return t.div;
                    var r = 0 !== t.div.negative ? t.mod.isub(e) : t.mod
                      , i = e.ushrn(1)
                      , n = e.andln(1)
                      , s = r.cmp(i);
                    return s < 0 || 1 === n && 0 === s ? t.div : 0 !== t.div.negative ? t.div.isubn(1) : t.div.iaddn(1)
                }
                ,
                s.prototype.modn = function(e) {
                    i(e <= 67108863);
                    for (var t = (1 << 26) % e, r = 0, n = this.length - 1; n >= 0; n--)
                        r = (t * r + (0 | this.words[n])) % e;
                    return r
                }
                ,
                s.prototype.idivn = function(e) {
                    i(e <= 67108863);
                    for (var t = 0, r = this.length - 1; r >= 0; r--) {
                        var n = (0 | this.words[r]) + 67108864 * t;
                        this.words[r] = n / e | 0,
                        t = n % e
                    }
                    return this.strip()
                }
                ,
                s.prototype.divn = function(e) {
                    return this.clone().idivn(e)
                }
                ,
                s.prototype.egcd = function(e) {
                    i(0 === e.negative),
                    i(!e.isZero());
                    var t = this
                      , r = e.clone();
                    t = 0 !== t.negative ? t.umod(e) : t.clone();
                    for (var n = new s(1), o = new s(0), a = new s(0), c = new s(1), u = 0; t.isEven() && r.isEven(); )
                        t.iushrn(1),
                        r.iushrn(1),
                        ++u;
                    for (var f = r.clone(), h = t.clone(); !t.isZero(); ) {
                        for (var l = 0, d = 1; 0 == (t.words[0] & d) && l < 26; ++l,
                        d <<= 1)
                            ;
                        if (l > 0)
                            for (t.iushrn(l); l-- > 0; )
                                (n.isOdd() || o.isOdd()) && (n.iadd(f),
                                o.isub(h)),
                                n.iushrn(1),
                                o.iushrn(1);
                        for (var p = 0, b = 1; 0 == (r.words[0] & b) && p < 26; ++p,
                        b <<= 1)
                            ;
                        if (p > 0)
                            for (r.iushrn(p); p-- > 0; )
                                (a.isOdd() || c.isOdd()) && (a.iadd(f),
                                c.isub(h)),
                                a.iushrn(1),
                                c.iushrn(1);
                        t.cmp(r) >= 0 ? (t.isub(r),
                        n.isub(a),
                        o.isub(c)) : (r.isub(t),
                        a.isub(n),
                        c.isub(o))
                    }
                    return {
                        a: a,
                        b: c,
                        gcd: r.iushln(u)
                    }
                }
                ,
                s.prototype._invmp = function(e) {
                    i(0 === e.negative),
                    i(!e.isZero());
                    var t = this
                      , r = e.clone();
                    t = 0 !== t.negative ? t.umod(e) : t.clone();
                    for (var n, o = new s(1), a = new s(0), c = r.clone(); t.cmpn(1) > 0 && r.cmpn(1) > 0; ) {
                        for (var u = 0, f = 1; 0 == (t.words[0] & f) && u < 26; ++u,
                        f <<= 1)
                            ;
                        if (u > 0)
                            for (t.iushrn(u); u-- > 0; )
                                o.isOdd() && o.iadd(c),
                                o.iushrn(1);
                        for (var h = 0, l = 1; 0 == (r.words[0] & l) && h < 26; ++h,
                        l <<= 1)
                            ;
                        if (h > 0)
                            for (r.iushrn(h); h-- > 0; )
                                a.isOdd() && a.iadd(c),
                                a.iushrn(1);
                        t.cmp(r) >= 0 ? (t.isub(r),
                        o.isub(a)) : (r.isub(t),
                        a.isub(o))
                    }
                    return (n = 0 === t.cmpn(1) ? o : a).cmpn(0) < 0 && n.iadd(e),
                    n
                }
                ,
                s.prototype.gcd = function(e) {
                    if (this.isZero())
                        return e.abs();
                    if (e.isZero())
                        return this.abs();
                    var t = this.clone()
                      , r = e.clone();
                    t.negative = 0,
                    r.negative = 0;
                    for (var i = 0; t.isEven() && r.isEven(); i++)
                        t.iushrn(1),
                        r.iushrn(1);
                    for (; ; ) {
                        for (; t.isEven(); )
                            t.iushrn(1);
                        for (; r.isEven(); )
                            r.iushrn(1);
                        var n = t.cmp(r);
                        if (n < 0) {
                            var s = t;
                            t = r,
                            r = s
                        } else if (0 === n || 0 === r.cmpn(1))
                            break;
                        t.isub(r)
                    }
                    return r.iushln(i)
                }
                ,
                s.prototype.invm = function(e) {
                    return this.egcd(e).a.umod(e)
                }
                ,
                s.prototype.isEven = function() {
                    return 0 == (1 & this.words[0])
                }
                ,
                s.prototype.isOdd = function() {
                    return 1 == (1 & this.words[0])
                }
                ,
                s.prototype.andln = function(e) {
                    return this.words[0] & e
                }
                ,
                s.prototype.bincn = function(e) {
                    i("number" == typeof e);
                    var t = e % 26
                      , r = (e - t) / 26
                      , n = 1 << t;
                    if (this.length <= r)
                        return this._expand(r + 1),
                        this.words[r] |= n,
                        this;
                    for (var s = n, o = r; 0 !== s && o < this.length; o++) {
                        var a = 0 | this.words[o];
                        s = (a += s) >>> 26,
                        a &= 67108863,
                        this.words[o] = a
                    }
                    return 0 !== s && (this.words[o] = s,
                    this.length++),
                    this
                }
                ,
                s.prototype.isZero = function() {
                    return 1 === this.length && 0 === this.words[0]
                }
                ,
                s.prototype.cmpn = function(e) {
                    var t, r = e < 0;
                    if (0 !== this.negative && !r)
                        return -1;
                    if (0 === this.negative && r)
                        return 1;
                    if (this.strip(),
                    this.length > 1)
                        t = 1;
                    else {
                        r && (e = -e),
                        i(e <= 67108863, "Number is too big");
                        var n = 0 | this.words[0];
                        t = n === e ? 0 : n < e ? -1 : 1
                    }
                    return 0 !== this.negative ? 0 | -t : t
                }
                ,
                s.prototype.cmp = function(e) {
                    if (0 !== this.negative && 0 === e.negative)
                        return -1;
                    if (0 === this.negative && 0 !== e.negative)
                        return 1;
                    var t = this.ucmp(e);
                    return 0 !== this.negative ? 0 | -t : t
                }
                ,
                s.prototype.ucmp = function(e) {
                    if (this.length > e.length)
                        return 1;
                    if (this.length < e.length)
                        return -1;
                    for (var t = 0, r = this.length - 1; r >= 0; r--) {
                        var i = 0 | this.words[r]
                          , n = 0 | e.words[r];
                        if (i !== n) {
                            i < n ? t = -1 : i > n && (t = 1);
                            break
                        }
                    }
                    return t
                }
                ,
                s.prototype.gtn = function(e) {
                    return 1 === this.cmpn(e)
                }
                ,
                s.prototype.gt = function(e) {
                    return 1 === this.cmp(e)
                }
                ,
                s.prototype.gten = function(e) {
                    return this.cmpn(e) >= 0
                }
                ,
                s.prototype.gte = function(e) {
                    return this.cmp(e) >= 0
                }
                ,
                s.prototype.ltn = function(e) {
                    return -1 === this.cmpn(e)
                }
                ,
                s.prototype.lt = function(e) {
                    return -1 === this.cmp(e)
                }
                ,
                s.prototype.lten = function(e) {
                    return this.cmpn(e) <= 0
                }
                ,
                s.prototype.lte = function(e) {
                    return this.cmp(e) <= 0
                }
                ,
                s.prototype.eqn = function(e) {
                    return 0 === this.cmpn(e)
                }
                ,
                s.prototype.eq = function(e) {
                    return 0 === this.cmp(e)
                }
                ,
                s.red = function(e) {
                    return new _(e)
                }
                ,
                s.prototype.toRed = function(e) {
                    return i(!this.red, "Already a number in reduction context"),
                    i(0 === this.negative, "red works only with positives"),
                    e.convertTo(this)._forceRed(e)
                }
                ,
                s.prototype.fromRed = function() {
                    return i(this.red, "fromRed works only with numbers in reduction context"),
                    this.red.convertFrom(this)
                }
                ,
                s.prototype._forceRed = function(e) {
                    return this.red = e,
                    this
                }
                ,
                s.prototype.forceRed = function(e) {
                    return i(!this.red, "Already a number in reduction context"),
                    this._forceRed(e)
                }
                ,
                s.prototype.redAdd = function(e) {
                    return i(this.red, "redAdd works only with red numbers"),
                    this.red.add(this, e)
                }
                ,
                s.prototype.redIAdd = function(e) {
                    return i(this.red, "redIAdd works only with red numbers"),
                    this.red.iadd(this, e)
                }
                ,
                s.prototype.redSub = function(e) {
                    return i(this.red, "redSub works only with red numbers"),
                    this.red.sub(this, e)
                }
                ,
                s.prototype.redISub = function(e) {
                    return i(this.red, "redISub works only with red numbers"),
                    this.red.isub(this, e)
                }
                ,
                s.prototype.redShl = function(e) {
                    return i(this.red, "redShl works only with red numbers"),
                    this.red.shl(this, e)
                }
                ,
                s.prototype.redMul = function(e) {
                    return i(this.red, "redMul works only with red numbers"),
                    this.red._verify2(this, e),
                    this.red.mul(this, e)
                }
                ,
                s.prototype.redIMul = function(e) {
                    return i(this.red, "redMul works only with red numbers"),
                    this.red._verify2(this, e),
                    this.red.imul(this, e)
                }
                ,
                s.prototype.redSqr = function() {
                    return i(this.red, "redSqr works only with red numbers"),
                    this.red._verify1(this),
                    this.red.sqr(this)
                }
                ,
                s.prototype.redISqr = function() {
                    return i(this.red, "redISqr works only with red numbers"),
                    this.red._verify1(this),
                    this.red.isqr(this)
                }
                ,
                s.prototype.redSqrt = function() {
                    return i(this.red, "redSqrt works only with red numbers"),
                    this.red._verify1(this),
                    this.red.sqrt(this)
                }
                ,
                s.prototype.redInvm = function() {
                    return i(this.red, "redInvm works only with red numbers"),
                    this.red._verify1(this),
                    this.red.invm(this)
                }
                ,
                s.prototype.redNeg = function() {
                    return i(this.red, "redNeg works only with red numbers"),
                    this.red._verify1(this),
                    this.red.neg(this)
                }
                ,
                s.prototype.redPow = function(e) {
                    return i(this.red && !e.red, "redPow(normalNum)"),
                    this.red._verify1(this),
                    this.red.pow(this, e)
                }
                ;
                var g = {
                    k256: null,
                    p224: null,
                    p192: null,
                    p25519: null
                };
                function m(e, t) {
                    this.name = e,
                    this.p = new s(t,16),
                    this.n = this.p.bitLength(),
                    this.k = new s(1).iushln(this.n).isub(this.p),
                    this.tmp = this._tmp()
                }
                function y() {
                    m.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")
                }
                function v() {
                    m.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")
                }
                function w() {
                    m.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")
                }
                function E() {
                    m.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")
                }
                function _(e) {
                    if ("string" == typeof e) {
                        var t = s._prime(e);
                        this.m = t.p,
                        this.prime = t
                    } else
                        i(e.gtn(1), "modulus must be greater than 1"),
                        this.m = e,
                        this.prime = null
                }
                function S(e) {
                    _.call(this, e),
                    this.shift = this.m.bitLength(),
                    this.shift % 26 != 0 && (this.shift += 26 - this.shift % 26),
                    this.r = new s(1).iushln(this.shift),
                    this.r2 = this.imod(this.r.sqr()),
                    this.rinv = this.r._invmp(this.m),
                    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m),
                    this.minv = this.minv.umod(this.r),
                    this.minv = this.r.sub(this.minv)
                }
                m.prototype._tmp = function() {
                    var e = new s(null);
                    return e.words = new Array(Math.ceil(this.n / 13)),
                    e
                }
                ,
                m.prototype.ireduce = function(e) {
                    var t, r = e;
                    do {
                        this.split(r, this.tmp),
                        t = (r = (r = this.imulK(r)).iadd(this.tmp)).bitLength()
                    } while (t > this.n);var i = t < this.n ? -1 : r.ucmp(this.p);
                    return 0 === i ? (r.words[0] = 0,
                    r.length = 1) : i > 0 ? r.isub(this.p) : r.strip(),
                    r
                }
                ,
                m.prototype.split = function(e, t) {
                    e.iushrn(this.n, 0, t)
                }
                ,
                m.prototype.imulK = function(e) {
                    return e.imul(this.k)
                }
                ,
                n(y, m),
                y.prototype.split = function(e, t) {
                    for (var r = Math.min(e.length, 9), i = 0; i < r; i++)
                        t.words[i] = e.words[i];
                    if (t.length = r,
                    e.length <= 9)
                        return e.words[0] = 0,
                        void (e.length = 1);
                    var n = e.words[9];
                    for (t.words[t.length++] = 4194303 & n,
                    i = 10; i < e.length; i++) {
                        var s = 0 | e.words[i];
                        e.words[i - 10] = (4194303 & s) << 4 | n >>> 22,
                        n = s
                    }
                    n >>>= 22,
                    e.words[i - 10] = n,
                    0 === n && e.length > 10 ? e.length -= 10 : e.length -= 9
                }
                ,
                y.prototype.imulK = function(e) {
                    e.words[e.length] = 0,
                    e.words[e.length + 1] = 0,
                    e.length += 2;
                    for (var t = 0, r = 0; r < e.length; r++) {
                        var i = 0 | e.words[r];
                        t += 977 * i,
                        e.words[r] = 67108863 & t,
                        t = 64 * i + (t / 67108864 | 0)
                    }
                    return 0 === e.words[e.length - 1] && (e.length--,
                    0 === e.words[e.length - 1] && e.length--),
                    e
                }
                ,
                n(v, m),
                n(w, m),
                n(E, m),
                E.prototype.imulK = function(e) {
                    for (var t = 0, r = 0; r < e.length; r++) {
                        var i = 19 * (0 | e.words[r]) + t
                          , n = 67108863 & i;
                        i >>>= 26,
                        e.words[r] = n,
                        t = i
                    }
                    return 0 !== t && (e.words[e.length++] = t),
                    e
                }
                ,
                s._prime = function(e) {
                    if (g[e])
                        return g[e];
                    var t;
                    if ("k256" === e)
                        t = new y;
                    else if ("p224" === e)
                        t = new v;
                    else if ("p192" === e)
                        t = new w;
                    else {
                        if ("p25519" !== e)
                            throw new Error("Unknown prime " + e);
                        t = new E
                    }
                    return g[e] = t,
                    t
                }
                ,
                _.prototype._verify1 = function(e) {
                    i(0 === e.negative, "red works only with positives"),
                    i(e.red, "red works only with red numbers")
                }
                ,
                _.prototype._verify2 = function(e, t) {
                    i(0 == (e.negative | t.negative), "red works only with positives"),
                    i(e.red && e.red === t.red, "red works only with red numbers")
                }
                ,
                _.prototype.imod = function(e) {
                    return this.prime ? this.prime.ireduce(e)._forceRed(this) : e.umod(this.m)._forceRed(this)
                }
                ,
                _.prototype.neg = function(e) {
                    return e.isZero() ? e.clone() : this.m.sub(e)._forceRed(this)
                }
                ,
                _.prototype.add = function(e, t) {
                    this._verify2(e, t);
                    var r = e.add(t);
                    return r.cmp(this.m) >= 0 && r.isub(this.m),
                    r._forceRed(this)
                }
                ,
                _.prototype.iadd = function(e, t) {
                    this._verify2(e, t);
                    var r = e.iadd(t);
                    return r.cmp(this.m) >= 0 && r.isub(this.m),
                    r
                }
                ,
                _.prototype.sub = function(e, t) {
                    this._verify2(e, t);
                    var r = e.sub(t);
                    return r.cmpn(0) < 0 && r.iadd(this.m),
                    r._forceRed(this)
                }
                ,
                _.prototype.isub = function(e, t) {
                    this._verify2(e, t);
                    var r = e.isub(t);
                    return r.cmpn(0) < 0 && r.iadd(this.m),
                    r
                }
                ,
                _.prototype.shl = function(e, t) {
                    return this._verify1(e),
                    this.imod(e.ushln(t))
                }
                ,
                _.prototype.imul = function(e, t) {
                    return this._verify2(e, t),
                    this.imod(e.imul(t))
                }
                ,
                _.prototype.mul = function(e, t) {
                    return this._verify2(e, t),
                    this.imod(e.mul(t))
                }
                ,
                _.prototype.isqr = function(e) {
                    return this.imul(e, e.clone())
                }
                ,
                _.prototype.sqr = function(e) {
                    return this.mul(e, e)
                }
                ,
                _.prototype.sqrt = function(e) {
                    if (e.isZero())
                        return e.clone();
                    var t = this.m.andln(3);
                    if (i(t % 2 == 1),
                    3 === t) {
                        var r = this.m.add(new s(1)).iushrn(2);
                        return this.pow(e, r)
                    }
                    for (var n = this.m.subn(1), o = 0; !n.isZero() && 0 === n.andln(1); )
                        o++,
                        n.iushrn(1);
                    i(!n.isZero());
                    var a = new s(1).toRed(this)
                      , c = a.redNeg()
                      , u = this.m.subn(1).iushrn(1)
                      , f = this.m.bitLength();
                    for (f = new s(2 * f * f).toRed(this); 0 !== this.pow(f, u).cmp(c); )
                        f.redIAdd(c);
                    for (var h = this.pow(f, n), l = this.pow(e, n.addn(1).iushrn(1)), d = this.pow(e, n), p = o; 0 !== d.cmp(a); ) {
                        for (var b = d, g = 0; 0 !== b.cmp(a); g++)
                            b = b.redSqr();
                        i(g < p);
                        var m = this.pow(h, new s(1).iushln(p - g - 1));
                        l = l.redMul(m),
                        h = m.redSqr(),
                        d = d.redMul(h),
                        p = g
                    }
                    return l
                }
                ,
                _.prototype.invm = function(e) {
                    var t = e._invmp(this.m);
                    return 0 !== t.negative ? (t.negative = 0,
                    this.imod(t).redNeg()) : this.imod(t)
                }
                ,
                _.prototype.pow = function(e, t) {
                    if (t.isZero())
                        return new s(1).toRed(this);
                    if (0 === t.cmpn(1))
                        return e.clone();
                    var r = new Array(16);
                    r[0] = new s(1).toRed(this),
                    r[1] = e;
                    for (var i = 2; i < r.length; i++)
                        r[i] = this.mul(r[i - 1], e);
                    var n = r[0]
                      , o = 0
                      , a = 0
                      , c = t.bitLength() % 26;
                    for (0 === c && (c = 26),
                    i = t.length - 1; i >= 0; i--) {
                        for (var u = t.words[i], f = c - 1; f >= 0; f--) {
                            var h = u >> f & 1;
                            n !== r[0] && (n = this.sqr(n)),
                            0 !== h || 0 !== o ? (o <<= 1,
                            o |= h,
                            (4 === ++a || 0 === i && 0 === f) && (n = this.mul(n, r[o]),
                            a = 0,
                            o = 0)) : a = 0
                        }
                        c = 26
                    }
                    return n
                }
                ,
                _.prototype.convertTo = function(e) {
                    var t = e.umod(this.m);
                    return t === e ? t.clone() : t
                }
                ,
                _.prototype.convertFrom = function(e) {
                    var t = e.clone();
                    return t.red = null,
                    t
                }
                ,
                s.mont = function(e) {
                    return new S(e)
                }
                ,
                n(S, _),
                S.prototype.convertTo = function(e) {
                    return this.imod(e.ushln(this.shift))
                }
                ,
                S.prototype.convertFrom = function(e) {
                    var t = this.imod(e.mul(this.rinv));
                    return t.red = null,
                    t
                }
                ,
                S.prototype.imul = function(e, t) {
                    if (e.isZero() || t.isZero())
                        return e.words[0] = 0,
                        e.length = 1,
                        e;
                    var r = e.imul(t)
                      , i = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m)
                      , n = r.isub(i).iushrn(this.shift)
                      , s = n;
                    return n.cmp(this.m) >= 0 ? s = n.isub(this.m) : n.cmpn(0) < 0 && (s = n.iadd(this.m)),
                    s._forceRed(this)
                }
                ,
                S.prototype.mul = function(e, t) {
                    if (e.isZero() || t.isZero())
                        return new s(0)._forceRed(this);
                    var r = e.mul(t)
                      , i = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m)
                      , n = r.isub(i).iushrn(this.shift)
                      , o = n;
                    return n.cmp(this.m) >= 0 ? o = n.isub(this.m) : n.cmpn(0) < 0 && (o = n.iadd(this.m)),
                    o._forceRed(this)
                }
                ,
                S.prototype.invm = function(e) {
                    return this.imod(e._invmp(this.m).mul(this.r2))._forceRed(this)
                }
            }(void 0 === t || t, this)
        }
        , {
            buffer: 18
        }],
        17: [function(e, t, r) {
            var i;
            function n(e) {
                this.rand = e
            }
            if (t.exports = function(e) {
                return i || (i = new n(null)),
                i.generate(e)
            }
            ,
            t.exports.Rand = n,
            n.prototype.generate = function(e) {
                return this._rand(e)
            }
            ,
            n.prototype._rand = function(e) {
                if (this.rand.getBytes)
                    return this.rand.getBytes(e);
                for (var t = new Uint8Array(e), r = 0; r < t.length; r++)
                    t[r] = this.rand.getByte();
                return t
            }
            ,
            "object" == typeof self)
                self.crypto && self.crypto.getRandomValues ? n.prototype._rand = function(e) {
                    var t = new Uint8Array(e);
                    return self.crypto.getRandomValues(t),
                    t
                }
                : self.msCrypto && self.msCrypto.getRandomValues ? n.prototype._rand = function(e) {
                    var t = new Uint8Array(e);
                    return self.msCrypto.getRandomValues(t),
                    t
                }
                : "object" == typeof window && (n.prototype._rand = function() {
                    throw new Error("Not implemented yet")
                }
                );
            else
                try {
                    var s = e("crypto");
                    if ("function" != typeof s.randomBytes)
                        throw new Error("Not supported");
                    n.prototype._rand = function(e) {
                        return s.randomBytes(e)
                    }
                } catch (e) {}
        }
        , {
            crypto: 18
        }],
        18: [function(e, t, r) {}
        , {}],
        19: [function(e, t, r) {
            var i = e("safe-buffer").Buffer;
            function n(e) {
                i.isBuffer(e) || (e = i.from(e));
                for (var t = e.length / 4 | 0, r = new Array(t), n = 0; n < t; n++)
                    r[n] = e.readUInt32BE(4 * n);
                return r
            }
            function s(e) {
                for (; 0 < e.length; e++)
                    e[0] = 0
            }
            function o(e, t, r, i, n) {
                for (var s, o, a, c, u = r[0], f = r[1], h = r[2], l = r[3], d = e[0] ^ t[0], p = e[1] ^ t[1], b = e[2] ^ t[2], g = e[3] ^ t[3], m = 4, y = 1; y < n; y++)
                    s = u[d >>> 24] ^ f[p >>> 16 & 255] ^ h[b >>> 8 & 255] ^ l[255 & g] ^ t[m++],
                    o = u[p >>> 24] ^ f[b >>> 16 & 255] ^ h[g >>> 8 & 255] ^ l[255 & d] ^ t[m++],
                    a = u[b >>> 24] ^ f[g >>> 16 & 255] ^ h[d >>> 8 & 255] ^ l[255 & p] ^ t[m++],
                    c = u[g >>> 24] ^ f[d >>> 16 & 255] ^ h[p >>> 8 & 255] ^ l[255 & b] ^ t[m++],
                    d = s,
                    p = o,
                    b = a,
                    g = c;
                return s = (i[d >>> 24] << 24 | i[p >>> 16 & 255] << 16 | i[b >>> 8 & 255] << 8 | i[255 & g]) ^ t[m++],
                o = (i[p >>> 24] << 24 | i[b >>> 16 & 255] << 16 | i[g >>> 8 & 255] << 8 | i[255 & d]) ^ t[m++],
                a = (i[b >>> 24] << 24 | i[g >>> 16 & 255] << 16 | i[d >>> 8 & 255] << 8 | i[255 & p]) ^ t[m++],
                c = (i[g >>> 24] << 24 | i[d >>> 16 & 255] << 16 | i[p >>> 8 & 255] << 8 | i[255 & b]) ^ t[m++],
                [s >>>= 0, o >>>= 0, a >>>= 0, c >>>= 0]
            }
            var a = [0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54]
              , c = function() {
                for (var e = new Array(256), t = 0; t < 256; t++)
                    e[t] = t < 128 ? t << 1 : t << 1 ^ 283;
                for (var r = [], i = [], n = [[], [], [], []], s = [[], [], [], []], o = 0, a = 0, c = 0; c < 256; ++c) {
                    var u = a ^ a << 1 ^ a << 2 ^ a << 3 ^ a << 4;
                    u = u >>> 8 ^ 255 & u ^ 99,
                    r[o] = u,
                    i[u] = o;
                    var f = e[o]
                      , h = e[f]
                      , l = e[h]
                      , d = 257 * e[u] ^ 16843008 * u;
                    n[0][o] = d << 24 | d >>> 8,
                    n[1][o] = d << 16 | d >>> 16,
                    n[2][o] = d << 8 | d >>> 24,
                    n[3][o] = d,
                    d = 16843009 * l ^ 65537 * h ^ 257 * f ^ 16843008 * o,
                    s[0][u] = d << 24 | d >>> 8,
                    s[1][u] = d << 16 | d >>> 16,
                    s[2][u] = d << 8 | d >>> 24,
                    s[3][u] = d,
                    0 === o ? o = a = 1 : (o = f ^ e[e[e[l ^ f]]],
                    a ^= e[e[a]])
                }
                return {
                    SBOX: r,
                    INV_SBOX: i,
                    SUB_MIX: n,
                    INV_SUB_MIX: s
                }
            }();
            function u(e) {
                this._key = n(e),
                this._reset()
            }
            u.blockSize = 16,
            u.keySize = 32,
            u.prototype.blockSize = u.blockSize,
            u.prototype.keySize = u.keySize,
            u.prototype._reset = function() {
                for (var e = this._key, t = e.length, r = t + 6, i = 4 * (r + 1), n = [], s = 0; s < t; s++)
                    n[s] = e[s];
                for (s = t; s < i; s++) {
                    var o = n[s - 1];
                    s % t == 0 ? (o = o << 8 | o >>> 24,
                    o = c.SBOX[o >>> 24] << 24 | c.SBOX[o >>> 16 & 255] << 16 | c.SBOX[o >>> 8 & 255] << 8 | c.SBOX[255 & o],
                    o ^= a[s / t | 0] << 24) : t > 6 && s % t == 4 && (o = c.SBOX[o >>> 24] << 24 | c.SBOX[o >>> 16 & 255] << 16 | c.SBOX[o >>> 8 & 255] << 8 | c.SBOX[255 & o]),
                    n[s] = n[s - t] ^ o
                }
                for (var u = [], f = 0; f < i; f++) {
                    var h = i - f
                      , l = n[h - (f % 4 ? 0 : 4)];
                    u[f] = f < 4 || h <= 4 ? l : c.INV_SUB_MIX[0][c.SBOX[l >>> 24]] ^ c.INV_SUB_MIX[1][c.SBOX[l >>> 16 & 255]] ^ c.INV_SUB_MIX[2][c.SBOX[l >>> 8 & 255]] ^ c.INV_SUB_MIX[3][c.SBOX[255 & l]]
                }
                this._nRounds = r,
                this._keySchedule = n,
                this._invKeySchedule = u
            }
            ,
            u.prototype.encryptBlockRaw = function(e) {
                return o(e = n(e), this._keySchedule, c.SUB_MIX, c.SBOX, this._nRounds)
            }
            ,
            u.prototype.encryptBlock = function(e) {
                var t = this.encryptBlockRaw(e)
                  , r = i.allocUnsafe(16);
                return r.writeUInt32BE(t[0], 0),
                r.writeUInt32BE(t[1], 4),
                r.writeUInt32BE(t[2], 8),
                r.writeUInt32BE(t[3], 12),
                r
            }
            ,
            u.prototype.decryptBlock = function(e) {
                var t = (e = n(e))[1];
                e[1] = e[3],
                e[3] = t;
                var r = o(e, this._invKeySchedule, c.INV_SUB_MIX, c.INV_SBOX, this._nRounds)
                  , s = i.allocUnsafe(16);
                return s.writeUInt32BE(r[0], 0),
                s.writeUInt32BE(r[3], 4),
                s.writeUInt32BE(r[2], 8),
                s.writeUInt32BE(r[1], 12),
                s
            }
            ,
            u.prototype.scrub = function() {
                s(this._keySchedule),
                s(this._invKeySchedule),
                s(this._key)
            }
            ,
            t.exports.AES = u
        }
        , {
            "safe-buffer": 143
        }],
        20: [function(e, t, r) {
            var i = e("./aes")
              , n = e("safe-buffer").Buffer
              , s = e("cipher-base")
              , o = e("inherits")
              , a = e("./ghash")
              , c = e("buffer-xor")
              , u = e("./incr32");
            function f(e, t, r, o) {
                s.call(this);
                var c = n.alloc(4, 0);
                this._cipher = new i.AES(t);
                var f = this._cipher.encryptBlock(c);
                this._ghash = new a(f),
                r = function(e, t, r) {
                    if (12 === t.length)
                        return e._finID = n.concat([t, n.from([0, 0, 0, 1])]),
                        n.concat([t, n.from([0, 0, 0, 2])]);
                    var i = new a(r)
                      , s = t.length
                      , o = s % 16;
                    i.update(t),
                    o && (o = 16 - o,
                    i.update(n.alloc(o, 0))),
                    i.update(n.alloc(8, 0));
                    var c = 8 * s
                      , f = n.alloc(8);
                    f.writeUIntBE(c, 0, 8),
                    i.update(f),
                    e._finID = i.state;
                    var h = n.from(e._finID);
                    return u(h),
                    h
                }(this, r, f),
                this._prev = n.from(r),
                this._cache = n.allocUnsafe(0),
                this._secCache = n.allocUnsafe(0),
                this._decrypt = o,
                this._alen = 0,
                this._len = 0,
                this._mode = e,
                this._authTag = null,
                this._called = !1
            }
            o(f, s),
            f.prototype._update = function(e) {
                if (!this._called && this._alen) {
                    var t = 16 - this._alen % 16;
                    t < 16 && (t = n.alloc(t, 0),
                    this._ghash.update(t))
                }
                this._called = !0;
                var r = this._mode.encrypt(this, e);
                return this._decrypt ? this._ghash.update(e) : this._ghash.update(r),
                this._len += e.length,
                r
            }
            ,
            f.prototype._final = function() {
                if (this._decrypt && !this._authTag)
                    throw new Error("Unsupported state or unable to authenticate data");
                var e = c(this._ghash.final(8 * this._alen, 8 * this._len), this._cipher.encryptBlock(this._finID));
                if (this._decrypt && function(e, t) {
                    var r = 0;
                    e.length !== t.length && r++;
                    for (var i = Math.min(e.length, t.length), n = 0; n < i; ++n)
                        r += e[n] ^ t[n];
                    return r
                }(e, this._authTag))
                    throw new Error("Unsupported state or unable to authenticate data");
                this._authTag = e,
                this._cipher.scrub()
            }
            ,
            f.prototype.getAuthTag = function() {
                if (this._decrypt || !n.isBuffer(this._authTag))
                    throw new Error("Attempting to get auth tag in unsupported state");
                return this._authTag
            }
            ,
            f.prototype.setAuthTag = function(e) {
                if (!this._decrypt)
                    throw new Error("Attempting to set auth tag in unsupported state");
                this._authTag = e
            }
            ,
            f.prototype.setAAD = function(e) {
                if (this._called)
                    throw new Error("Attempting to set AAD in unsupported state");
                this._ghash.update(e),
                this._alen += e.length
            }
            ,
            t.exports = f
        }
        , {
            "./aes": 19,
            "./ghash": 24,
            "./incr32": 25,
            "buffer-xor": 47,
            "cipher-base": 49,
            inherits: 100,
            "safe-buffer": 143
        }],
        21: [function(e, t, r) {
            var i = e("./encrypter")
              , n = e("./decrypter")
              , s = e("./modes/list.json");
            r.createCipher = r.Cipher = i.createCipher,
            r.createCipheriv = r.Cipheriv = i.createCipheriv,
            r.createDecipher = r.Decipher = n.createDecipher,
            r.createDecipheriv = r.Decipheriv = n.createDecipheriv,
            r.listCiphers = r.getCiphers = function() {
                return Object.keys(s)
            }
        }
        , {
            "./decrypter": 22,
            "./encrypter": 23,
            "./modes/list.json": 33
        }],
        22: [function(e, t, r) {
            var i = e("./authCipher")
              , n = e("safe-buffer").Buffer
              , s = e("./modes")
              , o = e("./streamCipher")
              , a = e("cipher-base")
              , c = e("./aes")
              , u = e("evp_bytestokey");
            function f(e, t, r) {
                a.call(this),
                this._cache = new h,
                this._last = void 0,
                this._cipher = new c.AES(t),
                this._prev = n.from(r),
                this._mode = e,
                this._autopadding = !0
            }
            function h() {
                this.cache = n.allocUnsafe(0)
            }
            function l(e, t, r) {
                var a = s[e.toLowerCase()];
                if (!a)
                    throw new TypeError("invalid suite type");
                if ("string" == typeof r && (r = n.from(r)),
                "GCM" !== a.mode && r.length !== a.iv)
                    throw new TypeError("invalid iv length " + r.length);
                if ("string" == typeof t && (t = n.from(t)),
                t.length !== a.key / 8)
                    throw new TypeError("invalid key length " + t.length);
                return "stream" === a.type ? new o(a.module,t,r,!0) : "auth" === a.type ? new i(a.module,t,r,!0) : new f(a.module,t,r)
            }
            e("inherits")(f, a),
            f.prototype._update = function(e) {
                var t, r;
                this._cache.add(e);
                for (var i = []; t = this._cache.get(this._autopadding); )
                    r = this._mode.decrypt(this, t),
                    i.push(r);
                return n.concat(i)
            }
            ,
            f.prototype._final = function() {
                var e = this._cache.flush();
                if (this._autopadding)
                    return function(e) {
                        var t = e[15];
                        if (t < 1 || t > 16)
                            throw new Error("unable to decrypt data");
                        var r = -1;
                        for (; ++r < t; )
                            if (e[r + (16 - t)] !== t)
                                throw new Error("unable to decrypt data");
                        if (16 === t)
                            return;
                        return e.slice(0, 16 - t)
                    }(this._mode.decrypt(this, e));
                if (e)
                    throw new Error("data not multiple of block length")
            }
            ,
            f.prototype.setAutoPadding = function(e) {
                return this._autopadding = !!e,
                this
            }
            ,
            h.prototype.add = function(e) {
                this.cache = n.concat([this.cache, e])
            }
            ,
            h.prototype.get = function(e) {
                var t;
                if (e) {
                    if (this.cache.length > 16)
                        return t = this.cache.slice(0, 16),
                        this.cache = this.cache.slice(16),
                        t
                } else if (this.cache.length >= 16)
                    return t = this.cache.slice(0, 16),
                    this.cache = this.cache.slice(16),
                    t;
                return null
            }
            ,
            h.prototype.flush = function() {
                if (this.cache.length)
                    return this.cache
            }
            ,
            r.createDecipher = function(e, t) {
                var r = s[e.toLowerCase()];
                if (!r)
                    throw new TypeError("invalid suite type");
                var i = u(t, !1, r.key, r.iv);
                return l(e, i.key, i.iv)
            }
            ,
            r.createDecipheriv = l
        }
        , {
            "./aes": 19,
            "./authCipher": 20,
            "./modes": 32,
            "./streamCipher": 35,
            "cipher-base": 49,
            evp_bytestokey: 84,
            inherits: 100,
            "safe-buffer": 143
        }],
        23: [function(e, t, r) {
            var i = e("./modes")
              , n = e("./authCipher")
              , s = e("safe-buffer").Buffer
              , o = e("./streamCipher")
              , a = e("cipher-base")
              , c = e("./aes")
              , u = e("evp_bytestokey");
            function f(e, t, r) {
                a.call(this),
                this._cache = new l,
                this._cipher = new c.AES(t),
                this._prev = s.from(r),
                this._mode = e,
                this._autopadding = !0
            }
            e("inherits")(f, a),
            f.prototype._update = function(e) {
                var t, r;
                this._cache.add(e);
                for (var i = []; t = this._cache.get(); )
                    r = this._mode.encrypt(this, t),
                    i.push(r);
                return s.concat(i)
            }
            ;
            var h = s.alloc(16, 16);
            function l() {
                this.cache = s.allocUnsafe(0)
            }
            function d(e, t, r) {
                var a = i[e.toLowerCase()];
                if (!a)
                    throw new TypeError("invalid suite type");
                if ("string" == typeof t && (t = s.from(t)),
                t.length !== a.key / 8)
                    throw new TypeError("invalid key length " + t.length);
                if ("string" == typeof r && (r = s.from(r)),
                "GCM" !== a.mode && r.length !== a.iv)
                    throw new TypeError("invalid iv length " + r.length);
                return "stream" === a.type ? new o(a.module,t,r) : "auth" === a.type ? new n(a.module,t,r) : new f(a.module,t,r)
            }
            f.prototype._final = function() {
                var e = this._cache.flush();
                if (this._autopadding)
                    return e = this._mode.encrypt(this, e),
                    this._cipher.scrub(),
                    e;
                if (!e.equals(h))
                    throw this._cipher.scrub(),
                    new Error("data not multiple of block length")
            }
            ,
            f.prototype.setAutoPadding = function(e) {
                return this._autopadding = !!e,
                this
            }
            ,
            l.prototype.add = function(e) {
                this.cache = s.concat([this.cache, e])
            }
            ,
            l.prototype.get = function() {
                if (this.cache.length > 15) {
                    var e = this.cache.slice(0, 16);
                    return this.cache = this.cache.slice(16),
                    e
                }
                return null
            }
            ,
            l.prototype.flush = function() {
                for (var e = 16 - this.cache.length, t = s.allocUnsafe(e), r = -1; ++r < e; )
                    t.writeUInt8(e, r);
                return s.concat([this.cache, t])
            }
            ,
            r.createCipheriv = d,
            r.createCipher = function(e, t) {
                var r = i[e.toLowerCase()];
                if (!r)
                    throw new TypeError("invalid suite type");
                var n = u(t, !1, r.key, r.iv);
                return d(e, n.key, n.iv)
            }
        }
        , {
            "./aes": 19,
            "./authCipher": 20,
            "./modes": 32,
            "./streamCipher": 35,
            "cipher-base": 49,
            evp_bytestokey: 84,
            inherits: 100,
            "safe-buffer": 143
        }],
        24: [function(e, t, r) {
            var i = e("safe-buffer").Buffer
              , n = i.alloc(16, 0);
            function s(e) {
                var t = i.allocUnsafe(16);
                return t.writeUInt32BE(e[0] >>> 0, 0),
                t.writeUInt32BE(e[1] >>> 0, 4),
                t.writeUInt32BE(e[2] >>> 0, 8),
                t.writeUInt32BE(e[3] >>> 0, 12),
                t
            }
            function o(e) {
                this.h = e,
                this.state = i.alloc(16, 0),
                this.cache = i.allocUnsafe(0)
            }
            o.prototype.ghash = function(e) {
                for (var t = -1; ++t < e.length; )
                    this.state[t] ^= e[t];
                this._multiply()
            }
            ,
            o.prototype._multiply = function() {
                for (var e, t, r, i = [(e = this.h).readUInt32BE(0), e.readUInt32BE(4), e.readUInt32BE(8), e.readUInt32BE(12)], n = [0, 0, 0, 0], o = -1; ++o < 128; ) {
                    for (0 != (this.state[~~(o / 8)] & 1 << 7 - o % 8) && (n[0] ^= i[0],
                    n[1] ^= i[1],
                    n[2] ^= i[2],
                    n[3] ^= i[3]),
                    r = 0 != (1 & i[3]),
                    t = 3; t > 0; t--)
                        i[t] = i[t] >>> 1 | (1 & i[t - 1]) << 31;
                    i[0] = i[0] >>> 1,
                    r && (i[0] = i[0] ^ 225 << 24)
                }
                this.state = s(n)
            }
            ,
            o.prototype.update = function(e) {
                var t;
                for (this.cache = i.concat([this.cache, e]); this.cache.length >= 16; )
                    t = this.cache.slice(0, 16),
                    this.cache = this.cache.slice(16),
                    this.ghash(t)
            }
            ,
            o.prototype.final = function(e, t) {
                return this.cache.length && this.ghash(i.concat([this.cache, n], 16)),
                this.ghash(s([0, e, 0, t])),
                this.state
            }
            ,
            t.exports = o
        }
        , {
            "safe-buffer": 143
        }],
        25: [function(e, t, r) {
            t.exports = function(e) {
                for (var t, r = e.length; r--; ) {
                    if (255 !== (t = e.readUInt8(r))) {
                        t++,
                        e.writeUInt8(t, r);
                        break
                    }
                    e.writeUInt8(0, r)
                }
            }
        }
        , {}],
        26: [function(e, t, r) {
            var i = e("buffer-xor");
            r.encrypt = function(e, t) {
                var r = i(t, e._prev);
                return e._prev = e._cipher.encryptBlock(r),
                e._prev
            }
            ,
            r.decrypt = function(e, t) {
                var r = e._prev;
                e._prev = t;
                var n = e._cipher.decryptBlock(t);
                return i(n, r)
            }
        }
        , {
            "buffer-xor": 47
        }],
        27: [function(e, t, r) {
            var i = e("safe-buffer").Buffer
              , n = e("buffer-xor");
            function s(e, t, r) {
                var s = t.length
                  , o = n(t, e._cache);
                return e._cache = e._cache.slice(s),
                e._prev = i.concat([e._prev, r ? t : o]),
                o
            }
            r.encrypt = function(e, t, r) {
                for (var n, o = i.allocUnsafe(0); t.length; ) {
                    if (0 === e._cache.length && (e._cache = e._cipher.encryptBlock(e._prev),
                    e._prev = i.allocUnsafe(0)),
                    !(e._cache.length <= t.length)) {
                        o = i.concat([o, s(e, t, r)]);
                        break
                    }
                    n = e._cache.length,
                    o = i.concat([o, s(e, t.slice(0, n), r)]),
                    t = t.slice(n)
                }
                return o
            }
        }
        , {
            "buffer-xor": 47,
            "safe-buffer": 143
        }],
        28: [function(e, t, r) {
            var i = e("safe-buffer").Buffer;
            function n(e, t, r) {
                for (var i, n, o = -1, a = 0; ++o < 8; )
                    i = t & 1 << 7 - o ? 128 : 0,
                    a += (128 & (n = e._cipher.encryptBlock(e._prev)[0] ^ i)) >> o % 8,
                    e._prev = s(e._prev, r ? i : n);
                return a
            }
            function s(e, t) {
                var r = e.length
                  , n = -1
                  , s = i.allocUnsafe(e.length);
                for (e = i.concat([e, i.from([t])]); ++n < r; )
                    s[n] = e[n] << 1 | e[n + 1] >> 7;
                return s
            }
            r.encrypt = function(e, t, r) {
                for (var s = t.length, o = i.allocUnsafe(s), a = -1; ++a < s; )
                    o[a] = n(e, t[a], r);
                return o
            }
        }
        , {
            "safe-buffer": 143
        }],
        29: [function(e, t, r) {
            var i = e("safe-buffer").Buffer;
            function n(e, t, r) {
                var n = e._cipher.encryptBlock(e._prev)[0] ^ t;
                return e._prev = i.concat([e._prev.slice(1), i.from([r ? t : n])]),
                n
            }
            r.encrypt = function(e, t, r) {
                for (var s = t.length, o = i.allocUnsafe(s), a = -1; ++a < s; )
                    o[a] = n(e, t[a], r);
                return o
            }
        }
        , {
            "safe-buffer": 143
        }],
        30: [function(e, t, r) {
            var i = e("buffer-xor")
              , n = e("safe-buffer").Buffer
              , s = e("../incr32");
            function o(e) {
                var t = e._cipher.encryptBlockRaw(e._prev);
                return s(e._prev),
                t
            }
            r.encrypt = function(e, t) {
                var r = Math.ceil(t.length / 16)
                  , s = e._cache.length;
                e._cache = n.concat([e._cache, n.allocUnsafe(16 * r)]);
                for (var a = 0; a < r; a++) {
                    var c = o(e)
                      , u = s + 16 * a;
                    e._cache.writeUInt32BE(c[0], u + 0),
                    e._cache.writeUInt32BE(c[1], u + 4),
                    e._cache.writeUInt32BE(c[2], u + 8),
                    e._cache.writeUInt32BE(c[3], u + 12)
                }
                var f = e._cache.slice(0, t.length);
                return e._cache = e._cache.slice(t.length),
                i(t, f)
            }
        }
        , {
            "../incr32": 25,
            "buffer-xor": 47,
            "safe-buffer": 143
        }],
        31: [function(e, t, r) {
            r.encrypt = function(e, t) {
                return e._cipher.encryptBlock(t)
            }
            ,
            r.decrypt = function(e, t) {
                return e._cipher.decryptBlock(t)
            }
        }
        , {}],
        32: [function(e, t, r) {
            var i = {
                ECB: e("./ecb"),
                CBC: e("./cbc"),
                CFB: e("./cfb"),
                CFB8: e("./cfb8"),
                CFB1: e("./cfb1"),
                OFB: e("./ofb"),
                CTR: e("./ctr"),
                GCM: e("./ctr")
            }
              , n = e("./list.json");
            for (var s in n)
                n[s].module = i[n[s].mode];
            t.exports = n
        }
        , {
            "./cbc": 26,
            "./cfb": 27,
            "./cfb1": 28,
            "./cfb8": 29,
            "./ctr": 30,
            "./ecb": 31,
            "./list.json": 33,
            "./ofb": 34
        }],
        33: [function(e, t, r) {
            t.exports = {
                "aes-128-ecb": {
                    cipher: "AES",
                    key: 128,
                    iv: 0,
                    mode: "ECB",
                    type: "block"
                },
                "aes-192-ecb": {
                    cipher: "AES",
                    key: 192,
                    iv: 0,
                    mode: "ECB",
                    type: "block"
                },
                "aes-256-ecb": {
                    cipher: "AES",
                    key: 256,
                    iv: 0,
                    mode: "ECB",
                    type: "block"
                },
                "aes-128-cbc": {
                    cipher: "AES",
                    key: 128,
                    iv: 16,
                    mode: "CBC",
                    type: "block"
                },
                "aes-192-cbc": {
                    cipher: "AES",
                    key: 192,
                    iv: 16,
                    mode: "CBC",
                    type: "block"
                },
                "aes-256-cbc": {
                    cipher: "AES",
                    key: 256,
                    iv: 16,
                    mode: "CBC",
                    type: "block"
                },
                aes128: {
                    cipher: "AES",
                    key: 128,
                    iv: 16,
                    mode: "CBC",
                    type: "block"
                },
                aes192: {
                    cipher: "AES",
                    key: 192,
                    iv: 16,
                    mode: "CBC",
                    type: "block"
                },
                aes256: {
                    cipher: "AES",
                    key: 256,
                    iv: 16,
                    mode: "CBC",
                    type: "block"
                },
                "aes-128-cfb": {
                    cipher: "AES",
                    key: 128,
                    iv: 16,
                    mode: "CFB",
                    type: "stream"
                },
                "aes-192-cfb": {
                    cipher: "AES",
                    key: 192,
                    iv: 16,
                    mode: "CFB",
                    type: "stream"
                },
                "aes-256-cfb": {
                    cipher: "AES",
                    key: 256,
                    iv: 16,
                    mode: "CFB",
                    type: "stream"
                },
                "aes-128-cfb8": {
                    cipher: "AES",
                    key: 128,
                    iv: 16,
                    mode: "CFB8",
                    type: "stream"
                },
                "aes-192-cfb8": {
                    cipher: "AES",
                    key: 192,
                    iv: 16,
                    mode: "CFB8",
                    type: "stream"
                },
                "aes-256-cfb8": {
                    cipher: "AES",
                    key: 256,
                    iv: 16,
                    mode: "CFB8",
                    type: "stream"
                },
                "aes-128-cfb1": {
                    cipher: "AES",
                    key: 128,
                    iv: 16,
                    mode: "CFB1",
                    type: "stream"
                },
                "aes-192-cfb1": {
                    cipher: "AES",
                    key: 192,
                    iv: 16,
                    mode: "CFB1",
                    type: "stream"
                },
                "aes-256-cfb1": {
                    cipher: "AES",
                    key: 256,
                    iv: 16,
                    mode: "CFB1",
                    type: "stream"
                },
                "aes-128-ofb": {
                    cipher: "AES",
                    key: 128,
                    iv: 16,
                    mode: "OFB",
                    type: "stream"
                },
                "aes-192-ofb": {
                    cipher: "AES",
                    key: 192,
                    iv: 16,
                    mode: "OFB",
                    type: "stream"
                },
                "aes-256-ofb": {
                    cipher: "AES",
                    key: 256,
                    iv: 16,
                    mode: "OFB",
                    type: "stream"
                },
                "aes-128-ctr": {
                    cipher: "AES",
                    key: 128,
                    iv: 16,
                    mode: "CTR",
                    type: "stream"
                },
                "aes-192-ctr": {
                    cipher: "AES",
                    key: 192,
                    iv: 16,
                    mode: "CTR",
                    type: "stream"
                },
                "aes-256-ctr": {
                    cipher: "AES",
                    key: 256,
                    iv: 16,
                    mode: "CTR",
                    type: "stream"
                },
                "aes-128-gcm": {
                    cipher: "AES",
                    key: 128,
                    iv: 12,
                    mode: "GCM",
                    type: "auth"
                },
                "aes-192-gcm": {
                    cipher: "AES",
                    key: 192,
                    iv: 12,
                    mode: "GCM",
                    type: "auth"
                },
                "aes-256-gcm": {
                    cipher: "AES",
                    key: 256,
                    iv: 12,
                    mode: "GCM",
                    type: "auth"
                }
            }
        }
        , {}],
        34: [function(e, t, r) {
            (function(t) {
                var i = e("buffer-xor");
                function n(e) {
                    return e._prev = e._cipher.encryptBlock(e._prev),
                    e._prev
                }
                r.encrypt = function(e, r) {
                    for (; e._cache.length < r.length; )
                        e._cache = t.concat([e._cache, n(e)]);
                    var s = e._cache.slice(0, r.length);
                    return e._cache = e._cache.slice(r.length),
                    i(r, s)
                }
            }
            ).call(this, e("buffer").Buffer)
        }
        , {
            buffer: 48,
            "buffer-xor": 47
        }],
        35: [function(e, t, r) {
            var i = e("./aes")
              , n = e("safe-buffer").Buffer
              , s = e("cipher-base");
            function o(e, t, r, o) {
                s.call(this),
                this._cipher = new i.AES(t),
                this._prev = n.from(r),
                this._cache = n.allocUnsafe(0),
                this._secCache = n.allocUnsafe(0),
                this._decrypt = o,
                this._mode = e
            }
            e("inherits")(o, s),
            o.prototype._update = function(e) {
                return this._mode.encrypt(this, e, this._decrypt)
            }
            ,
            o.prototype._final = function() {
                this._cipher.scrub()
            }
            ,
            t.exports = o
        }
        , {
            "./aes": 19,
            "cipher-base": 49,
            inherits: 100,
            "safe-buffer": 143
        }],
        36: [function(e, t, r) {
            var i = e("browserify-des")
              , n = e("browserify-aes/browser")
              , s = e("browserify-aes/modes")
              , o = e("browserify-des/modes")
              , a = e("evp_bytestokey");
            function c(e, t, r) {
                if (e = e.toLowerCase(),
                s[e])
                    return n.createCipheriv(e, t, r);
                if (o[e])
                    return new i({
                        key: t,
                        iv: r,
                        mode: e
                    });
                throw new TypeError("invalid suite type")
            }
            function u(e, t, r) {
                if (e = e.toLowerCase(),
                s[e])
                    return n.createDecipheriv(e, t, r);
                if (o[e])
                    return new i({
                        key: t,
                        iv: r,
                        mode: e,
                        decrypt: !0
                    });
                throw new TypeError("invalid suite type")
            }
            r.createCipher = r.Cipher = function(e, t) {
                var r, i;
                if (e = e.toLowerCase(),
                s[e])
                    r = s[e].key,
                    i = s[e].iv;
                else {
                    if (!o[e])
                        throw new TypeError("invalid suite type");
                    r = 8 * o[e].key,
                    i = o[e].iv
                }
                var n = a(t, !1, r, i);
                return c(e, n.key, n.iv)
            }
            ,
            r.createCipheriv = r.Cipheriv = c,
            r.createDecipher = r.Decipher = function(e, t) {
                var r, i;
                if (e = e.toLowerCase(),
                s[e])
                    r = s[e].key,
                    i = s[e].iv;
                else {
                    if (!o[e])
                        throw new TypeError("invalid suite type");
                    r = 8 * o[e].key,
                    i = o[e].iv
                }
                var n = a(t, !1, r, i);
                return u(e, n.key, n.iv)
            }
            ,
            r.createDecipheriv = r.Decipheriv = u,
            r.listCiphers = r.getCiphers = function() {
                return Object.keys(o).concat(n.getCiphers())
            }
        }
        , {
            "browserify-aes/browser": 21,
            "browserify-aes/modes": 32,
            "browserify-des": 37,
            "browserify-des/modes": 38,
            evp_bytestokey: 84
        }],
        37: [function(e, t, r) {
            var i = e("cipher-base")
              , n = e("des.js")
              , s = e("inherits")
              , o = e("safe-buffer").Buffer
              , a = {
                "des-ede3-cbc": n.CBC.instantiate(n.EDE),
                "des-ede3": n.EDE,
                "des-ede-cbc": n.CBC.instantiate(n.EDE),
                "des-ede": n.EDE,
                "des-cbc": n.CBC.instantiate(n.DES),
                "des-ecb": n.DES
            };
            function c(e) {
                i.call(this);
                var t, r = e.mode.toLowerCase(), n = a[r];
                t = e.decrypt ? "decrypt" : "encrypt";
                var s = e.key;
                o.isBuffer(s) || (s = o.from(s)),
                "des-ede" !== r && "des-ede-cbc" !== r || (s = o.concat([s, s.slice(0, 8)]));
                var c = e.iv;
                o.isBuffer(c) || (c = o.from(c)),
                this._des = n.create({
                    key: s,
                    iv: c,
                    type: t
                })
            }
            a.des = a["des-cbc"],
            a.des3 = a["des-ede3-cbc"],
            t.exports = c,
            s(c, i),
            c.prototype._update = function(e) {
                return o.from(this._des.update(e))
            }
            ,
            c.prototype._final = function() {
                return o.from(this._des.final())
            }
        }
        , {
            "cipher-base": 49,
            "des.js": 57,
            inherits: 100,
            "safe-buffer": 143
        }],
        38: [function(e, t, r) {
            r["des-ecb"] = {
                key: 8,
                iv: 0
            },
            r["des-cbc"] = r.des = {
                key: 8,
                iv: 8
            },
            r["des-ede3-cbc"] = r.des3 = {
                key: 24,
                iv: 8
            },
            r["des-ede3"] = {
                key: 24,
                iv: 0
            },
            r["des-ede-cbc"] = {
                key: 16,
                iv: 8
            },
            r["des-ede"] = {
                key: 16,
                iv: 0
            }
        }
        , {}],
        39: [function(e, t, r) {
            (function(r) {
                var i = e("bn.js")
                  , n = e("randombytes");
                function s(e, t) {
                    var n = function(e) {
                        var t = o(e);
                        return {
                            blinder: t.toRed(i.mont(e.modulus)).redPow(new i(e.publicExponent)).fromRed(),
                            unblinder: t.invm(e.modulus)
                        }
                    }(t)
                      , s = t.modulus.byteLength()
                      , a = (i.mont(t.modulus),
                    new i(e).mul(n.blinder).umod(t.modulus))
                      , c = a.toRed(i.mont(t.prime1))
                      , u = a.toRed(i.mont(t.prime2))
                      , f = t.coefficient
                      , h = t.prime1
                      , l = t.prime2
                      , d = c.redPow(t.exponent1)
                      , p = u.redPow(t.exponent2);
                    d = d.fromRed(),
                    p = p.fromRed();
                    var b = d.isub(p).imul(f).umod(h);
                    return b.imul(l),
                    p.iadd(b),
                    new r(p.imul(n.unblinder).umod(t.modulus).toArray(!1, s))
                }
                function o(e) {
                    for (var t = e.modulus.byteLength(), r = new i(n(t)); r.cmp(e.modulus) >= 0 || !r.umod(e.prime1) || !r.umod(e.prime2); )
                        r = new i(n(t));
                    return r
                }
                t.exports = s,
                s.getr = o
            }
            ).call(this, e("buffer").Buffer)
        }
        , {
            "bn.js": 16,
            buffer: 48,
            randombytes: 125
        }],
        40: [function(e, t, r) {
            t.exports = e("./browser/algorithms.json")
        }
        , {
            "./browser/algorithms.json": 41
        }],
        41: [function(e, t, r) {
            t.exports = {
                sha224WithRSAEncryption: {
                    sign: "rsa",
                    hash: "sha224",
                    id: "302d300d06096086480165030402040500041c"
                },
                "RSA-SHA224": {
                    sign: "ecdsa/rsa",
                    hash: "sha224",
                    id: "302d300d06096086480165030402040500041c"
                },
                sha256WithRSAEncryption: {
                    sign: "rsa",
                    hash: "sha256",
                    id: "3031300d060960864801650304020105000420"
                },
                "RSA-SHA256": {
                    sign: "ecdsa/rsa",
                    hash: "sha256",
                    id: "3031300d060960864801650304020105000420"
                },
                sha384WithRSAEncryption: {
                    sign: "rsa",
                    hash: "sha384",
                    id: "3041300d060960864801650304020205000430"
                },
                "RSA-SHA384": {
                    sign: "ecdsa/rsa",
                    hash: "sha384",
                    id: "3041300d060960864801650304020205000430"
                },
                sha512WithRSAEncryption: {
                    sign: "rsa",
                    hash: "sha512",
                    id: "3051300d060960864801650304020305000440"
                },
                "RSA-SHA512": {
                    sign: "ecdsa/rsa",
                    hash: "sha512",
                    id: "3051300d060960864801650304020305000440"
                },
                "RSA-SHA1": {
                    sign: "rsa",
                    hash: "sha1",
                    id: "3021300906052b0e03021a05000414"
                },
                "ecdsa-with-SHA1": {
                    sign: "ecdsa",
                    hash: "sha1",
                    id: ""
                },
                sha256: {
                    sign: "ecdsa",
                    hash: "sha256",
                    id: ""
                },
                sha224: {
                    sign: "ecdsa",
                    hash: "sha224",
                    id: ""
                },
                sha384: {
                    sign: "ecdsa",
                    hash: "sha384",
                    id: ""
                },
                sha512: {
                    sign: "ecdsa",
                    hash: "sha512",
                    id: ""
                },
                "DSA-SHA": {
                    sign: "dsa",
                    hash: "sha1",
                    id: ""
                },
                "DSA-SHA1": {
                    sign: "dsa",
                    hash: "sha1",
                    id: ""
                },
                DSA: {
                    sign: "dsa",
                    hash: "sha1",
                    id: ""
                },
                "DSA-WITH-SHA224": {
                    sign: "dsa",
                    hash: "sha224",
                    id: ""
                },
                "DSA-SHA224": {
                    sign: "dsa",
                    hash: "sha224",
                    id: ""
                },
                "DSA-WITH-SHA256": {
                    sign: "dsa",
                    hash: "sha256",
                    id: ""
                },
                "DSA-SHA256": {
                    sign: "dsa",
                    hash: "sha256",
                    id: ""
                },
                "DSA-WITH-SHA384": {
                    sign: "dsa",
                    hash: "sha384",
                    id: ""
                },
                "DSA-SHA384": {
                    sign: "dsa",
                    hash: "sha384",
                    id: ""
                },
                "DSA-WITH-SHA512": {
                    sign: "dsa",
                    hash: "sha512",
                    id: ""
                },
                "DSA-SHA512": {
                    sign: "dsa",
                    hash: "sha512",
                    id: ""
                },
                "DSA-RIPEMD160": {
                    sign: "dsa",
                    hash: "rmd160",
                    id: ""
                },
                ripemd160WithRSA: {
                    sign: "rsa",
                    hash: "rmd160",
                    id: "3021300906052b2403020105000414"
                },
                "RSA-RIPEMD160": {
                    sign: "rsa",
                    hash: "rmd160",
                    id: "3021300906052b2403020105000414"
                },
                md5WithRSAEncryption: {
                    sign: "rsa",
                    hash: "md5",
                    id: "3020300c06082a864886f70d020505000410"
                },
                "RSA-MD5": {
                    sign: "rsa",
                    hash: "md5",
                    id: "3020300c06082a864886f70d020505000410"
                }
            }
        }
        , {}],
        42: [function(e, t, r) {
            t.exports = {
                "1.3.132.0.10": "secp256k1",
                "1.3.132.0.33": "p224",
                "1.2.840.10045.3.1.1": "p192",
                "1.2.840.10045.3.1.7": "p256",
                "1.3.132.0.34": "p384",
                "1.3.132.0.35": "p521"
            }
        }
        , {}],
        43: [function(e, t, r) {
            (function(r) {
                var i = e("create-hash")
                  , n = e("stream")
                  , s = e("inherits")
                  , o = e("./sign")
                  , a = e("./verify")
                  , c = e("./algorithms.json");
                function u(e) {
                    n.Writable.call(this);
                    var t = c[e];
                    if (!t)
                        throw new Error("Unknown message digest");
                    this._hashType = t.hash,
                    this._hash = i(t.hash),
                    this._tag = t.id,
                    this._signType = t.sign
                }
                function f(e) {
                    n.Writable.call(this);
                    var t = c[e];
                    if (!t)
                        throw new Error("Unknown message digest");
                    this._hash = i(t.hash),
                    this._tag = t.id,
                    this._signType = t.sign
                }
                function h(e) {
                    return new u(e)
                }
                function l(e) {
                    return new f(e)
                }
                Object.keys(c).forEach((function(e) {
                    c[e].id = new r(c[e].id,"hex"),
                    c[e.toLowerCase()] = c[e]
                }
                )),
                s(u, n.Writable),
                u.prototype._write = function(e, t, r) {
                    this._hash.update(e),
                    r()
                }
                ,
                u.prototype.update = function(e, t) {
                    return "string" == typeof e && (e = new r(e,t)),
                    this._hash.update(e),
                    this
                }
                ,
                u.prototype.sign = function(e, t) {
                    this.end();
                    var r = this._hash.digest()
                      , i = o(r, e, this._hashType, this._signType, this._tag);
                    return t ? i.toString(t) : i
                }
                ,
                s(f, n.Writable),
                f.prototype._write = function(e, t, r) {
                    this._hash.update(e),
                    r()
                }
                ,
                f.prototype.update = function(e, t) {
                    return "string" == typeof e && (e = new r(e,t)),
                    this._hash.update(e),
                    this
                }
                ,
                f.prototype.verify = function(e, t, i) {
                    "string" == typeof t && (t = new r(t,i)),
                    this.end();
                    var n = this._hash.digest();
                    return a(t, n, e, this._signType, this._tag)
                }
                ,
                t.exports = {
                    Sign: h,
                    Verify: l,
                    createSign: h,
                    createVerify: l
                }
            }
            ).call(this, e("buffer").Buffer)
        }
        , {
            "./algorithms.json": 41,
            "./sign": 44,
            "./verify": 45,
            buffer: 48,
            "create-hash": 52,
            inherits: 100,
            stream: 152
        }],
        44: [function(e, t, r) {
            (function(r) {
                var i = e("create-hmac")
                  , n = e("browserify-rsa")
                  , s = e("elliptic").ec
                  , o = e("bn.js")
                  , a = e("parse-asn1")
                  , c = e("./curves.json");
                function u(e, t, n, s) {
                    if ((e = new r(e.toArray())).length < t.byteLength()) {
                        var o = new r(t.byteLength() - e.length);
                        o.fill(0),
                        e = r.concat([o, e])
                    }
                    var a = n.length
                      , c = function(e, t) {
                        e = (e = f(e, t)).mod(t);
                        var i = new r(e.toArray());
                        if (i.length < t.byteLength()) {
                            var n = new r(t.byteLength() - i.length);
                            n.fill(0),
                            i = r.concat([n, i])
                        }
                        return i
                    }(n, t)
                      , u = new r(a);
                    u.fill(1);
                    var h = new r(a);
                    return h.fill(0),
                    h = i(s, h).update(u).update(new r([0])).update(e).update(c).digest(),
                    u = i(s, h).update(u).digest(),
                    {
                        k: h = i(s, h).update(u).update(new r([1])).update(e).update(c).digest(),
                        v: u = i(s, h).update(u).digest()
                    }
                }
                function f(e, t) {
                    var r = new o(e)
                      , i = (e.length << 3) - t.bitLength();
                    return i > 0 && r.ishrn(i),
                    r
                }
                function h(e, t, n) {
                    var s, o;
                    do {
                        for (s = new r(0); 8 * s.length < e.bitLength(); )
                            t.v = i(n, t.k).update(t.v).digest(),
                            s = r.concat([s, t.v]);
                        o = f(s, e),
                        t.k = i(n, t.k).update(t.v).update(new r([0])).digest(),
                        t.v = i(n, t.k).update(t.v).digest()
                    } while (-1 !== o.cmp(e));return o
                }
                function l(e, t, r, i) {
                    return e.toRed(o.mont(r)).redPow(t).fromRed().mod(i)
                }
                t.exports = function(e, t, i, d, p) {
                    var b = a(t);
                    if (b.curve) {
                        if ("ecdsa" !== d && "ecdsa/rsa" !== d)
                            throw new Error("wrong private key type");
                        return function(e, t) {
                            var i = c[t.curve.join(".")];
                            if (!i)
                                throw new Error("unknown curve " + t.curve.join("."));
                            var n = new s(i).keyFromPrivate(t.privateKey).sign(e);
                            return new r(n.toDER())
                        }(e, b)
                    }
                    if ("dsa" === b.type) {
                        if ("dsa" !== d)
                            throw new Error("wrong private key type");
                        return function(e, t, i) {
                            var n, s = t.params.priv_key, a = t.params.p, c = t.params.q, d = t.params.g, p = new o(0), b = f(e, c).mod(c), g = !1, m = u(s, c, e, i);
                            for (; !1 === g; )
                                n = h(c, m, i),
                                p = l(d, n, a, c),
                                0 === (g = n.invm(c).imul(b.add(s.mul(p))).mod(c)).cmpn(0) && (g = !1,
                                p = new o(0));
                            return function(e, t) {
                                e = e.toArray(),
                                t = t.toArray(),
                                128 & e[0] && (e = [0].concat(e));
                                128 & t[0] && (t = [0].concat(t));
                                var i = [48, e.length + t.length + 4, 2, e.length];
                                return i = i.concat(e, [2, t.length], t),
                                new r(i)
                            }(p, g)
                        }(e, b, i)
                    }
                    if ("rsa" !== d && "ecdsa/rsa" !== d)
                        throw new Error("wrong private key type");
                    e = r.concat([p, e]);
                    for (var g = b.modulus.byteLength(), m = [0, 1]; e.length + m.length + 1 < g; )
                        m.push(255);
                    m.push(0);
                    for (var y = -1; ++y < e.length; )
                        m.push(e[y]);
                    return n(m, b)
                }
                ,
                t.exports.getKey = u,
                t.exports.makeKey = h
            }
            ).call(this, e("buffer").Buffer)
        }
        , {
            "./curves.json": 42,
            "bn.js": 16,
            "browserify-rsa": 39,
            buffer: 48,
            "create-hmac": 54,
            elliptic: 67,
            "parse-asn1": 111
        }],
        45: [function(e, t, r) {
            (function(r) {
                var i = e("bn.js")
                  , n = e("elliptic").ec
                  , s = e("parse-asn1")
                  , o = e("./curves.json");
                function a(e, t) {
                    if (e.cmpn(0) <= 0)
                        throw new Error("invalid sig");
                    if (e.cmp(t) >= t)
                        throw new Error("invalid sig")
                }
                t.exports = function(e, t, c, u, f) {
                    var h = s(c);
                    if ("ec" === h.type) {
                        if ("ecdsa" !== u && "ecdsa/rsa" !== u)
                            throw new Error("wrong public key type");
                        return function(e, t, r) {
                            var i = o[r.data.algorithm.curve.join(".")];
                            if (!i)
                                throw new Error("unknown curve " + r.data.algorithm.curve.join("."));
                            var s = new n(i)
                              , a = r.data.subjectPrivateKey.data;
                            return s.verify(t, e, a)
                        }(e, t, h)
                    }
                    if ("dsa" === h.type) {
                        if ("dsa" !== u)
                            throw new Error("wrong public key type");
                        return function(e, t, r) {
                            var n = r.data.p
                              , o = r.data.q
                              , c = r.data.g
                              , u = r.data.pub_key
                              , f = s.signature.decode(e, "der")
                              , h = f.s
                              , l = f.r;
                            a(h, o),
                            a(l, o);
                            var d = i.mont(n)
                              , p = h.invm(o);
                            return 0 === c.toRed(d).redPow(new i(t).mul(p).mod(o)).fromRed().mul(u.toRed(d).redPow(l.mul(p).mod(o)).fromRed()).mod(n).mod(o).cmp(l)
                        }(e, t, h)
                    }
                    if ("rsa" !== u && "ecdsa/rsa" !== u)
                        throw new Error("wrong public key type");
                    t = r.concat([f, t]);
                    for (var l = h.modulus.byteLength(), d = [1], p = 0; t.length + d.length + 2 < l; )
                        d.push(255),
                        p++;
                    d.push(0);
                    for (var b = -1; ++b < t.length; )
                        d.push(t[b]);
                    d = new r(d);
                    var g = i.mont(h.modulus);
                    e = (e = new i(e).toRed(g)).redPow(new i(h.publicExponent)),
                    e = new r(e.fromRed().toArray());
                    var m = p < 8 ? 1 : 0;
                    for (l = Math.min(e.length, d.length),
                    e.length !== d.length && (m = 1),
                    b = -1; ++b < l; )
                        m |= e[b] ^ d[b];
                    return 0 === m
                }
            }
            ).call(this, e("buffer").Buffer)
        }
        , {
            "./curves.json": 42,
            "bn.js": 16,
            buffer: 48,
            elliptic: 67,
            "parse-asn1": 111
        }],
        46: [function(e, t, r) {
            arguments[4][18][0].apply(r, arguments)
        }
        , {
            dup: 18
        }],
        47: [function(e, t, r) {
            (function(e) {
                t.exports = function(t, r) {
                    for (var i = Math.min(t.length, r.length), n = new e(i), s = 0; s < i; ++s)
                        n[s] = t[s] ^ r[s];
                    return n
                }
            }
            ).call(this, e("buffer").Buffer)
        }
        , {
            buffer: 48
        }],
        48: [function(e, t, r) {
            (function(t) {
                /*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
                "use strict";
                var i = e("base64-js")
                  , n = e("ieee754")
                  , s = "function" == typeof Symbol && "function" == typeof Symbol.for ? Symbol.for("nodejs.util.inspect.custom") : null;
                r.Buffer = t,
                r.SlowBuffer = function(e) {
                    +e != e && (e = 0);
                    return t.alloc(+e)
                }
                ,
                r.INSPECT_MAX_BYTES = 50;
                var o = 2147483647;
                function a(e) {
                    if (e > o)
                        throw new RangeError('The value "' + e + '" is invalid for option "size"');
                    var r = new Uint8Array(e);
                    return Object.setPrototypeOf(r, t.prototype),
                    r
                }
                function t(e, t, r) {
                    if ("number" == typeof e) {
                        if ("string" == typeof t)
                            throw new TypeError('The "string" argument must be of type string. Received type number');
                        return f(e)
                    }
                    return c(e, t, r)
                }
                function c(e, r, i) {
                    if ("string" == typeof e)
                        return function(e, r) {
                            "string" == typeof r && "" !== r || (r = "utf8");
                            if (!t.isEncoding(r))
                                throw new TypeError("Unknown encoding: " + r);
                            var i = 0 | d(e, r)
                              , n = a(i)
                              , s = n.write(e, r);
                            s !== i && (n = n.slice(0, s));
                            return n
                        }(e, r);
                    if (ArrayBuffer.isView(e))
                        return h(e);
                    if (null == e)
                        throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof e);
                    if (K(e, ArrayBuffer) || e && K(e.buffer, ArrayBuffer))
                        return function(e, r, i) {
                            if (r < 0 || e.byteLength < r)
                                throw new RangeError('"offset" is outside of buffer bounds');
                            if (e.byteLength < r + (i || 0))
                                throw new RangeError('"length" is outside of buffer bounds');
                            var n;
                            n = void 0 === r && void 0 === i ? new Uint8Array(e) : void 0 === i ? new Uint8Array(e,r) : new Uint8Array(e,r,i);
                            return Object.setPrototypeOf(n, t.prototype),
                            n
                        }(e, r, i);
                    if ("number" == typeof e)
                        throw new TypeError('The "value" argument must not be of type number. Received type number');
                    var n = e.valueOf && e.valueOf();
                    if (null != n && n !== e)
                        return t.from(n, r, i);
                    var s = function(e) {
                        if (t.isBuffer(e)) {
                            var r = 0 | l(e.length)
                              , i = a(r);
                            return 0 === i.length ? i : (e.copy(i, 0, 0, r),
                            i)
                        }
                        if (void 0 !== e.length)
                            return "number" != typeof e.length || q(e.length) ? a(0) : h(e);
                        if ("Buffer" === e.type && Array.isArray(e.data))
                            return h(e.data)
                    }(e);
                    if (s)
                        return s;
                    if ("undefined" != typeof Symbol && null != Symbol.toPrimitive && "function" == typeof e[Symbol.toPrimitive])
                        return t.from(e[Symbol.toPrimitive]("string"), r, i);
                    throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof e)
                }
                function u(e) {
                    if ("number" != typeof e)
                        throw new TypeError('"size" argument must be of type number');
                    if (e < 0)
                        throw new RangeError('The value "' + e + '" is invalid for option "size"')
                }
                function f(e) {
                    return u(e),
                    a(e < 0 ? 0 : 0 | l(e))
                }
                function h(e) {
                    for (var t = e.length < 0 ? 0 : 0 | l(e.length), r = a(t), i = 0; i < t; i += 1)
                        r[i] = 255 & e[i];
                    return r
                }
                function l(e) {
                    if (e >= o)
                        throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + o.toString(16) + " bytes");
                    return 0 | e
                }
                function d(e, r) {
                    if (t.isBuffer(e))
                        return e.length;
                    if (ArrayBuffer.isView(e) || K(e, ArrayBuffer))
                        return e.byteLength;
                    if ("string" != typeof e)
                        throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof e);
                    var i = e.length
                      , n = arguments.length > 2 && !0 === arguments[2];
                    if (!n && 0 === i)
                        return 0;
                    for (var s = !1; ; )
                        switch (r) {
                        case "ascii":
                        case "latin1":
                        case "binary":
                            return i;
                        case "utf8":
                        case "utf-8":
                            return O(e).length;
                        case "ucs2":
                        case "ucs-2":
                        case "utf16le":
                        case "utf-16le":
                            return 2 * i;
                        case "hex":
                            return i >>> 1;
                        case "base64":
                            return j(e).length;
                        default:
                            if (s)
                                return n ? -1 : O(e).length;
                            r = ("" + r).toLowerCase(),
                            s = !0
                        }
                }
                function p(e, t, r) {
                    var i = !1;
                    if ((void 0 === t || t < 0) && (t = 0),
                    t > this.length)
                        return "";
                    if ((void 0 === r || r > this.length) && (r = this.length),
                    r <= 0)
                        return "";
                    if ((r >>>= 0) <= (t >>>= 0))
                        return "";
                    for (e || (e = "utf8"); ; )
                        switch (e) {
                        case "hex":
                            return B(this, t, r);
                        case "utf8":
                        case "utf-8":
                            return A(this, t, r);
                        case "ascii":
                            return I(this, t, r);
                        case "latin1":
                        case "binary":
                            return T(this, t, r);
                        case "base64":
                            return k(this, t, r);
                        case "ucs2":
                        case "ucs-2":
                        case "utf16le":
                        case "utf-16le":
                            return M(this, t, r);
                        default:
                            if (i)
                                throw new TypeError("Unknown encoding: " + e);
                            e = (e + "").toLowerCase(),
                            i = !0
                        }
                }
                function b(e, t, r) {
                    var i = e[t];
                    e[t] = e[r],
                    e[r] = i
                }
                function g(e, r, i, n, s) {
                    if (0 === e.length)
                        return -1;
                    if ("string" == typeof i ? (n = i,
                    i = 0) : i > 2147483647 ? i = 2147483647 : i < -2147483648 && (i = -2147483648),
                    q(i = +i) && (i = s ? 0 : e.length - 1),
                    i < 0 && (i = e.length + i),
                    i >= e.length) {
                        if (s)
                            return -1;
                        i = e.length - 1
                    } else if (i < 0) {
                        if (!s)
                            return -1;
                        i = 0
                    }
                    if ("string" == typeof r && (r = t.from(r, n)),
                    t.isBuffer(r))
                        return 0 === r.length ? -1 : m(e, r, i, n, s);
                    if ("number" == typeof r)
                        return r &= 255,
                        "function" == typeof Uint8Array.prototype.indexOf ? s ? Uint8Array.prototype.indexOf.call(e, r, i) : Uint8Array.prototype.lastIndexOf.call(e, r, i) : m(e, [r], i, n, s);
                    throw new TypeError("val must be string, number or Buffer")
                }
                function m(e, t, r, i, n) {
                    var s, o = 1, a = e.length, c = t.length;
                    if (void 0 !== i && ("ucs2" === (i = String(i).toLowerCase()) || "ucs-2" === i || "utf16le" === i || "utf-16le" === i)) {
                        if (e.length < 2 || t.length < 2)
                            return -1;
                        o = 2,
                        a /= 2,
                        c /= 2,
                        r /= 2
                    }
                    function u(e, t) {
                        return 1 === o ? e[t] : e.readUInt16BE(t * o)
                    }
                    if (n) {
                        var f = -1;
                        for (s = r; s < a; s++)
                            if (u(e, s) === u(t, -1 === f ? 0 : s - f)) {
                                if (-1 === f && (f = s),
                                s - f + 1 === c)
                                    return f * o
                            } else
                                -1 !== f && (s -= s - f),
                                f = -1
                    } else
                        for (r + c > a && (r = a - c),
                        s = r; s >= 0; s--) {
                            for (var h = !0, l = 0; l < c; l++)
                                if (u(e, s + l) !== u(t, l)) {
                                    h = !1;
                                    break
                                }
                            if (h)
                                return s
                        }
                    return -1
                }
                function y(e, t, r, i) {
                    r = Number(r) || 0;
                    var n = e.length - r;
                    i ? (i = Number(i)) > n && (i = n) : i = n;
                    var s = t.length;
                    i > s / 2 && (i = s / 2);
                    for (var o = 0; o < i; ++o) {
                        var a = parseInt(t.substr(2 * o, 2), 16);
                        if (q(a))
                            return o;
                        e[r + o] = a
                    }
                    return o
                }
                function v(e, t, r, i) {
                    return U(O(t, e.length - r), e, r, i)
                }
                function w(e, t, r, i) {
                    return U(function(e) {
                        for (var t = [], r = 0; r < e.length; ++r)
                            t.push(255 & e.charCodeAt(r));
                        return t
                    }(t), e, r, i)
                }
                function E(e, t, r, i) {
                    return w(e, t, r, i)
                }
                function _(e, t, r, i) {
                    return U(j(t), e, r, i)
                }
                function S(e, t, r, i) {
                    return U(function(e, t) {
                        for (var r, i, n, s = [], o = 0; o < e.length && !((t -= 2) < 0); ++o)
                            r = e.charCodeAt(o),
                            i = r >> 8,
                            n = r % 256,
                            s.push(n),
                            s.push(i);
                        return s
                    }(t, e.length - r), e, r, i)
                }
                function k(e, t, r) {
                    return 0 === t && r === e.length ? i.fromByteArray(e) : i.fromByteArray(e.slice(t, r))
                }
                function A(e, t, r) {
                    r = Math.min(e.length, r);
                    for (var i = [], n = t; n < r; ) {
                        var s, o, a, c, u = e[n], f = null, h = u > 239 ? 4 : u > 223 ? 3 : u > 191 ? 2 : 1;
                        if (n + h <= r)
                            switch (h) {
                            case 1:
                                u < 128 && (f = u);
                                break;
                            case 2:
                                128 == (192 & (s = e[n + 1])) && (c = (31 & u) << 6 | 63 & s) > 127 && (f = c);
                                break;
                            case 3:
                                s = e[n + 1],
                                o = e[n + 2],
                                128 == (192 & s) && 128 == (192 & o) && (c = (15 & u) << 12 | (63 & s) << 6 | 63 & o) > 2047 && (c < 55296 || c > 57343) && (f = c);
                                break;
                            case 4:
                                s = e[n + 1],
                                o = e[n + 2],
                                a = e[n + 3],
                                128 == (192 & s) && 128 == (192 & o) && 128 == (192 & a) && (c = (15 & u) << 18 | (63 & s) << 12 | (63 & o) << 6 | 63 & a) > 65535 && c < 1114112 && (f = c)
                            }
                        null === f ? (f = 65533,
                        h = 1) : f > 65535 && (f -= 65536,
                        i.push(f >>> 10 & 1023 | 55296),
                        f = 56320 | 1023 & f),
                        i.push(f),
                        n += h
                    }
                    return function(e) {
                        var t = e.length;
                        if (t <= C)
                            return String.fromCharCode.apply(String, e);
                        var r = ""
                          , i = 0;
                        for (; i < t; )
                            r += String.fromCharCode.apply(String, e.slice(i, i += C));
                        return r
                    }(i)
                }
                r.kMaxLength = o,
                t.TYPED_ARRAY_SUPPORT = function() {
                    try {
                        var e = new Uint8Array(1)
                          , t = {
                            foo: function() {
                                return 42
                            }
                        };
                        return Object.setPrototypeOf(t, Uint8Array.prototype),
                        Object.setPrototypeOf(e, t),
                        42 === e.foo()
                    } catch (e) {
                        return !1
                    }
                }(),
                t.TYPED_ARRAY_SUPPORT || "undefined" == typeof console || "function" != typeof console.error || console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."),
                Object.defineProperty(t.prototype, "parent", {
                    enumerable: !0,
                    get: function() {
                        if (t.isBuffer(this))
                            return this.buffer
                    }
                }),
                Object.defineProperty(t.prototype, "offset", {
                    enumerable: !0,
                    get: function() {
                        if (t.isBuffer(this))
                            return this.byteOffset
                    }
                }),
                "undefined" != typeof Symbol && null != Symbol.species && t[Symbol.species] === t && Object.defineProperty(t, Symbol.species, {
                    value: null,
                    configurable: !0,
                    enumerable: !1,
                    writable: !1
                }),
                t.poolSize = 8192,
                t.from = function(e, t, r) {
                    return c(e, t, r)
                }
                ,
                Object.setPrototypeOf(t.prototype, Uint8Array.prototype),
                Object.setPrototypeOf(t, Uint8Array),
                t.alloc = function(e, t, r) {
                    return function(e, t, r) {
                        return u(e),
                        e <= 0 ? a(e) : void 0 !== t ? "string" == typeof r ? a(e).fill(t, r) : a(e).fill(t) : a(e)
                    }(e, t, r)
                }
                ,
                t.allocUnsafe = function(e) {
                    return f(e)
                }
                ,
                t.allocUnsafeSlow = function(e) {
                    return f(e)
                }
                ,
                t.isBuffer = function(e) {
                    return null != e && !0 === e._isBuffer && e !== t.prototype
                }
                ,
                t.compare = function(e, r) {
                    if (K(e, Uint8Array) && (e = t.from(e, e.offset, e.byteLength)),
                    K(r, Uint8Array) && (r = t.from(r, r.offset, r.byteLength)),
                    !t.isBuffer(e) || !t.isBuffer(r))
                        throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
                    if (e === r)
                        return 0;
                    for (var i = e.length, n = r.length, s = 0, o = Math.min(i, n); s < o; ++s)
                        if (e[s] !== r[s]) {
                            i = e[s],
                            n = r[s];
                            break
                        }
                    return i < n ? -1 : n < i ? 1 : 0
                }
                ,
                t.isEncoding = function(e) {
                    switch (String(e).toLowerCase()) {
                    case "hex":
                    case "utf8":
                    case "utf-8":
                    case "ascii":
                    case "latin1":
                    case "binary":
                    case "base64":
                    case "ucs2":
                    case "ucs-2":
                    case "utf16le":
                    case "utf-16le":
                        return !0;
                    default:
                        return !1
                    }
                }
                ,
                t.concat = function(e, r) {
                    if (!Array.isArray(e))
                        throw new TypeError('"list" argument must be an Array of Buffers');
                    if (0 === e.length)
                        return t.alloc(0);
                    var i;
                    if (void 0 === r)
                        for (r = 0,
                        i = 0; i < e.length; ++i)
                            r += e[i].length;
                    var n = t.allocUnsafe(r)
                      , s = 0;
                    for (i = 0; i < e.length; ++i) {
                        var o = e[i];
                        if (K(o, Uint8Array) && (o = t.from(o)),
                        !t.isBuffer(o))
                            throw new TypeError('"list" argument must be an Array of Buffers');
                        o.copy(n, s),
                        s += o.length
                    }
                    return n
                }
                ,
                t.byteLength = d,
                t.prototype._isBuffer = !0,
                t.prototype.swap16 = function() {
                    var e = this.length;
                    if (e % 2 != 0)
                        throw new RangeError("Buffer size must be a multiple of 16-bits");
                    for (var t = 0; t < e; t += 2)
                        b(this, t, t + 1);
                    return this
                }
                ,
                t.prototype.swap32 = function() {
                    var e = this.length;
                    if (e % 4 != 0)
                        throw new RangeError("Buffer size must be a multiple of 32-bits");
                    for (var t = 0; t < e; t += 4)
                        b(this, t, t + 3),
                        b(this, t + 1, t + 2);
                    return this
                }
                ,
                t.prototype.swap64 = function() {
                    var e = this.length;
                    if (e % 8 != 0)
                        throw new RangeError("Buffer size must be a multiple of 64-bits");
                    for (var t = 0; t < e; t += 8)
                        b(this, t, t + 7),
                        b(this, t + 1, t + 6),
                        b(this, t + 2, t + 5),
                        b(this, t + 3, t + 4);
                    return this
                }
                ,
                t.prototype.toString = function() {
                    var e = this.length;
                    return 0 === e ? "" : 0 === arguments.length ? A(this, 0, e) : p.apply(this, arguments)
                }
                ,
                t.prototype.toLocaleString = t.prototype.toString,
                t.prototype.equals = function(e) {
                    if (!t.isBuffer(e))
                        throw new TypeError("Argument must be a Buffer");
                    return this === e || 0 === t.compare(this, e)
                }
                ,
                t.prototype.inspect = function() {
                    var e = ""
                      , t = r.INSPECT_MAX_BYTES;
                    return e = this.toString("hex", 0, t).replace(/(.{2})/g, "$1 ").trim(),
                    this.length > t && (e += " ... "),
                    "<Buffer " + e + ">"
                }
                ,
                s && (t.prototype[s] = t.prototype.inspect),
                t.prototype.compare = function(e, r, i, n, s) {
                    if (K(e, Uint8Array) && (e = t.from(e, e.offset, e.byteLength)),
                    !t.isBuffer(e))
                        throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof e);
                    if (void 0 === r && (r = 0),
                    void 0 === i && (i = e ? e.length : 0),
                    void 0 === n && (n = 0),
                    void 0 === s && (s = this.length),
                    r < 0 || i > e.length || n < 0 || s > this.length)
                        throw new RangeError("out of range index");
                    if (n >= s && r >= i)
                        return 0;
                    if (n >= s)
                        return -1;
                    if (r >= i)
                        return 1;
                    if (this === e)
                        return 0;
                    for (var o = (s >>>= 0) - (n >>>= 0), a = (i >>>= 0) - (r >>>= 0), c = Math.min(o, a), u = this.slice(n, s), f = e.slice(r, i), h = 0; h < c; ++h)
                        if (u[h] !== f[h]) {
                            o = u[h],
                            a = f[h];
                            break
                        }
                    return o < a ? -1 : a < o ? 1 : 0
                }
                ,
                t.prototype.includes = function(e, t, r) {
                    return -1 !== this.indexOf(e, t, r)
                }
                ,
                t.prototype.indexOf = function(e, t, r) {
                    return g(this, e, t, r, !0)
                }
                ,
                t.prototype.lastIndexOf = function(e, t, r) {
                    return g(this, e, t, r, !1)
                }
                ,
                t.prototype.write = function(e, t, r, i) {
                    if (void 0 === t)
                        i = "utf8",
                        r = this.length,
                        t = 0;
                    else if (void 0 === r && "string" == typeof t)
                        i = t,
                        r = this.length,
                        t = 0;
                    else {
                        if (!isFinite(t))
                            throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
                        t >>>= 0,
                        isFinite(r) ? (r >>>= 0,
                        void 0 === i && (i = "utf8")) : (i = r,
                        r = void 0)
                    }
                    var n = this.length - t;
                    if ((void 0 === r || r > n) && (r = n),
                    e.length > 0 && (r < 0 || t < 0) || t > this.length)
                        throw new RangeError("Attempt to write outside buffer bounds");
                    i || (i = "utf8");
                    for (var s = !1; ; )
                        switch (i) {
                        case "hex":
                            return y(this, e, t, r);
                        case "utf8":
                        case "utf-8":
                            return v(this, e, t, r);
                        case "ascii":
                            return w(this, e, t, r);
                        case "latin1":
                        case "binary":
                            return E(this, e, t, r);
                        case "base64":
                            return _(this, e, t, r);
                        case "ucs2":
                        case "ucs-2":
                        case "utf16le":
                        case "utf-16le":
                            return S(this, e, t, r);
                        default:
                            if (s)
                                throw new TypeError("Unknown encoding: " + i);
                            i = ("" + i).toLowerCase(),
                            s = !0
                        }
                }
                ,
                t.prototype.toJSON = function() {
                    return {
                        type: "Buffer",
                        data: Array.prototype.slice.call(this._arr || this, 0)
                    }
                }
                ;
                var C = 4096;
                function I(e, t, r) {
                    var i = "";
                    r = Math.min(e.length, r);
                    for (var n = t; n < r; ++n)
                        i += String.fromCharCode(127 & e[n]);
                    return i
                }
                function T(e, t, r) {
                    var i = "";
                    r = Math.min(e.length, r);
                    for (var n = t; n < r; ++n)
                        i += String.fromCharCode(e[n]);
                    return i
                }
                function B(e, t, r) {
                    var i = e.length;
                    (!t || t < 0) && (t = 0),
                    (!r || r < 0 || r > i) && (r = i);
                    for (var n = "", s = t; s < r; ++s)
                        n += V[e[s]];
                    return n
                }
                function M(e, t, r) {
                    for (var i = e.slice(t, r), n = "", s = 0; s < i.length; s += 2)
                        n += String.fromCharCode(i[s] + 256 * i[s + 1]);
                    return n
                }
                function R(e, t, r) {
                    if (e % 1 != 0 || e < 0)
                        throw new RangeError("offset is not uint");
                    if (e + t > r)
                        throw new RangeError("Trying to access beyond buffer length")
                }
                function x(e, r, i, n, s, o) {
                    if (!t.isBuffer(e))
                        throw new TypeError('"buffer" argument must be a Buffer instance');
                    if (r > s || r < o)
                        throw new RangeError('"value" argument is out of bounds');
                    if (i + n > e.length)
                        throw new RangeError("Index out of range")
                }
                function N(e, t, r, i, n, s) {
                    if (r + i > e.length)
                        throw new RangeError("Index out of range");
                    if (r < 0)
                        throw new RangeError("Index out of range")
                }
                function P(e, t, r, i, s) {
                    return t = +t,
                    r >>>= 0,
                    s || N(e, 0, r, 4),
                    n.write(e, t, r, i, 23, 4),
                    r + 4
                }
                function D(e, t, r, i, s) {
                    return t = +t,
                    r >>>= 0,
                    s || N(e, 0, r, 8),
                    n.write(e, t, r, i, 52, 8),
                    r + 8
                }
                t.prototype.slice = function(e, r) {
                    var i = this.length;
                    (e = ~~e) < 0 ? (e += i) < 0 && (e = 0) : e > i && (e = i),
                    (r = void 0 === r ? i : ~~r) < 0 ? (r += i) < 0 && (r = 0) : r > i && (r = i),
                    r < e && (r = e);
                    var n = this.subarray(e, r);
                    return Object.setPrototypeOf(n, t.prototype),
                    n
                }
                ,
                t.prototype.readUIntLE = function(e, t, r) {
                    e >>>= 0,
                    t >>>= 0,
                    r || R(e, t, this.length);
                    for (var i = this[e], n = 1, s = 0; ++s < t && (n *= 256); )
                        i += this[e + s] * n;
                    return i
                }
                ,
                t.prototype.readUIntBE = function(e, t, r) {
                    e >>>= 0,
                    t >>>= 0,
                    r || R(e, t, this.length);
                    for (var i = this[e + --t], n = 1; t > 0 && (n *= 256); )
                        i += this[e + --t] * n;
                    return i
                }
                ,
                t.prototype.readUInt8 = function(e, t) {
                    return e >>>= 0,
                    t || R(e, 1, this.length),
                    this[e]
                }
                ,
                t.prototype.readUInt16LE = function(e, t) {
                    return e >>>= 0,
                    t || R(e, 2, this.length),
                    this[e] | this[e + 1] << 8
                }
                ,
                t.prototype.readUInt16BE = function(e, t) {
                    return e >>>= 0,
                    t || R(e, 2, this.length),
                    this[e] << 8 | this[e + 1]
                }
                ,
                t.prototype.readUInt32LE = function(e, t) {
                    return e >>>= 0,
                    t || R(e, 4, this.length),
                    (this[e] | this[e + 1] << 8 | this[e + 2] << 16) + 16777216 * this[e + 3]
                }
                ,
                t.prototype.readUInt32BE = function(e, t) {
                    return e >>>= 0,
                    t || R(e, 4, this.length),
                    16777216 * this[e] + (this[e + 1] << 16 | this[e + 2] << 8 | this[e + 3])
                }
                ,
                t.prototype.readIntLE = function(e, t, r) {
                    e >>>= 0,
                    t >>>= 0,
                    r || R(e, t, this.length);
                    for (var i = this[e], n = 1, s = 0; ++s < t && (n *= 256); )
                        i += this[e + s] * n;
                    return i >= (n *= 128) && (i -= Math.pow(2, 8 * t)),
                    i
                }
                ,
                t.prototype.readIntBE = function(e, t, r) {
                    e >>>= 0,
                    t >>>= 0,
                    r || R(e, t, this.length);
                    for (var i = t, n = 1, s = this[e + --i]; i > 0 && (n *= 256); )
                        s += this[e + --i] * n;
                    return s >= (n *= 128) && (s -= Math.pow(2, 8 * t)),
                    s
                }
                ,
                t.prototype.readInt8 = function(e, t) {
                    return e >>>= 0,
                    t || R(e, 1, this.length),
                    128 & this[e] ? -1 * (255 - this[e] + 1) : this[e]
                }
                ,
                t.prototype.readInt16LE = function(e, t) {
                    e >>>= 0,
                    t || R(e, 2, this.length);
                    var r = this[e] | this[e + 1] << 8;
                    return 32768 & r ? 4294901760 | r : r
                }
                ,
                t.prototype.readInt16BE = function(e, t) {
                    e >>>= 0,
                    t || R(e, 2, this.length);
                    var r = this[e + 1] | this[e] << 8;
                    return 32768 & r ? 4294901760 | r : r
                }
                ,
                t.prototype.readInt32LE = function(e, t) {
                    return e >>>= 0,
                    t || R(e, 4, this.length),
                    this[e] | this[e + 1] << 8 | this[e + 2] << 16 | this[e + 3] << 24
                }
                ,
                t.prototype.readInt32BE = function(e, t) {
                    return e >>>= 0,
                    t || R(e, 4, this.length),
                    this[e] << 24 | this[e + 1] << 16 | this[e + 2] << 8 | this[e + 3]
                }
                ,
                t.prototype.readFloatLE = function(e, t) {
                    return e >>>= 0,
                    t || R(e, 4, this.length),
                    n.read(this, e, !0, 23, 4)
                }
                ,
                t.prototype.readFloatBE = function(e, t) {
                    return e >>>= 0,
                    t || R(e, 4, this.length),
                    n.read(this, e, !1, 23, 4)
                }
                ,
                t.prototype.readDoubleLE = function(e, t) {
                    return e >>>= 0,
                    t || R(e, 8, this.length),
                    n.read(this, e, !0, 52, 8)
                }
                ,
                t.prototype.readDoubleBE = function(e, t) {
                    return e >>>= 0,
                    t || R(e, 8, this.length),
                    n.read(this, e, !1, 52, 8)
                }
                ,
                t.prototype.writeUIntLE = function(e, t, r, i) {
                    (e = +e,
                    t >>>= 0,
                    r >>>= 0,
                    i) || x(this, e, t, r, Math.pow(2, 8 * r) - 1, 0);
                    var n = 1
                      , s = 0;
                    for (this[t] = 255 & e; ++s < r && (n *= 256); )
                        this[t + s] = e / n & 255;
                    return t + r
                }
                ,
                t.prototype.writeUIntBE = function(e, t, r, i) {
                    (e = +e,
                    t >>>= 0,
                    r >>>= 0,
                    i) || x(this, e, t, r, Math.pow(2, 8 * r) - 1, 0);
                    var n = r - 1
                      , s = 1;
                    for (this[t + n] = 255 & e; --n >= 0 && (s *= 256); )
                        this[t + n] = e / s & 255;
                    return t + r
                }
                ,
                t.prototype.writeUInt8 = function(e, t, r) {
                    return e = +e,
                    t >>>= 0,
                    r || x(this, e, t, 1, 255, 0),
                    this[t] = 255 & e,
                    t + 1
                }
                ,
                t.prototype.writeUInt16LE = function(e, t, r) {
                    return e = +e,
                    t >>>= 0,
                    r || x(this, e, t, 2, 65535, 0),
                    this[t] = 255 & e,
                    this[t + 1] = e >>> 8,
                    t + 2
                }
                ,
                t.prototype.writeUInt16BE = function(e, t, r) {
                    return e = +e,
                    t >>>= 0,
                    r || x(this, e, t, 2, 65535, 0),
                    this[t] = e >>> 8,
                    this[t + 1] = 255 & e,
                    t + 2
                }
                ,
                t.prototype.writeUInt32LE = function(e, t, r) {
                    return e = +e,
                    t >>>= 0,
                    r || x(this, e, t, 4, 4294967295, 0),
                    this[t + 3] = e >>> 24,
                    this[t + 2] = e >>> 16,
                    this[t + 1] = e >>> 8,
                    this[t] = 255 & e,
                    t + 4
                }
                ,
                t.prototype.writeUInt32BE = function(e, t, r) {
                    return e = +e,
                    t >>>= 0,
                    r || x(this, e, t, 4, 4294967295, 0),
                    this[t] = e >>> 24,
                    this[t + 1] = e >>> 16,
                    this[t + 2] = e >>> 8,
                    this[t + 3] = 255 & e,
                    t + 4
                }
                ,
                t.prototype.writeIntLE = function(e, t, r, i) {
                    if (e = +e,
                    t >>>= 0,
                    !i) {
                        var n = Math.pow(2, 8 * r - 1);
                        x(this, e, t, r, n - 1, -n)
                    }
                    var s = 0
                      , o = 1
                      , a = 0;
                    for (this[t] = 255 & e; ++s < r && (o *= 256); )
                        e < 0 && 0 === a && 0 !== this[t + s - 1] && (a = 1),
                        this[t + s] = (e / o >> 0) - a & 255;
                    return t + r
                }
                ,
                t.prototype.writeIntBE = function(e, t, r, i) {
                    if (e = +e,
                    t >>>= 0,
                    !i) {
                        var n = Math.pow(2, 8 * r - 1);
                        x(this, e, t, r, n - 1, -n)
                    }
                    var s = r - 1
                      , o = 1
                      , a = 0;
                    for (this[t + s] = 255 & e; --s >= 0 && (o *= 256); )
                        e < 0 && 0 === a && 0 !== this[t + s + 1] && (a = 1),
                        this[t + s] = (e / o >> 0) - a & 255;
                    return t + r
                }
                ,
                t.prototype.writeInt8 = function(e, t, r) {
                    return e = +e,
                    t >>>= 0,
                    r || x(this, e, t, 1, 127, -128),
                    e < 0 && (e = 255 + e + 1),
                    this[t] = 255 & e,
                    t + 1
                }
                ,
                t.prototype.writeInt16LE = function(e, t, r) {
                    return e = +e,
                    t >>>= 0,
                    r || x(this, e, t, 2, 32767, -32768),
                    this[t] = 255 & e,
                    this[t + 1] = e >>> 8,
                    t + 2
                }
                ,
                t.prototype.writeInt16BE = function(e, t, r) {
                    return e = +e,
                    t >>>= 0,
                    r || x(this, e, t, 2, 32767, -32768),
                    this[t] = e >>> 8,
                    this[t + 1] = 255 & e,
                    t + 2
                }
                ,
                t.prototype.writeInt32LE = function(e, t, r) {
                    return e = +e,
                    t >>>= 0,
                    r || x(this, e, t, 4, 2147483647, -2147483648),
                    this[t] = 255 & e,
                    this[t + 1] = e >>> 8,
                    this[t + 2] = e >>> 16,
                    this[t + 3] = e >>> 24,
                    t + 4
                }
                ,
                t.prototype.writeInt32BE = function(e, t, r) {
                    return e = +e,
                    t >>>= 0,
                    r || x(this, e, t, 4, 2147483647, -2147483648),
                    e < 0 && (e = 4294967295 + e + 1),
                    this[t] = e >>> 24,
                    this[t + 1] = e >>> 16,
                    this[t + 2] = e >>> 8,
                    this[t + 3] = 255 & e,
                    t + 4
                }
                ,
                t.prototype.writeFloatLE = function(e, t, r) {
                    return P(this, e, t, !0, r)
                }
                ,
                t.prototype.writeFloatBE = function(e, t, r) {
                    return P(this, e, t, !1, r)
                }
                ,
                t.prototype.writeDoubleLE = function(e, t, r) {
                    return D(this, e, t, !0, r)
                }
                ,
                t.prototype.writeDoubleBE = function(e, t, r) {
                    return D(this, e, t, !1, r)
                }
                ,
                t.prototype.copy = function(e, r, i, n) {
                    if (!t.isBuffer(e))
                        throw new TypeError("argument should be a Buffer");
                    if (i || (i = 0),
                    n || 0 === n || (n = this.length),
                    r >= e.length && (r = e.length),
                    r || (r = 0),
                    n > 0 && n < i && (n = i),
                    n === i)
                        return 0;
                    if (0 === e.length || 0 === this.length)
                        return 0;
                    if (r < 0)
                        throw new RangeError("targetStart out of bounds");
                    if (i < 0 || i >= this.length)
                        throw new RangeError("Index out of range");
                    if (n < 0)
                        throw new RangeError("sourceEnd out of bounds");
                    n > this.length && (n = this.length),
                    e.length - r < n - i && (n = e.length - r + i);
                    var s = n - i;
                    if (this === e && "function" == typeof Uint8Array.prototype.copyWithin)
                        this.copyWithin(r, i, n);
                    else if (this === e && i < r && r < n)
                        for (var o = s - 1; o >= 0; --o)
                            e[o + r] = this[o + i];
                    else
                        Uint8Array.prototype.set.call(e, this.subarray(i, n), r);
                    return s
                }
                ,
                t.prototype.fill = function(e, r, i, n) {
                    if ("string" == typeof e) {
                        if ("string" == typeof r ? (n = r,
                        r = 0,
                        i = this.length) : "string" == typeof i && (n = i,
                        i = this.length),
                        void 0 !== n && "string" != typeof n)
                            throw new TypeError("encoding must be a string");
                        if ("string" == typeof n && !t.isEncoding(n))
                            throw new TypeError("Unknown encoding: " + n);
                        if (1 === e.length) {
                            var s = e.charCodeAt(0);
                            ("utf8" === n && s < 128 || "latin1" === n) && (e = s)
                        }
                    } else
                        "number" == typeof e ? e &= 255 : "boolean" == typeof e && (e = Number(e));
                    if (r < 0 || this.length < r || this.length < i)
                        throw new RangeError("Out of range index");
                    if (i <= r)
                        return this;
                    var o;
                    if (r >>>= 0,
                    i = void 0 === i ? this.length : i >>> 0,
                    e || (e = 0),
                    "number" == typeof e)
                        for (o = r; o < i; ++o)
                            this[o] = e;
                    else {
                        var a = t.isBuffer(e) ? e : t.from(e, n)
                          , c = a.length;
                        if (0 === c)
                            throw new TypeError('The value "' + e + '" is invalid for argument "value"');
                        for (o = 0; o < i - r; ++o)
                            this[o + r] = a[o % c]
                    }
                    return this
                }
                ;
                var L = /[^+/0-9A-Za-z-_]/g;
                function O(e, t) {
                    var r;
                    t = t || 1 / 0;
                    for (var i = e.length, n = null, s = [], o = 0; o < i; ++o) {
                        if ((r = e.charCodeAt(o)) > 55295 && r < 57344) {
                            if (!n) {
                                if (r > 56319) {
                                    (t -= 3) > -1 && s.push(239, 191, 189);
                                    continue
                                }
                                if (o + 1 === i) {
                                    (t -= 3) > -1 && s.push(239, 191, 189);
                                    continue
                                }
                                n = r;
                                continue
                            }
                            if (r < 56320) {
                                (t -= 3) > -1 && s.push(239, 191, 189),
                                n = r;
                                continue
                            }
                            r = 65536 + (n - 55296 << 10 | r - 56320)
                        } else
                            n && (t -= 3) > -1 && s.push(239, 191, 189);
                        if (n = null,
                        r < 128) {
                            if ((t -= 1) < 0)
                                break;
                            s.push(r)
                        } else if (r < 2048) {
                            if ((t -= 2) < 0)
                                break;
                            s.push(r >> 6 | 192, 63 & r | 128)
                        } else if (r < 65536) {
                            if ((t -= 3) < 0)
                                break;
                            s.push(r >> 12 | 224, r >> 6 & 63 | 128, 63 & r | 128)
                        } else {
                            if (!(r < 1114112))
                                throw new Error("Invalid code point");
                            if ((t -= 4) < 0)
                                break;
                            s.push(r >> 18 | 240, r >> 12 & 63 | 128, r >> 6 & 63 | 128, 63 & r | 128)
                        }
                    }
                    return s
                }
                function j(e) {
                    return i.toByteArray(function(e) {
                        if ((e = (e = e.split("=")[0]).trim().replace(L, "")).length < 2)
                            return "";
                        for (; e.length % 4 != 0; )
                            e += "=";
                        return e
                    }(e))
                }
                function U(e, t, r, i) {
                    for (var n = 0; n < i && !(n + r >= t.length || n >= e.length); ++n)
                        t[n + r] = e[n];
                    return n
                }
                function K(e, t) {
                    return e instanceof t || null != e && null != e.constructor && null != e.constructor.name && e.constructor.name === t.name
                }
                function q(e) {
                    return e != e
                }
                var V = function() {
                    for (var e = new Array(256), t = 0; t < 16; ++t)
                        for (var r = 16 * t, i = 0; i < 16; ++i)
                            e[r + i] = "0123456789abcdef"[t] + "0123456789abcdef"[i];
                    return e
                }()
            }
            ).call(this, e("buffer").Buffer)
        }
        , {
            "base64-js": 15,
            buffer: 48,
            ieee754: 99
        }],
        49: [function(e, t, r) {
            var i = e("safe-buffer").Buffer
              , n = e("stream").Transform
              , s = e("string_decoder").StringDecoder;
            function o(e) {
                n.call(this),
                this.hashMode = "string" == typeof e,
                this.hashMode ? this[e] = this._finalOrDigest : this.final = this._finalOrDigest,
                this._final && (this.__final = this._final,
                this._final = null),
                this._decoder = null,
                this._encoding = null
            }
            e("inherits")(o, n),
            o.prototype.update = function(e, t, r) {
                "string" == typeof e && (e = i.from(e, t));
                var n = this._update(e);
                return this.hashMode ? this : (r && (n = this._toString(n, r)),
                n)
            }
            ,
            o.prototype.setAutoPadding = function() {}
            ,
            o.prototype.getAuthTag = function() {
                throw new Error("trying to get auth tag in unsupported state")
            }
            ,
            o.prototype.setAuthTag = function() {
                throw new Error("trying to set auth tag in unsupported state")
            }
            ,
            o.prototype.setAAD = function() {
                throw new Error("trying to set aad in unsupported state")
            }
            ,
            o.prototype._transform = function(e, t, r) {
                var i;
                try {
                    this.hashMode ? this._update(e) : this.push(this._update(e))
                } catch (e) {
                    i = e
                } finally {
                    r(i)
                }
            }
            ,
            o.prototype._flush = function(e) {
                var t;
                try {
                    this.push(this.__final())
                } catch (e) {
                    t = e
                }
                e(t)
            }
            ,
            o.prototype._finalOrDigest = function(e) {
                var t = this.__final() || i.alloc(0);
                return e && (t = this._toString(t, e, !0)),
                t
            }
            ,
            o.prototype._toString = function(e, t, r) {
                if (this._decoder || (this._decoder = new s(t),
                this._encoding = t),
                this._encoding !== t)
                    throw new Error("can't switch encodings");
                var i = this._decoder.write(e);
                return r && (i += this._decoder.end()),
                i
            }
            ,
            t.exports = o
        }
        , {
            inherits: 100,
            "safe-buffer": 143,
            stream: 152,
            string_decoder: 153
        }],
        50: [function(e, t, r) {
            (function(e) {
                function t(e) {
                    return Object.prototype.toString.call(e)
                }
                r.isArray = function(e) {
                    return Array.isArray ? Array.isArray(e) : "[object Array]" === t(e)
                }
                ,
                r.isBoolean = function(e) {
                    return "boolean" == typeof e
                }
                ,
                r.isNull = function(e) {
                    return null === e
                }
                ,
                r.isNullOrUndefined = function(e) {
                    return null == e
                }
                ,
                r.isNumber = function(e) {
                    return "number" == typeof e
                }
                ,
                r.isString = function(e) {
                    return "string" == typeof e
                }
                ,
                r.isSymbol = function(e) {
                    return "symbol" == typeof e
                }
                ,
                r.isUndefined = function(e) {
                    return void 0 === e
                }
                ,
                r.isRegExp = function(e) {
                    return "[object RegExp]" === t(e)
                }
                ,
                r.isObject = function(e) {
                    return "object" == typeof e && null !== e
                }
                ,
                r.isDate = function(e) {
                    return "[object Date]" === t(e)
                }
                ,
                r.isError = function(e) {
                    return "[object Error]" === t(e) || e instanceof Error
                }
                ,
                r.isFunction = function(e) {
                    return "function" == typeof e
                }
                ,
                r.isPrimitive = function(e) {
                    return null === e || "boolean" == typeof e || "number" == typeof e || "string" == typeof e || "symbol" == typeof e || void 0 === e
                }
                ,
                r.isBuffer = e.isBuffer
            }
            ).call(this, {
                isBuffer: e("../../is-buffer/index.js")
            })
        }
        , {
            "../../is-buffer/index.js": 101
        }],
        51: [function(e, t, r) {
            (function(r) {
                var i = e("elliptic")
                  , n = e("bn.js");
                t.exports = function(e) {
                    return new o(e)
                }
                ;
                var s = {
                    secp256k1: {
                        name: "secp256k1",
                        byteLength: 32
                    },
                    secp224r1: {
                        name: "p224",
                        byteLength: 28
                    },
                    prime256v1: {
                        name: "p256",
                        byteLength: 32
                    },
                    prime192v1: {
                        name: "p192",
                        byteLength: 24
                    },
                    ed25519: {
                        name: "ed25519",
                        byteLength: 32
                    },
                    secp384r1: {
                        name: "p384",
                        byteLength: 48
                    },
                    secp521r1: {
                        name: "p521",
                        byteLength: 66
                    }
                };
                function o(e) {
                    this.curveType = s[e],
                    this.curveType || (this.curveType = {
                        name: e
                    }),
                    this.curve = new i.ec(this.curveType.name),
                    this.keys = void 0
                }
                function a(e, t, i) {
                    Array.isArray(e) || (e = e.toArray());
                    var n = new r(e);
                    if (i && n.length < i) {
                        var s = new r(i - n.length);
                        s.fill(0),
                        n = r.concat([s, n])
                    }
                    return t ? n.toString(t) : n
                }
                s.p224 = s.secp224r1,
                s.p256 = s.secp256r1 = s.prime256v1,
                s.p192 = s.secp192r1 = s.prime192v1,
                s.p384 = s.secp384r1,
                s.p521 = s.secp521r1,
                o.prototype.generateKeys = function(e, t) {
                    return this.keys = this.curve.genKeyPair(),
                    this.getPublicKey(e, t)
                }
                ,
                o.prototype.computeSecret = function(e, t, i) {
                    return t = t || "utf8",
                    r.isBuffer(e) || (e = new r(e,t)),
                    a(this.curve.keyFromPublic(e).getPublic().mul(this.keys.getPrivate()).getX(), i, this.curveType.byteLength)
                }
                ,
                o.prototype.getPublicKey = function(e, t) {
                    var r = this.keys.getPublic("compressed" === t, !0);
                    return "hybrid" === t && (r[r.length - 1] % 2 ? r[0] = 7 : r[0] = 6),
                    a(r, e)
                }
                ,
                o.prototype.getPrivateKey = function(e) {
                    return a(this.keys.getPrivate(), e)
                }
                ,
                o.prototype.setPublicKey = function(e, t) {
                    return t = t || "utf8",
                    r.isBuffer(e) || (e = new r(e,t)),
                    this.keys._importPublic(e),
                    this
                }
                ,
                o.prototype.setPrivateKey = function(e, t) {
                    t = t || "utf8",
                    r.isBuffer(e) || (e = new r(e,t));
                    var i = new n(e);
                    return i = i.toString(16),
                    this.keys = this.curve.genKeyPair(),
                    this.keys._importPrivate(i),
                    this
                }
            }
            ).call(this, e("buffer").Buffer)
        }
        , {
            "bn.js": 16,
            buffer: 48,
            elliptic: 67
        }],
        52: [function(e, t, r) {
            "use strict";
            var i = e("inherits")
              , n = e("md5.js")
              , s = e("ripemd160")
              , o = e("sha.js")
              , a = e("cipher-base");
            function c(e) {
                a.call(this, "digest"),
                this._hash = e
            }
            i(c, a),
            c.prototype._update = function(e) {
                this._hash.update(e)
            }
            ,
            c.prototype._final = function() {
                return this._hash.digest()
            }
            ,
            t.exports = function(e) {
                return "md5" === (e = e.toLowerCase()) ? new n : "rmd160" === e || "ripemd160" === e ? new s : new c(o(e))
            }
        }
        , {
            "cipher-base": 49,
            inherits: 100,
            "md5.js": 103,
            ripemd160: 142,
            "sha.js": 145
        }],
        53: [function(e, t, r) {
            var i = e("md5.js");
            t.exports = function(e) {
                return (new i).update(e).digest()
            }
        }
        , {
            "md5.js": 103
        }],
        54: [function(e, t, r) {
            "use strict";
            var i = e("inherits")
              , n = e("./legacy")
              , s = e("cipher-base")
              , o = e("safe-buffer").Buffer
              , a = e("create-hash/md5")
              , c = e("ripemd160")
              , u = e("sha.js")
              , f = o.alloc(128);
            function h(e, t) {
                s.call(this, "digest"),
                "string" == typeof t && (t = o.from(t));
                var r = "sha512" === e || "sha384" === e ? 128 : 64;
                (this._alg = e,
                this._key = t,
                t.length > r) ? t = ("rmd160" === e ? new c : u(e)).update(t).digest() : t.length < r && (t = o.concat([t, f], r));
                for (var i = this._ipad = o.allocUnsafe(r), n = this._opad = o.allocUnsafe(r), a = 0; a < r; a++)
                    i[a] = 54 ^ t[a],
                    n[a] = 92 ^ t[a];
                this._hash = "rmd160" === e ? new c : u(e),
                this._hash.update(i)
            }
            i(h, s),
            h.prototype._update = function(e) {
                this._hash.update(e)
            }
            ,
            h.prototype._final = function() {
                var e = this._hash.digest();
                return ("rmd160" === this._alg ? new c : u(this._alg)).update(this._opad).update(e).digest()
            }
            ,
            t.exports = function(e, t) {
                return "rmd160" === (e = e.toLowerCase()) || "ripemd160" === e ? new h("rmd160",t) : "md5" === e ? new n(a,t) : new h(e,t)
            }
        }
        , {
            "./legacy": 55,
            "cipher-base": 49,
            "create-hash/md5": 53,
            inherits: 100,
            ripemd160: 142,
            "safe-buffer": 143,
            "sha.js": 145
        }],
        55: [function(e, t, r) {
            "use strict";
            var i = e("inherits")
              , n = e("safe-buffer").Buffer
              , s = e("cipher-base")
              , o = n.alloc(128)
              , a = 64;
            function c(e, t) {
                s.call(this, "digest"),
                "string" == typeof t && (t = n.from(t)),
                this._alg = e,
                this._key = t,
                t.length > a ? t = e(t) : t.length < a && (t = n.concat([t, o], a));
                for (var r = this._ipad = n.allocUnsafe(a), i = this._opad = n.allocUnsafe(a), c = 0; c < a; c++)
                    r[c] = 54 ^ t[c],
                    i[c] = 92 ^ t[c];
                this._hash = [r]
            }
            i(c, s),
            c.prototype._update = function(e) {
                this._hash.push(e)
            }
            ,
            c.prototype._final = function() {
                var e = this._alg(n.concat(this._hash));
                return this._alg(n.concat([this._opad, e]))
            }
            ,
            t.exports = c
        }
        , {
            "cipher-base": 49,
            inherits: 100,
            "safe-buffer": 143
        }],
        56: [function(e, t, r) {
            "use strict";
            r.randomBytes = r.rng = r.pseudoRandomBytes = r.prng = e("randombytes"),
            r.createHash = r.Hash = e("create-hash"),
            r.createHmac = r.Hmac = e("create-hmac");
            var i = e("browserify-sign/algos")
              , n = Object.keys(i)
              , s = ["sha1", "sha224", "sha256", "sha384", "sha512", "md5", "rmd160"].concat(n);
            r.getHashes = function() {
                return s
            }
            ;
            var o = e("pbkdf2");
            r.pbkdf2 = o.pbkdf2,
            r.pbkdf2Sync = o.pbkdf2Sync;
            var a = e("browserify-cipher");
            r.Cipher = a.Cipher,
            r.createCipher = a.createCipher,
            r.Cipheriv = a.Cipheriv,
            r.createCipheriv = a.createCipheriv,
            r.Decipher = a.Decipher,
            r.createDecipher = a.createDecipher,
            r.Decipheriv = a.Decipheriv,
            r.createDecipheriv = a.createDecipheriv,
            r.getCiphers = a.getCiphers,
            r.listCiphers = a.listCiphers;
            var c = e("diffie-hellman");
            r.DiffieHellmanGroup = c.DiffieHellmanGroup,
            r.createDiffieHellmanGroup = c.createDiffieHellmanGroup,
            r.getDiffieHellman = c.getDiffieHellman,
            r.createDiffieHellman = c.createDiffieHellman,
            r.DiffieHellman = c.DiffieHellman;
            var u = e("browserify-sign");
            r.createSign = u.createSign,
            r.Sign = u.Sign,
            r.createVerify = u.createVerify,
            r.Verify = u.Verify,
            r.createECDH = e("create-ecdh");
            var f = e("public-encrypt");
            r.publicEncrypt = f.publicEncrypt,
            r.privateEncrypt = f.privateEncrypt,
            r.publicDecrypt = f.publicDecrypt,
            r.privateDecrypt = f.privateDecrypt;
            var h = e("randomfill");
            r.randomFill = h.randomFill,
            r.randomFillSync = h.randomFillSync,
            r.createCredentials = function() {
                throw new Error(["sorry, createCredentials is not implemented yet", "we accept pull requests", "https://github.com/crypto-browserify/crypto-browserify"].join("\n"))
            }
            ,
            r.constants = {
                DH_CHECK_P_NOT_SAFE_PRIME: 2,
                DH_CHECK_P_NOT_PRIME: 1,
                DH_UNABLE_TO_CHECK_GENERATOR: 4,
                DH_NOT_SUITABLE_GENERATOR: 8,
                NPN_ENABLED: 1,
                ALPN_ENABLED: 1,
                RSA_PKCS1_PADDING: 1,
                RSA_SSLV23_PADDING: 2,
                RSA_NO_PADDING: 3,
                RSA_PKCS1_OAEP_PADDING: 4,
                RSA_X931_PADDING: 5,
                RSA_PKCS1_PSS_PADDING: 6,
                POINT_CONVERSION_COMPRESSED: 2,
                POINT_CONVERSION_UNCOMPRESSED: 4,
                POINT_CONVERSION_HYBRID: 6
            }
        }
        , {
            "browserify-cipher": 36,
            "browserify-sign": 43,
            "browserify-sign/algos": 40,
            "create-ecdh": 51,
            "create-hash": 52,
            "create-hmac": 54,
            "diffie-hellman": 63,
            pbkdf2: 112,
            "public-encrypt": 119,
            randombytes: 125,
            randomfill: 126
        }],
        57: [function(e, t, r) {
            "use strict";
            r.utils = e("./des/utils"),
            r.Cipher = e("./des/cipher"),
            r.DES = e("./des/des"),
            r.CBC = e("./des/cbc"),
            r.EDE = e("./des/ede")
        }
        , {
            "./des/cbc": 58,
            "./des/cipher": 59,
            "./des/des": 60,
            "./des/ede": 61,
            "./des/utils": 62
        }],
        58: [function(e, t, r) {
            "use strict";
            var i = e("minimalistic-assert")
              , n = e("inherits")
              , s = {};
            function o(e) {
                i.equal(e.length, 8, "Invalid IV length"),
                this.iv = new Array(8);
                for (var t = 0; t < this.iv.length; t++)
                    this.iv[t] = e[t]
            }
            r.instantiate = function(e) {
                function t(t) {
                    e.call(this, t),
                    this._cbcInit()
                }
                n(t, e);
                for (var r = Object.keys(s), i = 0; i < r.length; i++) {
                    var o = r[i];
                    t.prototype[o] = s[o]
                }
                return t.create = function(e) {
                    return new t(e)
                }
                ,
                t
            }
            ,
            s._cbcInit = function() {
                var e = new o(this.options.iv);
                this._cbcState = e
            }
            ,
            s._update = function(e, t, r, i) {
                var n = this._cbcState
                  , s = this.constructor.super_.prototype
                  , o = n.iv;
                if ("encrypt" === this.type) {
                    for (var a = 0; a < this.blockSize; a++)
                        o[a] ^= e[t + a];
                    s._update.call(this, o, 0, r, i);
                    for (a = 0; a < this.blockSize; a++)
                        o[a] = r[i + a]
                } else {
                    s._update.call(this, e, t, r, i);
                    for (a = 0; a < this.blockSize; a++)
                        r[i + a] ^= o[a];
                    for (a = 0; a < this.blockSize; a++)
                        o[a] = e[t + a]
                }
            }
        }
        , {
            inherits: 100,
            "minimalistic-assert": 105
        }],
        59: [function(e, t, r) {
            "use strict";
            var i = e("minimalistic-assert");
            function n(e) {
                this.options = e,
                this.type = this.options.type,
                this.blockSize = 8,
                this._init(),
                this.buffer = new Array(this.blockSize),
                this.bufferOff = 0
            }
            t.exports = n,
            n.prototype._init = function() {}
            ,
            n.prototype.update = function(e) {
                return 0 === e.length ? [] : "decrypt" === this.type ? this._updateDecrypt(e) : this._updateEncrypt(e)
            }
            ,
            n.prototype._buffer = function(e, t) {
                for (var r = Math.min(this.buffer.length - this.bufferOff, e.length - t), i = 0; i < r; i++)
                    this.buffer[this.bufferOff + i] = e[t + i];
                return this.bufferOff += r,
                r
            }
            ,
            n.prototype._flushBuffer = function(e, t) {
                return this._update(this.buffer, 0, e, t),
                this.bufferOff = 0,
                this.blockSize
            }
            ,
            n.prototype._updateEncrypt = function(e) {
                var t = 0
                  , r = 0
                  , i = (this.bufferOff + e.length) / this.blockSize | 0
                  , n = new Array(i * this.blockSize);
                0 !== this.bufferOff && (t += this._buffer(e, t),
                this.bufferOff === this.buffer.length && (r += this._flushBuffer(n, r)));
                for (var s = e.length - (e.length - t) % this.blockSize; t < s; t += this.blockSize)
                    this._update(e, t, n, r),
                    r += this.blockSize;
                for (; t < e.length; t++,
                this.bufferOff++)
                    this.buffer[this.bufferOff] = e[t];
                return n
            }
            ,
            n.prototype._updateDecrypt = function(e) {
                for (var t = 0, r = 0, i = Math.ceil((this.bufferOff + e.length) / this.blockSize) - 1, n = new Array(i * this.blockSize); i > 0; i--)
                    t += this._buffer(e, t),
                    r += this._flushBuffer(n, r);
                return t += this._buffer(e, t),
                n
            }
            ,
            n.prototype.final = function(e) {
                var t, r;
                return e && (t = this.update(e)),
                r = "encrypt" === this.type ? this._finalEncrypt() : this._finalDecrypt(),
                t ? t.concat(r) : r
            }
            ,
            n.prototype._pad = function(e, t) {
                if (0 === t)
                    return !1;
                for (; t < e.length; )
                    e[t++] = 0;
                return !0
            }
            ,
            n.prototype._finalEncrypt = function() {
                if (!this._pad(this.buffer, this.bufferOff))
                    return [];
                var e = new Array(this.blockSize);
                return this._update(this.buffer, 0, e, 0),
                e
            }
            ,
            n.prototype._unpad = function(e) {
                return e
            }
            ,
            n.prototype._finalDecrypt = function() {
                i.equal(this.bufferOff, this.blockSize, "Not enough data to decrypt");
                var e = new Array(this.blockSize);
                return this._flushBuffer(e, 0),
                this._unpad(e)
            }
        }
        , {
            "minimalistic-assert": 105
        }],
        60: [function(e, t, r) {
            "use strict";
            var i = e("minimalistic-assert")
              , n = e("inherits")
              , s = e("../des")
              , o = s.utils
              , a = s.Cipher;
            function c() {
                this.tmp = new Array(2),
                this.keys = null
            }
            function u(e) {
                a.call(this, e);
                var t = new c;
                this._desState = t,
                this.deriveKeys(t, e.key)
            }
            n(u, a),
            t.exports = u,
            u.create = function(e) {
                return new u(e)
            }
            ;
            var f = [1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1];
            u.prototype.deriveKeys = function(e, t) {
                e.keys = new Array(32),
                i.equal(t.length, this.blockSize, "Invalid key length");
                var r = o.readUInt32BE(t, 0)
                  , n = o.readUInt32BE(t, 4);
                o.pc1(r, n, e.tmp, 0),
                r = e.tmp[0],
                n = e.tmp[1];
                for (var s = 0; s < e.keys.length; s += 2) {
                    var a = f[s >>> 1];
                    r = o.r28shl(r, a),
                    n = o.r28shl(n, a),
                    o.pc2(r, n, e.keys, s)
                }
            }
            ,
            u.prototype._update = function(e, t, r, i) {
                var n = this._desState
                  , s = o.readUInt32BE(e, t)
                  , a = o.readUInt32BE(e, t + 4);
                o.ip(s, a, n.tmp, 0),
                s = n.tmp[0],
                a = n.tmp[1],
                "encrypt" === this.type ? this._encrypt(n, s, a, n.tmp, 0) : this._decrypt(n, s, a, n.tmp, 0),
                s = n.tmp[0],
                a = n.tmp[1],
                o.writeUInt32BE(r, s, i),
                o.writeUInt32BE(r, a, i + 4)
            }
            ,
            u.prototype._pad = function(e, t) {
                for (var r = e.length - t, i = t; i < e.length; i++)
                    e[i] = r;
                return !0
            }
            ,
            u.prototype._unpad = function(e) {
                for (var t = e[e.length - 1], r = e.length - t; r < e.length; r++)
                    i.equal(e[r], t);
                return e.slice(0, e.length - t)
            }
            ,
            u.prototype._encrypt = function(e, t, r, i, n) {
                for (var s = t, a = r, c = 0; c < e.keys.length; c += 2) {
                    var u = e.keys[c]
                      , f = e.keys[c + 1];
                    o.expand(a, e.tmp, 0),
                    u ^= e.tmp[0],
                    f ^= e.tmp[1];
                    var h = o.substitute(u, f)
                      , l = a;
                    a = (s ^ o.permute(h)) >>> 0,
                    s = l
                }
                o.rip(a, s, i, n)
            }
            ,
            u.prototype._decrypt = function(e, t, r, i, n) {
                for (var s = r, a = t, c = e.keys.length - 2; c >= 0; c -= 2) {
                    var u = e.keys[c]
                      , f = e.keys[c + 1];
                    o.expand(s, e.tmp, 0),
                    u ^= e.tmp[0],
                    f ^= e.tmp[1];
                    var h = o.substitute(u, f)
                      , l = s;
                    s = (a ^ o.permute(h)) >>> 0,
                    a = l
                }
                o.rip(s, a, i, n)
            }
        }
        , {
            "../des": 57,
            inherits: 100,
            "minimalistic-assert": 105
        }],
        61: [function(e, t, r) {
            "use strict";
            var i = e("minimalistic-assert")
              , n = e("inherits")
              , s = e("../des")
              , o = s.Cipher
              , a = s.DES;
            function c(e, t) {
                i.equal(t.length, 24, "Invalid key length");
                var r = t.slice(0, 8)
                  , n = t.slice(8, 16)
                  , s = t.slice(16, 24);
                this.ciphers = "encrypt" === e ? [a.create({
                    type: "encrypt",
                    key: r
                }), a.create({
                    type: "decrypt",
                    key: n
                }), a.create({
                    type: "encrypt",
                    key: s
                })] : [a.create({
                    type: "decrypt",
                    key: s
                }), a.create({
                    type: "encrypt",
                    key: n
                }), a.create({
                    type: "decrypt",
                    key: r
                })]
            }
            function u(e) {
                o.call(this, e);
                var t = new c(this.type,this.options.key);
                this._edeState = t
            }
            n(u, o),
            t.exports = u,
            u.create = function(e) {
                return new u(e)
            }
            ,
            u.prototype._update = function(e, t, r, i) {
                var n = this._edeState;
                n.ciphers[0]._update(e, t, r, i),
                n.ciphers[1]._update(r, i, r, i),
                n.ciphers[2]._update(r, i, r, i)
            }
            ,
            u.prototype._pad = a.prototype._pad,
            u.prototype._unpad = a.prototype._unpad
        }
        , {
            "../des": 57,
            inherits: 100,
            "minimalistic-assert": 105
        }],
        62: [function(e, t, r) {
            "use strict";
            r.readUInt32BE = function(e, t) {
                return (e[0 + t] << 24 | e[1 + t] << 16 | e[2 + t] << 8 | e[3 + t]) >>> 0
            }
            ,
            r.writeUInt32BE = function(e, t, r) {
                e[0 + r] = t >>> 24,
                e[1 + r] = t >>> 16 & 255,
                e[2 + r] = t >>> 8 & 255,
                e[3 + r] = 255 & t
            }
            ,
            r.ip = function(e, t, r, i) {
                for (var n = 0, s = 0, o = 6; o >= 0; o -= 2) {
                    for (var a = 0; a <= 24; a += 8)
                        n <<= 1,
                        n |= t >>> a + o & 1;
                    for (a = 0; a <= 24; a += 8)
                        n <<= 1,
                        n |= e >>> a + o & 1
                }
                for (o = 6; o >= 0; o -= 2) {
                    for (a = 1; a <= 25; a += 8)
                        s <<= 1,
                        s |= t >>> a + o & 1;
                    for (a = 1; a <= 25; a += 8)
                        s <<= 1,
                        s |= e >>> a + o & 1
                }
                r[i + 0] = n >>> 0,
                r[i + 1] = s >>> 0
            }
            ,
            r.rip = function(e, t, r, i) {
                for (var n = 0, s = 0, o = 0; o < 4; o++)
                    for (var a = 24; a >= 0; a -= 8)
                        n <<= 1,
                        n |= t >>> a + o & 1,
                        n <<= 1,
                        n |= e >>> a + o & 1;
                for (o = 4; o < 8; o++)
                    for (a = 24; a >= 0; a -= 8)
                        s <<= 1,
                        s |= t >>> a + o & 1,
                        s <<= 1,
                        s |= e >>> a + o & 1;
                r[i + 0] = n >>> 0,
                r[i + 1] = s >>> 0
            }
            ,
            r.pc1 = function(e, t, r, i) {
                for (var n = 0, s = 0, o = 7; o >= 5; o--) {
                    for (var a = 0; a <= 24; a += 8)
                        n <<= 1,
                        n |= t >> a + o & 1;
                    for (a = 0; a <= 24; a += 8)
                        n <<= 1,
                        n |= e >> a + o & 1
                }
                for (a = 0; a <= 24; a += 8)
                    n <<= 1,
                    n |= t >> a + o & 1;
                for (o = 1; o <= 3; o++) {
                    for (a = 0; a <= 24; a += 8)
                        s <<= 1,
                        s |= t >> a + o & 1;
                    for (a = 0; a <= 24; a += 8)
                        s <<= 1,
                        s |= e >> a + o & 1
                }
                for (a = 0; a <= 24; a += 8)
                    s <<= 1,
                    s |= e >> a + o & 1;
                r[i + 0] = n >>> 0,
                r[i + 1] = s >>> 0
            }
            ,
            r.r28shl = function(e, t) {
                return e << t & 268435455 | e >>> 28 - t
            }
            ;
            var i = [14, 11, 17, 4, 27, 23, 25, 0, 13, 22, 7, 18, 5, 9, 16, 24, 2, 20, 12, 21, 1, 8, 15, 26, 15, 4, 25, 19, 9, 1, 26, 16, 5, 11, 23, 8, 12, 7, 17, 0, 22, 3, 10, 14, 6, 20, 27, 24];
            r.pc2 = function(e, t, r, n) {
                for (var s = 0, o = 0, a = i.length >>> 1, c = 0; c < a; c++)
                    s <<= 1,
                    s |= e >>> i[c] & 1;
                for (c = a; c < i.length; c++)
                    o <<= 1,
                    o |= t >>> i[c] & 1;
                r[n + 0] = s >>> 0,
                r[n + 1] = o >>> 0
            }
            ,
            r.expand = function(e, t, r) {
                var i = 0
                  , n = 0;
                i = (1 & e) << 5 | e >>> 27;
                for (var s = 23; s >= 15; s -= 4)
                    i <<= 6,
                    i |= e >>> s & 63;
                for (s = 11; s >= 3; s -= 4)
                    n |= e >>> s & 63,
                    n <<= 6;
                n |= (31 & e) << 1 | e >>> 31,
                t[r + 0] = i >>> 0,
                t[r + 1] = n >>> 0
            }
            ;
            var n = [14, 0, 4, 15, 13, 7, 1, 4, 2, 14, 15, 2, 11, 13, 8, 1, 3, 10, 10, 6, 6, 12, 12, 11, 5, 9, 9, 5, 0, 3, 7, 8, 4, 15, 1, 12, 14, 8, 8, 2, 13, 4, 6, 9, 2, 1, 11, 7, 15, 5, 12, 11, 9, 3, 7, 14, 3, 10, 10, 0, 5, 6, 0, 13, 15, 3, 1, 13, 8, 4, 14, 7, 6, 15, 11, 2, 3, 8, 4, 14, 9, 12, 7, 0, 2, 1, 13, 10, 12, 6, 0, 9, 5, 11, 10, 5, 0, 13, 14, 8, 7, 10, 11, 1, 10, 3, 4, 15, 13, 4, 1, 2, 5, 11, 8, 6, 12, 7, 6, 12, 9, 0, 3, 5, 2, 14, 15, 9, 10, 13, 0, 7, 9, 0, 14, 9, 6, 3, 3, 4, 15, 6, 5, 10, 1, 2, 13, 8, 12, 5, 7, 14, 11, 12, 4, 11, 2, 15, 8, 1, 13, 1, 6, 10, 4, 13, 9, 0, 8, 6, 15, 9, 3, 8, 0, 7, 11, 4, 1, 15, 2, 14, 12, 3, 5, 11, 10, 5, 14, 2, 7, 12, 7, 13, 13, 8, 14, 11, 3, 5, 0, 6, 6, 15, 9, 0, 10, 3, 1, 4, 2, 7, 8, 2, 5, 12, 11, 1, 12, 10, 4, 14, 15, 9, 10, 3, 6, 15, 9, 0, 0, 6, 12, 10, 11, 1, 7, 13, 13, 8, 15, 9, 1, 4, 3, 5, 14, 11, 5, 12, 2, 7, 8, 2, 4, 14, 2, 14, 12, 11, 4, 2, 1, 12, 7, 4, 10, 7, 11, 13, 6, 1, 8, 5, 5, 0, 3, 15, 15, 10, 13, 3, 0, 9, 14, 8, 9, 6, 4, 11, 2, 8, 1, 12, 11, 7, 10, 1, 13, 14, 7, 2, 8, 13, 15, 6, 9, 15, 12, 0, 5, 9, 6, 10, 3, 4, 0, 5, 14, 3, 12, 10, 1, 15, 10, 4, 15, 2, 9, 7, 2, 12, 6, 9, 8, 5, 0, 6, 13, 1, 3, 13, 4, 14, 14, 0, 7, 11, 5, 3, 11, 8, 9, 4, 14, 3, 15, 2, 5, 12, 2, 9, 8, 5, 12, 15, 3, 10, 7, 11, 0, 14, 4, 1, 10, 7, 1, 6, 13, 0, 11, 8, 6, 13, 4, 13, 11, 0, 2, 11, 14, 7, 15, 4, 0, 9, 8, 1, 13, 10, 3, 14, 12, 3, 9, 5, 7, 12, 5, 2, 10, 15, 6, 8, 1, 6, 1, 6, 4, 11, 11, 13, 13, 8, 12, 1, 3, 4, 7, 10, 14, 7, 10, 9, 15, 5, 6, 0, 8, 15, 0, 14, 5, 2, 9, 3, 2, 12, 13, 1, 2, 15, 8, 13, 4, 8, 6, 10, 15, 3, 11, 7, 1, 4, 10, 12, 9, 5, 3, 6, 14, 11, 5, 0, 0, 14, 12, 9, 7, 2, 7, 2, 11, 1, 4, 14, 1, 7, 9, 4, 12, 10, 14, 8, 2, 13, 0, 15, 6, 12, 10, 9, 13, 0, 15, 3, 3, 5, 5, 6, 8, 11];
            r.substitute = function(e, t) {
                for (var r = 0, i = 0; i < 4; i++) {
                    r <<= 4,
                    r |= n[64 * i + (e >>> 18 - 6 * i & 63)]
                }
                for (i = 0; i < 4; i++) {
                    r <<= 4,
                    r |= n[256 + 64 * i + (t >>> 18 - 6 * i & 63)]
                }
                return r >>> 0
            }
            ;
            var s = [16, 25, 12, 11, 3, 20, 4, 15, 31, 17, 9, 6, 27, 14, 1, 22, 30, 24, 8, 18, 0, 5, 29, 23, 13, 19, 2, 26, 10, 21, 28, 7];
            r.permute = function(e) {
                for (var t = 0, r = 0; r < s.length; r++)
                    t <<= 1,
                    t |= e >>> s[r] & 1;
                return t >>> 0
            }
            ,
            r.padSplit = function(e, t, r) {
                for (var i = e.toString(2); i.length < t; )
                    i = "0" + i;
                for (var n = [], s = 0; s < t; s += r)
                    n.push(i.slice(s, s + r));
                return n.join(" ")
            }
        }
        , {}],
        63: [function(e, t, r) {
            (function(t) {
                var i = e("./lib/generatePrime")
                  , n = e("./lib/primes.json")
                  , s = e("./lib/dh");
                var o = {
                    binary: !0,
                    hex: !0,
                    base64: !0
                };
                r.DiffieHellmanGroup = r.createDiffieHellmanGroup = r.getDiffieHellman = function(e) {
                    var r = new t(n[e].prime,"hex")
                      , i = new t(n[e].gen,"hex");
                    return new s(r,i)
                }
                ,
                r.createDiffieHellman = r.DiffieHellman = function e(r, n, a, c) {
                    return t.isBuffer(n) || void 0 === o[n] ? e(r, "binary", n, a) : (n = n || "binary",
                    c = c || "binary",
                    a = a || new t([2]),
                    t.isBuffer(a) || (a = new t(a,c)),
                    "number" == typeof r ? new s(i(r, a),a,!0) : (t.isBuffer(r) || (r = new t(r,n)),
                    new s(r,a,!0)))
                }
            }
            ).call(this, e("buffer").Buffer)
        }
        , {
            "./lib/dh": 64,
            "./lib/generatePrime": 65,
            "./lib/primes.json": 66,
            buffer: 48
        }],
        64: [function(e, t, r) {
            (function(r) {
                var i = e("bn.js")
                  , n = new (e("miller-rabin"))
                  , s = new i(24)
                  , o = new i(11)
                  , a = new i(10)
                  , c = new i(3)
                  , u = new i(7)
                  , f = e("./generatePrime")
                  , h = e("randombytes");
                function l(e, t) {
                    return t = t || "utf8",
                    r.isBuffer(e) || (e = new r(e,t)),
                    this._pub = new i(e),
                    this
                }
                function d(e, t) {
                    return t = t || "utf8",
                    r.isBuffer(e) || (e = new r(e,t)),
                    this._priv = new i(e),
                    this
                }
                t.exports = b;
                var p = {};
                function b(e, t, r) {
                    this.setGenerator(t),
                    this.__prime = new i(e),
                    this._prime = i.mont(this.__prime),
                    this._primeLen = e.length,
                    this._pub = void 0,
                    this._priv = void 0,
                    this._primeCode = void 0,
                    r ? (this.setPublicKey = l,
                    this.setPrivateKey = d) : this._primeCode = 8
                }
                function g(e, t) {
                    var i = new r(e.toArray());
                    return t ? i.toString(t) : i
                }
                Object.defineProperty(b.prototype, "verifyError", {
                    enumerable: !0,
                    get: function() {
                        return "number" != typeof this._primeCode && (this._primeCode = function(e, t) {
                            var r = t.toString("hex")
                              , i = [r, e.toString(16)].join("_");
                            if (i in p)
                                return p[i];
                            var h, l = 0;
                            if (e.isEven() || !f.simpleSieve || !f.fermatTest(e) || !n.test(e))
                                return l += 1,
                                l += "02" === r || "05" === r ? 8 : 4,
                                p[i] = l,
                                l;
                            switch (n.test(e.shrn(1)) || (l += 2),
                            r) {
                            case "02":
                                e.mod(s).cmp(o) && (l += 8);
                                break;
                            case "05":
                                (h = e.mod(a)).cmp(c) && h.cmp(u) && (l += 8);
                                break;
                            default:
                                l += 4
                            }
                            return p[i] = l,
                            l
                        }(this.__prime, this.__gen)),
                        this._primeCode
                    }
                }),
                b.prototype.generateKeys = function() {
                    return this._priv || (this._priv = new i(h(this._primeLen))),
                    this._pub = this._gen.toRed(this._prime).redPow(this._priv).fromRed(),
                    this.getPublicKey()
                }
                ,
                b.prototype.computeSecret = function(e) {
                    var t = (e = (e = new i(e)).toRed(this._prime)).redPow(this._priv).fromRed()
                      , n = new r(t.toArray())
                      , s = this.getPrime();
                    if (n.length < s.length) {
                        var o = new r(s.length - n.length);
                        o.fill(0),
                        n = r.concat([o, n])
                    }
                    return n
                }
                ,
                b.prototype.getPublicKey = function(e) {
                    return g(this._pub, e)
                }
                ,
                b.prototype.getPrivateKey = function(e) {
                    return g(this._priv, e)
                }
                ,
                b.prototype.getPrime = function(e) {
                    return g(this.__prime, e)
                }
                ,
                b.prototype.getGenerator = function(e) {
                    return g(this._gen, e)
                }
                ,
                b.prototype.setGenerator = function(e, t) {
                    return t = t || "utf8",
                    r.isBuffer(e) || (e = new r(e,t)),
                    this.__gen = e,
                    this._gen = new i(e),
                    this
                }
            }
            ).call(this, e("buffer").Buffer)
        }
        , {
            "./generatePrime": 65,
            "bn.js": 16,
            buffer: 48,
            "miller-rabin": 104,
            randombytes: 125
        }],
        65: [function(e, t, r) {
            var i = e("randombytes");
            t.exports = y,
            y.simpleSieve = g,
            y.fermatTest = m;
            var n = e("bn.js")
              , s = new n(24)
              , o = new (e("miller-rabin"))
              , a = new n(1)
              , c = new n(2)
              , u = new n(5)
              , f = (new n(16),
            new n(8),
            new n(10))
              , h = new n(3)
              , l = (new n(7),
            new n(11))
              , d = new n(4)
              , p = (new n(12),
            null);
            function b() {
                if (null !== p)
                    return p;
                var e = [];
                e[0] = 2;
                for (var t = 1, r = 3; r < 1048576; r += 2) {
                    for (var i = Math.ceil(Math.sqrt(r)), n = 0; n < t && e[n] <= i && r % e[n] != 0; n++)
                        ;
                    t !== n && e[n] <= i || (e[t++] = r)
                }
                return p = e,
                e
            }
            function g(e) {
                for (var t = b(), r = 0; r < t.length; r++)
                    if (0 === e.modn(t[r]))
                        return 0 === e.cmpn(t[r]);
                return !0
            }
            function m(e) {
                var t = n.mont(e);
                return 0 === c.toRed(t).redPow(e.subn(1)).fromRed().cmpn(1)
            }
            function y(e, t) {
                if (e < 16)
                    return new n(2 === t || 5 === t ? [140, 123] : [140, 39]);
                var r, p;
                for (t = new n(t); ; ) {
                    for (r = new n(i(Math.ceil(e / 8))); r.bitLength() > e; )
                        r.ishrn(1);
                    if (r.isEven() && r.iadd(a),
                    r.testn(1) || r.iadd(c),
                    t.cmp(c)) {
                        if (!t.cmp(u))
                            for (; r.mod(f).cmp(h); )
                                r.iadd(d)
                    } else
                        for (; r.mod(s).cmp(l); )
                            r.iadd(d);
                    if (g(p = r.shrn(1)) && g(r) && m(p) && m(r) && o.test(p) && o.test(r))
                        return r
                }
            }
        }
        , {
            "bn.js": 16,
            "miller-rabin": 104,
            randombytes: 125
        }],
        66: [function(e, t, r) {
            t.exports = {
                modp1: {
                    gen: "02",
                    prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a63a3620ffffffffffffffff"
                },
                modp2: {
                    gen: "02",
                    prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece65381ffffffffffffffff"
                },
                modp5: {
                    gen: "02",
                    prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca237327ffffffffffffffff"
                },
                modp14: {
                    gen: "02",
                    prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aacaa68ffffffffffffffff"
                },
                modp15: {
                    gen: "02",
                    prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a93ad2caffffffffffffffff"
                },
                modp16: {
                    gen: "02",
                    prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c934063199ffffffffffffffff"
                },
                modp17: {
                    gen: "02",
                    prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dcc4024ffffffffffffffff"
                },
                modp18: {
                    gen: "02",
                    prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dbe115974a3926f12fee5e438777cb6a932df8cd8bec4d073b931ba3bc832b68d9dd300741fa7bf8afc47ed2576f6936ba424663aab639c5ae4f5683423b4742bf1c978238f16cbe39d652de3fdb8befc848ad922222e04a4037c0713eb57a81a23f0c73473fc646cea306b4bcbc8862f8385ddfa9d4b7fa2c087e879683303ed5bdd3a062b3cf5b3a278a66d2a13f83f44f82ddf310ee074ab6a364597e899a0255dc164f31cc50846851df9ab48195ded7ea1b1d510bd7ee74d73faf36bc31ecfa268359046f4eb879f924009438b481c6cd7889a002ed5ee382bc9190da6fc026e479558e4475677e9aa9e3050e2765694dfc81f56e880b96e7160c980dd98edd3dfffffffffffffffff"
                }
            }
        }
        , {}],
        67: [function(e, t, r) {
            "use strict";
            var i = r;
            i.version = e("../package.json").version,
            i.utils = e("./elliptic/utils"),
            i.rand = e("brorand"),
            i.curve = e("./elliptic/curve"),
            i.curves = e("./elliptic/curves"),
            i.ec = e("./elliptic/ec"),
            i.eddsa = e("./elliptic/eddsa")
        }
        , {
            "../package.json": 82,
            "./elliptic/curve": 70,
            "./elliptic/curves": 73,
            "./elliptic/ec": 74,
            "./elliptic/eddsa": 77,
            "./elliptic/utils": 81,
            brorand: 17
        }],
        68: [function(e, t, r) {
            "use strict";
            var i = e("bn.js")
              , n = e("../utils")
              , s = n.getNAF
              , o = n.getJSF
              , a = n.assert;
            function c(e, t) {
                this.type = e,
                this.p = new i(t.p,16),
                this.red = t.prime ? i.red(t.prime) : i.mont(this.p),
                this.zero = new i(0).toRed(this.red),
                this.one = new i(1).toRed(this.red),
                this.two = new i(2).toRed(this.red),
                this.n = t.n && new i(t.n,16),
                this.g = t.g && this.pointFromJSON(t.g, t.gRed),
                this._wnafT1 = new Array(4),
                this._wnafT2 = new Array(4),
                this._wnafT3 = new Array(4),
                this._wnafT4 = new Array(4);
                var r = this.n && this.p.div(this.n);
                !r || r.cmpn(100) > 0 ? this.redN = null : (this._maxwellTrick = !0,
                this.redN = this.n.toRed(this.red))
            }
            function u(e, t) {
                this.curve = e,
                this.type = t,
                this.precomputed = null
            }
            t.exports = c,
            c.prototype.point = function() {
                throw new Error("Not implemented")
            }
            ,
            c.prototype.validate = function() {
                throw new Error("Not implemented")
            }
            ,
            c.prototype._fixedNafMul = function(e, t) {
                a(e.precomputed);
                var r = e._getDoubles()
                  , i = s(t, 1)
                  , n = (1 << r.step + 1) - (r.step % 2 == 0 ? 2 : 1);
                n /= 3;
                for (var o = [], c = 0; c < i.length; c += r.step) {
                    var u = 0;
                    for (t = c + r.step - 1; t >= c; t--)
                        u = (u << 1) + i[t];
                    o.push(u)
                }
                for (var f = this.jpoint(null, null, null), h = this.jpoint(null, null, null), l = n; l > 0; l--) {
                    for (c = 0; c < o.length; c++) {
                        (u = o[c]) === l ? h = h.mixedAdd(r.points[c]) : u === -l && (h = h.mixedAdd(r.points[c].neg()))
                    }
                    f = f.add(h)
                }
                return f.toP()
            }
            ,
            c.prototype._wnafMul = function(e, t) {
                var r = 4
                  , i = e._getNAFPoints(r);
                r = i.wnd;
                for (var n = i.points, o = s(t, r), c = this.jpoint(null, null, null), u = o.length - 1; u >= 0; u--) {
                    for (t = 0; u >= 0 && 0 === o[u]; u--)
                        t++;
                    if (u >= 0 && t++,
                    c = c.dblp(t),
                    u < 0)
                        break;
                    var f = o[u];
                    a(0 !== f),
                    c = "affine" === e.type ? f > 0 ? c.mixedAdd(n[f - 1 >> 1]) : c.mixedAdd(n[-f - 1 >> 1].neg()) : f > 0 ? c.add(n[f - 1 >> 1]) : c.add(n[-f - 1 >> 1].neg())
                }
                return "affine" === e.type ? c.toP() : c
            }
            ,
            c.prototype._wnafMulAdd = function(e, t, r, i, n) {
                for (var a = this._wnafT1, c = this._wnafT2, u = this._wnafT3, f = 0, h = 0; h < i; h++) {
                    var l = (A = t[h])._getNAFPoints(e);
                    a[h] = l.wnd,
                    c[h] = l.points
                }
                for (h = i - 1; h >= 1; h -= 2) {
                    var d = h - 1
                      , p = h;
                    if (1 === a[d] && 1 === a[p]) {
                        var b = [t[d], null, null, t[p]];
                        0 === t[d].y.cmp(t[p].y) ? (b[1] = t[d].add(t[p]),
                        b[2] = t[d].toJ().mixedAdd(t[p].neg())) : 0 === t[d].y.cmp(t[p].y.redNeg()) ? (b[1] = t[d].toJ().mixedAdd(t[p]),
                        b[2] = t[d].add(t[p].neg())) : (b[1] = t[d].toJ().mixedAdd(t[p]),
                        b[2] = t[d].toJ().mixedAdd(t[p].neg()));
                        var g = [-3, -1, -5, -7, 0, 7, 5, 1, 3]
                          , m = o(r[d], r[p]);
                        f = Math.max(m[0].length, f),
                        u[d] = new Array(f),
                        u[p] = new Array(f);
                        for (var y = 0; y < f; y++) {
                            var v = 0 | m[0][y]
                              , w = 0 | m[1][y];
                            u[d][y] = g[3 * (v + 1) + (w + 1)],
                            u[p][y] = 0,
                            c[d] = b
                        }
                    } else
                        u[d] = s(r[d], a[d]),
                        u[p] = s(r[p], a[p]),
                        f = Math.max(u[d].length, f),
                        f = Math.max(u[p].length, f)
                }
                var E = this.jpoint(null, null, null)
                  , _ = this._wnafT4;
                for (h = f; h >= 0; h--) {
                    for (var S = 0; h >= 0; ) {
                        var k = !0;
                        for (y = 0; y < i; y++)
                            _[y] = 0 | u[y][h],
                            0 !== _[y] && (k = !1);
                        if (!k)
                            break;
                        S++,
                        h--
                    }
                    if (h >= 0 && S++,
                    E = E.dblp(S),
                    h < 0)
                        break;
                    for (y = 0; y < i; y++) {
                        var A, C = _[y];
                        0 !== C && (C > 0 ? A = c[y][C - 1 >> 1] : C < 0 && (A = c[y][-C - 1 >> 1].neg()),
                        E = "affine" === A.type ? E.mixedAdd(A) : E.add(A))
                    }
                }
                for (h = 0; h < i; h++)
                    c[h] = null;
                return n ? E : E.toP()
            }
            ,
            c.BasePoint = u,
            u.prototype.eq = function() {
                throw new Error("Not implemented")
            }
            ,
            u.prototype.validate = function() {
                return this.curve.validate(this)
            }
            ,
            c.prototype.decodePoint = function(e, t) {
                e = n.toArray(e, t);
                var r = this.p.byteLength();
                if ((4 === e[0] || 6 === e[0] || 7 === e[0]) && e.length - 1 == 2 * r)
                    return 6 === e[0] ? a(e[e.length - 1] % 2 == 0) : 7 === e[0] && a(e[e.length - 1] % 2 == 1),
                    this.point(e.slice(1, 1 + r), e.slice(1 + r, 1 + 2 * r));
                if ((2 === e[0] || 3 === e[0]) && e.length - 1 === r)
                    return this.pointFromX(e.slice(1, 1 + r), 3 === e[0]);
                throw new Error("Unknown point format")
            }
            ,
            u.prototype.encodeCompressed = function(e) {
                return this.encode(e, !0)
            }
            ,
            u.prototype._encode = function(e) {
                var t = this.curve.p.byteLength()
                  , r = this.getX().toArray("be", t);
                return e ? [this.getY().isEven() ? 2 : 3].concat(r) : [4].concat(r, this.getY().toArray("be", t))
            }
            ,
            u.prototype.encode = function(e, t) {
                return n.encode(this._encode(t), e)
            }
            ,
            u.prototype.precompute = function(e) {
                if (this.precomputed)
                    return this;
                var t = {
                    doubles: null,
                    naf: null,
                    beta: null
                };
                return t.naf = this._getNAFPoints(8),
                t.doubles = this._getDoubles(4, e),
                t.beta = this._getBeta(),
                this.precomputed = t,
                this
            }
            ,
            u.prototype._hasDoubles = function(e) {
                if (!this.precomputed)
                    return !1;
                var t = this.precomputed.doubles;
                return !!t && t.points.length >= Math.ceil((e.bitLength() + 1) / t.step)
            }
            ,
            u.prototype._getDoubles = function(e, t) {
                if (this.precomputed && this.precomputed.doubles)
                    return this.precomputed.doubles;
                for (var r = [this], i = this, n = 0; n < t; n += e) {
                    for (var s = 0; s < e; s++)
                        i = i.dbl();
                    r.push(i)
                }
                return {
                    step: e,
                    points: r
                }
            }
            ,
            u.prototype._getNAFPoints = function(e) {
                if (this.precomputed && this.precomputed.naf)
                    return this.precomputed.naf;
                for (var t = [this], r = (1 << e) - 1, i = 1 === r ? null : this.dbl(), n = 1; n < r; n++)
                    t[n] = t[n - 1].add(i);
                return {
                    wnd: e,
                    points: t
                }
            }
            ,
            u.prototype._getBeta = function() {
                return null
            }
            ,
            u.prototype.dblp = function(e) {
                for (var t = this, r = 0; r < e; r++)
                    t = t.dbl();
                return t
            }
        }
        , {
            "../utils": 81,
            "bn.js": 16
        }],
        69: [function(e, t, r) {
            "use strict";
            var i = e("../utils")
              , n = e("bn.js")
              , s = e("inherits")
              , o = e("./base")
              , a = i.assert;
            function c(e) {
                this.twisted = 1 != (0 | e.a),
                this.mOneA = this.twisted && -1 == (0 | e.a),
                this.extended = this.mOneA,
                o.call(this, "edwards", e),
                this.a = new n(e.a,16).umod(this.red.m),
                this.a = this.a.toRed(this.red),
                this.c = new n(e.c,16).toRed(this.red),
                this.c2 = this.c.redSqr(),
                this.d = new n(e.d,16).toRed(this.red),
                this.dd = this.d.redAdd(this.d),
                a(!this.twisted || 0 === this.c.fromRed().cmpn(1)),
                this.oneC = 1 == (0 | e.c)
            }
            function u(e, t, r, i, s) {
                o.BasePoint.call(this, e, "projective"),
                null === t && null === r && null === i ? (this.x = this.curve.zero,
                this.y = this.curve.one,
                this.z = this.curve.one,
                this.t = this.curve.zero,
                this.zOne = !0) : (this.x = new n(t,16),
                this.y = new n(r,16),
                this.z = i ? new n(i,16) : this.curve.one,
                this.t = s && new n(s,16),
                this.x.red || (this.x = this.x.toRed(this.curve.red)),
                this.y.red || (this.y = this.y.toRed(this.curve.red)),
                this.z.red || (this.z = this.z.toRed(this.curve.red)),
                this.t && !this.t.red && (this.t = this.t.toRed(this.curve.red)),
                this.zOne = this.z === this.curve.one,
                this.curve.extended && !this.t && (this.t = this.x.redMul(this.y),
                this.zOne || (this.t = this.t.redMul(this.z.redInvm()))))
            }
            s(c, o),
            t.exports = c,
            c.prototype._mulA = function(e) {
                return this.mOneA ? e.redNeg() : this.a.redMul(e)
            }
            ,
            c.prototype._mulC = function(e) {
                return this.oneC ? e : this.c.redMul(e)
            }
            ,
            c.prototype.jpoint = function(e, t, r, i) {
                return this.point(e, t, r, i)
            }
            ,
            c.prototype.pointFromX = function(e, t) {
                (e = new n(e,16)).red || (e = e.toRed(this.red));
                var r = e.redSqr()
                  , i = this.c2.redSub(this.a.redMul(r))
                  , s = this.one.redSub(this.c2.redMul(this.d).redMul(r))
                  , o = i.redMul(s.redInvm())
                  , a = o.redSqrt();
                if (0 !== a.redSqr().redSub(o).cmp(this.zero))
                    throw new Error("invalid point");
                var c = a.fromRed().isOdd();
                return (t && !c || !t && c) && (a = a.redNeg()),
                this.point(e, a)
            }
            ,
            c.prototype.pointFromY = function(e, t) {
                (e = new n(e,16)).red || (e = e.toRed(this.red));
                var r = e.redSqr()
                  , i = r.redSub(this.c2)
                  , s = r.redMul(this.d).redMul(this.c2).redSub(this.a)
                  , o = i.redMul(s.redInvm());
                if (0 === o.cmp(this.zero)) {
                    if (t)
                        throw new Error("invalid point");
                    return this.point(this.zero, e)
                }
                var a = o.redSqrt();
                if (0 !== a.redSqr().redSub(o).cmp(this.zero))
                    throw new Error("invalid point");
                return a.fromRed().isOdd() !== t && (a = a.redNeg()),
                this.point(a, e)
            }
            ,
            c.prototype.validate = function(e) {
                if (e.isInfinity())
                    return !0;
                e.normalize();
                var t = e.x.redSqr()
                  , r = e.y.redSqr()
                  , i = t.redMul(this.a).redAdd(r)
                  , n = this.c2.redMul(this.one.redAdd(this.d.redMul(t).redMul(r)));
                return 0 === i.cmp(n)
            }
            ,
            s(u, o.BasePoint),
            c.prototype.pointFromJSON = function(e) {
                return u.fromJSON(this, e)
            }
            ,
            c.prototype.point = function(e, t, r, i) {
                return new u(this,e,t,r,i)
            }
            ,
            u.fromJSON = function(e, t) {
                return new u(e,t[0],t[1],t[2])
            }
            ,
            u.prototype.inspect = function() {
                return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + " z: " + this.z.fromRed().toString(16, 2) + ">"
            }
            ,
            u.prototype.isInfinity = function() {
                return 0 === this.x.cmpn(0) && (0 === this.y.cmp(this.z) || this.zOne && 0 === this.y.cmp(this.curve.c))
            }
            ,
            u.prototype._extDbl = function() {
                var e = this.x.redSqr()
                  , t = this.y.redSqr()
                  , r = this.z.redSqr();
                r = r.redIAdd(r);
                var i = this.curve._mulA(e)
                  , n = this.x.redAdd(this.y).redSqr().redISub(e).redISub(t)
                  , s = i.redAdd(t)
                  , o = s.redSub(r)
                  , a = i.redSub(t)
                  , c = n.redMul(o)
                  , u = s.redMul(a)
                  , f = n.redMul(a)
                  , h = o.redMul(s);
                return this.curve.point(c, u, h, f)
            }
            ,
            u.prototype._projDbl = function() {
                var e, t, r, i = this.x.redAdd(this.y).redSqr(), n = this.x.redSqr(), s = this.y.redSqr();
                if (this.curve.twisted) {
                    var o = (u = this.curve._mulA(n)).redAdd(s);
                    if (this.zOne)
                        e = i.redSub(n).redSub(s).redMul(o.redSub(this.curve.two)),
                        t = o.redMul(u.redSub(s)),
                        r = o.redSqr().redSub(o).redSub(o);
                    else {
                        var a = this.z.redSqr()
                          , c = o.redSub(a).redISub(a);
                        e = i.redSub(n).redISub(s).redMul(c),
                        t = o.redMul(u.redSub(s)),
                        r = o.redMul(c)
                    }
                } else {
                    var u = n.redAdd(s);
                    a = this.curve._mulC(this.z).redSqr(),
                    c = u.redSub(a).redSub(a);
                    e = this.curve._mulC(i.redISub(u)).redMul(c),
                    t = this.curve._mulC(u).redMul(n.redISub(s)),
                    r = u.redMul(c)
                }
                return this.curve.point(e, t, r)
            }
            ,
            u.prototype.dbl = function() {
                return this.isInfinity() ? this : this.curve.extended ? this._extDbl() : this._projDbl()
            }
            ,
            u.prototype._extAdd = function(e) {
                var t = this.y.redSub(this.x).redMul(e.y.redSub(e.x))
                  , r = this.y.redAdd(this.x).redMul(e.y.redAdd(e.x))
                  , i = this.t.redMul(this.curve.dd).redMul(e.t)
                  , n = this.z.redMul(e.z.redAdd(e.z))
                  , s = r.redSub(t)
                  , o = n.redSub(i)
                  , a = n.redAdd(i)
                  , c = r.redAdd(t)
                  , u = s.redMul(o)
                  , f = a.redMul(c)
                  , h = s.redMul(c)
                  , l = o.redMul(a);
                return this.curve.point(u, f, l, h)
            }
            ,
            u.prototype._projAdd = function(e) {
                var t, r, i = this.z.redMul(e.z), n = i.redSqr(), s = this.x.redMul(e.x), o = this.y.redMul(e.y), a = this.curve.d.redMul(s).redMul(o), c = n.redSub(a), u = n.redAdd(a), f = this.x.redAdd(this.y).redMul(e.x.redAdd(e.y)).redISub(s).redISub(o), h = i.redMul(c).redMul(f);
                return this.curve.twisted ? (t = i.redMul(u).redMul(o.redSub(this.curve._mulA(s))),
                r = c.redMul(u)) : (t = i.redMul(u).redMul(o.redSub(s)),
                r = this.curve._mulC(c).redMul(u)),
                this.curve.point(h, t, r)
            }
            ,
            u.prototype.add = function(e) {
                return this.isInfinity() ? e : e.isInfinity() ? this : this.curve.extended ? this._extAdd(e) : this._projAdd(e)
            }
            ,
            u.prototype.mul = function(e) {
                return this._hasDoubles(e) ? this.curve._fixedNafMul(this, e) : this.curve._wnafMul(this, e)
            }
            ,
            u.prototype.mulAdd = function(e, t, r) {
                return this.curve._wnafMulAdd(1, [this, t], [e, r], 2, !1)
            }
            ,
            u.prototype.jmulAdd = function(e, t, r) {
                return this.curve._wnafMulAdd(1, [this, t], [e, r], 2, !0)
            }
            ,
            u.prototype.normalize = function() {
                if (this.zOne)
                    return this;
                var e = this.z.redInvm();
                return this.x = this.x.redMul(e),
                this.y = this.y.redMul(e),
                this.t && (this.t = this.t.redMul(e)),
                this.z = this.curve.one,
                this.zOne = !0,
                this
            }
            ,
            u.prototype.neg = function() {
                return this.curve.point(this.x.redNeg(), this.y, this.z, this.t && this.t.redNeg())
            }
            ,
            u.prototype.getX = function() {
                return this.normalize(),
                this.x.fromRed()
            }
            ,
            u.prototype.getY = function() {
                return this.normalize(),
                this.y.fromRed()
            }
            ,
            u.prototype.eq = function(e) {
                return this === e || 0 === this.getX().cmp(e.getX()) && 0 === this.getY().cmp(e.getY())
            }
            ,
            u.prototype.eqXToP = function(e) {
                var t = e.toRed(this.curve.red).redMul(this.z);
                if (0 === this.x.cmp(t))
                    return !0;
                for (var r = e.clone(), i = this.curve.redN.redMul(this.z); ; ) {
                    if (r.iadd(this.curve.n),
                    r.cmp(this.curve.p) >= 0)
                        return !1;
                    if (t.redIAdd(i),
                    0 === this.x.cmp(t))
                        return !0
                }
            }
            ,
            u.prototype.toP = u.prototype.normalize,
            u.prototype.mixedAdd = u.prototype.add
        }
        , {
            "../utils": 81,
            "./base": 68,
            "bn.js": 16,
            inherits: 100
        }],
        70: [function(e, t, r) {
            "use strict";
            var i = r;
            i.base = e("./base"),
            i.short = e("./short"),
            i.mont = e("./mont"),
            i.edwards = e("./edwards")
        }
        , {
            "./base": 68,
            "./edwards": 69,
            "./mont": 71,
            "./short": 72
        }],
        71: [function(e, t, r) {
            "use strict";
            var i = e("bn.js")
              , n = e("inherits")
              , s = e("./base")
              , o = e("../utils");
            function a(e) {
                s.call(this, "mont", e),
                this.a = new i(e.a,16).toRed(this.red),
                this.b = new i(e.b,16).toRed(this.red),
                this.i4 = new i(4).toRed(this.red).redInvm(),
                this.two = new i(2).toRed(this.red),
                this.a24 = this.i4.redMul(this.a.redAdd(this.two))
            }
            function c(e, t, r) {
                s.BasePoint.call(this, e, "projective"),
                null === t && null === r ? (this.x = this.curve.one,
                this.z = this.curve.zero) : (this.x = new i(t,16),
                this.z = new i(r,16),
                this.x.red || (this.x = this.x.toRed(this.curve.red)),
                this.z.red || (this.z = this.z.toRed(this.curve.red)))
            }
            n(a, s),
            t.exports = a,
            a.prototype.validate = function(e) {
                var t = e.normalize().x
                  , r = t.redSqr()
                  , i = r.redMul(t).redAdd(r.redMul(this.a)).redAdd(t);
                return 0 === i.redSqrt().redSqr().cmp(i)
            }
            ,
            n(c, s.BasePoint),
            a.prototype.decodePoint = function(e, t) {
                return this.point(o.toArray(e, t), 1)
            }
            ,
            a.prototype.point = function(e, t) {
                return new c(this,e,t)
            }
            ,
            a.prototype.pointFromJSON = function(e) {
                return c.fromJSON(this, e)
            }
            ,
            c.prototype.precompute = function() {}
            ,
            c.prototype._encode = function() {
                return this.getX().toArray("be", this.curve.p.byteLength())
            }
            ,
            c.fromJSON = function(e, t) {
                return new c(e,t[0],t[1] || e.one)
            }
            ,
            c.prototype.inspect = function() {
                return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " z: " + this.z.fromRed().toString(16, 2) + ">"
            }
            ,
            c.prototype.isInfinity = function() {
                return 0 === this.z.cmpn(0)
            }
            ,
            c.prototype.dbl = function() {
                var e = this.x.redAdd(this.z).redSqr()
                  , t = this.x.redSub(this.z).redSqr()
                  , r = e.redSub(t)
                  , i = e.redMul(t)
                  , n = r.redMul(t.redAdd(this.curve.a24.redMul(r)));
                return this.curve.point(i, n)
            }
            ,
            c.prototype.add = function() {
                throw new Error("Not supported on Montgomery curve")
            }
            ,
            c.prototype.diffAdd = function(e, t) {
                var r = this.x.redAdd(this.z)
                  , i = this.x.redSub(this.z)
                  , n = e.x.redAdd(e.z)
                  , s = e.x.redSub(e.z).redMul(r)
                  , o = n.redMul(i)
                  , a = t.z.redMul(s.redAdd(o).redSqr())
                  , c = t.x.redMul(s.redISub(o).redSqr());
                return this.curve.point(a, c)
            }
            ,
            c.prototype.mul = function(e) {
                for (var t = e.clone(), r = this, i = this.curve.point(null, null), n = []; 0 !== t.cmpn(0); t.iushrn(1))
                    n.push(t.andln(1));
                for (var s = n.length - 1; s >= 0; s--)
                    0 === n[s] ? (r = r.diffAdd(i, this),
                    i = i.dbl()) : (i = r.diffAdd(i, this),
                    r = r.dbl());
                return i
            }
            ,
            c.prototype.mulAdd = function() {
                throw new Error("Not supported on Montgomery curve")
            }
            ,
            c.prototype.jumlAdd = function() {
                throw new Error("Not supported on Montgomery curve")
            }
            ,
            c.prototype.eq = function(e) {
                return 0 === this.getX().cmp(e.getX())
            }
            ,
            c.prototype.normalize = function() {
                return this.x = this.x.redMul(this.z.redInvm()),
                this.z = this.curve.one,
                this
            }
            ,
            c.prototype.getX = function() {
                return this.normalize(),
                this.x.fromRed()
            }
        }
        , {
            "../utils": 81,
            "./base": 68,
            "bn.js": 16,
            inherits: 100
        }],
        72: [function(e, t, r) {
            "use strict";
            var i = e("../utils")
              , n = e("bn.js")
              , s = e("inherits")
              , o = e("./base")
              , a = i.assert;
            function c(e) {
                o.call(this, "short", e),
                this.a = new n(e.a,16).toRed(this.red),
                this.b = new n(e.b,16).toRed(this.red),
                this.tinv = this.two.redInvm(),
                this.zeroA = 0 === this.a.fromRed().cmpn(0),
                this.threeA = 0 === this.a.fromRed().sub(this.p).cmpn(-3),
                this.endo = this._getEndomorphism(e),
                this._endoWnafT1 = new Array(4),
                this._endoWnafT2 = new Array(4)
            }
            function u(e, t, r, i) {
                o.BasePoint.call(this, e, "affine"),
                null === t && null === r ? (this.x = null,
                this.y = null,
                this.inf = !0) : (this.x = new n(t,16),
                this.y = new n(r,16),
                i && (this.x.forceRed(this.curve.red),
                this.y.forceRed(this.curve.red)),
                this.x.red || (this.x = this.x.toRed(this.curve.red)),
                this.y.red || (this.y = this.y.toRed(this.curve.red)),
                this.inf = !1)
            }
            function f(e, t, r, i) {
                o.BasePoint.call(this, e, "jacobian"),
                null === t && null === r && null === i ? (this.x = this.curve.one,
                this.y = this.curve.one,
                this.z = new n(0)) : (this.x = new n(t,16),
                this.y = new n(r,16),
                this.z = new n(i,16)),
                this.x.red || (this.x = this.x.toRed(this.curve.red)),
                this.y.red || (this.y = this.y.toRed(this.curve.red)),
                this.z.red || (this.z = this.z.toRed(this.curve.red)),
                this.zOne = this.z === this.curve.one
            }
            s(c, o),
            t.exports = c,
            c.prototype._getEndomorphism = function(e) {
                if (this.zeroA && this.g && this.n && 1 === this.p.modn(3)) {
                    var t, r;
                    if (e.beta)
                        t = new n(e.beta,16).toRed(this.red);
                    else {
                        var i = this._getEndoRoots(this.p);
                        t = (t = i[0].cmp(i[1]) < 0 ? i[0] : i[1]).toRed(this.red)
                    }
                    if (e.lambda)
                        r = new n(e.lambda,16);
                    else {
                        var s = this._getEndoRoots(this.n);
                        0 === this.g.mul(s[0]).x.cmp(this.g.x.redMul(t)) ? r = s[0] : (r = s[1],
                        a(0 === this.g.mul(r).x.cmp(this.g.x.redMul(t))))
                    }
                    return {
                        beta: t,
                        lambda: r,
                        basis: e.basis ? e.basis.map((function(e) {
                            return {
                                a: new n(e.a,16),
                                b: new n(e.b,16)
                            }
                        }
                        )) : this._getEndoBasis(r)
                    }
                }
            }
            ,
            c.prototype._getEndoRoots = function(e) {
                var t = e === this.p ? this.red : n.mont(e)
                  , r = new n(2).toRed(t).redInvm()
                  , i = r.redNeg()
                  , s = new n(3).toRed(t).redNeg().redSqrt().redMul(r);
                return [i.redAdd(s).fromRed(), i.redSub(s).fromRed()]
            }
            ,
            c.prototype._getEndoBasis = function(e) {
                for (var t, r, i, s, o, a, c, u, f, h = this.n.ushrn(Math.floor(this.n.bitLength() / 2)), l = e, d = this.n.clone(), p = new n(1), b = new n(0), g = new n(0), m = new n(1), y = 0; 0 !== l.cmpn(0); ) {
                    var v = d.div(l);
                    u = d.sub(v.mul(l)),
                    f = g.sub(v.mul(p));
                    var w = m.sub(v.mul(b));
                    if (!i && u.cmp(h) < 0)
                        t = c.neg(),
                        r = p,
                        i = u.neg(),
                        s = f;
                    else if (i && 2 == ++y)
                        break;
                    c = u,
                    d = l,
                    l = u,
                    g = p,
                    p = f,
                    m = b,
                    b = w
                }
                o = u.neg(),
                a = f;
                var E = i.sqr().add(s.sqr());
                return o.sqr().add(a.sqr()).cmp(E) >= 0 && (o = t,
                a = r),
                i.negative && (i = i.neg(),
                s = s.neg()),
                o.negative && (o = o.neg(),
                a = a.neg()),
                [{
                    a: i,
                    b: s
                }, {
                    a: o,
                    b: a
                }]
            }
            ,
            c.prototype._endoSplit = function(e) {
                var t = this.endo.basis
                  , r = t[0]
                  , i = t[1]
                  , n = i.b.mul(e).divRound(this.n)
                  , s = r.b.neg().mul(e).divRound(this.n)
                  , o = n.mul(r.a)
                  , a = s.mul(i.a)
                  , c = n.mul(r.b)
                  , u = s.mul(i.b);
                return {
                    k1: e.sub(o).sub(a),
                    k2: c.add(u).neg()
                }
            }
            ,
            c.prototype.pointFromX = function(e, t) {
                (e = new n(e,16)).red || (e = e.toRed(this.red));
                var r = e.redSqr().redMul(e).redIAdd(e.redMul(this.a)).redIAdd(this.b)
                  , i = r.redSqrt();
                if (0 !== i.redSqr().redSub(r).cmp(this.zero))
                    throw new Error("invalid point");
                var s = i.fromRed().isOdd();
                return (t && !s || !t && s) && (i = i.redNeg()),
                this.point(e, i)
            }
            ,
            c.prototype.validate = function(e) {
                if (e.inf)
                    return !0;
                var t = e.x
                  , r = e.y
                  , i = this.a.redMul(t)
                  , n = t.redSqr().redMul(t).redIAdd(i).redIAdd(this.b);
                return 0 === r.redSqr().redISub(n).cmpn(0)
            }
            ,
            c.prototype._endoWnafMulAdd = function(e, t, r) {
                for (var i = this._endoWnafT1, n = this._endoWnafT2, s = 0; s < e.length; s++) {
                    var o = this._endoSplit(t[s])
                      , a = e[s]
                      , c = a._getBeta();
                    o.k1.negative && (o.k1.ineg(),
                    a = a.neg(!0)),
                    o.k2.negative && (o.k2.ineg(),
                    c = c.neg(!0)),
                    i[2 * s] = a,
                    i[2 * s + 1] = c,
                    n[2 * s] = o.k1,
                    n[2 * s + 1] = o.k2
                }
                for (var u = this._wnafMulAdd(1, i, n, 2 * s, r), f = 0; f < 2 * s; f++)
                    i[f] = null,
                    n[f] = null;
                return u
            }
            ,
            s(u, o.BasePoint),
            c.prototype.point = function(e, t, r) {
                return new u(this,e,t,r)
            }
            ,
            c.prototype.pointFromJSON = function(e, t) {
                return u.fromJSON(this, e, t)
            }
            ,
            u.prototype._getBeta = function() {
                if (this.curve.endo) {
                    var e = this.precomputed;
                    if (e && e.beta)
                        return e.beta;
                    var t = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
                    if (e) {
                        var r = this.curve
                          , i = function(e) {
                            return r.point(e.x.redMul(r.endo.beta), e.y)
                        };
                        e.beta = t,
                        t.precomputed = {
                            beta: null,
                            naf: e.naf && {
                                wnd: e.naf.wnd,
                                points: e.naf.points.map(i)
                            },
                            doubles: e.doubles && {
                                step: e.doubles.step,
                                points: e.doubles.points.map(i)
                            }
                        }
                    }
                    return t
                }
            }
            ,
            u.prototype.toJSON = function() {
                return this.precomputed ? [this.x, this.y, this.precomputed && {
                    doubles: this.precomputed.doubles && {
                        step: this.precomputed.doubles.step,
                        points: this.precomputed.doubles.points.slice(1)
                    },
                    naf: this.precomputed.naf && {
                        wnd: this.precomputed.naf.wnd,
                        points: this.precomputed.naf.points.slice(1)
                    }
                }] : [this.x, this.y]
            }
            ,
            u.fromJSON = function(e, t, r) {
                "string" == typeof t && (t = JSON.parse(t));
                var i = e.point(t[0], t[1], r);
                if (!t[2])
                    return i;
                function n(t) {
                    return e.point(t[0], t[1], r)
                }
                var s = t[2];
                return i.precomputed = {
                    beta: null,
                    doubles: s.doubles && {
                        step: s.doubles.step,
                        points: [i].concat(s.doubles.points.map(n))
                    },
                    naf: s.naf && {
                        wnd: s.naf.wnd,
                        points: [i].concat(s.naf.points.map(n))
                    }
                },
                i
            }
            ,
            u.prototype.inspect = function() {
                return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + ">"
            }
            ,
            u.prototype.isInfinity = function() {
                return this.inf
            }
            ,
            u.prototype.add = function(e) {
                if (this.inf)
                    return e;
                if (e.inf)
                    return this;
                if (this.eq(e))
                    return this.dbl();
                if (this.neg().eq(e))
                    return this.curve.point(null, null);
                if (0 === this.x.cmp(e.x))
                    return this.curve.point(null, null);
                var t = this.y.redSub(e.y);
                0 !== t.cmpn(0) && (t = t.redMul(this.x.redSub(e.x).redInvm()));
                var r = t.redSqr().redISub(this.x).redISub(e.x)
                  , i = t.redMul(this.x.redSub(r)).redISub(this.y);
                return this.curve.point(r, i)
            }
            ,
            u.prototype.dbl = function() {
                if (this.inf)
                    return this;
                var e = this.y.redAdd(this.y);
                if (0 === e.cmpn(0))
                    return this.curve.point(null, null);
                var t = this.curve.a
                  , r = this.x.redSqr()
                  , i = e.redInvm()
                  , n = r.redAdd(r).redIAdd(r).redIAdd(t).redMul(i)
                  , s = n.redSqr().redISub(this.x.redAdd(this.x))
                  , o = n.redMul(this.x.redSub(s)).redISub(this.y);
                return this.curve.point(s, o)
            }
            ,
            u.prototype.getX = function() {
                return this.x.fromRed()
            }
            ,
            u.prototype.getY = function() {
                return this.y.fromRed()
            }
            ,
            u.prototype.mul = function(e) {
                return e = new n(e,16),
                this.isInfinity() ? this : this._hasDoubles(e) ? this.curve._fixedNafMul(this, e) : this.curve.endo ? this.curve._endoWnafMulAdd([this], [e]) : this.curve._wnafMul(this, e)
            }
            ,
            u.prototype.mulAdd = function(e, t, r) {
                var i = [this, t]
                  , n = [e, r];
                return this.curve.endo ? this.curve._endoWnafMulAdd(i, n) : this.curve._wnafMulAdd(1, i, n, 2)
            }
            ,
            u.prototype.jmulAdd = function(e, t, r) {
                var i = [this, t]
                  , n = [e, r];
                return this.curve.endo ? this.curve._endoWnafMulAdd(i, n, !0) : this.curve._wnafMulAdd(1, i, n, 2, !0)
            }
            ,
            u.prototype.eq = function(e) {
                return this === e || this.inf === e.inf && (this.inf || 0 === this.x.cmp(e.x) && 0 === this.y.cmp(e.y))
            }
            ,
            u.prototype.neg = function(e) {
                if (this.inf)
                    return this;
                var t = this.curve.point(this.x, this.y.redNeg());
                if (e && this.precomputed) {
                    var r = this.precomputed
                      , i = function(e) {
                        return e.neg()
                    };
                    t.precomputed = {
                        naf: r.naf && {
                            wnd: r.naf.wnd,
                            points: r.naf.points.map(i)
                        },
                        doubles: r.doubles && {
                            step: r.doubles.step,
                            points: r.doubles.points.map(i)
                        }
                    }
                }
                return t
            }
            ,
            u.prototype.toJ = function() {
                return this.inf ? this.curve.jpoint(null, null, null) : this.curve.jpoint(this.x, this.y, this.curve.one)
            }
            ,
            s(f, o.BasePoint),
            c.prototype.jpoint = function(e, t, r) {
                return new f(this,e,t,r)
            }
            ,
            f.prototype.toP = function() {
                if (this.isInfinity())
                    return this.curve.point(null, null);
                var e = this.z.redInvm()
                  , t = e.redSqr()
                  , r = this.x.redMul(t)
                  , i = this.y.redMul(t).redMul(e);
                return this.curve.point(r, i)
            }
            ,
            f.prototype.neg = function() {
                return this.curve.jpoint(this.x, this.y.redNeg(), this.z)
            }
            ,
            f.prototype.add = function(e) {
                if (this.isInfinity())
                    return e;
                if (e.isInfinity())
                    return this;
                var t = e.z.redSqr()
                  , r = this.z.redSqr()
                  , i = this.x.redMul(t)
                  , n = e.x.redMul(r)
                  , s = this.y.redMul(t.redMul(e.z))
                  , o = e.y.redMul(r.redMul(this.z))
                  , a = i.redSub(n)
                  , c = s.redSub(o);
                if (0 === a.cmpn(0))
                    return 0 !== c.cmpn(0) ? this.curve.jpoint(null, null, null) : this.dbl();
                var u = a.redSqr()
                  , f = u.redMul(a)
                  , h = i.redMul(u)
                  , l = c.redSqr().redIAdd(f).redISub(h).redISub(h)
                  , d = c.redMul(h.redISub(l)).redISub(s.redMul(f))
                  , p = this.z.redMul(e.z).redMul(a);
                return this.curve.jpoint(l, d, p)
            }
            ,
            f.prototype.mixedAdd = function(e) {
                if (this.isInfinity())
                    return e.toJ();
                if (e.isInfinity())
                    return this;
                var t = this.z.redSqr()
                  , r = this.x
                  , i = e.x.redMul(t)
                  , n = this.y
                  , s = e.y.redMul(t).redMul(this.z)
                  , o = r.redSub(i)
                  , a = n.redSub(s);
                if (0 === o.cmpn(0))
                    return 0 !== a.cmpn(0) ? this.curve.jpoint(null, null, null) : this.dbl();
                var c = o.redSqr()
                  , u = c.redMul(o)
                  , f = r.redMul(c)
                  , h = a.redSqr().redIAdd(u).redISub(f).redISub(f)
                  , l = a.redMul(f.redISub(h)).redISub(n.redMul(u))
                  , d = this.z.redMul(o);
                return this.curve.jpoint(h, l, d)
            }
            ,
            f.prototype.dblp = function(e) {
                if (0 === e)
                    return this;
                if (this.isInfinity())
                    return this;
                if (!e)
                    return this.dbl();
                if (this.curve.zeroA || this.curve.threeA) {
                    for (var t = this, r = 0; r < e; r++)
                        t = t.dbl();
                    return t
                }
                var i = this.curve.a
                  , n = this.curve.tinv
                  , s = this.x
                  , o = this.y
                  , a = this.z
                  , c = a.redSqr().redSqr()
                  , u = o.redAdd(o);
                for (r = 0; r < e; r++) {
                    var f = s.redSqr()
                      , h = u.redSqr()
                      , l = h.redSqr()
                      , d = f.redAdd(f).redIAdd(f).redIAdd(i.redMul(c))
                      , p = s.redMul(h)
                      , b = d.redSqr().redISub(p.redAdd(p))
                      , g = p.redISub(b)
                      , m = d.redMul(g);
                    m = m.redIAdd(m).redISub(l);
                    var y = u.redMul(a);
                    r + 1 < e && (c = c.redMul(l)),
                    s = b,
                    a = y,
                    u = m
                }
                return this.curve.jpoint(s, u.redMul(n), a)
            }
            ,
            f.prototype.dbl = function() {
                return this.isInfinity() ? this : this.curve.zeroA ? this._zeroDbl() : this.curve.threeA ? this._threeDbl() : this._dbl()
            }
            ,
            f.prototype._zeroDbl = function() {
                var e, t, r;
                if (this.zOne) {
                    var i = this.x.redSqr()
                      , n = this.y.redSqr()
                      , s = n.redSqr()
                      , o = this.x.redAdd(n).redSqr().redISub(i).redISub(s);
                    o = o.redIAdd(o);
                    var a = i.redAdd(i).redIAdd(i)
                      , c = a.redSqr().redISub(o).redISub(o)
                      , u = s.redIAdd(s);
                    u = (u = u.redIAdd(u)).redIAdd(u),
                    e = c,
                    t = a.redMul(o.redISub(c)).redISub(u),
                    r = this.y.redAdd(this.y)
                } else {
                    var f = this.x.redSqr()
                      , h = this.y.redSqr()
                      , l = h.redSqr()
                      , d = this.x.redAdd(h).redSqr().redISub(f).redISub(l);
                    d = d.redIAdd(d);
                    var p = f.redAdd(f).redIAdd(f)
                      , b = p.redSqr()
                      , g = l.redIAdd(l);
                    g = (g = g.redIAdd(g)).redIAdd(g),
                    e = b.redISub(d).redISub(d),
                    t = p.redMul(d.redISub(e)).redISub(g),
                    r = (r = this.y.redMul(this.z)).redIAdd(r)
                }
                return this.curve.jpoint(e, t, r)
            }
            ,
            f.prototype._threeDbl = function() {
                var e, t, r;
                if (this.zOne) {
                    var i = this.x.redSqr()
                      , n = this.y.redSqr()
                      , s = n.redSqr()
                      , o = this.x.redAdd(n).redSqr().redISub(i).redISub(s);
                    o = o.redIAdd(o);
                    var a = i.redAdd(i).redIAdd(i).redIAdd(this.curve.a)
                      , c = a.redSqr().redISub(o).redISub(o);
                    e = c;
                    var u = s.redIAdd(s);
                    u = (u = u.redIAdd(u)).redIAdd(u),
                    t = a.redMul(o.redISub(c)).redISub(u),
                    r = this.y.redAdd(this.y)
                } else {
                    var f = this.z.redSqr()
                      , h = this.y.redSqr()
                      , l = this.x.redMul(h)
                      , d = this.x.redSub(f).redMul(this.x.redAdd(f));
                    d = d.redAdd(d).redIAdd(d);
                    var p = l.redIAdd(l)
                      , b = (p = p.redIAdd(p)).redAdd(p);
                    e = d.redSqr().redISub(b),
                    r = this.y.redAdd(this.z).redSqr().redISub(h).redISub(f);
                    var g = h.redSqr();
                    g = (g = (g = g.redIAdd(g)).redIAdd(g)).redIAdd(g),
                    t = d.redMul(p.redISub(e)).redISub(g)
                }
                return this.curve.jpoint(e, t, r)
            }
            ,
            f.prototype._dbl = function() {
                var e = this.curve.a
                  , t = this.x
                  , r = this.y
                  , i = this.z
                  , n = i.redSqr().redSqr()
                  , s = t.redSqr()
                  , o = r.redSqr()
                  , a = s.redAdd(s).redIAdd(s).redIAdd(e.redMul(n))
                  , c = t.redAdd(t)
                  , u = (c = c.redIAdd(c)).redMul(o)
                  , f = a.redSqr().redISub(u.redAdd(u))
                  , h = u.redISub(f)
                  , l = o.redSqr();
                l = (l = (l = l.redIAdd(l)).redIAdd(l)).redIAdd(l);
                var d = a.redMul(h).redISub(l)
                  , p = r.redAdd(r).redMul(i);
                return this.curve.jpoint(f, d, p)
            }
            ,
            f.prototype.trpl = function() {
                if (!this.curve.zeroA)
                    return this.dbl().add(this);
                var e = this.x.redSqr()
                  , t = this.y.redSqr()
                  , r = this.z.redSqr()
                  , i = t.redSqr()
                  , n = e.redAdd(e).redIAdd(e)
                  , s = n.redSqr()
                  , o = this.x.redAdd(t).redSqr().redISub(e).redISub(i)
                  , a = (o = (o = (o = o.redIAdd(o)).redAdd(o).redIAdd(o)).redISub(s)).redSqr()
                  , c = i.redIAdd(i);
                c = (c = (c = c.redIAdd(c)).redIAdd(c)).redIAdd(c);
                var u = n.redIAdd(o).redSqr().redISub(s).redISub(a).redISub(c)
                  , f = t.redMul(u);
                f = (f = f.redIAdd(f)).redIAdd(f);
                var h = this.x.redMul(a).redISub(f);
                h = (h = h.redIAdd(h)).redIAdd(h);
                var l = this.y.redMul(u.redMul(c.redISub(u)).redISub(o.redMul(a)));
                l = (l = (l = l.redIAdd(l)).redIAdd(l)).redIAdd(l);
                var d = this.z.redAdd(o).redSqr().redISub(r).redISub(a);
                return this.curve.jpoint(h, l, d)
            }
            ,
            f.prototype.mul = function(e, t) {
                return e = new n(e,t),
                this.curve._wnafMul(this, e)
            }
            ,
            f.prototype.eq = function(e) {
                if ("affine" === e.type)
                    return this.eq(e.toJ());
                if (this === e)
                    return !0;
                var t = this.z.redSqr()
                  , r = e.z.redSqr();
                if (0 !== this.x.redMul(r).redISub(e.x.redMul(t)).cmpn(0))
                    return !1;
                var i = t.redMul(this.z)
                  , n = r.redMul(e.z);
                return 0 === this.y.redMul(n).redISub(e.y.redMul(i)).cmpn(0)
            }
            ,
            f.prototype.eqXToP = function(e) {
                var t = this.z.redSqr()
                  , r = e.toRed(this.curve.red).redMul(t);
                if (0 === this.x.cmp(r))
                    return !0;
                for (var i = e.clone(), n = this.curve.redN.redMul(t); ; ) {
                    if (i.iadd(this.curve.n),
                    i.cmp(this.curve.p) >= 0)
                        return !1;
                    if (r.redIAdd(n),
                    0 === this.x.cmp(r))
                        return !0
                }
            }
            ,
            f.prototype.inspect = function() {
                return this.isInfinity() ? "<EC JPoint Infinity>" : "<EC JPoint x: " + this.x.toString(16, 2) + " y: " + this.y.toString(16, 2) + " z: " + this.z.toString(16, 2) + ">"
            }
            ,
            f.prototype.isInfinity = function() {
                return 0 === this.z.cmpn(0)
            }
        }
        , {
            "../utils": 81,
            "./base": 68,
            "bn.js": 16,
            inherits: 100
        }],
        73: [function(e, t, r) {
            "use strict";
            var i, n = r, s = e("hash.js"), o = e("./curve"), a = e("./utils").assert;
            function c(e) {
                "short" === e.type ? this.curve = new o.short(e) : "edwards" === e.type ? this.curve = new o.edwards(e) : this.curve = new o.mont(e),
                this.g = this.curve.g,
                this.n = this.curve.n,
                this.hash = e.hash,
                a(this.g.validate(), "Invalid curve"),
                a(this.g.mul(this.n).isInfinity(), "Invalid curve, G*N != O")
            }
            function u(e, t) {
                Object.defineProperty(n, e, {
                    configurable: !0,
                    enumerable: !0,
                    get: function() {
                        var r = new c(t);
                        return Object.defineProperty(n, e, {
                            configurable: !0,
                            enumerable: !0,
                            value: r
                        }),
                        r
                    }
                })
            }
            n.PresetCurve = c,
            u("p192", {
                type: "short",
                prime: "p192",
                p: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff",
                a: "ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc",
                b: "64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1",
                n: "ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831",
                hash: s.sha256,
                gRed: !1,
                g: ["188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012", "07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811"]
            }),
            u("p224", {
                type: "short",
                prime: "p224",
                p: "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001",
                a: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe",
                b: "b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4",
                n: "ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d",
                hash: s.sha256,
                gRed: !1,
                g: ["b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21", "bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34"]
            }),
            u("p256", {
                type: "short",
                prime: null,
                p: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff",
                a: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc",
                b: "5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b",
                n: "ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551",
                hash: s.sha256,
                gRed: !1,
                g: ["6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296", "4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5"]
            }),
            u("p384", {
                type: "short",
                prime: null,
                p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff",
                a: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc",
                b: "b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef",
                n: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973",
                hash: s.sha384,
                gRed: !1,
                g: ["aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7", "3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f"]
            }),
            u("p521", {
                type: "short",
                prime: null,
                p: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff",
                a: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc",
                b: "00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00",
                n: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409",
                hash: s.sha512,
                gRed: !1,
                g: ["000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66", "00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650"]
            }),
            u("curve25519", {
                type: "mont",
                prime: "p25519",
                p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
                a: "76d06",
                b: "1",
                n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
                hash: s.sha256,
                gRed: !1,
                g: ["9"]
            }),
            u("ed25519", {
                type: "edwards",
                prime: "p25519",
                p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
                a: "-1",
                c: "1",
                d: "52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3",
                n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
                hash: s.sha256,
                gRed: !1,
                g: ["216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a", "6666666666666666666666666666666666666666666666666666666666666658"]
            });
            try {
                i = e("./precomputed/secp256k1")
            } catch (e) {
                i = void 0
            }
            u("secp256k1", {
                type: "short",
                prime: "k256",
                p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f",
                a: "0",
                b: "7",
                n: "ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141",
                h: "1",
                hash: s.sha256,
                beta: "7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee",
                lambda: "5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72",
                basis: [{
                    a: "3086d221a7d46bcde86c90e49284eb15",
                    b: "-e4437ed6010e88286f547fa90abfe4c3"
                }, {
                    a: "114ca50f7a8e2f3f657c1108d9d44cfd8",
                    b: "3086d221a7d46bcde86c90e49284eb15"
                }],
                gRed: !1,
                g: ["79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798", "483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8", i]
            })
        }
        , {
            "./curve": 70,
            "./precomputed/secp256k1": 80,
            "./utils": 81,
            "hash.js": 86
        }],
        74: [function(e, t, r) {
            "use strict";
            var i = e("bn.js")
              , n = e("hmac-drbg")
              , s = e("../utils")
              , o = e("../curves")
              , a = e("brorand")
              , c = s.assert
              , u = e("./key")
              , f = e("./signature");
            function h(e) {
                if (!(this instanceof h))
                    return new h(e);
                "string" == typeof e && (c(o.hasOwnProperty(e), "Unknown curve " + e),
                e = o[e]),
                e instanceof o.PresetCurve && (e = {
                    curve: e
                }),
                this.curve = e.curve.curve,
                this.n = this.curve.n,
                this.nh = this.n.ushrn(1),
                this.g = this.curve.g,
                this.g = e.curve.g,
                this.g.precompute(e.curve.n.bitLength() + 1),
                this.hash = e.hash || e.curve.hash
            }
            t.exports = h,
            h.prototype.keyPair = function(e) {
                return new u(this,e)
            }
            ,
            h.prototype.keyFromPrivate = function(e, t) {
                return u.fromPrivate(this, e, t)
            }
            ,
            h.prototype.keyFromPublic = function(e, t) {
                return u.fromPublic(this, e, t)
            }
            ,
            h.prototype.genKeyPair = function(e) {
                e || (e = {});
                for (var t = new n({
                    hash: this.hash,
                    pers: e.pers,
                    persEnc: e.persEnc || "utf8",
                    entropy: e.entropy || a(this.hash.hmacStrength),
                    entropyEnc: e.entropy && e.entropyEnc || "utf8",
                    nonce: this.n.toArray()
                }), r = this.n.byteLength(), s = this.n.sub(new i(2)); ; ) {
                    var o = new i(t.generate(r));
                    if (!(o.cmp(s) > 0))
                        return o.iaddn(1),
                        this.keyFromPrivate(o)
                }
            }
            ,
            h.prototype._truncateToN = function(e, t) {
                var r = 8 * e.byteLength() - this.n.bitLength();
                return r > 0 && (e = e.ushrn(r)),
                !t && e.cmp(this.n) >= 0 ? e.sub(this.n) : e
            }
            ,
            h.prototype.sign = function(e, t, r, s) {
                "object" == typeof r && (s = r,
                r = null),
                s || (s = {}),
                t = this.keyFromPrivate(t, r),
                e = this._truncateToN(new i(e,16));
                for (var o = this.n.byteLength(), a = t.getPrivate().toArray("be", o), c = e.toArray("be", o), u = new n({
                    hash: this.hash,
                    entropy: a,
                    nonce: c,
                    pers: s.pers,
                    persEnc: s.persEnc || "utf8"
                }), h = this.n.sub(new i(1)), l = 0; ; l++) {
                    var d = s.k ? s.k(l) : new i(u.generate(this.n.byteLength()));
                    if (!((d = this._truncateToN(d, !0)).cmpn(1) <= 0 || d.cmp(h) >= 0)) {
                        var p = this.g.mul(d);
                        if (!p.isInfinity()) {
                            var b = p.getX()
                              , g = b.umod(this.n);
                            if (0 !== g.cmpn(0)) {
                                var m = d.invm(this.n).mul(g.mul(t.getPrivate()).iadd(e));
                                if (0 !== (m = m.umod(this.n)).cmpn(0)) {
                                    var y = (p.getY().isOdd() ? 1 : 0) | (0 !== b.cmp(g) ? 2 : 0);
                                    return s.canonical && m.cmp(this.nh) > 0 && (m = this.n.sub(m),
                                    y ^= 1),
                                    new f({
                                        r: g,
                                        s: m,
                                        recoveryParam: y
                                    })
                                }
                            }
                        }
                    }
                }
            }
            ,
            h.prototype.verify = function(e, t, r, n) {
                e = this._truncateToN(new i(e,16)),
                r = this.keyFromPublic(r, n);
                var s = (t = new f(t,"hex")).r
                  , o = t.s;
                if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)
                    return !1;
                if (o.cmpn(1) < 0 || o.cmp(this.n) >= 0)
                    return !1;
                var a, c = o.invm(this.n), u = c.mul(e).umod(this.n), h = c.mul(s).umod(this.n);
                return this.curve._maxwellTrick ? !(a = this.g.jmulAdd(u, r.getPublic(), h)).isInfinity() && a.eqXToP(s) : !(a = this.g.mulAdd(u, r.getPublic(), h)).isInfinity() && 0 === a.getX().umod(this.n).cmp(s)
            }
            ,
            h.prototype.recoverPubKey = function(e, t, r, n) {
                c((3 & r) === r, "The recovery param is more than two bits"),
                t = new f(t,n);
                var s = this.n
                  , o = new i(e)
                  , a = t.r
                  , u = t.s
                  , h = 1 & r
                  , l = r >> 1;
                if (a.cmp(this.curve.p.umod(this.curve.n)) >= 0 && l)
                    throw new Error("Unable to find sencond key candinate");
                a = l ? this.curve.pointFromX(a.add(this.curve.n), h) : this.curve.pointFromX(a, h);
                var d = t.r.invm(s)
                  , p = s.sub(o).mul(d).umod(s)
                  , b = u.mul(d).umod(s);
                return this.g.mulAdd(p, a, b)
            }
            ,
            h.prototype.getKeyRecoveryParam = function(e, t, r, i) {
                if (null !== (t = new f(t,i)).recoveryParam)
                    return t.recoveryParam;
                for (var n = 0; n < 4; n++) {
                    var s;
                    try {
                        s = this.recoverPubKey(e, t, n)
                    } catch (e) {
                        continue
                    }
                    if (s.eq(r))
                        return n
                }
                throw new Error("Unable to find valid recovery factor")
            }
        }
        , {
            "../curves": 73,
            "../utils": 81,
            "./key": 75,
            "./signature": 76,
            "bn.js": 16,
            brorand: 17,
            "hmac-drbg": 98
        }],
        75: [function(e, t, r) {
            "use strict";
            var i = e("bn.js")
              , n = e("../utils").assert;
            function s(e, t) {
                this.ec = e,
                this.priv = null,
                this.pub = null,
                t.priv && this._importPrivate(t.priv, t.privEnc),
                t.pub && this._importPublic(t.pub, t.pubEnc)
            }
            t.exports = s,
            s.fromPublic = function(e, t, r) {
                return t instanceof s ? t : new s(e,{
                    pub: t,
                    pubEnc: r
                })
            }
            ,
            s.fromPrivate = function(e, t, r) {
                return t instanceof s ? t : new s(e,{
                    priv: t,
                    privEnc: r
                })
            }
            ,
            s.prototype.validate = function() {
                var e = this.getPublic();
                return e.isInfinity() ? {
                    result: !1,
                    reason: "Invalid public key"
                } : e.validate() ? e.mul(this.ec.curve.n).isInfinity() ? {
                    result: !0,
                    reason: null
                } : {
                    result: !1,
                    reason: "Public key * N != O"
                } : {
                    result: !1,
                    reason: "Public key is not a point"
                }
            }
            ,
            s.prototype.getPublic = function(e, t) {
                return "string" == typeof e && (t = e,
                e = null),
                this.pub || (this.pub = this.ec.g.mul(this.priv)),
                t ? this.pub.encode(t, e) : this.pub
            }
            ,
            s.prototype.getPrivate = function(e) {
                return "hex" === e ? this.priv.toString(16, 2) : this.priv
            }
            ,
            s.prototype._importPrivate = function(e, t) {
                this.priv = new i(e,t || 16),
                this.priv = this.priv.umod(this.ec.curve.n)
            }
            ,
            s.prototype._importPublic = function(e, t) {
                if (e.x || e.y)
                    return "mont" === this.ec.curve.type ? n(e.x, "Need x coordinate") : "short" !== this.ec.curve.type && "edwards" !== this.ec.curve.type || n(e.x && e.y, "Need both x and y coordinate"),
                    void (this.pub = this.ec.curve.point(e.x, e.y));
                this.pub = this.ec.curve.decodePoint(e, t)
            }
            ,
            s.prototype.derive = function(e) {
                return e.mul(this.priv).getX()
            }
            ,
            s.prototype.sign = function(e, t, r) {
                return this.ec.sign(e, this, t, r)
            }
            ,
            s.prototype.verify = function(e, t) {
                return this.ec.verify(e, t, this)
            }
            ,
            s.prototype.inspect = function() {
                return "<Key priv: " + (this.priv && this.priv.toString(16, 2)) + " pub: " + (this.pub && this.pub.inspect()) + " >"
            }
        }
        , {
            "../utils": 81,
            "bn.js": 16
        }],
        76: [function(e, t, r) {
            "use strict";
            var i = e("bn.js")
              , n = e("../utils")
              , s = n.assert;
            function o(e, t) {
                if (e instanceof o)
                    return e;
                this._importDER(e, t) || (s(e.r && e.s, "Signature without r or s"),
                this.r = new i(e.r,16),
                this.s = new i(e.s,16),
                void 0 === e.recoveryParam ? this.recoveryParam = null : this.recoveryParam = e.recoveryParam)
            }
            function a() {
                this.place = 0
            }
            function c(e, t) {
                var r = e[t.place++];
                if (!(128 & r))
                    return r;
                for (var i = 15 & r, n = 0, s = 0, o = t.place; s < i; s++,
                o++)
                    n <<= 8,
                    n |= e[o];
                return t.place = o,
                n
            }
            function u(e) {
                for (var t = 0, r = e.length - 1; !e[t] && !(128 & e[t + 1]) && t < r; )
                    t++;
                return 0 === t ? e : e.slice(t)
            }
            function f(e, t) {
                if (t < 128)
                    e.push(t);
                else {
                    var r = 1 + (Math.log(t) / Math.LN2 >>> 3);
                    for (e.push(128 | r); --r; )
                        e.push(t >>> (r << 3) & 255);
                    e.push(t)
                }
            }
            t.exports = o,
            o.prototype._importDER = function(e, t) {
                e = n.toArray(e, t);
                var r = new a;
                if (48 !== e[r.place++])
                    return !1;
                if (c(e, r) + r.place !== e.length)
                    return !1;
                if (2 !== e[r.place++])
                    return !1;
                var s = c(e, r)
                  , o = e.slice(r.place, s + r.place);
                if (r.place += s,
                2 !== e[r.place++])
                    return !1;
                var u = c(e, r);
                if (e.length !== u + r.place)
                    return !1;
                var f = e.slice(r.place, u + r.place);
                return 0 === o[0] && 128 & o[1] && (o = o.slice(1)),
                0 === f[0] && 128 & f[1] && (f = f.slice(1)),
                this.r = new i(o),
                this.s = new i(f),
                this.recoveryParam = null,
                !0
            }
            ,
            o.prototype.toDER = function(e) {
                var t = this.r.toArray()
                  , r = this.s.toArray();
                for (128 & t[0] && (t = [0].concat(t)),
                128 & r[0] && (r = [0].concat(r)),
                t = u(t),
                r = u(r); !(r[0] || 128 & r[1]); )
                    r = r.slice(1);
                var i = [2];
                f(i, t.length),
                (i = i.concat(t)).push(2),
                f(i, r.length);
                var s = i.concat(r)
                  , o = [48];
                return f(o, s.length),
                o = o.concat(s),
                n.encode(o, e)
            }
        }
        , {
            "../utils": 81,
            "bn.js": 16
        }],
        77: [function(e, t, r) {
            "use strict";
            var i = e("hash.js")
              , n = e("../curves")
              , s = e("../utils")
              , o = s.assert
              , a = s.parseBytes
              , c = e("./key")
              , u = e("./signature");
            function f(e) {
                if (o("ed25519" === e, "only tested with ed25519 so far"),
                !(this instanceof f))
                    return new f(e);
                e = n[e].curve;
                this.curve = e,
                this.g = e.g,
                this.g.precompute(e.n.bitLength() + 1),
                this.pointClass = e.point().constructor,
                this.encodingLength = Math.ceil(e.n.bitLength() / 8),
                this.hash = i.sha512
            }
            t.exports = f,
            f.prototype.sign = function(e, t) {
                e = a(e);
                var r = this.keyFromSecret(t)
                  , i = this.hashInt(r.messagePrefix(), e)
                  , n = this.g.mul(i)
                  , s = this.encodePoint(n)
                  , o = this.hashInt(s, r.pubBytes(), e).mul(r.priv())
                  , c = i.add(o).umod(this.curve.n);
                return this.makeSignature({
                    R: n,
                    S: c,
                    Rencoded: s
                })
            }
            ,
            f.prototype.verify = function(e, t, r) {
                e = a(e),
                t = this.makeSignature(t);
                var i = this.keyFromPublic(r)
                  , n = this.hashInt(t.Rencoded(), i.pubBytes(), e)
                  , s = this.g.mul(t.S());
                return t.R().add(i.pub().mul(n)).eq(s)
            }
            ,
            f.prototype.hashInt = function() {
                for (var e = this.hash(), t = 0; t < arguments.length; t++)
                    e.update(arguments[t]);
                return s.intFromLE(e.digest()).umod(this.curve.n)
            }
            ,
            f.prototype.keyFromPublic = function(e) {
                return c.fromPublic(this, e)
            }
            ,
            f.prototype.keyFromSecret = function(e) {
                return c.fromSecret(this, e)
            }
            ,
            f.prototype.makeSignature = function(e) {
                return e instanceof u ? e : new u(this,e)
            }
            ,
            f.prototype.encodePoint = function(e) {
                var t = e.getY().toArray("le", this.encodingLength);
                return t[this.encodingLength - 1] |= e.getX().isOdd() ? 128 : 0,
                t
            }
            ,
            f.prototype.decodePoint = function(e) {
                var t = (e = s.parseBytes(e)).length - 1
                  , r = e.slice(0, t).concat(-129 & e[t])
                  , i = 0 != (128 & e[t])
                  , n = s.intFromLE(r);
                return this.curve.pointFromY(n, i)
            }
            ,
            f.prototype.encodeInt = function(e) {
                return e.toArray("le", this.encodingLength)
            }
            ,
            f.prototype.decodeInt = function(e) {
                return s.intFromLE(e)
            }
            ,
            f.prototype.isPoint = function(e) {
                return e instanceof this.pointClass
            }
        }
        , {
            "../curves": 73,
            "../utils": 81,
            "./key": 78,
            "./signature": 79,
            "hash.js": 86
        }],
        78: [function(e, t, r) {
            "use strict";
            var i = e("../utils")
              , n = i.assert
              , s = i.parseBytes
              , o = i.cachedProperty;
            function a(e, t) {
                this.eddsa = e,
                this._secret = s(t.secret),
                e.isPoint(t.pub) ? this._pub = t.pub : this._pubBytes = s(t.pub)
            }
            a.fromPublic = function(e, t) {
                return t instanceof a ? t : new a(e,{
                    pub: t
                })
            }
            ,
            a.fromSecret = function(e, t) {
                return t instanceof a ? t : new a(e,{
                    secret: t
                })
            }
            ,
            a.prototype.secret = function() {
                return this._secret
            }
            ,
            o(a, "pubBytes", (function() {
                return this.eddsa.encodePoint(this.pub())
            }
            )),
            o(a, "pub", (function() {
                return this._pubBytes ? this.eddsa.decodePoint(this._pubBytes) : this.eddsa.g.mul(this.priv())
            }
            )),
            o(a, "privBytes", (function() {
                var e = this.eddsa
                  , t = this.hash()
                  , r = e.encodingLength - 1
                  , i = t.slice(0, e.encodingLength);
                return i[0] &= 248,
                i[r] &= 127,
                i[r] |= 64,
                i
            }
            )),
            o(a, "priv", (function() {
                return this.eddsa.decodeInt(this.privBytes())
            }
            )),
            o(a, "hash", (function() {
                return this.eddsa.hash().update(this.secret()).digest()
            }
            )),
            o(a, "messagePrefix", (function() {
                return this.hash().slice(this.eddsa.encodingLength)
            }
            )),
            a.prototype.sign = function(e) {
                return n(this._secret, "KeyPair can only verify"),
                this.eddsa.sign(e, this)
            }
            ,
            a.prototype.verify = function(e, t) {
                return this.eddsa.verify(e, t, this)
            }
            ,
            a.prototype.getSecret = function(e) {
                return n(this._secret, "KeyPair is public only"),
                i.encode(this.secret(), e)
            }
            ,
            a.prototype.getPublic = function(e) {
                return i.encode(this.pubBytes(), e)
            }
            ,
            t.exports = a
        }
        , {
            "../utils": 81
        }],
        79: [function(e, t, r) {
            "use strict";
            var i = e("bn.js")
              , n = e("../utils")
              , s = n.assert
              , o = n.cachedProperty
              , a = n.parseBytes;
            function c(e, t) {
                this.eddsa = e,
                "object" != typeof t && (t = a(t)),
                Array.isArray(t) && (t = {
                    R: t.slice(0, e.encodingLength),
                    S: t.slice(e.encodingLength)
                }),
                s(t.R && t.S, "Signature without R or S"),
                e.isPoint(t.R) && (this._R = t.R),
                t.S instanceof i && (this._S = t.S),
                this._Rencoded = Array.isArray(t.R) ? t.R : t.Rencoded,
                this._Sencoded = Array.isArray(t.S) ? t.S : t.Sencoded
            }
            o(c, "S", (function() {
                return this.eddsa.decodeInt(this.Sencoded())
            }
            )),
            o(c, "R", (function() {
                return this.eddsa.decodePoint(this.Rencoded())
            }
            )),
            o(c, "Rencoded", (function() {
                return this.eddsa.encodePoint(this.R())
            }
            )),
            o(c, "Sencoded", (function() {
                return this.eddsa.encodeInt(this.S())
            }
            )),
            c.prototype.toBytes = function() {
                return this.Rencoded().concat(this.Sencoded())
            }
            ,
            c.prototype.toHex = function() {
                return n.encode(this.toBytes(), "hex").toUpperCase()
            }
            ,
            t.exports = c
        }
        , {
            "../utils": 81,
            "bn.js": 16
        }],
        80: [function(e, t, r) {
            t.exports = {
                doubles: {
                    step: 4,
                    points: [["e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a", "f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821"], ["8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508", "11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf"], ["175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739", "d3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695"], ["363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640", "4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9"], ["8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c", "4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36"], ["723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda", "96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f"], ["eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa", "5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999"], ["100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0", "cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09"], ["e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d", "9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d"], ["feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d", "e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088"], ["da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1", "9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d"], ["53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0", "5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8"], ["8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047", "10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a"], ["385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862", "283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453"], ["6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7", "7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160"], ["3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd", "56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0"], ["85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83", "7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6"], ["948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a", "53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589"], ["6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8", "bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17"], ["e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d", "4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda"], ["e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725", "7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd"], ["213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754", "4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2"], ["4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c", "17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6"], ["fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6", "6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f"], ["76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39", "c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01"], ["c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891", "893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3"], ["d895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b", "febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f"], ["b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03", "2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7"], ["e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d", "eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78"], ["a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070", "7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1"], ["90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4", "e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150"], ["8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da", "662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82"], ["e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11", "1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc"], ["8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e", "efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b"], ["e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41", "2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51"], ["b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef", "67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45"], ["d68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8", "db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120"], ["324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d", "648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84"], ["4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96", "35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d"], ["9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd", "ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d"], ["6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5", "9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8"], ["a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266", "40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8"], ["7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71", "34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac"], ["928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac", "c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f"], ["85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751", "1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962"], ["ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e", "493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907"], ["827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241", "c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec"], ["eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3", "be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d"], ["e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f", "4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414"], ["1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19", "aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd"], ["146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be", "b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0"], ["fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9", "6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811"], ["da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2", "8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1"], ["a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13", "7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c"], ["174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c", "ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73"], ["959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba", "2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd"], ["d2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151", "e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405"], ["64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073", "d99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589"], ["8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458", "38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e"], ["13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b", "69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27"], ["bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366", "d3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1"], ["8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa", "40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482"], ["8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0", "620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945"], ["dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787", "7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573"], ["f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e", "ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82"]]
                },
                naf: {
                    wnd: 7,
                    points: [["f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9", "388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672"], ["2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4", "d8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6"], ["5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc", "6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da"], ["acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe", "cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37"], ["774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb", "d984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b"], ["f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8", "ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81"], ["d7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e", "581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58"], ["defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34", "4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77"], ["2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c", "85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a"], ["352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5", "321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c"], ["2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f", "2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67"], ["9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714", "73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402"], ["daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729", "a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55"], ["c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db", "2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482"], ["6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4", "e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82"], ["1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5", "b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396"], ["605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479", "2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49"], ["62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d", "80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf"], ["80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f", "1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a"], ["7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb", "d0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7"], ["d528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9", "eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933"], ["49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963", "758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a"], ["77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74", "958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6"], ["f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530", "e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37"], ["463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b", "5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e"], ["f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247", "cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6"], ["caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1", "cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476"], ["2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120", "4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40"], ["7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435", "91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61"], ["754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18", "673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683"], ["e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8", "59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5"], ["186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb", "3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b"], ["df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f", "55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417"], ["5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143", "efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868"], ["290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba", "e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a"], ["af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45", "f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6"], ["766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a", "744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996"], ["59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e", "c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e"], ["f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8", "e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d"], ["7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c", "30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2"], ["948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519", "e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e"], ["7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab", "100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437"], ["3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca", "ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311"], ["d3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf", "8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4"], ["1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610", "68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575"], ["733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4", "f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d"], ["15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c", "d56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d"], ["a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940", "edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629"], ["e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980", "a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06"], ["311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3", "66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374"], ["34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf", "9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee"], ["f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63", "4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1"], ["d7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448", "fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b"], ["32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf", "5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661"], ["7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5", "8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6"], ["ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6", "8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e"], ["16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5", "5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d"], ["eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99", "f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc"], ["78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51", "f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4"], ["494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5", "42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c"], ["a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5", "204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b"], ["c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997", "4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913"], ["841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881", "73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154"], ["5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5", "39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865"], ["36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66", "d2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc"], ["336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726", "ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224"], ["8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede", "6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e"], ["1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94", "60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6"], ["85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31", "3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511"], ["29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51", "b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b"], ["a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252", "ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2"], ["4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5", "cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c"], ["d24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b", "6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3"], ["ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4", "322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d"], ["af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f", "6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700"], ["e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889", "2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4"], ["591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246", "b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196"], ["11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984", "998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4"], ["3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a", "b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257"], ["cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030", "bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13"], ["c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197", "6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096"], ["c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593", "c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38"], ["a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef", "21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f"], ["347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38", "60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448"], ["da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a", "49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a"], ["c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111", "5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4"], ["4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502", "7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437"], ["3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea", "be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7"], ["cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26", "8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d"], ["b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986", "39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a"], ["d4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e", "62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54"], ["48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4", "25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77"], ["dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda", "ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517"], ["6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859", "cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10"], ["e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f", "f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125"], ["eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c", "6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e"], ["13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942", "fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1"], ["ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a", "1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2"], ["b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80", "5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423"], ["ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d", "438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8"], ["8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1", "cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758"], ["52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63", "c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375"], ["e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352", "6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d"], ["7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193", "ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec"], ["5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00", "9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0"], ["32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58", "ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c"], ["e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7", "d3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4"], ["8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8", "c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f"], ["4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e", "67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649"], ["3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d", "cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826"], ["674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b", "299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5"], ["d32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f", "f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87"], ["30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6", "462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b"], ["be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297", "62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc"], ["93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a", "7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c"], ["b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c", "ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f"], ["d5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52", "4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a"], ["d3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb", "bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46"], ["463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065", "bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f"], ["7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917", "603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03"], ["74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9", "cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08"], ["30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3", "553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8"], ["9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57", "712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373"], ["176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66", "ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3"], ["75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8", "9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8"], ["809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721", "9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1"], ["1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180", "4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9"]]
                }
            }
        }
        , {}],
        81: [function(e, t, r) {
            "use strict";
            var i = r
              , n = e("bn.js")
              , s = e("minimalistic-assert")
              , o = e("minimalistic-crypto-utils");
            i.assert = s,
            i.toArray = o.toArray,
            i.zero2 = o.zero2,
            i.toHex = o.toHex,
            i.encode = o.encode,
            i.getNAF = function(e, t) {
                for (var r = [], i = 1 << t + 1, n = e.clone(); n.cmpn(1) >= 0; ) {
                    var s;
                    if (n.isOdd()) {
                        var o = n.andln(i - 1);
                        s = o > (i >> 1) - 1 ? (i >> 1) - o : o,
                        n.isubn(s)
                    } else
                        s = 0;
                    r.push(s);
                    for (var a = 0 !== n.cmpn(0) && 0 === n.andln(i - 1) ? t + 1 : 1, c = 1; c < a; c++)
                        r.push(0);
                    n.iushrn(a)
                }
                return r
            }
            ,
            i.getJSF = function(e, t) {
                var r = [[], []];
                e = e.clone(),
                t = t.clone();
                for (var i = 0, n = 0; e.cmpn(-i) > 0 || t.cmpn(-n) > 0; ) {
                    var s, o, a, c = e.andln(3) + i & 3, u = t.andln(3) + n & 3;
                    if (3 === c && (c = -1),
                    3 === u && (u = -1),
                    0 == (1 & c))
                        s = 0;
                    else
                        s = 3 !== (a = e.andln(7) + i & 7) && 5 !== a || 2 !== u ? c : -c;
                    if (r[0].push(s),
                    0 == (1 & u))
                        o = 0;
                    else
                        o = 3 !== (a = t.andln(7) + n & 7) && 5 !== a || 2 !== c ? u : -u;
                    r[1].push(o),
                    2 * i === s + 1 && (i = 1 - i),
                    2 * n === o + 1 && (n = 1 - n),
                    e.iushrn(1),
                    t.iushrn(1)
                }
                return r
            }
            ,
            i.cachedProperty = function(e, t, r) {
                var i = "_" + t;
                e.prototype[t] = function() {
                    return void 0 !== this[i] ? this[i] : this[i] = r.call(this)
                }
            }
            ,
            i.parseBytes = function(e) {
                return "string" == typeof e ? i.toArray(e, "hex") : e
            }
            ,
            i.intFromLE = function(e) {
                return new n(e,"hex","le")
            }
        }
        , {
            "bn.js": 16,
            "minimalistic-assert": 105,
            "minimalistic-crypto-utils": 106
        }],
        82: [function(e, t, r) {
            t.exports = {
                _from: "elliptic@^6.0.0",
                _id: "elliptic@6.5.1",
                _inBundle: !1,
                _integrity: "sha512-xvJINNLbTeWQjrl6X+7eQCrIy/YPv5XCpKW6kB5mKvtnGILoLDcySuwomfdzt0BMdLNVnuRNTuzKNHj0bva1Cg==",
                _location: "/elliptic",
                _phantomChildren: {},
                _requested: {
                    type: "range",
                    registry: !0,
                    raw: "elliptic@^6.0.0",
                    name: "elliptic",
                    escapedName: "elliptic",
                    rawSpec: "^6.0.0",
                    saveSpec: null,
                    fetchSpec: "^6.0.0"
                },
                _requiredBy: ["/browserify-sign", "/create-ecdh"],
                _resolved: "https://registry.npmjs.org/elliptic/-/elliptic-6.5.1.tgz",
                _shasum: "c380f5f909bf1b9b4428d028cd18d3b0efd6b52b",
                _spec: "elliptic@^6.0.0",
                _where: "/home/wzrd/wzrd.in/node_modules/browserify-sign",
                author: {
                    name: "Fedor Indutny",
                    email: "fedor@indutny.com"
                },
                bugs: {
                    url: "https://github.com/indutny/elliptic/issues"
                },
                bundleDependencies: !1,
                dependencies: {
                    "bn.js": "^4.4.0",
                    brorand: "^1.0.1",
                    "hash.js": "^1.0.0",
                    "hmac-drbg": "^1.0.0",
                    inherits: "^2.0.1",
                    "minimalistic-assert": "^1.0.0",
                    "minimalistic-crypto-utils": "^1.0.0"
                },
                deprecated: !1,
                description: "EC cryptography",
                devDependencies: {
                    brfs: "^1.4.3",
                    coveralls: "^3.0.4",
                    grunt: "^1.0.4",
                    "grunt-browserify": "^5.0.0",
                    "grunt-cli": "^1.2.0",
                    "grunt-contrib-connect": "^1.0.0",
                    "grunt-contrib-copy": "^1.0.0",
                    "grunt-contrib-uglify": "^1.0.1",
                    "grunt-mocha-istanbul": "^3.0.1",
                    "grunt-saucelabs": "^9.0.1",
                    istanbul: "^0.4.2",
                    jscs: "^3.0.7",
                    jshint: "^2.6.0",
                    mocha: "^6.1.4"
                },
                files: ["lib"],
                homepage: "https://github.com/indutny/elliptic",
                keywords: ["EC", "Elliptic", "curve", "Cryptography"],
                license: "MIT",
                main: "lib/elliptic.js",
                name: "elliptic",
                repository: {
                    type: "git",
                    url: "git+ssh://git@github.com/indutny/elliptic.git"
                },
                scripts: {
                    jscs: "jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js",
                    jshint: "jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js",
                    lint: "npm run jscs && npm run jshint",
                    test: "npm run lint && npm run unit",
                    unit: "istanbul test _mocha --reporter=spec test/index.js",
                    version: "grunt dist && git add dist/"
                },
                version: "6.5.1"
            }
        }
        , {}],
        83: [function(e, t, r) {
            var i = Object.create || function(e) {
                var t = function() {};
                return t.prototype = e,
                new t
            }
              , n = Object.keys || function(e) {
                var t = [];
                for (var r in e)
                    Object.prototype.hasOwnProperty.call(e, r) && t.push(r);
                return r
            }
              , s = Function.prototype.bind || function(e) {
                var t = this;
                return function() {
                    return t.apply(e, arguments)
                }
            }
            ;
            function o() {
                this._events && Object.prototype.hasOwnProperty.call(this, "_events") || (this._events = i(null),
                this._eventsCount = 0),
                this._maxListeners = this._maxListeners || void 0
            }
            t.exports = o,
            o.EventEmitter = o,
            o.prototype._events = void 0,
            o.prototype._maxListeners = void 0;
            var a, c = 10;
            try {
                var u = {};
                Object.defineProperty && Object.defineProperty(u, "x", {
                    value: 0
                }),
                a = 0 === u.x
            } catch (e) {
                a = !1
            }
            function f(e) {
                return void 0 === e._maxListeners ? o.defaultMaxListeners : e._maxListeners
            }
            function h(e, t, r) {
                if (t)
                    e.call(r);
                else
                    for (var i = e.length, n = E(e, i), s = 0; s < i; ++s)
                        n[s].call(r)
            }
            function l(e, t, r, i) {
                if (t)
                    e.call(r, i);
                else
                    for (var n = e.length, s = E(e, n), o = 0; o < n; ++o)
                        s[o].call(r, i)
            }
            function d(e, t, r, i, n) {
                if (t)
                    e.call(r, i, n);
                else
                    for (var s = e.length, o = E(e, s), a = 0; a < s; ++a)
                        o[a].call(r, i, n)
            }
            function p(e, t, r, i, n, s) {
                if (t)
                    e.call(r, i, n, s);
                else
                    for (var o = e.length, a = E(e, o), c = 0; c < o; ++c)
                        a[c].call(r, i, n, s)
            }
            function b(e, t, r, i) {
                if (t)
                    e.apply(r, i);
                else
                    for (var n = e.length, s = E(e, n), o = 0; o < n; ++o)
                        s[o].apply(r, i)
            }
            function g(e, t, r, n) {
                var s, o, a;
                if ("function" != typeof r)
                    throw new TypeError('"listener" argument must be a function');
                if ((o = e._events) ? (o.newListener && (e.emit("newListener", t, r.listener ? r.listener : r),
                o = e._events),
                a = o[t]) : (o = e._events = i(null),
                e._eventsCount = 0),
                a) {
                    if ("function" == typeof a ? a = o[t] = n ? [r, a] : [a, r] : n ? a.unshift(r) : a.push(r),
                    !a.warned && (s = f(e)) && s > 0 && a.length > s) {
                        a.warned = !0;
                        var c = new Error("Possible EventEmitter memory leak detected. " + a.length + ' "' + String(t) + '" listeners added. Use emitter.setMaxListeners() to increase limit.');
                        c.name = "MaxListenersExceededWarning",
                        c.emitter = e,
                        c.type = t,
                        c.count = a.length,
                        "object" == typeof console && console.warn && console.warn("%s: %s", c.name, c.message)
                    }
                } else
                    a = o[t] = r,
                    ++e._eventsCount;
                return e
            }
            function m() {
                if (!this.fired)
                    switch (this.target.removeListener(this.type, this.wrapFn),
                    this.fired = !0,
                    arguments.length) {
                    case 0:
                        return this.listener.call(this.target);
                    case 1:
                        return this.listener.call(this.target, arguments[0]);
                    case 2:
                        return this.listener.call(this.target, arguments[0], arguments[1]);
                    case 3:
                        return this.listener.call(this.target, arguments[0], arguments[1], arguments[2]);
                    default:
                        for (var e = new Array(arguments.length), t = 0; t < e.length; ++t)
                            e[t] = arguments[t];
                        this.listener.apply(this.target, e)
                    }
            }
            function y(e, t, r) {
                var i = {
                    fired: !1,
                    wrapFn: void 0,
                    target: e,
                    type: t,
                    listener: r
                }
                  , n = s.call(m, i);
                return n.listener = r,
                i.wrapFn = n,
                n
            }
            function v(e, t, r) {
                var i = e._events;
                if (!i)
                    return [];
                var n = i[t];
                return n ? "function" == typeof n ? r ? [n.listener || n] : [n] : r ? function(e) {
                    for (var t = new Array(e.length), r = 0; r < t.length; ++r)
                        t[r] = e[r].listener || e[r];
                    return t
                }(n) : E(n, n.length) : []
            }
            function w(e) {
                var t = this._events;
                if (t) {
                    var r = t[e];
                    if ("function" == typeof r)
                        return 1;
                    if (r)
                        return r.length
                }
                return 0
            }
            function E(e, t) {
                for (var r = new Array(t), i = 0; i < t; ++i)
                    r[i] = e[i];
                return r
            }
            a ? Object.defineProperty(o, "defaultMaxListeners", {
                enumerable: !0,
                get: function() {
                    return c
                },
                set: function(e) {
                    if ("number" != typeof e || e < 0 || e != e)
                        throw new TypeError('"defaultMaxListeners" must be a positive number');
                    c = e
                }
            }) : o.defaultMaxListeners = c,
            o.prototype.setMaxListeners = function(e) {
                if ("number" != typeof e || e < 0 || isNaN(e))
                    throw new TypeError('"n" argument must be a positive number');
                return this._maxListeners = e,
                this
            }
            ,
            o.prototype.getMaxListeners = function() {
                return f(this)
            }
            ,
            o.prototype.emit = function(e) {
                var t, r, i, n, s, o, a = "error" === e;
                if (o = this._events)
                    a = a && null == o.error;
                else if (!a)
                    return !1;
                if (a) {
                    if (arguments.length > 1 && (t = arguments[1]),
                    t instanceof Error)
                        throw t;
                    var c = new Error('Unhandled "error" event. (' + t + ")");
                    throw c.context = t,
                    c
                }
                if (!(r = o[e]))
                    return !1;
                var u = "function" == typeof r;
                switch (i = arguments.length) {
                case 1:
                    h(r, u, this);
                    break;
                case 2:
                    l(r, u, this, arguments[1]);
                    break;
                case 3:
                    d(r, u, this, arguments[1], arguments[2]);
                    break;
                case 4:
                    p(r, u, this, arguments[1], arguments[2], arguments[3]);
                    break;
                default:
                    for (n = new Array(i - 1),
                    s = 1; s < i; s++)
                        n[s - 1] = arguments[s];
                    b(r, u, this, n)
                }
                return !0
            }
            ,
            o.prototype.addListener = function(e, t) {
                return g(this, e, t, !1)
            }
            ,
            o.prototype.on = o.prototype.addListener,
            o.prototype.prependListener = function(e, t) {
                return g(this, e, t, !0)
            }
            ,
            o.prototype.once = function(e, t) {
                if ("function" != typeof t)
                    throw new TypeError('"listener" argument must be a function');
                return this.on(e, y(this, e, t)),
                this
            }
            ,
            o.prototype.prependOnceListener = function(e, t) {
                if ("function" != typeof t)
                    throw new TypeError('"listener" argument must be a function');
                return this.prependListener(e, y(this, e, t)),
                this
            }
            ,
            o.prototype.removeListener = function(e, t) {
                var r, n, s, o, a;
                if ("function" != typeof t)
                    throw new TypeError('"listener" argument must be a function');
                if (!(n = this._events))
                    return this;
                if (!(r = n[e]))
                    return this;
                if (r === t || r.listener === t)
                    0 == --this._eventsCount ? this._events = i(null) : (delete n[e],
                    n.removeListener && this.emit("removeListener", e, r.listener || t));
                else if ("function" != typeof r) {
                    for (s = -1,
                    o = r.length - 1; o >= 0; o--)
                        if (r[o] === t || r[o].listener === t) {
                            a = r[o].listener,
                            s = o;
                            break
                        }
                    if (s < 0)
                        return this;
                    0 === s ? r.shift() : function(e, t) {
                        for (var r = t, i = r + 1, n = e.length; i < n; r += 1,
                        i += 1)
                            e[r] = e[i];
                        e.pop()
                    }(r, s),
                    1 === r.length && (n[e] = r[0]),
                    n.removeListener && this.emit("removeListener", e, a || t)
                }
                return this
            }
            ,
            o.prototype.removeAllListeners = function(e) {
                var t, r, s;
                if (!(r = this._events))
                    return this;
                if (!r.removeListener)
                    return 0 === arguments.length ? (this._events = i(null),
                    this._eventsCount = 0) : r[e] && (0 == --this._eventsCount ? this._events = i(null) : delete r[e]),
                    this;
                if (0 === arguments.length) {
                    var o, a = n(r);
                    for (s = 0; s < a.length; ++s)
                        "removeListener" !== (o = a[s]) && this.removeAllListeners(o);
                    return this.removeAllListeners("removeListener"),
                    this._events = i(null),
                    this._eventsCount = 0,
                    this
                }
                if ("function" == typeof (t = r[e]))
                    this.removeListener(e, t);
                else if (t)
                    for (s = t.length - 1; s >= 0; s--)
                        this.removeListener(e, t[s]);
                return this
            }
            ,
            o.prototype.listeners = function(e) {
                return v(this, e, !0)
            }
            ,
            o.prototype.rawListeners = function(e) {
                return v(this, e, !1)
            }
            ,
            o.listenerCount = function(e, t) {
                return "function" == typeof e.listenerCount ? e.listenerCount(t) : w.call(e, t)
            }
            ,
            o.prototype.listenerCount = w,
            o.prototype.eventNames = function() {
                return this._eventsCount > 0 ? Reflect.ownKeys(this._events) : []
            }
        }
        , {}],
        84: [function(e, t, r) {
            var i = e("safe-buffer").Buffer
              , n = e("md5.js");
            t.exports = function(e, t, r, s) {
                if (i.isBuffer(e) || (e = i.from(e, "binary")),
                t && (i.isBuffer(t) || (t = i.from(t, "binary")),
                8 !== t.length))
                    throw new RangeError("salt should be Buffer with 8 byte length");
                for (var o = r / 8, a = i.alloc(o), c = i.alloc(s || 0), u = i.alloc(0); o > 0 || s > 0; ) {
                    var f = new n;
                    f.update(u),
                    f.update(e),
                    t && f.update(t),
                    u = f.digest();
                    var h = 0;
                    if (o > 0) {
                        var l = a.length - o;
                        h = Math.min(o, u.length),
                        u.copy(a, l, 0, h),
                        o -= h
                    }
                    if (h < u.length && s > 0) {
                        var d = c.length - s
                          , p = Math.min(s, u.length - h);
                        u.copy(c, d, h, h + p),
                        s -= p
                    }
                }
                return u.fill(0),
                {
                    key: a,
                    iv: c
                }
            }
        }
        , {
            "md5.js": 103,
            "safe-buffer": 143
        }],
        85: [function(e, t, r) {
            "use strict";
            var i = e("safe-buffer").Buffer
              , n = e("stream").Transform;
            function s(e) {
                n.call(this),
                this._block = i.allocUnsafe(e),
                this._blockSize = e,
                this._blockOffset = 0,
                this._length = [0, 0, 0, 0],
                this._finalized = !1
            }
            e("inherits")(s, n),
            s.prototype._transform = function(e, t, r) {
                var i = null;
                try {
                    this.update(e, t)
                } catch (e) {
                    i = e
                }
                r(i)
            }
            ,
            s.prototype._flush = function(e) {
                var t = null;
                try {
                    this.push(this.digest())
                } catch (e) {
                    t = e
                }
                e(t)
            }
            ,
            s.prototype.update = function(e, t) {
                if (function(e, t) {
                    if (!i.isBuffer(e) && "string" != typeof e)
                        throw new TypeError(t + " must be a string or a buffer")
                }(e, "Data"),
                this._finalized)
                    throw new Error("Digest already called");
                i.isBuffer(e) || (e = i.from(e, t));
                for (var r = this._block, n = 0; this._blockOffset + e.length - n >= this._blockSize; ) {
                    for (var s = this._blockOffset; s < this._blockSize; )
                        r[s++] = e[n++];
                    this._update(),
                    this._blockOffset = 0
                }
                for (; n < e.length; )
                    r[this._blockOffset++] = e[n++];
                for (var o = 0, a = 8 * e.length; a > 0; ++o)
                    this._length[o] += a,
                    (a = this._length[o] / 4294967296 | 0) > 0 && (this._length[o] -= 4294967296 * a);
                return this
            }
            ,
            s.prototype._update = function() {
                throw new Error("_update is not implemented")
            }
            ,
            s.prototype.digest = function(e) {
                if (this._finalized)
                    throw new Error("Digest already called");
                this._finalized = !0;
                var t = this._digest();
                void 0 !== e && (t = t.toString(e)),
                this._block.fill(0),
                this._blockOffset = 0;
                for (var r = 0; r < 4; ++r)
                    this._length[r] = 0;
                return t
            }
            ,
            s.prototype._digest = function() {
                throw new Error("_digest is not implemented")
            }
            ,
            t.exports = s
        }
        , {
            inherits: 100,
            "safe-buffer": 143,
            stream: 152
        }],
        86: [function(e, t, r) {
            var i = r;
            i.utils = e("./hash/utils"),
            i.common = e("./hash/common"),
            i.sha = e("./hash/sha"),
            i.ripemd = e("./hash/ripemd"),
            i.hmac = e("./hash/hmac"),
            i.sha1 = i.sha.sha1,
            i.sha256 = i.sha.sha256,
            i.sha224 = i.sha.sha224,
            i.sha384 = i.sha.sha384,
            i.sha512 = i.sha.sha512,
            i.ripemd160 = i.ripemd.ripemd160
        }
        , {
            "./hash/common": 87,
            "./hash/hmac": 88,
            "./hash/ripemd": 89,
            "./hash/sha": 90,
            "./hash/utils": 97
        }],
        87: [function(e, t, r) {
            "use strict";
            var i = e("./utils")
              , n = e("minimalistic-assert");
            function s() {
                this.pending = null,
                this.pendingTotal = 0,
                this.blockSize = this.constructor.blockSize,
                this.outSize = this.constructor.outSize,
                this.hmacStrength = this.constructor.hmacStrength,
                this.padLength = this.constructor.padLength / 8,
                this.endian = "big",
                this._delta8 = this.blockSize / 8,
                this._delta32 = this.blockSize / 32
            }
            r.BlockHash = s,
            s.prototype.update = function(e, t) {
                if (e = i.toArray(e, t),
                this.pending ? this.pending = this.pending.concat(e) : this.pending = e,
                this.pendingTotal += e.length,
                this.pending.length >= this._delta8) {
                    var r = (e = this.pending).length % this._delta8;
                    this.pending = e.slice(e.length - r, e.length),
                    0 === this.pending.length && (this.pending = null),
                    e = i.join32(e, 0, e.length - r, this.endian);
                    for (var n = 0; n < e.length; n += this._delta32)
                        this._update(e, n, n + this._delta32)
                }
                return this
            }
            ,
            s.prototype.digest = function(e) {
                return this.update(this._pad()),
                n(null === this.pending),
                this._digest(e)
            }
            ,
            s.prototype._pad = function() {
                var e = this.pendingTotal
                  , t = this._delta8
                  , r = t - (e + this.padLength) % t
                  , i = new Array(r + this.padLength);
                i[0] = 128;
                for (var n = 1; n < r; n++)
                    i[n] = 0;
                if (e <<= 3,
                "big" === this.endian) {
                    for (var s = 8; s < this.padLength; s++)
                        i[n++] = 0;
                    i[n++] = 0,
                    i[n++] = 0,
                    i[n++] = 0,
                    i[n++] = 0,
                    i[n++] = e >>> 24 & 255,
                    i[n++] = e >>> 16 & 255,
                    i[n++] = e >>> 8 & 255,
                    i[n++] = 255 & e
                } else
                    for (i[n++] = 255 & e,
                    i[n++] = e >>> 8 & 255,
                    i[n++] = e >>> 16 & 255,
                    i[n++] = e >>> 24 & 255,
                    i[n++] = 0,
                    i[n++] = 0,
                    i[n++] = 0,
                    i[n++] = 0,
                    s = 8; s < this.padLength; s++)
                        i[n++] = 0;
                return i
            }
        }
        , {
            "./utils": 97,
            "minimalistic-assert": 105
        }],
        88: [function(e, t, r) {
            "use strict";
            var i = e("./utils")
              , n = e("minimalistic-assert");
            function s(e, t, r) {
                if (!(this instanceof s))
                    return new s(e,t,r);
                this.Hash = e,
                this.blockSize = e.blockSize / 8,
                this.outSize = e.outSize / 8,
                this.inner = null,
                this.outer = null,
                this._init(i.toArray(t, r))
            }
            t.exports = s,
            s.prototype._init = function(e) {
                e.length > this.blockSize && (e = (new this.Hash).update(e).digest()),
                n(e.length <= this.blockSize);
                for (var t = e.length; t < this.blockSize; t++)
                    e.push(0);
                for (t = 0; t < e.length; t++)
                    e[t] ^= 54;
                for (this.inner = (new this.Hash).update(e),
                t = 0; t < e.length; t++)
                    e[t] ^= 106;
                this.outer = (new this.Hash).update(e)
            }
            ,
            s.prototype.update = function(e, t) {
                return this.inner.update(e, t),
                this
            }
            ,
            s.prototype.digest = function(e) {
                return this.outer.update(this.inner.digest()),
                this.outer.digest(e)
            }
        }
        , {
            "./utils": 97,
            "minimalistic-assert": 105
        }],
        89: [function(e, t, r) {
            "use strict";
            var i = e("./utils")
              , n = e("./common")
              , s = i.rotl32
              , o = i.sum32
              , a = i.sum32_3
              , c = i.sum32_4
              , u = n.BlockHash;
            function f() {
                if (!(this instanceof f))
                    return new f;
                u.call(this),
                this.h = [1732584193, 4023233417, 2562383102, 271733878, 3285377520],
                this.endian = "little"
            }
            function h(e, t, r, i) {
                return e <= 15 ? t ^ r ^ i : e <= 31 ? t & r | ~t & i : e <= 47 ? (t | ~r) ^ i : e <= 63 ? t & i | r & ~i : t ^ (r | ~i)
            }
            function l(e) {
                return e <= 15 ? 0 : e <= 31 ? 1518500249 : e <= 47 ? 1859775393 : e <= 63 ? 2400959708 : 2840853838
            }
            function d(e) {
                return e <= 15 ? 1352829926 : e <= 31 ? 1548603684 : e <= 47 ? 1836072691 : e <= 63 ? 2053994217 : 0
            }
            i.inherits(f, u),
            r.ripemd160 = f,
            f.blockSize = 512,
            f.outSize = 160,
            f.hmacStrength = 192,
            f.padLength = 64,
            f.prototype._update = function(e, t) {
                for (var r = this.h[0], i = this.h[1], n = this.h[2], u = this.h[3], f = this.h[4], y = r, v = i, w = n, E = u, _ = f, S = 0; S < 80; S++) {
                    var k = o(s(c(r, h(S, i, n, u), e[p[S] + t], l(S)), g[S]), f);
                    r = f,
                    f = u,
                    u = s(n, 10),
                    n = i,
                    i = k,
                    k = o(s(c(y, h(79 - S, v, w, E), e[b[S] + t], d(S)), m[S]), _),
                    y = _,
                    _ = E,
                    E = s(w, 10),
                    w = v,
                    v = k
                }
                k = a(this.h[1], n, E),
                this.h[1] = a(this.h[2], u, _),
                this.h[2] = a(this.h[3], f, y),
                this.h[3] = a(this.h[4], r, v),
                this.h[4] = a(this.h[0], i, w),
                this.h[0] = k
            }
            ,
            f.prototype._digest = function(e) {
                return "hex" === e ? i.toHex32(this.h, "little") : i.split32(this.h, "little")
            }
            ;
            var p = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13]
              , b = [5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11]
              , g = [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6]
              , m = [8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11]
        }
        , {
            "./common": 87,
            "./utils": 97
        }],
        90: [function(e, t, r) {
            "use strict";
            r.sha1 = e("./sha/1"),
            r.sha224 = e("./sha/224"),
            r.sha256 = e("./sha/256"),
            r.sha384 = e("./sha/384"),
            r.sha512 = e("./sha/512")
        }
        , {
            "./sha/1": 91,
            "./sha/224": 92,
            "./sha/256": 93,
            "./sha/384": 94,
            "./sha/512": 95
        }],
        91: [function(e, t, r) {
            "use strict";
            var i = e("../utils")
              , n = e("../common")
              , s = e("./common")
              , o = i.rotl32
              , a = i.sum32
              , c = i.sum32_5
              , u = s.ft_1
              , f = n.BlockHash
              , h = [1518500249, 1859775393, 2400959708, 3395469782];
            function l() {
                if (!(this instanceof l))
                    return new l;
                f.call(this),
                this.h = [1732584193, 4023233417, 2562383102, 271733878, 3285377520],
                this.W = new Array(80)
            }
            i.inherits(l, f),
            t.exports = l,
            l.blockSize = 512,
            l.outSize = 160,
            l.hmacStrength = 80,
            l.padLength = 64,
            l.prototype._update = function(e, t) {
                for (var r = this.W, i = 0; i < 16; i++)
                    r[i] = e[t + i];
                for (; i < r.length; i++)
                    r[i] = o(r[i - 3] ^ r[i - 8] ^ r[i - 14] ^ r[i - 16], 1);
                var n = this.h[0]
                  , s = this.h[1]
                  , f = this.h[2]
                  , l = this.h[3]
                  , d = this.h[4];
                for (i = 0; i < r.length; i++) {
                    var p = ~~(i / 20)
                      , b = c(o(n, 5), u(p, s, f, l), d, r[i], h[p]);
                    d = l,
                    l = f,
                    f = o(s, 30),
                    s = n,
                    n = b
                }
                this.h[0] = a(this.h[0], n),
                this.h[1] = a(this.h[1], s),
                this.h[2] = a(this.h[2], f),
                this.h[3] = a(this.h[3], l),
                this.h[4] = a(this.h[4], d)
            }
            ,
            l.prototype._digest = function(e) {
                return "hex" === e ? i.toHex32(this.h, "big") : i.split32(this.h, "big")
            }
        }
        , {
            "../common": 87,
            "../utils": 97,
            "./common": 96
        }],
        92: [function(e, t, r) {
            "use strict";
            var i = e("../utils")
              , n = e("./256");
            function s() {
                if (!(this instanceof s))
                    return new s;
                n.call(this),
                this.h = [3238371032, 914150663, 812702999, 4144912697, 4290775857, 1750603025, 1694076839, 3204075428]
            }
            i.inherits(s, n),
            t.exports = s,
            s.blockSize = 512,
            s.outSize = 224,
            s.hmacStrength = 192,
            s.padLength = 64,
            s.prototype._digest = function(e) {
                return "hex" === e ? i.toHex32(this.h.slice(0, 7), "big") : i.split32(this.h.slice(0, 7), "big")
            }
        }
        , {
            "../utils": 97,
            "./256": 93
        }],
        93: [function(e, t, r) {
            "use strict";
            var i = e("../utils")
              , n = e("../common")
              , s = e("./common")
              , o = e("minimalistic-assert")
              , a = i.sum32
              , c = i.sum32_4
              , u = i.sum32_5
              , f = s.ch32
              , h = s.maj32
              , l = s.s0_256
              , d = s.s1_256
              , p = s.g0_256
              , b = s.g1_256
              , g = n.BlockHash
              , m = [1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298];
            function y() {
                if (!(this instanceof y))
                    return new y;
                g.call(this),
                this.h = [1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924, 528734635, 1541459225],
                this.k = m,
                this.W = new Array(64)
            }
            i.inherits(y, g),
            t.exports = y,
            y.blockSize = 512,
            y.outSize = 256,
            y.hmacStrength = 192,
            y.padLength = 64,
            y.prototype._update = function(e, t) {
                for (var r = this.W, i = 0; i < 16; i++)
                    r[i] = e[t + i];
                for (; i < r.length; i++)
                    r[i] = c(b(r[i - 2]), r[i - 7], p(r[i - 15]), r[i - 16]);
                var n = this.h[0]
                  , s = this.h[1]
                  , g = this.h[2]
                  , m = this.h[3]
                  , y = this.h[4]
                  , v = this.h[5]
                  , w = this.h[6]
                  , E = this.h[7];
                for (o(this.k.length === r.length),
                i = 0; i < r.length; i++) {
                    var _ = u(E, d(y), f(y, v, w), this.k[i], r[i])
                      , S = a(l(n), h(n, s, g));
                    E = w,
                    w = v,
                    v = y,
                    y = a(m, _),
                    m = g,
                    g = s,
                    s = n,
                    n = a(_, S)
                }
                this.h[0] = a(this.h[0], n),
                this.h[1] = a(this.h[1], s),
                this.h[2] = a(this.h[2], g),
                this.h[3] = a(this.h[3], m),
                this.h[4] = a(this.h[4], y),
                this.h[5] = a(this.h[5], v),
                this.h[6] = a(this.h[6], w),
                this.h[7] = a(this.h[7], E)
            }
            ,
            y.prototype._digest = function(e) {
                return "hex" === e ? i.toHex32(this.h, "big") : i.split32(this.h, "big")
            }
        }
        , {
            "../common": 87,
            "../utils": 97,
            "./common": 96,
            "minimalistic-assert": 105
        }],
        94: [function(e, t, r) {
            "use strict";
            var i = e("../utils")
              , n = e("./512");
            function s() {
                if (!(this instanceof s))
                    return new s;
                n.call(this),
                this.h = [3418070365, 3238371032, 1654270250, 914150663, 2438529370, 812702999, 355462360, 4144912697, 1731405415, 4290775857, 2394180231, 1750603025, 3675008525, 1694076839, 1203062813, 3204075428]
            }
            i.inherits(s, n),
            t.exports = s,
            s.blockSize = 1024,
            s.outSize = 384,
            s.hmacStrength = 192,
            s.padLength = 128,
            s.prototype._digest = function(e) {
                return "hex" === e ? i.toHex32(this.h.slice(0, 12), "big") : i.split32(this.h.slice(0, 12), "big")
            }
        }
        , {
            "../utils": 97,
            "./512": 95
        }],
        95: [function(e, t, r) {
            "use strict";
            var i = e("../utils")
              , n = e("../common")
              , s = e("minimalistic-assert")
              , o = i.rotr64_hi
              , a = i.rotr64_lo
              , c = i.shr64_hi
              , u = i.shr64_lo
              , f = i.sum64
              , h = i.sum64_hi
              , l = i.sum64_lo
              , d = i.sum64_4_hi
              , p = i.sum64_4_lo
              , b = i.sum64_5_hi
              , g = i.sum64_5_lo
              , m = n.BlockHash
              , y = [1116352408, 3609767458, 1899447441, 602891725, 3049323471, 3964484399, 3921009573, 2173295548, 961987163, 4081628472, 1508970993, 3053834265, 2453635748, 2937671579, 2870763221, 3664609560, 3624381080, 2734883394, 310598401, 1164996542, 607225278, 1323610764, 1426881987, 3590304994, 1925078388, 4068182383, 2162078206, 991336113, 2614888103, 633803317, 3248222580, 3479774868, 3835390401, 2666613458, 4022224774, 944711139, 264347078, 2341262773, 604807628, 2007800933, 770255983, 1495990901, 1249150122, 1856431235, 1555081692, 3175218132, 1996064986, 2198950837, 2554220882, 3999719339, 2821834349, 766784016, 2952996808, 2566594879, 3210313671, 3203337956, 3336571891, 1034457026, 3584528711, 2466948901, 113926993, 3758326383, 338241895, 168717936, 666307205, 1188179964, 773529912, 1546045734, 1294757372, 1522805485, 1396182291, 2643833823, 1695183700, 2343527390, 1986661051, 1014477480, 2177026350, 1206759142, 2456956037, 344077627, 2730485921, 1290863460, 2820302411, 3158454273, 3259730800, 3505952657, 3345764771, 106217008, 3516065817, 3606008344, 3600352804, 1432725776, 4094571909, 1467031594, 275423344, 851169720, 430227734, 3100823752, 506948616, 1363258195, 659060556, 3750685593, 883997877, 3785050280, 958139571, 3318307427, 1322822218, 3812723403, 1537002063, 2003034995, 1747873779, 3602036899, 1955562222, 1575990012, 2024104815, 1125592928, 2227730452, 2716904306, 2361852424, 442776044, 2428436474, 593698344, 2756734187, 3733110249, 3204031479, 2999351573, 3329325298, 3815920427, 3391569614, 3928383900, 3515267271, 566280711, 3940187606, 3454069534, 4118630271, 4000239992, 116418474, 1914138554, 174292421, 2731055270, 289380356, 3203993006, 460393269, 320620315, 685471733, 587496836, 852142971, 1086792851, 1017036298, 365543100, 1126000580, 2618297676, 1288033470, 3409855158, 1501505948, 4234509866, 1607167915, 987167468, 1816402316, 1246189591];
            function v() {
                if (!(this instanceof v))
                    return new v;
                m.call(this),
                this.h = [1779033703, 4089235720, 3144134277, 2227873595, 1013904242, 4271175723, 2773480762, 1595750129, 1359893119, 2917565137, 2600822924, 725511199, 528734635, 4215389547, 1541459225, 327033209],
                this.k = y,
                this.W = new Array(160)
            }
            function w(e, t, r, i, n) {
                var s = e & r ^ ~e & n;
                return s < 0 && (s += 4294967296),
                s
            }
            function E(e, t, r, i, n, s) {
                var o = t & i ^ ~t & s;
                return o < 0 && (o += 4294967296),
                o
            }
            function _(e, t, r, i, n) {
                var s = e & r ^ e & n ^ r & n;
                return s < 0 && (s += 4294967296),
                s
            }
            function S(e, t, r, i, n, s) {
                var o = t & i ^ t & s ^ i & s;
                return o < 0 && (o += 4294967296),
                o
            }
            function k(e, t) {
                var r = o(e, t, 28) ^ o(t, e, 2) ^ o(t, e, 7);
                return r < 0 && (r += 4294967296),
                r
            }
            function A(e, t) {
                var r = a(e, t, 28) ^ a(t, e, 2) ^ a(t, e, 7);
                return r < 0 && (r += 4294967296),
                r
            }
            function C(e, t) {
                var r = o(e, t, 14) ^ o(e, t, 18) ^ o(t, e, 9);
                return r < 0 && (r += 4294967296),
                r
            }
            function I(e, t) {
                var r = a(e, t, 14) ^ a(e, t, 18) ^ a(t, e, 9);
                return r < 0 && (r += 4294967296),
                r
            }
            function T(e, t) {
                var r = o(e, t, 1) ^ o(e, t, 8) ^ c(e, t, 7);
                return r < 0 && (r += 4294967296),
                r
            }
            function B(e, t) {
                var r = a(e, t, 1) ^ a(e, t, 8) ^ u(e, t, 7);
                return r < 0 && (r += 4294967296),
                r
            }
            function M(e, t) {
                var r = o(e, t, 19) ^ o(t, e, 29) ^ c(e, t, 6);
                return r < 0 && (r += 4294967296),
                r
            }
            function R(e, t) {
                var r = a(e, t, 19) ^ a(t, e, 29) ^ u(e, t, 6);
                return r < 0 && (r += 4294967296),
                r
            }
            i.inherits(v, m),
            t.exports = v,
            v.blockSize = 1024,
            v.outSize = 512,
            v.hmacStrength = 192,
            v.padLength = 128,
            v.prototype._prepareBlock = function(e, t) {
                for (var r = this.W, i = 0; i < 32; i++)
                    r[i] = e[t + i];
                for (; i < r.length; i += 2) {
                    var n = M(r[i - 4], r[i - 3])
                      , s = R(r[i - 4], r[i - 3])
                      , o = r[i - 14]
                      , a = r[i - 13]
                      , c = T(r[i - 30], r[i - 29])
                      , u = B(r[i - 30], r[i - 29])
                      , f = r[i - 32]
                      , h = r[i - 31];
                    r[i] = d(n, s, o, a, c, u, f, h),
                    r[i + 1] = p(n, s, o, a, c, u, f, h)
                }
            }
            ,
            v.prototype._update = function(e, t) {
                this._prepareBlock(e, t);
                var r = this.W
                  , i = this.h[0]
                  , n = this.h[1]
                  , o = this.h[2]
                  , a = this.h[3]
                  , c = this.h[4]
                  , u = this.h[5]
                  , d = this.h[6]
                  , p = this.h[7]
                  , m = this.h[8]
                  , y = this.h[9]
                  , v = this.h[10]
                  , T = this.h[11]
                  , B = this.h[12]
                  , M = this.h[13]
                  , R = this.h[14]
                  , x = this.h[15];
                s(this.k.length === r.length);
                for (var N = 0; N < r.length; N += 2) {
                    var P = R
                      , D = x
                      , L = C(m, y)
                      , O = I(m, y)
                      , j = w(m, y, v, T, B)
                      , U = E(m, y, v, T, B, M)
                      , K = this.k[N]
                      , q = this.k[N + 1]
                      , V = r[N]
                      , F = r[N + 1]
                      , z = b(P, D, L, O, j, U, K, q, V, F)
                      , H = g(P, D, L, O, j, U, K, q, V, F);
                    P = k(i, n),
                    D = A(i, n),
                    L = _(i, n, o, a, c),
                    O = S(i, n, o, a, c, u);
                    var G = h(P, D, L, O)
                      , $ = l(P, D, L, O);
                    R = B,
                    x = M,
                    B = v,
                    M = T,
                    v = m,
                    T = y,
                    m = h(d, p, z, H),
                    y = l(p, p, z, H),
                    d = c,
                    p = u,
                    c = o,
                    u = a,
                    o = i,
                    a = n,
                    i = h(z, H, G, $),
                    n = l(z, H, G, $)
                }
                f(this.h, 0, i, n),
                f(this.h, 2, o, a),
                f(this.h, 4, c, u),
                f(this.h, 6, d, p),
                f(this.h, 8, m, y),
                f(this.h, 10, v, T),
                f(this.h, 12, B, M),
                f(this.h, 14, R, x)
            }
            ,
            v.prototype._digest = function(e) {
                return "hex" === e ? i.toHex32(this.h, "big") : i.split32(this.h, "big")
            }
        }
        , {
            "../common": 87,
            "../utils": 97,
            "minimalistic-assert": 105
        }],
        96: [function(e, t, r) {
            "use strict";
            var i = e("../utils").rotr32;
            function n(e, t, r) {
                return e & t ^ ~e & r
            }
            function s(e, t, r) {
                return e & t ^ e & r ^ t & r
            }
            function o(e, t, r) {
                return e ^ t ^ r
            }
            r.ft_1 = function(e, t, r, i) {
                return 0 === e ? n(t, r, i) : 1 === e || 3 === e ? o(t, r, i) : 2 === e ? s(t, r, i) : void 0
            }
            ,
            r.ch32 = n,
            r.maj32 = s,
            r.p32 = o,
            r.s0_256 = function(e) {
                return i(e, 2) ^ i(e, 13) ^ i(e, 22)
            }
            ,
            r.s1_256 = function(e) {
                return i(e, 6) ^ i(e, 11) ^ i(e, 25)
            }
            ,
            r.g0_256 = function(e) {
                return i(e, 7) ^ i(e, 18) ^ e >>> 3
            }
            ,
            r.g1_256 = function(e) {
                return i(e, 17) ^ i(e, 19) ^ e >>> 10
            }
        }
        , {
            "../utils": 97
        }],
        97: [function(e, t, r) {
            "use strict";
            var i = e("minimalistic-assert")
              , n = e("inherits");
            function s(e, t) {
                return 55296 == (64512 & e.charCodeAt(t)) && (!(t < 0 || t + 1 >= e.length) && 56320 == (64512 & e.charCodeAt(t + 1)))
            }
            function o(e) {
                return (e >>> 24 | e >>> 8 & 65280 | e << 8 & 16711680 | (255 & e) << 24) >>> 0
            }
            function a(e) {
                return 1 === e.length ? "0" + e : e
            }
            function c(e) {
                return 7 === e.length ? "0" + e : 6 === e.length ? "00" + e : 5 === e.length ? "000" + e : 4 === e.length ? "0000" + e : 3 === e.length ? "00000" + e : 2 === e.length ? "000000" + e : 1 === e.length ? "0000000" + e : e
            }
            r.inherits = n,
            r.toArray = function(e, t) {
                if (Array.isArray(e))
                    return e.slice();
                if (!e)
                    return [];
                var r = [];
                if ("string" == typeof e)
                    if (t) {
                        if ("hex" === t)
                            for ((e = e.replace(/[^a-z0-9]+/gi, "")).length % 2 != 0 && (e = "0" + e),
                            n = 0; n < e.length; n += 2)
                                r.push(parseInt(e[n] + e[n + 1], 16))
                    } else
                        for (var i = 0, n = 0; n < e.length; n++) {
                            var o = e.charCodeAt(n);
                            o < 128 ? r[i++] = o : o < 2048 ? (r[i++] = o >> 6 | 192,
                            r[i++] = 63 & o | 128) : s(e, n) ? (o = 65536 + ((1023 & o) << 10) + (1023 & e.charCodeAt(++n)),
                            r[i++] = o >> 18 | 240,
                            r[i++] = o >> 12 & 63 | 128,
                            r[i++] = o >> 6 & 63 | 128,
                            r[i++] = 63 & o | 128) : (r[i++] = o >> 12 | 224,
                            r[i++] = o >> 6 & 63 | 128,
                            r[i++] = 63 & o | 128)
                        }
                else
                    for (n = 0; n < e.length; n++)
                        r[n] = 0 | e[n];
                return r
            }
            ,
            r.toHex = function(e) {
                for (var t = "", r = 0; r < e.length; r++)
                    t += a(e[r].toString(16));
                return t
            }
            ,
            r.htonl = o,
            r.toHex32 = function(e, t) {
                for (var r = "", i = 0; i < e.length; i++) {
                    var n = e[i];
                    "little" === t && (n = o(n)),
                    r += c(n.toString(16))
                }
                return r
            }
            ,
            r.zero2 = a,
            r.zero8 = c,
            r.join32 = function(e, t, r, n) {
                var s = r - t;
                i(s % 4 == 0);
                for (var o = new Array(s / 4), a = 0, c = t; a < o.length; a++,
                c += 4) {
                    var u;
                    u = "big" === n ? e[c] << 24 | e[c + 1] << 16 | e[c + 2] << 8 | e[c + 3] : e[c + 3] << 24 | e[c + 2] << 16 | e[c + 1] << 8 | e[c],
                    o[a] = u >>> 0
                }
                return o
            }
            ,
            r.split32 = function(e, t) {
                for (var r = new Array(4 * e.length), i = 0, n = 0; i < e.length; i++,
                n += 4) {
                    var s = e[i];
                    "big" === t ? (r[n] = s >>> 24,
                    r[n + 1] = s >>> 16 & 255,
                    r[n + 2] = s >>> 8 & 255,
                    r[n + 3] = 255 & s) : (r[n + 3] = s >>> 24,
                    r[n + 2] = s >>> 16 & 255,
                    r[n + 1] = s >>> 8 & 255,
                    r[n] = 255 & s)
                }
                return r
            }
            ,
            r.rotr32 = function(e, t) {
                return e >>> t | e << 32 - t
            }
            ,
            r.rotl32 = function(e, t) {
                return e << t | e >>> 32 - t
            }
            ,
            r.sum32 = function(e, t) {
                return e + t >>> 0
            }
            ,
            r.sum32_3 = function(e, t, r) {
                return e + t + r >>> 0
            }
            ,
            r.sum32_4 = function(e, t, r, i) {
                return e + t + r + i >>> 0
            }
            ,
            r.sum32_5 = function(e, t, r, i, n) {
                return e + t + r + i + n >>> 0
            }
            ,
            r.sum64 = function(e, t, r, i) {
                var n = e[t]
                  , s = i + e[t + 1] >>> 0
                  , o = (s < i ? 1 : 0) + r + n;
                e[t] = o >>> 0,
                e[t + 1] = s
            }
            ,
            r.sum64_hi = function(e, t, r, i) {
                return (t + i >>> 0 < t ? 1 : 0) + e + r >>> 0
            }
            ,
            r.sum64_lo = function(e, t, r, i) {
                return t + i >>> 0
            }
            ,
            r.sum64_4_hi = function(e, t, r, i, n, s, o, a) {
                var c = 0
                  , u = t;
                return c += (u = u + i >>> 0) < t ? 1 : 0,
                c += (u = u + s >>> 0) < s ? 1 : 0,
                e + r + n + o + (c += (u = u + a >>> 0) < a ? 1 : 0) >>> 0
            }
            ,
            r.sum64_4_lo = function(e, t, r, i, n, s, o, a) {
                return t + i + s + a >>> 0
            }
            ,
            r.sum64_5_hi = function(e, t, r, i, n, s, o, a, c, u) {
                var f = 0
                  , h = t;
                return f += (h = h + i >>> 0) < t ? 1 : 0,
                f += (h = h + s >>> 0) < s ? 1 : 0,
                f += (h = h + a >>> 0) < a ? 1 : 0,
                e + r + n + o + c + (f += (h = h + u >>> 0) < u ? 1 : 0) >>> 0
            }
            ,
            r.sum64_5_lo = function(e, t, r, i, n, s, o, a, c, u) {
                return t + i + s + a + u >>> 0
            }
            ,
            r.rotr64_hi = function(e, t, r) {
                return (t << 32 - r | e >>> r) >>> 0
            }
            ,
            r.rotr64_lo = function(e, t, r) {
                return (e << 32 - r | t >>> r) >>> 0
            }
            ,
            r.shr64_hi = function(e, t, r) {
                return e >>> r
            }
            ,
            r.shr64_lo = function(e, t, r) {
                return (e << 32 - r | t >>> r) >>> 0
            }
        }
        , {
            inherits: 100,
            "minimalistic-assert": 105
        }],
        98: [function(e, t, r) {
            "use strict";
            var i = e("hash.js")
              , n = e("minimalistic-crypto-utils")
              , s = e("minimalistic-assert");
            function o(e) {
                if (!(this instanceof o))
                    return new o(e);
                this.hash = e.hash,
                this.predResist = !!e.predResist,
                this.outLen = this.hash.outSize,
                this.minEntropy = e.minEntropy || this.hash.hmacStrength,
                this._reseed = null,
                this.reseedInterval = null,
                this.K = null,
                this.V = null;
                var t = n.toArray(e.entropy, e.entropyEnc || "hex")
                  , r = n.toArray(e.nonce, e.nonceEnc || "hex")
                  , i = n.toArray(e.pers, e.persEnc || "hex");
                s(t.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits"),
                this._init(t, r, i)
            }
            t.exports = o,
            o.prototype._init = function(e, t, r) {
                var i = e.concat(t).concat(r);
                this.K = new Array(this.outLen / 8),
                this.V = new Array(this.outLen / 8);
                for (var n = 0; n < this.V.length; n++)
                    this.K[n] = 0,
                    this.V[n] = 1;
                this._update(i),
                this._reseed = 1,
                this.reseedInterval = 281474976710656
            }
            ,
            o.prototype._hmac = function() {
                return new i.hmac(this.hash,this.K)
            }
            ,
            o.prototype._update = function(e) {
                var t = this._hmac().update(this.V).update([0]);
                e && (t = t.update(e)),
                this.K = t.digest(),
                this.V = this._hmac().update(this.V).digest(),
                e && (this.K = this._hmac().update(this.V).update([1]).update(e).digest(),
                this.V = this._hmac().update(this.V).digest())
            }
            ,
            o.prototype.reseed = function(e, t, r, i) {
                "string" != typeof t && (i = r,
                r = t,
                t = null),
                e = n.toArray(e, t),
                r = n.toArray(r, i),
                s(e.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits"),
                this._update(e.concat(r || [])),
                this._reseed = 1
            }
            ,
            o.prototype.generate = function(e, t, r, i) {
                if (this._reseed > this.reseedInterval)
                    throw new Error("Reseed is required");
                "string" != typeof t && (i = r,
                r = t,
                t = null),
                r && (r = n.toArray(r, i || "hex"),
                this._update(r));
                for (var s = []; s.length < e; )
                    this.V = this._hmac().update(this.V).digest(),
                    s = s.concat(this.V);
                var o = s.slice(0, e);
                return this._update(r),
                this._reseed++,
                n.encode(o, t)
            }
        }
        , {
            "hash.js": 86,
            "minimalistic-assert": 105,
            "minimalistic-crypto-utils": 106
        }],
        99: [function(e, t, r) {
            r.read = function(e, t, r, i, n) {
                var s, o, a = 8 * n - i - 1, c = (1 << a) - 1, u = c >> 1, f = -7, h = r ? n - 1 : 0, l = r ? -1 : 1, d = e[t + h];
                for (h += l,
                s = d & (1 << -f) - 1,
                d >>= -f,
                f += a; f > 0; s = 256 * s + e[t + h],
                h += l,
                f -= 8)
                    ;
                for (o = s & (1 << -f) - 1,
                s >>= -f,
                f += i; f > 0; o = 256 * o + e[t + h],
                h += l,
                f -= 8)
                    ;
                if (0 === s)
                    s = 1 - u;
                else {
                    if (s === c)
                        return o ? NaN : 1 / 0 * (d ? -1 : 1);
                    o += Math.pow(2, i),
                    s -= u
                }
                return (d ? -1 : 1) * o * Math.pow(2, s - i)
            }
            ,
            r.write = function(e, t, r, i, n, s) {
                var o, a, c, u = 8 * s - n - 1, f = (1 << u) - 1, h = f >> 1, l = 23 === n ? Math.pow(2, -24) - Math.pow(2, -77) : 0, d = i ? 0 : s - 1, p = i ? 1 : -1, b = t < 0 || 0 === t && 1 / t < 0 ? 1 : 0;
                for (t = Math.abs(t),
                isNaN(t) || t === 1 / 0 ? (a = isNaN(t) ? 1 : 0,
                o = f) : (o = Math.floor(Math.log(t) / Math.LN2),
                t * (c = Math.pow(2, -o)) < 1 && (o--,
                c *= 2),
                (t += o + h >= 1 ? l / c : l * Math.pow(2, 1 - h)) * c >= 2 && (o++,
                c /= 2),
                o + h >= f ? (a = 0,
                o = f) : o + h >= 1 ? (a = (t * c - 1) * Math.pow(2, n),
                o += h) : (a = t * Math.pow(2, h - 1) * Math.pow(2, n),
                o = 0)); n >= 8; e[r + d] = 255 & a,
                d += p,
                a /= 256,
                n -= 8)
                    ;
                for (o = o << n | a,
                u += n; u > 0; e[r + d] = 255 & o,
                d += p,
                o /= 256,
                u -= 8)
                    ;
                e[r + d - p] |= 128 * b
            }
        }
        , {}],
        100: [function(e, t, r) {
            "function" == typeof Object.create ? t.exports = function(e, t) {
                e.super_ = t,
                e.prototype = Object.create(t.prototype, {
                    constructor: {
                        value: e,
                        enumerable: !1,
                        writable: !0,
                        configurable: !0
                    }
                })
            }
            : t.exports = function(e, t) {
                e.super_ = t;
                var r = function() {};
                r.prototype = t.prototype,
                e.prototype = new r,
                e.prototype.constructor = e
            }
        }
        , {}],
        101: [function(e, t, r) {
            function i(e) {
                return !!e.constructor && "function" == typeof e.constructor.isBuffer && e.constructor.isBuffer(e)
            }
            /*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
            t.exports = function(e) {
                return null != e && (i(e) || function(e) {
                    return "function" == typeof e.readFloatLE && "function" == typeof e.slice && i(e.slice(0, 0))
                }(e) || !!e._isBuffer)
            }
        }
        , {}],
        102: [function(e, t, r) {
            var i = {}.toString;
            t.exports = Array.isArray || function(e) {
                return "[object Array]" == i.call(e)
            }
        }
        , {}],
        103: [function(e, t, r) {
            "use strict";
            var i = e("inherits")
              , n = e("hash-base")
              , s = e("safe-buffer").Buffer
              , o = new Array(16);
            function a() {
                n.call(this, 64),
                this._a = 1732584193,
                this._b = 4023233417,
                this._c = 2562383102,
                this._d = 271733878
            }
            function c(e, t) {
                return e << t | e >>> 32 - t
            }
            function u(e, t, r, i, n, s, o) {
                return c(e + (t & r | ~t & i) + n + s | 0, o) + t | 0
            }
            function f(e, t, r, i, n, s, o) {
                return c(e + (t & i | r & ~i) + n + s | 0, o) + t | 0
            }
            function h(e, t, r, i, n, s, o) {
                return c(e + (t ^ r ^ i) + n + s | 0, o) + t | 0
            }
            function l(e, t, r, i, n, s, o) {
                return c(e + (r ^ (t | ~i)) + n + s | 0, o) + t | 0
            }
            i(a, n),
            a.prototype._update = function() {
                for (var e = o, t = 0; t < 16; ++t)
                    e[t] = this._block.readInt32LE(4 * t);
                var r = this._a
                  , i = this._b
                  , n = this._c
                  , s = this._d;
                r = u(r, i, n, s, e[0], 3614090360, 7),
                s = u(s, r, i, n, e[1], 3905402710, 12),
                n = u(n, s, r, i, e[2], 606105819, 17),
                i = u(i, n, s, r, e[3], 3250441966, 22),
                r = u(r, i, n, s, e[4], 4118548399, 7),
                s = u(s, r, i, n, e[5], 1200080426, 12),
                n = u(n, s, r, i, e[6], 2821735955, 17),
                i = u(i, n, s, r, e[7], 4249261313, 22),
                r = u(r, i, n, s, e[8], 1770035416, 7),
                s = u(s, r, i, n, e[9], 2336552879, 12),
                n = u(n, s, r, i, e[10], 4294925233, 17),
                i = u(i, n, s, r, e[11], 2304563134, 22),
                r = u(r, i, n, s, e[12], 1804603682, 7),
                s = u(s, r, i, n, e[13], 4254626195, 12),
                n = u(n, s, r, i, e[14], 2792965006, 17),
                r = f(r, i = u(i, n, s, r, e[15], 1236535329, 22), n, s, e[1], 4129170786, 5),
                s = f(s, r, i, n, e[6], 3225465664, 9),
                n = f(n, s, r, i, e[11], 643717713, 14),
                i = f(i, n, s, r, e[0], 3921069994, 20),
                r = f(r, i, n, s, e[5], 3593408605, 5),
                s = f(s, r, i, n, e[10], 38016083, 9),
                n = f(n, s, r, i, e[15], 3634488961, 14),
                i = f(i, n, s, r, e[4], 3889429448, 20),
                r = f(r, i, n, s, e[9], 568446438, 5),
                s = f(s, r, i, n, e[14], 3275163606, 9),
                n = f(n, s, r, i, e[3], 4107603335, 14),
                i = f(i, n, s, r, e[8], 1163531501, 20),
                r = f(r, i, n, s, e[13], 2850285829, 5),
                s = f(s, r, i, n, e[2], 4243563512, 9),
                n = f(n, s, r, i, e[7], 1735328473, 14),
                r = h(r, i = f(i, n, s, r, e[12], 2368359562, 20), n, s, e[5], 4294588738, 4),
                s = h(s, r, i, n, e[8], 2272392833, 11),
                n = h(n, s, r, i, e[11], 1839030562, 16),
                i = h(i, n, s, r, e[14], 4259657740, 23),
                r = h(r, i, n, s, e[1], 2763975236, 4),
                s = h(s, r, i, n, e[4], 1272893353, 11),
                n = h(n, s, r, i, e[7], 4139469664, 16),
                i = h(i, n, s, r, e[10], 3200236656, 23),
                r = h(r, i, n, s, e[13], 681279174, 4),
                s = h(s, r, i, n, e[0], 3936430074, 11),
                n = h(n, s, r, i, e[3], 3572445317, 16),
                i = h(i, n, s, r, e[6], 76029189, 23),
                r = h(r, i, n, s, e[9], 3654602809, 4),
                s = h(s, r, i, n, e[12], 3873151461, 11),
                n = h(n, s, r, i, e[15], 530742520, 16),
                r = l(r, i = h(i, n, s, r, e[2], 3299628645, 23), n, s, e[0], 4096336452, 6),
                s = l(s, r, i, n, e[7], 1126891415, 10),
                n = l(n, s, r, i, e[14], 2878612391, 15),
                i = l(i, n, s, r, e[5], 4237533241, 21),
                r = l(r, i, n, s, e[12], 1700485571, 6),
                s = l(s, r, i, n, e[3], 2399980690, 10),
                n = l(n, s, r, i, e[10], 4293915773, 15),
                i = l(i, n, s, r, e[1], 2240044497, 21),
                r = l(r, i, n, s, e[8], 1873313359, 6),
                s = l(s, r, i, n, e[15], 4264355552, 10),
                n = l(n, s, r, i, e[6], 2734768916, 15),
                i = l(i, n, s, r, e[13], 1309151649, 21),
                r = l(r, i, n, s, e[4], 4149444226, 6),
                s = l(s, r, i, n, e[11], 3174756917, 10),
                n = l(n, s, r, i, e[2], 718787259, 15),
                i = l(i, n, s, r, e[9], 3951481745, 21),
                this._a = this._a + r | 0,
                this._b = this._b + i | 0,
                this._c = this._c + n | 0,
                this._d = this._d + s | 0
            }
            ,
            a.prototype._digest = function() {
                this._block[this._blockOffset++] = 128,
                this._blockOffset > 56 && (this._block.fill(0, this._blockOffset, 64),
                this._update(),
                this._blockOffset = 0),
                this._block.fill(0, this._blockOffset, 56),
                this._block.writeUInt32LE(this._length[0], 56),
                this._block.writeUInt32LE(this._length[1], 60),
                this._update();
                var e = s.allocUnsafe(16);
                return e.writeInt32LE(this._a, 0),
                e.writeInt32LE(this._b, 4),
                e.writeInt32LE(this._c, 8),
                e.writeInt32LE(this._d, 12),
                e
            }
            ,
            t.exports = a
        }
        , {
            "hash-base": 85,
            inherits: 100,
            "safe-buffer": 143
        }],
        104: [function(e, t, r) {
            var i = e("bn.js")
              , n = e("brorand");
            function s(e) {
                this.rand = e || new n.Rand
            }
            t.exports = s,
            s.create = function(e) {
                return new s(e)
            }
            ,
            s.prototype._randbelow = function(e) {
                var t = e.bitLength()
                  , r = Math.ceil(t / 8);
                do {
                    var n = new i(this.rand.generate(r))
                } while (n.cmp(e) >= 0);return n
            }
            ,
            s.prototype._randrange = function(e, t) {
                var r = t.sub(e);
                return e.add(this._randbelow(r))
            }
            ,
            s.prototype.test = function(e, t, r) {
                var n = e.bitLength()
                  , s = i.mont(e)
                  , o = new i(1).toRed(s);
                t || (t = Math.max(1, n / 48 | 0));
                for (var a = e.subn(1), c = 0; !a.testn(c); c++)
                    ;
                for (var u = e.shrn(c), f = a.toRed(s); t > 0; t--) {
                    var h = this._randrange(new i(2), a);
                    r && r(h);
                    var l = h.toRed(s).redPow(u);
                    if (0 !== l.cmp(o) && 0 !== l.cmp(f)) {
                        for (var d = 1; d < c; d++) {
                            if (0 === (l = l.redSqr()).cmp(o))
                                return !1;
                            if (0 === l.cmp(f))
                                break
                        }
                        if (d === c)
                            return !1
                    }
                }
                return !0
            }
            ,
            s.prototype.getDivisor = function(e, t) {
                var r = e.bitLength()
                  , n = i.mont(e)
                  , s = new i(1).toRed(n);
                t || (t = Math.max(1, r / 48 | 0));
                for (var o = e.subn(1), a = 0; !o.testn(a); a++)
                    ;
                for (var c = e.shrn(a), u = o.toRed(n); t > 0; t--) {
                    var f = this._randrange(new i(2), o)
                      , h = e.gcd(f);
                    if (0 !== h.cmpn(1))
                        return h;
                    var l = f.toRed(n).redPow(c);
                    if (0 !== l.cmp(s) && 0 !== l.cmp(u)) {
                        for (var d = 1; d < a; d++) {
                            if (0 === (l = l.redSqr()).cmp(s))
                                return l.fromRed().subn(1).gcd(e);
                            if (0 === l.cmp(u))
                                break
                        }
                        if (d === a)
                            return (l = l.redSqr()).fromRed().subn(1).gcd(e)
                    }
                }
                return !1
            }
        }
        , {
            "bn.js": 16,
            brorand: 17
        }],
        105: [function(e, t, r) {
            function i(e, t) {
                if (!e)
                    throw new Error(t || "Assertion failed")
            }
            t.exports = i,
            i.equal = function(e, t, r) {
                if (e != t)
                    throw new Error(r || "Assertion failed: " + e + " != " + t)
            }
        }
        , {}],
        106: [function(e, t, r) {
            "use strict";
            var i = r;
            function n(e) {
                return 1 === e.length ? "0" + e : e
            }
            function s(e) {
                for (var t = "", r = 0; r < e.length; r++)
                    t += n(e[r].toString(16));
                return t
            }
            i.toArray = function(e, t) {
                if (Array.isArray(e))
                    return e.slice();
                if (!e)
                    return [];
                var r = [];
                if ("string" != typeof e) {
                    for (var i = 0; i < e.length; i++)
                        r[i] = 0 | e[i];
                    return r
                }
                if ("hex" === t) {
                    (e = e.replace(/[^a-z0-9]+/gi, "")).length % 2 != 0 && (e = "0" + e);
                    for (i = 0; i < e.length; i += 2)
                        r.push(parseInt(e[i] + e[i + 1], 16))
                } else
                    for (i = 0; i < e.length; i++) {
                        var n = e.charCodeAt(i)
                          , s = n >> 8
                          , o = 255 & n;
                        s ? r.push(s, o) : r.push(o)
                    }
                return r
            }
            ,
            i.zero2 = n,
            i.toHex = s,
            i.encode = function(e, t) {
                return "hex" === t ? s(e) : e
            }
        }
        , {}],
        107: [function(e, t, r) {
            t.exports = {
                "2.16.840.1.101.3.4.1.1": "aes-128-ecb",
                "2.16.840.1.101.3.4.1.2": "aes-128-cbc",
                "2.16.840.1.101.3.4.1.3": "aes-128-ofb",
                "2.16.840.1.101.3.4.1.4": "aes-128-cfb",
                "2.16.840.1.101.3.4.1.21": "aes-192-ecb",
                "2.16.840.1.101.3.4.1.22": "aes-192-cbc",
                "2.16.840.1.101.3.4.1.23": "aes-192-ofb",
                "2.16.840.1.101.3.4.1.24": "aes-192-cfb",
                "2.16.840.1.101.3.4.1.41": "aes-256-ecb",
                "2.16.840.1.101.3.4.1.42": "aes-256-cbc",
                "2.16.840.1.101.3.4.1.43": "aes-256-ofb",
                "2.16.840.1.101.3.4.1.44": "aes-256-cfb"
            }
        }
        , {}],
        108: [function(e, t, r) {
            "use strict";
            var i = e("asn1.js");
            r.certificate = e("./certificate");
            var n = i.define("RSAPrivateKey", (function() {
                this.seq().obj(this.key("version").int(), this.key("modulus").int(), this.key("publicExponent").int(), this.key("privateExponent").int(), this.key("prime1").int(), this.key("prime2").int(), this.key("exponent1").int(), this.key("exponent2").int(), this.key("coefficient").int())
            }
            ));
            r.RSAPrivateKey = n;
            var s = i.define("RSAPublicKey", (function() {
                this.seq().obj(this.key("modulus").int(), this.key("publicExponent").int())
            }
            ));
            r.RSAPublicKey = s;
            var o = i.define("SubjectPublicKeyInfo", (function() {
                this.seq().obj(this.key("algorithm").use(a), this.key("subjectPublicKey").bitstr())
            }
            ));
            r.PublicKey = o;
            var a = i.define("AlgorithmIdentifier", (function() {
                this.seq().obj(this.key("algorithm").objid(), this.key("none").null_().optional(), this.key("curve").objid().optional(), this.key("params").seq().obj(this.key("p").int(), this.key("q").int(), this.key("g").int()).optional())
            }
            ))
              , c = i.define("PrivateKeyInfo", (function() {
                this.seq().obj(this.key("version").int(), this.key("algorithm").use(a), this.key("subjectPrivateKey").octstr())
            }
            ));
            r.PrivateKey = c;
            var u = i.define("EncryptedPrivateKeyInfo", (function() {
                this.seq().obj(this.key("algorithm").seq().obj(this.key("id").objid(), this.key("decrypt").seq().obj(this.key("kde").seq().obj(this.key("id").objid(), this.key("kdeparams").seq().obj(this.key("salt").octstr(), this.key("iters").int())), this.key("cipher").seq().obj(this.key("algo").objid(), this.key("iv").octstr()))), this.key("subjectPrivateKey").octstr())
            }
            ));
            r.EncryptedPrivateKey = u;
            var f = i.define("DSAPrivateKey", (function() {
                this.seq().obj(this.key("version").int(), this.key("p").int(), this.key("q").int(), this.key("g").int(), this.key("pub_key").int(), this.key("priv_key").int())
            }
            ));
            r.DSAPrivateKey = f,
            r.DSAparam = i.define("DSAparam", (function() {
                this.int()
            }
            ));
            var h = i.define("ECPrivateKey", (function() {
                this.seq().obj(this.key("version").int(), this.key("privateKey").octstr(), this.key("parameters").optional().explicit(0).use(l), this.key("publicKey").optional().explicit(1).bitstr())
            }
            ));
            r.ECPrivateKey = h;
            var l = i.define("ECParameters", (function() {
                this.choice({
                    namedCurve: this.objid()
                })
            }
            ));
            r.signature = i.define("signature", (function() {
                this.seq().obj(this.key("r").int(), this.key("s").int())
            }
            ))
        }
        , {
            "./certificate": 109,
            "asn1.js": 1
        }],
        109: [function(e, t, r) {
            "use strict";
            var i = e("asn1.js")
              , n = i.define("Time", (function() {
                this.choice({
                    utcTime: this.utctime(),
                    generalTime: this.gentime()
                })
            }
            ))
              , s = i.define("AttributeTypeValue", (function() {
                this.seq().obj(this.key("type").objid(), this.key("value").any())
            }
            ))
              , o = i.define("AlgorithmIdentifier", (function() {
                this.seq().obj(this.key("algorithm").objid(), this.key("parameters").optional(), this.key("curve").objid().optional())
            }
            ))
              , a = i.define("SubjectPublicKeyInfo", (function() {
                this.seq().obj(this.key("algorithm").use(o), this.key("subjectPublicKey").bitstr())
            }
            ))
              , c = i.define("RelativeDistinguishedName", (function() {
                this.setof(s)
            }
            ))
              , u = i.define("RDNSequence", (function() {
                this.seqof(c)
            }
            ))
              , f = i.define("Name", (function() {
                this.choice({
                    rdnSequence: this.use(u)
                })
            }
            ))
              , h = i.define("Validity", (function() {
                this.seq().obj(this.key("notBefore").use(n), this.key("notAfter").use(n))
            }
            ))
              , l = i.define("Extension", (function() {
                this.seq().obj(this.key("extnID").objid(), this.key("critical").bool().def(!1), this.key("extnValue").octstr())
            }
            ))
              , d = i.define("TBSCertificate", (function() {
                this.seq().obj(this.key("version").explicit(0).int().optional(), this.key("serialNumber").int(), this.key("signature").use(o), this.key("issuer").use(f), this.key("validity").use(h), this.key("subject").use(f), this.key("subjectPublicKeyInfo").use(a), this.key("issuerUniqueID").implicit(1).bitstr().optional(), this.key("subjectUniqueID").implicit(2).bitstr().optional(), this.key("extensions").explicit(3).seqof(l).optional())
            }
            ))
              , p = i.define("X509Certificate", (function() {
                this.seq().obj(this.key("tbsCertificate").use(d), this.key("signatureAlgorithm").use(o), this.key("signatureValue").bitstr())
            }
            ));
            t.exports = p
        }
        , {
            "asn1.js": 1
        }],
        110: [function(e, t, r) {
            var i = /Proc-Type: 4,ENCRYPTED[\n\r]+DEK-Info: AES-((?:128)|(?:192)|(?:256))-CBC,([0-9A-H]+)[\n\r]+([0-9A-z\n\r\+\/\=]+)[\n\r]+/m
              , n = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----/m
              , s = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----([0-9A-z\n\r\+\/\=]+)-----END \1-----$/m
              , o = e("evp_bytestokey")
              , a = e("browserify-aes")
              , c = e("safe-buffer").Buffer;
            t.exports = function(e, t) {
                var r, u = e.toString(), f = u.match(i);
                if (f) {
                    var h = "aes" + f[1]
                      , l = c.from(f[2], "hex")
                      , d = c.from(f[3].replace(/[\r\n]/g, ""), "base64")
                      , p = o(t, l.slice(0, 8), parseInt(f[1], 10)).key
                      , b = []
                      , g = a.createDecipheriv(h, p, l);
                    b.push(g.update(d)),
                    b.push(g.final()),
                    r = c.concat(b)
                } else {
                    var m = u.match(s);
                    r = new c(m[2].replace(/[\r\n]/g, ""),"base64")
                }
                return {
                    tag: u.match(n)[1],
                    data: r
                }
            }
        }
        , {
            "browserify-aes": 21,
            evp_bytestokey: 84,
            "safe-buffer": 143
        }],
        111: [function(e, t, r) {
            var i = e("./asn1")
              , n = e("./aesid.json")
              , s = e("./fixProc")
              , o = e("browserify-aes")
              , a = e("pbkdf2")
              , c = e("safe-buffer").Buffer;
            function u(e) {
                var t;
                "object" != typeof e || c.isBuffer(e) || (t = e.passphrase,
                e = e.key),
                "string" == typeof e && (e = c.from(e));
                var r, u, f = s(e, t), h = f.tag, l = f.data;
                switch (h) {
                case "CERTIFICATE":
                    u = i.certificate.decode(l, "der").tbsCertificate.subjectPublicKeyInfo;
                case "PUBLIC KEY":
                    switch (u || (u = i.PublicKey.decode(l, "der")),
                    r = u.algorithm.algorithm.join(".")) {
                    case "1.2.840.113549.1.1.1":
                        return i.RSAPublicKey.decode(u.subjectPublicKey.data, "der");
                    case "1.2.840.10045.2.1":
                        return u.subjectPrivateKey = u.subjectPublicKey,
                        {
                            type: "ec",
                            data: u
                        };
                    case "1.2.840.10040.4.1":
                        return u.algorithm.params.pub_key = i.DSAparam.decode(u.subjectPublicKey.data, "der"),
                        {
                            type: "dsa",
                            data: u.algorithm.params
                        };
                    default:
                        throw new Error("unknown key id " + r)
                    }
                    throw new Error("unknown key type " + h);
                case "ENCRYPTED PRIVATE KEY":
                    l = function(e, t) {
                        var r = e.algorithm.decrypt.kde.kdeparams.salt
                          , i = parseInt(e.algorithm.decrypt.kde.kdeparams.iters.toString(), 10)
                          , s = n[e.algorithm.decrypt.cipher.algo.join(".")]
                          , u = e.algorithm.decrypt.cipher.iv
                          , f = e.subjectPrivateKey
                          , h = parseInt(s.split("-")[1], 10) / 8
                          , l = a.pbkdf2Sync(t, r, i, h, "sha1")
                          , d = o.createDecipheriv(s, l, u)
                          , p = [];
                        return p.push(d.update(f)),
                        p.push(d.final()),
                        c.concat(p)
                    }(l = i.EncryptedPrivateKey.decode(l, "der"), t);
                case "PRIVATE KEY":
                    switch (r = (u = i.PrivateKey.decode(l, "der")).algorithm.algorithm.join(".")) {
                    case "1.2.840.113549.1.1.1":
                        return i.RSAPrivateKey.decode(u.subjectPrivateKey, "der");
                    case "1.2.840.10045.2.1":
                        return {
                            curve: u.algorithm.curve,
                            privateKey: i.ECPrivateKey.decode(u.subjectPrivateKey, "der").privateKey
                        };
                    case "1.2.840.10040.4.1":
                        return u.algorithm.params.priv_key = i.DSAparam.decode(u.subjectPrivateKey, "der"),
                        {
                            type: "dsa",
                            params: u.algorithm.params
                        };
                    default:
                        throw new Error("unknown key id " + r)
                    }
                    throw new Error("unknown key type " + h);
                case "RSA PUBLIC KEY":
                    return i.RSAPublicKey.decode(l, "der");
                case "RSA PRIVATE KEY":
                    return i.RSAPrivateKey.decode(l, "der");
                case "DSA PRIVATE KEY":
                    return {
                        type: "dsa",
                        params: i.DSAPrivateKey.decode(l, "der")
                    };
                case "EC PRIVATE KEY":
                    return {
                        curve: (l = i.ECPrivateKey.decode(l, "der")).parameters.value,
                        privateKey: l.privateKey
                    };
                default:
                    throw new Error("unknown key type " + h)
                }
            }
            t.exports = u,
            u.signature = i.signature
        }
        , {
            "./aesid.json": 107,
            "./asn1": 108,
            "./fixProc": 110,
            "browserify-aes": 21,
            pbkdf2: 112,
            "safe-buffer": 143
        }],
        112: [function(e, t, r) {
            r.pbkdf2 = e("./lib/async"),
            r.pbkdf2Sync = e("./lib/sync")
        }
        , {
            "./lib/async": 113,
            "./lib/sync": 116
        }],
        113: [function(e, t, r) {
            (function(r, i) {
                var n, s = e("./precondition"), o = e("./default-encoding"), a = e("./sync"), c = e("safe-buffer").Buffer, u = i.crypto && i.crypto.subtle, f = {
                    sha: "SHA-1",
                    "sha-1": "SHA-1",
                    sha1: "SHA-1",
                    sha256: "SHA-256",
                    "sha-256": "SHA-256",
                    sha384: "SHA-384",
                    "sha-384": "SHA-384",
                    "sha-512": "SHA-512",
                    sha512: "SHA-512"
                }, h = [];
                function l(e, t, r, i, n) {
                    return u.importKey("raw", e, {
                        name: "PBKDF2"
                    }, !1, ["deriveBits"]).then((function(e) {
                        return u.deriveBits({
                            name: "PBKDF2",
                            salt: t,
                            iterations: r,
                            hash: {
                                name: n
                            }
                        }, e, i << 3)
                    }
                    )).then((function(e) {
                        return c.from(e)
                    }
                    ))
                }
                t.exports = function(e, t, d, p, b, g) {
                    "function" == typeof b && (g = b,
                    b = void 0);
                    var m = f[(b = b || "sha1").toLowerCase()];
                    if (!m || "function" != typeof i.Promise)
                        return r.nextTick((function() {
                            var r;
                            try {
                                r = a(e, t, d, p, b)
                            } catch (e) {
                                return g(e)
                            }
                            g(null, r)
                        }
                        ));
                    if (s(e, t, d, p),
                    "function" != typeof g)
                        throw new Error("No callback provided to pbkdf2");
                    c.isBuffer(e) || (e = c.from(e, o)),
                    c.isBuffer(t) || (t = c.from(t, o)),
                    function(e, t) {
                        e.then((function(e) {
                            r.nextTick((function() {
                                t(null, e)
                            }
                            ))
                        }
                        ), (function(e) {
                            r.nextTick((function() {
                                t(e)
                            }
                            ))
                        }
                        ))
                    }(function(e) {
                        if (i.process && !i.process.browser)
                            return Promise.resolve(!1);
                        if (!u || !u.importKey || !u.deriveBits)
                            return Promise.resolve(!1);
                        if (void 0 !== h[e])
                            return h[e];
                        var t = l(n = n || c.alloc(8), n, 10, 128, e).then((function() {
                            return !0
                        }
                        )).catch((function() {
                            return !1
                        }
                        ));
                        return h[e] = t,
                        t
                    }(m).then((function(r) {
                        return r ? l(e, t, d, p, m) : a(e, t, d, p, b)
                    }
                    )), g)
                }
            }
            ).call(this, e("_process"), "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
        }
        , {
            "./default-encoding": 114,
            "./precondition": 115,
            "./sync": 116,
            _process: 118,
            "safe-buffer": 143
        }],
        114: [function(e, t, r) {
            (function(e) {
                var r;
                e.browser ? r = "utf-8" : r = parseInt(e.version.split(".")[0].slice(1), 10) >= 6 ? "utf-8" : "binary";
                t.exports = r
            }
            ).call(this, e("_process"))
        }
        , {
            _process: 118
        }],
        115: [function(e, t, r) {
            (function(e) {
                var r = Math.pow(2, 30) - 1;
                function i(t, r) {
                    if ("string" != typeof t && !e.isBuffer(t))
                        throw new TypeError(r + " must be a buffer or string")
                }
                t.exports = function(e, t, n, s) {
                    if (i(e, "Password"),
                    i(t, "Salt"),
                    "number" != typeof n)
                        throw new TypeError("Iterations not a number");
                    if (n < 0)
                        throw new TypeError("Bad iterations");
                    if ("number" != typeof s)
                        throw new TypeError("Key length not a number");
                    if (s < 0 || s > r || s != s)
                        throw new TypeError("Bad key length")
                }
            }
            ).call(this, {
                isBuffer: e("../../is-buffer/index.js")
            })
        }
        , {
            "../../is-buffer/index.js": 101
        }],
        116: [function(e, t, r) {
            var i = e("create-hash/md5")
              , n = e("ripemd160")
              , s = e("sha.js")
              , o = e("./precondition")
              , a = e("./default-encoding")
              , c = e("safe-buffer").Buffer
              , u = c.alloc(128)
              , f = {
                md5: 16,
                sha1: 20,
                sha224: 28,
                sha256: 32,
                sha384: 48,
                sha512: 64,
                rmd160: 20,
                ripemd160: 20
            };
            function h(e, t, r) {
                var o = function(e) {
                    return "rmd160" === e || "ripemd160" === e ? function(e) {
                        return (new n).update(e).digest()
                    }
                    : "md5" === e ? i : function(t) {
                        return s(e).update(t).digest()
                    }
                }(e)
                  , a = "sha512" === e || "sha384" === e ? 128 : 64;
                t.length > a ? t = o(t) : t.length < a && (t = c.concat([t, u], a));
                for (var h = c.allocUnsafe(a + f[e]), l = c.allocUnsafe(a + f[e]), d = 0; d < a; d++)
                    h[d] = 54 ^ t[d],
                    l[d] = 92 ^ t[d];
                var p = c.allocUnsafe(a + r + 4);
                h.copy(p, 0, 0, a),
                this.ipad1 = p,
                this.ipad2 = h,
                this.opad = l,
                this.alg = e,
                this.blocksize = a,
                this.hash = o,
                this.size = f[e]
            }
            h.prototype.run = function(e, t) {
                return e.copy(t, this.blocksize),
                this.hash(t).copy(this.opad, this.blocksize),
                this.hash(this.opad)
            }
            ,
            t.exports = function(e, t, r, i, n) {
                o(e, t, r, i),
                c.isBuffer(e) || (e = c.from(e, a)),
                c.isBuffer(t) || (t = c.from(t, a));
                var s = new h(n = n || "sha1",e,t.length)
                  , u = c.allocUnsafe(i)
                  , l = c.allocUnsafe(t.length + 4);
                t.copy(l, 0, 0, t.length);
                for (var d = 0, p = f[n], b = Math.ceil(i / p), g = 1; g <= b; g++) {
                    l.writeUInt32BE(g, t.length);
                    for (var m = s.run(l, s.ipad1), y = m, v = 1; v < r; v++) {
                        y = s.run(y, s.ipad2);
                        for (var w = 0; w < p; w++)
                            m[w] ^= y[w]
                    }
                    m.copy(u, d),
                    d += p
                }
                return u
            }
        }
        , {
            "./default-encoding": 114,
            "./precondition": 115,
            "create-hash/md5": 53,
            ripemd160: 142,
            "safe-buffer": 143,
            "sha.js": 145
        }],
        117: [function(e, t, r) {
            (function(e) {
                "use strict";
                void 0 === e || !e.version || 0 === e.version.indexOf("v0.") || 0 === e.version.indexOf("v1.") && 0 !== e.version.indexOf("v1.8.") ? t.exports = {
                    nextTick: function(t, r, i, n) {
                        if ("function" != typeof t)
                            throw new TypeError('"callback" argument must be a function');
                        var s, o, a = arguments.length;
                        switch (a) {
                        case 0:
                        case 1:
                            return e.nextTick(t);
                        case 2:
                            return e.nextTick((function() {
                                t.call(null, r)
                            }
                            ));
                        case 3:
                            return e.nextTick((function() {
                                t.call(null, r, i)
                            }
                            ));
                        case 4:
                            return e.nextTick((function() {
                                t.call(null, r, i, n)
                            }
                            ));
                        default:
                            for (s = new Array(a - 1),
                            o = 0; o < s.length; )
                                s[o++] = arguments[o];
                            return e.nextTick((function() {
                                t.apply(null, s)
                            }
                            ))
                        }
                    }
                } : t.exports = e
            }
            ).call(this, e("_process"))
        }
        , {
            _process: 118
        }],
        118: [function(e, t, r) {
            var i, n, s = t.exports = {};
            function o() {
                throw new Error("setTimeout has not been defined")
            }
            function a() {
                throw new Error("clearTimeout has not been defined")
            }
            function c(e) {
                if (i === setTimeout)
                    return setTimeout(e, 0);
                if ((i === o || !i) && setTimeout)
                    return i = setTimeout,
                    setTimeout(e, 0);
                try {
                    return i(e, 0)
                } catch (t) {
                    try {
                        return i.call(null, e, 0)
                    } catch (t) {
                        return i.call(this, e, 0)
                    }
                }
            }
            !function() {
                try {
                    i = "function" == typeof setTimeout ? setTimeout : o
                } catch (e) {
                    i = o
                }
                try {
                    n = "function" == typeof clearTimeout ? clearTimeout : a
                } catch (e) {
                    n = a
                }
            }();
            var u, f = [], h = !1, l = -1;
            function d() {
                h && u && (h = !1,
                u.length ? f = u.concat(f) : l = -1,
                f.length && p())
            }
            function p() {
                if (!h) {
                    var e = c(d);
                    h = !0;
                    for (var t = f.length; t; ) {
                        for (u = f,
                        f = []; ++l < t; )
                            u && u[l].run();
                        l = -1,
                        t = f.length
                    }
                    u = null,
                    h = !1,
                    function(e) {
                        if (n === clearTimeout)
                            return clearTimeout(e);
                        if ((n === a || !n) && clearTimeout)
                            return n = clearTimeout,
                            clearTimeout(e);
                        try {
                            n(e)
                        } catch (t) {
                            try {
                                return n.call(null, e)
                            } catch (t) {
                                return n.call(this, e)
                            }
                        }
                    }(e)
                }
            }
            function b(e, t) {
                this.fun = e,
                this.array = t
            }
            function g() {}
            s.nextTick = function(e) {
                var t = new Array(arguments.length - 1);
                if (arguments.length > 1)
                    for (var r = 1; r < arguments.length; r++)
                        t[r - 1] = arguments[r];
                f.push(new b(e,t)),
                1 !== f.length || h || c(p)
            }
            ,
            b.prototype.run = function() {
                this.fun.apply(null, this.array)
            }
            ,
            s.title = "browser",
            s.browser = !0,
            s.env = {},
            s.argv = [],
            s.version = "",
            s.versions = {},
            s.on = g,
            s.addListener = g,
            s.once = g,
            s.off = g,
            s.removeListener = g,
            s.removeAllListeners = g,
            s.emit = g,
            s.prependListener = g,
            s.prependOnceListener = g,
            s.listeners = function(e) {
                return []
            }
            ,
            s.binding = function(e) {
                throw new Error("process.binding is not supported")
            }
            ,
            s.cwd = function() {
                return "/"
            }
            ,
            s.chdir = function(e) {
                throw new Error("process.chdir is not supported")
            }
            ,
            s.umask = function() {
                return 0
            }
        }
        , {}],
        119: [function(e, t, r) {
            r.publicEncrypt = e("./publicEncrypt"),
            r.privateDecrypt = e("./privateDecrypt"),
            r.privateEncrypt = function(e, t) {
                return r.publicEncrypt(e, t, !0)
            }
            ,
            r.publicDecrypt = function(e, t) {
                return r.privateDecrypt(e, t, !0)
            }
        }
        , {
            "./privateDecrypt": 121,
            "./publicEncrypt": 122
        }],
        120: [function(e, t, r) {
            var i = e("create-hash")
              , n = e("safe-buffer").Buffer;
            function s(e) {
                var t = n.allocUnsafe(4);
                return t.writeUInt32BE(e, 0),
                t
            }
            t.exports = function(e, t) {
                for (var r, o = n.alloc(0), a = 0; o.length < t; )
                    r = s(a++),
                    o = n.concat([o, i("sha1").update(e).update(r).digest()]);
                return o.slice(0, t)
            }
        }
        , {
            "create-hash": 52,
            "safe-buffer": 143
        }],
        121: [function(e, t, r) {
            var i = e("parse-asn1")
              , n = e("./mgf")
              , s = e("./xor")
              , o = e("bn.js")
              , a = e("browserify-rsa")
              , c = e("create-hash")
              , u = e("./withPublic")
              , f = e("safe-buffer").Buffer;
            t.exports = function(e, t, r) {
                var h;
                h = e.padding ? e.padding : r ? 1 : 4;
                var l, d = i(e), p = d.modulus.byteLength();
                if (t.length > p || new o(t).cmp(d.modulus) >= 0)
                    throw new Error("decryption error");
                l = r ? u(new o(t), d) : a(t, d);
                var b = f.alloc(p - l.length);
                if (l = f.concat([b, l], p),
                4 === h)
                    return function(e, t) {
                        var r = e.modulus.byteLength()
                          , i = c("sha1").update(f.alloc(0)).digest()
                          , o = i.length;
                        if (0 !== t[0])
                            throw new Error("decryption error");
                        var a = t.slice(1, o + 1)
                          , u = t.slice(o + 1)
                          , h = s(a, n(u, o))
                          , l = s(u, n(h, r - o - 1));
                        if (function(e, t) {
                            e = f.from(e),
                            t = f.from(t);
                            var r = 0
                              , i = e.length;
                            e.length !== t.length && (r++,
                            i = Math.min(e.length, t.length));
                            var n = -1;
                            for (; ++n < i; )
                                r += e[n] ^ t[n];
                            return r
                        }(i, l.slice(0, o)))
                            throw new Error("decryption error");
                        var d = o;
                        for (; 0 === l[d]; )
                            d++;
                        if (1 !== l[d++])
                            throw new Error("decryption error");
                        return l.slice(d)
                    }(d, l);
                if (1 === h)
                    return function(e, t, r) {
                        var i = t.slice(0, 2)
                          , n = 2
                          , s = 0;
                        for (; 0 !== t[n++]; )
                            if (n >= t.length) {
                                s++;
                                break
                            }
                        var o = t.slice(2, n - 1);
                        ("0002" !== i.toString("hex") && !r || "0001" !== i.toString("hex") && r) && s++;
                        o.length < 8 && s++;
                        if (s)
                            throw new Error("decryption error");
                        return t.slice(n)
                    }(0, l, r);
                if (3 === h)
                    return l;
                throw new Error("unknown padding")
            }
        }
        , {
            "./mgf": 120,
            "./withPublic": 123,
            "./xor": 124,
            "bn.js": 16,
            "browserify-rsa": 39,
            "create-hash": 52,
            "parse-asn1": 111,
            "safe-buffer": 143
        }],
        122: [function(e, t, r) {
            var i = e("parse-asn1")
              , n = e("randombytes")
              , s = e("create-hash")
              , o = e("./mgf")
              , a = e("./xor")
              , c = e("bn.js")
              , u = e("./withPublic")
              , f = e("browserify-rsa")
              , h = e("safe-buffer").Buffer;
            t.exports = function(e, t, r) {
                var l;
                l = e.padding ? e.padding : r ? 1 : 4;
                var d, p = i(e);
                if (4 === l)
                    d = function(e, t) {
                        var r = e.modulus.byteLength()
                          , i = t.length
                          , u = s("sha1").update(h.alloc(0)).digest()
                          , f = u.length
                          , l = 2 * f;
                        if (i > r - l - 2)
                            throw new Error("message too long");
                        var d = h.alloc(r - i - l - 2)
                          , p = r - f - 1
                          , b = n(f)
                          , g = a(h.concat([u, d, h.alloc(1, 1), t], p), o(b, p))
                          , m = a(b, o(g, f));
                        return new c(h.concat([h.alloc(1), m, g], r))
                    }(p, t);
                else if (1 === l)
                    d = function(e, t, r) {
                        var i, s = t.length, o = e.modulus.byteLength();
                        if (s > o - 11)
                            throw new Error("message too long");
                        i = r ? h.alloc(o - s - 3, 255) : function(e) {
                            var t, r = h.allocUnsafe(e), i = 0, s = n(2 * e), o = 0;
                            for (; i < e; )
                                o === s.length && (s = n(2 * e),
                                o = 0),
                                (t = s[o++]) && (r[i++] = t);
                            return r
                        }(o - s - 3);
                        return new c(h.concat([h.from([0, r ? 1 : 2]), i, h.alloc(1), t], o))
                    }(p, t, r);
                else {
                    if (3 !== l)
                        throw new Error("unknown padding");
                    if ((d = new c(t)).cmp(p.modulus) >= 0)
                        throw new Error("data too long for modulus")
                }
                return r ? f(d, p) : u(d, p)
            }
        }
        , {
            "./mgf": 120,
            "./withPublic": 123,
            "./xor": 124,
            "bn.js": 16,
            "browserify-rsa": 39,
            "create-hash": 52,
            "parse-asn1": 111,
            randombytes: 125,
            "safe-buffer": 143
        }],
        123: [function(e, t, r) {
            var i = e("bn.js")
              , n = e("safe-buffer").Buffer;
            t.exports = function(e, t) {
                return n.from(e.toRed(i.mont(t.modulus)).redPow(new i(t.publicExponent)).fromRed().toArray())
            }
        }
        , {
            "bn.js": 16,
            "safe-buffer": 143
        }],
        124: [function(e, t, r) {
            t.exports = function(e, t) {
                for (var r = e.length, i = -1; ++i < r; )
                    e[i] ^= t[i];
                return e
            }
        }
        , {}],
        125: [function(e, t, r) {
            (function(r, i) {
                "use strict";
                var n = 65536
                  , s = 4294967295;
                var o = e("safe-buffer").Buffer
                  , a = i.crypto || i.msCrypto;
                a && a.getRandomValues ? t.exports = function(e, t) {
                    if (e > s)
                        throw new RangeError("requested too many random bytes");
                    var i = o.allocUnsafe(e);
                    if (e > 0)
                        if (e > n)
                            for (var c = 0; c < e; c += n)
                                a.getRandomValues(i.slice(c, c + n));
                        else
                            a.getRandomValues(i);
                    if ("function" == typeof t)
                        return r.nextTick((function() {
                            t(null, i)
                        }
                        ));
                    return i
                }
                : t.exports = function() {
                    throw new Error("Secure random number generation is not supported by this browser.\nUse Chrome, Firefox or Internet Explorer 11")
                }
            }
            ).call(this, e("_process"), "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
        }
        , {
            _process: 118,
            "safe-buffer": 143
        }],
        126: [function(e, t, r) {
            (function(t, i) {
                "use strict";
                function n() {
                    throw new Error("secure random number generation not supported by this browser\nuse chrome, FireFox or Internet Explorer 11")
                }
                var s = e("safe-buffer")
                  , o = e("randombytes")
                  , a = s.Buffer
                  , c = s.kMaxLength
                  , u = i.crypto || i.msCrypto
                  , f = Math.pow(2, 32) - 1;
                function h(e, t) {
                    if ("number" != typeof e || e != e)
                        throw new TypeError("offset must be a number");
                    if (e > f || e < 0)
                        throw new TypeError("offset must be a uint32");
                    if (e > c || e > t)
                        throw new RangeError("offset out of range")
                }
                function l(e, t, r) {
                    if ("number" != typeof e || e != e)
                        throw new TypeError("size must be a number");
                    if (e > f || e < 0)
                        throw new TypeError("size must be a uint32");
                    if (e + t > r || e > c)
                        throw new RangeError("buffer too small")
                }
                function d(e, r, i, n) {
                    if (t.browser) {
                        var s = e.buffer
                          , a = new Uint8Array(s,r,i);
                        return u.getRandomValues(a),
                        n ? void t.nextTick((function() {
                            n(null, e)
                        }
                        )) : e
                    }
                    if (!n)
                        return o(i).copy(e, r),
                        e;
                    o(i, (function(t, i) {
                        if (t)
                            return n(t);
                        i.copy(e, r),
                        n(null, e)
                    }
                    ))
                }
                u && u.getRandomValues || !t.browser ? (r.randomFill = function(e, t, r, n) {
                    if (!(a.isBuffer(e) || e instanceof i.Uint8Array))
                        throw new TypeError('"buf" argument must be a Buffer or Uint8Array');
                    if ("function" == typeof t)
                        n = t,
                        t = 0,
                        r = e.length;
                    else if ("function" == typeof r)
                        n = r,
                        r = e.length - t;
                    else if ("function" != typeof n)
                        throw new TypeError('"cb" argument must be a function');
                    return h(t, e.length),
                    l(r, t, e.length),
                    d(e, t, r, n)
                }
                ,
                r.randomFillSync = function(e, t, r) {
                    void 0 === t && (t = 0);
                    if (!(a.isBuffer(e) || e instanceof i.Uint8Array))
                        throw new TypeError('"buf" argument must be a Buffer or Uint8Array');
                    h(t, e.length),
                    void 0 === r && (r = e.length - t);
                    return l(r, t, e.length),
                    d(e, t, r)
                }
                ) : (r.randomFill = n,
                r.randomFillSync = n)
            }
            ).call(this, e("_process"), "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
        }
        , {
            _process: 118,
            randombytes: 125,
            "safe-buffer": 143
        }],
        127: [function(e, t, r) {
            t.exports = e("./lib/_stream_duplex.js")
        }
        , {
            "./lib/_stream_duplex.js": 128
        }],
        128: [function(e, t, r) {
            "use strict";
            var i = e("process-nextick-args")
              , n = Object.keys || function(e) {
                var t = [];
                for (var r in e)
                    t.push(r);
                return t
            }
            ;
            t.exports = h;
            var s = e("core-util-is");
            s.inherits = e("inherits");
            var o = e("./_stream_readable")
              , a = e("./_stream_writable");
            s.inherits(h, o);
            for (var c = n(a.prototype), u = 0; u < c.length; u++) {
                var f = c[u];
                h.prototype[f] || (h.prototype[f] = a.prototype[f])
            }
            function h(e) {
                if (!(this instanceof h))
                    return new h(e);
                o.call(this, e),
                a.call(this, e),
                e && !1 === e.readable && (this.readable = !1),
                e && !1 === e.writable && (this.writable = !1),
                this.allowHalfOpen = !0,
                e && !1 === e.allowHalfOpen && (this.allowHalfOpen = !1),
                this.once("end", l)
            }
            function l() {
                this.allowHalfOpen || this._writableState.ended || i.nextTick(d, this)
            }
            function d(e) {
                e.end()
            }
            Object.defineProperty(h.prototype, "writableHighWaterMark", {
                enumerable: !1,
                get: function() {
                    return this._writableState.highWaterMark
                }
            }),
            Object.defineProperty(h.prototype, "destroyed", {
                get: function() {
                    return void 0 !== this._readableState && void 0 !== this._writableState && (this._readableState.destroyed && this._writableState.destroyed)
                },
                set: function(e) {
                    void 0 !== this._readableState && void 0 !== this._writableState && (this._readableState.destroyed = e,
                    this._writableState.destroyed = e)
                }
            }),
            h.prototype._destroy = function(e, t) {
                this.push(null),
                this.end(),
                i.nextTick(t, e)
            }
        }
        , {
            "./_stream_readable": 130,
            "./_stream_writable": 132,
            "core-util-is": 50,
            inherits: 100,
            "process-nextick-args": 117
        }],
        129: [function(e, t, r) {
            "use strict";
            t.exports = s;
            var i = e("./_stream_transform")
              , n = e("core-util-is");
            function s(e) {
                if (!(this instanceof s))
                    return new s(e);
                i.call(this, e)
            }
            n.inherits = e("inherits"),
            n.inherits(s, i),
            s.prototype._transform = function(e, t, r) {
                r(null, e)
            }
        }
        , {
            "./_stream_transform": 131,
            "core-util-is": 50,
            inherits: 100
        }],
        130: [function(e, t, r) {
            (function(r, i) {
                "use strict";
                var n = e("process-nextick-args");
                t.exports = v;
                var s, o = e("isarray");
                v.ReadableState = y;
                e("events").EventEmitter;
                var a = function(e, t) {
                    return e.listeners(t).length
                }
                  , c = e("./internal/streams/stream")
                  , u = e("safe-buffer").Buffer
                  , f = i.Uint8Array || function() {}
                ;
                var h = e("core-util-is");
                h.inherits = e("inherits");
                var l = e("util")
                  , d = void 0;
                d = l && l.debuglog ? l.debuglog("stream") : function() {}
                ;
                var p, b = e("./internal/streams/BufferList"), g = e("./internal/streams/destroy");
                h.inherits(v, c);
                var m = ["error", "close", "destroy", "pause", "resume"];
                function y(t, r) {
                    t = t || {};
                    var i = r instanceof (s = s || e("./_stream_duplex"));
                    this.objectMode = !!t.objectMode,
                    i && (this.objectMode = this.objectMode || !!t.readableObjectMode);
                    var n = t.highWaterMark
                      , o = t.readableHighWaterMark
                      , a = this.objectMode ? 16 : 16384;
                    this.highWaterMark = n || 0 === n ? n : i && (o || 0 === o) ? o : a,
                    this.highWaterMark = Math.floor(this.highWaterMark),
                    this.buffer = new b,
                    this.length = 0,
                    this.pipes = null,
                    this.pipesCount = 0,
                    this.flowing = null,
                    this.ended = !1,
                    this.endEmitted = !1,
                    this.reading = !1,
                    this.sync = !0,
                    this.needReadable = !1,
                    this.emittedReadable = !1,
                    this.readableListening = !1,
                    this.resumeScheduled = !1,
                    this.destroyed = !1,
                    this.defaultEncoding = t.defaultEncoding || "utf8",
                    this.awaitDrain = 0,
                    this.readingMore = !1,
                    this.decoder = null,
                    this.encoding = null,
                    t.encoding && (p || (p = e("string_decoder/").StringDecoder),
                    this.decoder = new p(t.encoding),
                    this.encoding = t.encoding)
                }
                function v(t) {
                    if (s = s || e("./_stream_duplex"),
                    !(this instanceof v))
                        return new v(t);
                    this._readableState = new y(t,this),
                    this.readable = !0,
                    t && ("function" == typeof t.read && (this._read = t.read),
                    "function" == typeof t.destroy && (this._destroy = t.destroy)),
                    c.call(this)
                }
                function w(e, t, r, i, n) {
                    var s, o = e._readableState;
                    null === t ? (o.reading = !1,
                    function(e, t) {
                        if (t.ended)
                            return;
                        if (t.decoder) {
                            var r = t.decoder.end();
                            r && r.length && (t.buffer.push(r),
                            t.length += t.objectMode ? 1 : r.length)
                        }
                        t.ended = !0,
                        k(e)
                    }(e, o)) : (n || (s = function(e, t) {
                        var r;
                        i = t,
                        u.isBuffer(i) || i instanceof f || "string" == typeof t || void 0 === t || e.objectMode || (r = new TypeError("Invalid non-string/buffer chunk"));
                        var i;
                        return r
                    }(o, t)),
                    s ? e.emit("error", s) : o.objectMode || t && t.length > 0 ? ("string" == typeof t || o.objectMode || Object.getPrototypeOf(t) === u.prototype || (t = function(e) {
                        return u.from(e)
                    }(t)),
                    i ? o.endEmitted ? e.emit("error", new Error("stream.unshift() after end event")) : E(e, o, t, !0) : o.ended ? e.emit("error", new Error("stream.push() after EOF")) : (o.reading = !1,
                    o.decoder && !r ? (t = o.decoder.write(t),
                    o.objectMode || 0 !== t.length ? E(e, o, t, !1) : C(e, o)) : E(e, o, t, !1))) : i || (o.reading = !1));
                    return function(e) {
                        return !e.ended && (e.needReadable || e.length < e.highWaterMark || 0 === e.length)
                    }(o)
                }
                function E(e, t, r, i) {
                    t.flowing && 0 === t.length && !t.sync ? (e.emit("data", r),
                    e.read(0)) : (t.length += t.objectMode ? 1 : r.length,
                    i ? t.buffer.unshift(r) : t.buffer.push(r),
                    t.needReadable && k(e)),
                    C(e, t)
                }
                Object.defineProperty(v.prototype, "destroyed", {
                    get: function() {
                        return void 0 !== this._readableState && this._readableState.destroyed
                    },
                    set: function(e) {
                        this._readableState && (this._readableState.destroyed = e)
                    }
                }),
                v.prototype.destroy = g.destroy,
                v.prototype._undestroy = g.undestroy,
                v.prototype._destroy = function(e, t) {
                    this.push(null),
                    t(e)
                }
                ,
                v.prototype.push = function(e, t) {
                    var r, i = this._readableState;
                    return i.objectMode ? r = !0 : "string" == typeof e && ((t = t || i.defaultEncoding) !== i.encoding && (e = u.from(e, t),
                    t = ""),
                    r = !0),
                    w(this, e, t, !1, r)
                }
                ,
                v.prototype.unshift = function(e) {
                    return w(this, e, null, !0, !1)
                }
                ,
                v.prototype.isPaused = function() {
                    return !1 === this._readableState.flowing
                }
                ,
                v.prototype.setEncoding = function(t) {
                    return p || (p = e("string_decoder/").StringDecoder),
                    this._readableState.decoder = new p(t),
                    this._readableState.encoding = t,
                    this
                }
                ;
                var _ = 8388608;
                function S(e, t) {
                    return e <= 0 || 0 === t.length && t.ended ? 0 : t.objectMode ? 1 : e != e ? t.flowing && t.length ? t.buffer.head.data.length : t.length : (e > t.highWaterMark && (t.highWaterMark = function(e) {
                        return e >= _ ? e = _ : (e--,
                        e |= e >>> 1,
                        e |= e >>> 2,
                        e |= e >>> 4,
                        e |= e >>> 8,
                        e |= e >>> 16,
                        e++),
                        e
                    }(e)),
                    e <= t.length ? e : t.ended ? t.length : (t.needReadable = !0,
                    0))
                }
                function k(e) {
                    var t = e._readableState;
                    t.needReadable = !1,
                    t.emittedReadable || (d("emitReadable", t.flowing),
                    t.emittedReadable = !0,
                    t.sync ? n.nextTick(A, e) : A(e))
                }
                function A(e) {
                    d("emit readable"),
                    e.emit("readable"),
                    M(e)
                }
                function C(e, t) {
                    t.readingMore || (t.readingMore = !0,
                    n.nextTick(I, e, t))
                }
                function I(e, t) {
                    for (var r = t.length; !t.reading && !t.flowing && !t.ended && t.length < t.highWaterMark && (d("maybeReadMore read 0"),
                    e.read(0),
                    r !== t.length); )
                        r = t.length;
                    t.readingMore = !1
                }
                function T(e) {
                    d("readable nexttick read 0"),
                    e.read(0)
                }
                function B(e, t) {
                    t.reading || (d("resume read 0"),
                    e.read(0)),
                    t.resumeScheduled = !1,
                    t.awaitDrain = 0,
                    e.emit("resume"),
                    M(e),
                    t.flowing && !t.reading && e.read(0)
                }
                function M(e) {
                    var t = e._readableState;
                    for (d("flow", t.flowing); t.flowing && null !== e.read(); )
                        ;
                }
                function R(e, t) {
                    return 0 === t.length ? null : (t.objectMode ? r = t.buffer.shift() : !e || e >= t.length ? (r = t.decoder ? t.buffer.join("") : 1 === t.buffer.length ? t.buffer.head.data : t.buffer.concat(t.length),
                    t.buffer.clear()) : r = function(e, t, r) {
                        var i;
                        e < t.head.data.length ? (i = t.head.data.slice(0, e),
                        t.head.data = t.head.data.slice(e)) : i = e === t.head.data.length ? t.shift() : r ? function(e, t) {
                            var r = t.head
                              , i = 1
                              , n = r.data;
                            e -= n.length;
                            for (; r = r.next; ) {
                                var s = r.data
                                  , o = e > s.length ? s.length : e;
                                if (o === s.length ? n += s : n += s.slice(0, e),
                                0 === (e -= o)) {
                                    o === s.length ? (++i,
                                    r.next ? t.head = r.next : t.head = t.tail = null) : (t.head = r,
                                    r.data = s.slice(o));
                                    break
                                }
                                ++i
                            }
                            return t.length -= i,
                            n
                        }(e, t) : function(e, t) {
                            var r = u.allocUnsafe(e)
                              , i = t.head
                              , n = 1;
                            i.data.copy(r),
                            e -= i.data.length;
                            for (; i = i.next; ) {
                                var s = i.data
                                  , o = e > s.length ? s.length : e;
                                if (s.copy(r, r.length - e, 0, o),
                                0 === (e -= o)) {
                                    o === s.length ? (++n,
                                    i.next ? t.head = i.next : t.head = t.tail = null) : (t.head = i,
                                    i.data = s.slice(o));
                                    break
                                }
                                ++n
                            }
                            return t.length -= n,
                            r
                        }(e, t);
                        return i
                    }(e, t.buffer, t.decoder),
                    r);
                    var r
                }
                function x(e) {
                    var t = e._readableState;
                    if (t.length > 0)
                        throw new Error('"endReadable()" called on non-empty stream');
                    t.endEmitted || (t.ended = !0,
                    n.nextTick(N, t, e))
                }
                function N(e, t) {
                    e.endEmitted || 0 !== e.length || (e.endEmitted = !0,
                    t.readable = !1,
                    t.emit("end"))
                }
                function P(e, t) {
                    for (var r = 0, i = e.length; r < i; r++)
                        if (e[r] === t)
                            return r;
                    return -1
                }
                v.prototype.read = function(e) {
                    d("read", e),
                    e = parseInt(e, 10);
                    var t = this._readableState
                      , r = e;
                    if (0 !== e && (t.emittedReadable = !1),
                    0 === e && t.needReadable && (t.length >= t.highWaterMark || t.ended))
                        return d("read: emitReadable", t.length, t.ended),
                        0 === t.length && t.ended ? x(this) : k(this),
                        null;
                    if (0 === (e = S(e, t)) && t.ended)
                        return 0 === t.length && x(this),
                        null;
                    var i, n = t.needReadable;
                    return d("need readable", n),
                    (0 === t.length || t.length - e < t.highWaterMark) && d("length less than watermark", n = !0),
                    t.ended || t.reading ? d("reading or ended", n = !1) : n && (d("do read"),
                    t.reading = !0,
                    t.sync = !0,
                    0 === t.length && (t.needReadable = !0),
                    this._read(t.highWaterMark),
                    t.sync = !1,
                    t.reading || (e = S(r, t))),
                    null === (i = e > 0 ? R(e, t) : null) ? (t.needReadable = !0,
                    e = 0) : t.length -= e,
                    0 === t.length && (t.ended || (t.needReadable = !0),
                    r !== e && t.ended && x(this)),
                    null !== i && this.emit("data", i),
                    i
                }
                ,
                v.prototype._read = function(e) {
                    this.emit("error", new Error("_read() is not implemented"))
                }
                ,
                v.prototype.pipe = function(e, t) {
                    var i = this
                      , s = this._readableState;
                    switch (s.pipesCount) {
                    case 0:
                        s.pipes = e;
                        break;
                    case 1:
                        s.pipes = [s.pipes, e];
                        break;
                    default:
                        s.pipes.push(e)
                    }
                    s.pipesCount += 1,
                    d("pipe count=%d opts=%j", s.pipesCount, t);
                    var c = (!t || !1 !== t.end) && e !== r.stdout && e !== r.stderr ? f : v;
                    function u(t, r) {
                        d("onunpipe"),
                        t === i && r && !1 === r.hasUnpiped && (r.hasUnpiped = !0,
                        d("cleanup"),
                        e.removeListener("close", m),
                        e.removeListener("finish", y),
                        e.removeListener("drain", h),
                        e.removeListener("error", g),
                        e.removeListener("unpipe", u),
                        i.removeListener("end", f),
                        i.removeListener("end", v),
                        i.removeListener("data", b),
                        l = !0,
                        !s.awaitDrain || e._writableState && !e._writableState.needDrain || h())
                    }
                    function f() {
                        d("onend"),
                        e.end()
                    }
                    s.endEmitted ? n.nextTick(c) : i.once("end", c),
                    e.on("unpipe", u);
                    var h = function(e) {
                        return function() {
                            var t = e._readableState;
                            d("pipeOnDrain", t.awaitDrain),
                            t.awaitDrain && t.awaitDrain--,
                            0 === t.awaitDrain && a(e, "data") && (t.flowing = !0,
                            M(e))
                        }
                    }(i);
                    e.on("drain", h);
                    var l = !1;
                    var p = !1;
                    function b(t) {
                        d("ondata"),
                        p = !1,
                        !1 !== e.write(t) || p || ((1 === s.pipesCount && s.pipes === e || s.pipesCount > 1 && -1 !== P(s.pipes, e)) && !l && (d("false write response, pause", i._readableState.awaitDrain),
                        i._readableState.awaitDrain++,
                        p = !0),
                        i.pause())
                    }
                    function g(t) {
                        d("onerror", t),
                        v(),
                        e.removeListener("error", g),
                        0 === a(e, "error") && e.emit("error", t)
                    }
                    function m() {
                        e.removeListener("finish", y),
                        v()
                    }
                    function y() {
                        d("onfinish"),
                        e.removeListener("close", m),
                        v()
                    }
                    function v() {
                        d("unpipe"),
                        i.unpipe(e)
                    }
                    return i.on("data", b),
                    function(e, t, r) {
                        if ("function" == typeof e.prependListener)
                            return e.prependListener(t, r);
                        e._events && e._events[t] ? o(e._events[t]) ? e._events[t].unshift(r) : e._events[t] = [r, e._events[t]] : e.on(t, r)
                    }(e, "error", g),
                    e.once("close", m),
                    e.once("finish", y),
                    e.emit("pipe", i),
                    s.flowing || (d("pipe resume"),
                    i.resume()),
                    e
                }
                ,
                v.prototype.unpipe = function(e) {
                    var t = this._readableState
                      , r = {
                        hasUnpiped: !1
                    };
                    if (0 === t.pipesCount)
                        return this;
                    if (1 === t.pipesCount)
                        return e && e !== t.pipes ? this : (e || (e = t.pipes),
                        t.pipes = null,
                        t.pipesCount = 0,
                        t.flowing = !1,
                        e && e.emit("unpipe", this, r),
                        this);
                    if (!e) {
                        var i = t.pipes
                          , n = t.pipesCount;
                        t.pipes = null,
                        t.pipesCount = 0,
                        t.flowing = !1;
                        for (var s = 0; s < n; s++)
                            i[s].emit("unpipe", this, r);
                        return this
                    }
                    var o = P(t.pipes, e);
                    return -1 === o ? this : (t.pipes.splice(o, 1),
                    t.pipesCount -= 1,
                    1 === t.pipesCount && (t.pipes = t.pipes[0]),
                    e.emit("unpipe", this, r),
                    this)
                }
                ,
                v.prototype.on = function(e, t) {
                    var r = c.prototype.on.call(this, e, t);
                    if ("data" === e)
                        !1 !== this._readableState.flowing && this.resume();
                    else if ("readable" === e) {
                        var i = this._readableState;
                        i.endEmitted || i.readableListening || (i.readableListening = i.needReadable = !0,
                        i.emittedReadable = !1,
                        i.reading ? i.length && k(this) : n.nextTick(T, this))
                    }
                    return r
                }
                ,
                v.prototype.addListener = v.prototype.on,
                v.prototype.resume = function() {
                    var e = this._readableState;
                    return e.flowing || (d("resume"),
                    e.flowing = !0,
                    function(e, t) {
                        t.resumeScheduled || (t.resumeScheduled = !0,
                        n.nextTick(B, e, t))
                    }(this, e)),
                    this
                }
                ,
                v.prototype.pause = function() {
                    return d("call pause flowing=%j", this._readableState.flowing),
                    !1 !== this._readableState.flowing && (d("pause"),
                    this._readableState.flowing = !1,
                    this.emit("pause")),
                    this
                }
                ,
                v.prototype.wrap = function(e) {
                    var t = this
                      , r = this._readableState
                      , i = !1;
                    for (var n in e.on("end", (function() {
                        if (d("wrapped end"),
                        r.decoder && !r.ended) {
                            var e = r.decoder.end();
                            e && e.length && t.push(e)
                        }
                        t.push(null)
                    }
                    )),
                    e.on("data", (function(n) {
                        (d("wrapped data"),
                        r.decoder && (n = r.decoder.write(n)),
                        r.objectMode && null == n) || (r.objectMode || n && n.length) && (t.push(n) || (i = !0,
                        e.pause()))
                    }
                    )),
                    e)
                        void 0 === this[n] && "function" == typeof e[n] && (this[n] = function(t) {
                            return function() {
                                return e[t].apply(e, arguments)
                            }
                        }(n));
                    for (var s = 0; s < m.length; s++)
                        e.on(m[s], this.emit.bind(this, m[s]));
                    return this._read = function(t) {
                        d("wrapped _read", t),
                        i && (i = !1,
                        e.resume())
                    }
                    ,
                    this
                }
                ,
                Object.defineProperty(v.prototype, "readableHighWaterMark", {
                    enumerable: !1,
                    get: function() {
                        return this._readableState.highWaterMark
                    }
                }),
                v._fromList = R
            }
            ).call(this, e("_process"), "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
        }
        , {
            "./_stream_duplex": 128,
            "./internal/streams/BufferList": 133,
            "./internal/streams/destroy": 134,
            "./internal/streams/stream": 135,
            _process: 118,
            "core-util-is": 50,
            events: 83,
            inherits: 100,
            isarray: 102,
            "process-nextick-args": 117,
            "safe-buffer": 136,
            "string_decoder/": 137,
            util: 18
        }],
        131: [function(e, t, r) {
            "use strict";
            t.exports = o;
            var i = e("./_stream_duplex")
              , n = e("core-util-is");
            function s(e, t) {
                var r = this._transformState;
                r.transforming = !1;
                var i = r.writecb;
                if (!i)
                    return this.emit("error", new Error("write callback called multiple times"));
                r.writechunk = null,
                r.writecb = null,
                null != t && this.push(t),
                i(e);
                var n = this._readableState;
                n.reading = !1,
                (n.needReadable || n.length < n.highWaterMark) && this._read(n.highWaterMark)
            }
            function o(e) {
                if (!(this instanceof o))
                    return new o(e);
                i.call(this, e),
                this._transformState = {
                    afterTransform: s.bind(this),
                    needTransform: !1,
                    transforming: !1,
                    writecb: null,
                    writechunk: null,
                    writeencoding: null
                },
                this._readableState.needReadable = !0,
                this._readableState.sync = !1,
                e && ("function" == typeof e.transform && (this._transform = e.transform),
                "function" == typeof e.flush && (this._flush = e.flush)),
                this.on("prefinish", a)
            }
            function a() {
                var e = this;
                "function" == typeof this._flush ? this._flush((function(t, r) {
                    c(e, t, r)
                }
                )) : c(this, null, null)
            }
            function c(e, t, r) {
                if (t)
                    return e.emit("error", t);
                if (null != r && e.push(r),
                e._writableState.length)
                    throw new Error("Calling transform done when ws.length != 0");
                if (e._transformState.transforming)
                    throw new Error("Calling transform done when still transforming");
                return e.push(null)
            }
            n.inherits = e("inherits"),
            n.inherits(o, i),
            o.prototype.push = function(e, t) {
                return this._transformState.needTransform = !1,
                i.prototype.push.call(this, e, t)
            }
            ,
            o.prototype._transform = function(e, t, r) {
                throw new Error("_transform() is not implemented")
            }
            ,
            o.prototype._write = function(e, t, r) {
                var i = this._transformState;
                if (i.writecb = r,
                i.writechunk = e,
                i.writeencoding = t,
                !i.transforming) {
                    var n = this._readableState;
                    (i.needTransform || n.needReadable || n.length < n.highWaterMark) && this._read(n.highWaterMark)
                }
            }
            ,
            o.prototype._read = function(e) {
                var t = this._transformState;
                null !== t.writechunk && t.writecb && !t.transforming ? (t.transforming = !0,
                this._transform(t.writechunk, t.writeencoding, t.afterTransform)) : t.needTransform = !0
            }
            ,
            o.prototype._destroy = function(e, t) {
                var r = this;
                i.prototype._destroy.call(this, e, (function(e) {
                    t(e),
                    r.emit("close")
                }
                ))
            }
        }
        , {
            "./_stream_duplex": 128,
            "core-util-is": 50,
            inherits: 100
        }],
        132: [function(e, t, r) {
            (function(r, i, n) {
                "use strict";
                var s = e("process-nextick-args");
                function o(e) {
                    var t = this;
                    this.next = null,
                    this.entry = null,
                    this.finish = function() {
                        !function(e, t, r) {
                            var i = e.entry;
                            e.entry = null;
                            for (; i; ) {
                                var n = i.callback;
                                t.pendingcb--,
                                n(r),
                                i = i.next
                            }
                            t.corkedRequestsFree ? t.corkedRequestsFree.next = e : t.corkedRequestsFree = e
                        }(t, e)
                    }
                }
                t.exports = y;
                var a, c = !r.browser && ["v0.10", "v0.9."].indexOf(r.version.slice(0, 5)) > -1 ? n : s.nextTick;
                y.WritableState = m;
                var u = e("core-util-is");
                u.inherits = e("inherits");
                var f = {
                    deprecate: e("util-deprecate")
                }
                  , h = e("./internal/streams/stream")
                  , l = e("safe-buffer").Buffer
                  , d = i.Uint8Array || function() {}
                ;
                var p, b = e("./internal/streams/destroy");
                function g() {}
                function m(t, r) {
                    a = a || e("./_stream_duplex"),
                    t = t || {};
                    var i = r instanceof a;
                    this.objectMode = !!t.objectMode,
                    i && (this.objectMode = this.objectMode || !!t.writableObjectMode);
                    var n = t.highWaterMark
                      , u = t.writableHighWaterMark
                      , f = this.objectMode ? 16 : 16384;
                    this.highWaterMark = n || 0 === n ? n : i && (u || 0 === u) ? u : f,
                    this.highWaterMark = Math.floor(this.highWaterMark),
                    this.finalCalled = !1,
                    this.needDrain = !1,
                    this.ending = !1,
                    this.ended = !1,
                    this.finished = !1,
                    this.destroyed = !1;
                    var h = !1 === t.decodeStrings;
                    this.decodeStrings = !h,
                    this.defaultEncoding = t.defaultEncoding || "utf8",
                    this.length = 0,
                    this.writing = !1,
                    this.corked = 0,
                    this.sync = !0,
                    this.bufferProcessing = !1,
                    this.onwrite = function(e) {
                        !function(e, t) {
                            var r = e._writableState
                              , i = r.sync
                              , n = r.writecb;
                            if (function(e) {
                                e.writing = !1,
                                e.writecb = null,
                                e.length -= e.writelen,
                                e.writelen = 0
                            }(r),
                            t)
                                !function(e, t, r, i, n) {
                                    --t.pendingcb,
                                    r ? (s.nextTick(n, i),
                                    s.nextTick(k, e, t),
                                    e._writableState.errorEmitted = !0,
                                    e.emit("error", i)) : (n(i),
                                    e._writableState.errorEmitted = !0,
                                    e.emit("error", i),
                                    k(e, t))
                                }(e, r, i, t, n);
                            else {
                                var o = _(r);
                                o || r.corked || r.bufferProcessing || !r.bufferedRequest || E(e, r),
                                i ? c(w, e, r, o, n) : w(e, r, o, n)
                            }
                        }(r, e)
                    }
                    ,
                    this.writecb = null,
                    this.writelen = 0,
                    this.bufferedRequest = null,
                    this.lastBufferedRequest = null,
                    this.pendingcb = 0,
                    this.prefinished = !1,
                    this.errorEmitted = !1,
                    this.bufferedRequestCount = 0,
                    this.corkedRequestsFree = new o(this)
                }
                function y(t) {
                    if (a = a || e("./_stream_duplex"),
                    !(p.call(y, this) || this instanceof a))
                        return new y(t);
                    this._writableState = new m(t,this),
                    this.writable = !0,
                    t && ("function" == typeof t.write && (this._write = t.write),
                    "function" == typeof t.writev && (this._writev = t.writev),
                    "function" == typeof t.destroy && (this._destroy = t.destroy),
                    "function" == typeof t.final && (this._final = t.final)),
                    h.call(this)
                }
                function v(e, t, r, i, n, s, o) {
                    t.writelen = i,
                    t.writecb = o,
                    t.writing = !0,
                    t.sync = !0,
                    r ? e._writev(n, t.onwrite) : e._write(n, s, t.onwrite),
                    t.sync = !1
                }
                function w(e, t, r, i) {
                    r || function(e, t) {
                        0 === t.length && t.needDrain && (t.needDrain = !1,
                        e.emit("drain"))
                    }(e, t),
                    t.pendingcb--,
                    i(),
                    k(e, t)
                }
                function E(e, t) {
                    t.bufferProcessing = !0;
                    var r = t.bufferedRequest;
                    if (e._writev && r && r.next) {
                        var i = t.bufferedRequestCount
                          , n = new Array(i)
                          , s = t.corkedRequestsFree;
                        s.entry = r;
                        for (var a = 0, c = !0; r; )
                            n[a] = r,
                            r.isBuf || (c = !1),
                            r = r.next,
                            a += 1;
                        n.allBuffers = c,
                        v(e, t, !0, t.length, n, "", s.finish),
                        t.pendingcb++,
                        t.lastBufferedRequest = null,
                        s.next ? (t.corkedRequestsFree = s.next,
                        s.next = null) : t.corkedRequestsFree = new o(t),
                        t.bufferedRequestCount = 0
                    } else {
                        for (; r; ) {
                            var u = r.chunk
                              , f = r.encoding
                              , h = r.callback;
                            if (v(e, t, !1, t.objectMode ? 1 : u.length, u, f, h),
                            r = r.next,
                            t.bufferedRequestCount--,
                            t.writing)
                                break
                        }
                        null === r && (t.lastBufferedRequest = null)
                    }
                    t.bufferedRequest = r,
                    t.bufferProcessing = !1
                }
                function _(e) {
                    return e.ending && 0 === e.length && null === e.bufferedRequest && !e.finished && !e.writing
                }
                function S(e, t) {
                    e._final((function(r) {
                        t.pendingcb--,
                        r && e.emit("error", r),
                        t.prefinished = !0,
                        e.emit("prefinish"),
                        k(e, t)
                    }
                    ))
                }
                function k(e, t) {
                    var r = _(t);
                    return r && (!function(e, t) {
                        t.prefinished || t.finalCalled || ("function" == typeof e._final ? (t.pendingcb++,
                        t.finalCalled = !0,
                        s.nextTick(S, e, t)) : (t.prefinished = !0,
                        e.emit("prefinish")))
                    }(e, t),
                    0 === t.pendingcb && (t.finished = !0,
                    e.emit("finish"))),
                    r
                }
                u.inherits(y, h),
                m.prototype.getBuffer = function() {
                    for (var e = this.bufferedRequest, t = []; e; )
                        t.push(e),
                        e = e.next;
                    return t
                }
                ,
                function() {
                    try {
                        Object.defineProperty(m.prototype, "buffer", {
                            get: f.deprecate((function() {
                                return this.getBuffer()
                            }
                            ), "_writableState.buffer is deprecated. Use _writableState.getBuffer instead.", "DEP0003")
                        })
                    } catch (e) {}
                }(),
                "function" == typeof Symbol && Symbol.hasInstance && "function" == typeof Function.prototype[Symbol.hasInstance] ? (p = Function.prototype[Symbol.hasInstance],
                Object.defineProperty(y, Symbol.hasInstance, {
                    value: function(e) {
                        return !!p.call(this, e) || this === y && (e && e._writableState instanceof m)
                    }
                })) : p = function(e) {
                    return e instanceof this
                }
                ,
                y.prototype.pipe = function() {
                    this.emit("error", new Error("Cannot pipe, not readable"))
                }
                ,
                y.prototype.write = function(e, t, r) {
                    var i, n = this._writableState, o = !1, a = !n.objectMode && (i = e,
                    l.isBuffer(i) || i instanceof d);
                    return a && !l.isBuffer(e) && (e = function(e) {
                        return l.from(e)
                    }(e)),
                    "function" == typeof t && (r = t,
                    t = null),
                    a ? t = "buffer" : t || (t = n.defaultEncoding),
                    "function" != typeof r && (r = g),
                    n.ended ? function(e, t) {
                        var r = new Error("write after end");
                        e.emit("error", r),
                        s.nextTick(t, r)
                    }(this, r) : (a || function(e, t, r, i) {
                        var n = !0
                          , o = !1;
                        return null === r ? o = new TypeError("May not write null values to stream") : "string" == typeof r || void 0 === r || t.objectMode || (o = new TypeError("Invalid non-string/buffer chunk")),
                        o && (e.emit("error", o),
                        s.nextTick(i, o),
                        n = !1),
                        n
                    }(this, n, e, r)) && (n.pendingcb++,
                    o = function(e, t, r, i, n, s) {
                        if (!r) {
                            var o = function(e, t, r) {
                                e.objectMode || !1 === e.decodeStrings || "string" != typeof t || (t = l.from(t, r));
                                return t
                            }(t, i, n);
                            i !== o && (r = !0,
                            n = "buffer",
                            i = o)
                        }
                        var a = t.objectMode ? 1 : i.length;
                        t.length += a;
                        var c = t.length < t.highWaterMark;
                        c || (t.needDrain = !0);
                        if (t.writing || t.corked) {
                            var u = t.lastBufferedRequest;
                            t.lastBufferedRequest = {
                                chunk: i,
                                encoding: n,
                                isBuf: r,
                                callback: s,
                                next: null
                            },
                            u ? u.next = t.lastBufferedRequest : t.bufferedRequest = t.lastBufferedRequest,
                            t.bufferedRequestCount += 1
                        } else
                            v(e, t, !1, a, i, n, s);
                        return c
                    }(this, n, a, e, t, r)),
                    o
                }
                ,
                y.prototype.cork = function() {
                    this._writableState.corked++
                }
                ,
                y.prototype.uncork = function() {
                    var e = this._writableState;
                    e.corked && (e.corked--,
                    e.writing || e.corked || e.finished || e.bufferProcessing || !e.bufferedRequest || E(this, e))
                }
                ,
                y.prototype.setDefaultEncoding = function(e) {
                    if ("string" == typeof e && (e = e.toLowerCase()),
                    !(["hex", "utf8", "utf-8", "ascii", "binary", "base64", "ucs2", "ucs-2", "utf16le", "utf-16le", "raw"].indexOf((e + "").toLowerCase()) > -1))
                        throw new TypeError("Unknown encoding: " + e);
                    return this._writableState.defaultEncoding = e,
                    this
                }
                ,
                Object.defineProperty(y.prototype, "writableHighWaterMark", {
                    enumerable: !1,
                    get: function() {
                        return this._writableState.highWaterMark
                    }
                }),
                y.prototype._write = function(e, t, r) {
                    r(new Error("_write() is not implemented"))
                }
                ,
                y.prototype._writev = null,
                y.prototype.end = function(e, t, r) {
                    var i = this._writableState;
                    "function" == typeof e ? (r = e,
                    e = null,
                    t = null) : "function" == typeof t && (r = t,
                    t = null),
                    null != e && this.write(e, t),
                    i.corked && (i.corked = 1,
                    this.uncork()),
                    i.ending || i.finished || function(e, t, r) {
                        t.ending = !0,
                        k(e, t),
                        r && (t.finished ? s.nextTick(r) : e.once("finish", r));
                        t.ended = !0,
                        e.writable = !1
                    }(this, i, r)
                }
                ,
                Object.defineProperty(y.prototype, "destroyed", {
                    get: function() {
                        return void 0 !== this._writableState && this._writableState.destroyed
                    },
                    set: function(e) {
                        this._writableState && (this._writableState.destroyed = e)
                    }
                }),
                y.prototype.destroy = b.destroy,
                y.prototype._undestroy = b.undestroy,
                y.prototype._destroy = function(e, t) {
                    this.end(),
                    t(e)
                }
            }
            ).call(this, e("_process"), "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {}, e("timers").setImmediate)
        }
        , {
            "./_stream_duplex": 128,
            "./internal/streams/destroy": 134,
            "./internal/streams/stream": 135,
            _process: 118,
            "core-util-is": 50,
            inherits: 100,
            "process-nextick-args": 117,
            "safe-buffer": 136,
            timers: 154,
            "util-deprecate": 155
        }],
        133: [function(e, t, r) {
            "use strict";
            var i = e("safe-buffer").Buffer
              , n = e("util");
            t.exports = function() {
                function e() {
                    !function(e, t) {
                        if (!(e instanceof t))
                            throw new TypeError("Cannot call a class as a function")
                    }(this, e),
                    this.head = null,
                    this.tail = null,
                    this.length = 0
                }
                return e.prototype.push = function(e) {
                    var t = {
                        data: e,
                        next: null
                    };
                    this.length > 0 ? this.tail.next = t : this.head = t,
                    this.tail = t,
                    ++this.length
                }
                ,
                e.prototype.unshift = function(e) {
                    var t = {
                        data: e,
                        next: this.head
                    };
                    0 === this.length && (this.tail = t),
                    this.head = t,
                    ++this.length
                }
                ,
                e.prototype.shift = function() {
                    if (0 !== this.length) {
                        var e = this.head.data;
                        return 1 === this.length ? this.head = this.tail = null : this.head = this.head.next,
                        --this.length,
                        e
                    }
                }
                ,
                e.prototype.clear = function() {
                    this.head = this.tail = null,
                    this.length = 0
                }
                ,
                e.prototype.join = function(e) {
                    if (0 === this.length)
                        return "";
                    for (var t = this.head, r = "" + t.data; t = t.next; )
                        r += e + t.data;
                    return r
                }
                ,
                e.prototype.concat = function(e) {
                    if (0 === this.length)
                        return i.alloc(0);
                    if (1 === this.length)
                        return this.head.data;
                    for (var t, r, n, s = i.allocUnsafe(e >>> 0), o = this.head, a = 0; o; )
                        t = o.data,
                        r = s,
                        n = a,
                        t.copy(r, n),
                        a += o.data.length,
                        o = o.next;
                    return s
                }
                ,
                e
            }(),
            n && n.inspect && n.inspect.custom && (t.exports.prototype[n.inspect.custom] = function() {
                var e = n.inspect({
                    length: this.length
                });
                return this.constructor.name + " " + e
            }
            )
        }
        , {
            "safe-buffer": 136,
            util: 18
        }],
        134: [function(e, t, r) {
            "use strict";
            var i = e("process-nextick-args");
            function n(e, t) {
                e.emit("error", t)
            }
            t.exports = {
                destroy: function(e, t) {
                    var r = this
                      , s = this._readableState && this._readableState.destroyed
                      , o = this._writableState && this._writableState.destroyed;
                    return s || o ? (t ? t(e) : !e || this._writableState && this._writableState.errorEmitted || i.nextTick(n, this, e),
                    this) : (this._readableState && (this._readableState.destroyed = !0),
                    this._writableState && (this._writableState.destroyed = !0),
                    this._destroy(e || null, (function(e) {
                        !t && e ? (i.nextTick(n, r, e),
                        r._writableState && (r._writableState.errorEmitted = !0)) : t && t(e)
                    }
                    )),
                    this)
                },
                undestroy: function() {
                    this._readableState && (this._readableState.destroyed = !1,
                    this._readableState.reading = !1,
                    this._readableState.ended = !1,
                    this._readableState.endEmitted = !1),
                    this._writableState && (this._writableState.destroyed = !1,
                    this._writableState.ended = !1,
                    this._writableState.ending = !1,
                    this._writableState.finished = !1,
                    this._writableState.errorEmitted = !1)
                }
            }
        }
        , {
            "process-nextick-args": 117
        }],
        135: [function(e, t, r) {
            t.exports = e("events").EventEmitter
        }
        , {
            events: 83
        }],
        136: [function(e, t, r) {
            var i = e("buffer")
              , n = i.Buffer;
            function s(e, t) {
                for (var r in e)
                    t[r] = e[r]
            }
            function o(e, t, r) {
                return n(e, t, r)
            }
            n.from && n.alloc && n.allocUnsafe && n.allocUnsafeSlow ? t.exports = i : (s(i, r),
            r.Buffer = o),
            s(n, o),
            o.from = function(e, t, r) {
                if ("number" == typeof e)
                    throw new TypeError("Argument must not be a number");
                return n(e, t, r)
            }
            ,
            o.alloc = function(e, t, r) {
                if ("number" != typeof e)
                    throw new TypeError("Argument must be a number");
                var i = n(e);
                return void 0 !== t ? "string" == typeof r ? i.fill(t, r) : i.fill(t) : i.fill(0),
                i
            }
            ,
            o.allocUnsafe = function(e) {
                if ("number" != typeof e)
                    throw new TypeError("Argument must be a number");
                return n(e)
            }
            ,
            o.allocUnsafeSlow = function(e) {
                if ("number" != typeof e)
                    throw new TypeError("Argument must be a number");
                return i.SlowBuffer(e)
            }
        }
        , {
            buffer: 48
        }],
        137: [function(e, t, r) {
            "use strict";
            var i = e("safe-buffer").Buffer
              , n = i.isEncoding || function(e) {
                switch ((e = "" + e) && e.toLowerCase()) {
                case "hex":
                case "utf8":
                case "utf-8":
                case "ascii":
                case "binary":
                case "base64":
                case "ucs2":
                case "ucs-2":
                case "utf16le":
                case "utf-16le":
                case "raw":
                    return !0;
                default:
                    return !1
                }
            }
            ;
            function s(e) {
                var t;
                switch (this.encoding = function(e) {
                    var t = function(e) {
                        if (!e)
                            return "utf8";
                        for (var t; ; )
                            switch (e) {
                            case "utf8":
                            case "utf-8":
                                return "utf8";
                            case "ucs2":
                            case "ucs-2":
                            case "utf16le":
                            case "utf-16le":
                                return "utf16le";
                            case "latin1":
                            case "binary":
                                return "latin1";
                            case "base64":
                            case "ascii":
                            case "hex":
                                return e;
                            default:
                                if (t)
                                    return;
                                e = ("" + e).toLowerCase(),
                                t = !0
                            }
                    }(e);
                    if ("string" != typeof t && (i.isEncoding === n || !n(e)))
                        throw new Error("Unknown encoding: " + e);
                    return t || e
                }(e),
                this.encoding) {
                case "utf16le":
                    this.text = c,
                    this.end = u,
                    t = 4;
                    break;
                case "utf8":
                    this.fillLast = a,
                    t = 4;
                    break;
                case "base64":
                    this.text = f,
                    this.end = h,
                    t = 3;
                    break;
                default:
                    return this.write = l,
                    void (this.end = d)
                }
                this.lastNeed = 0,
                this.lastTotal = 0,
                this.lastChar = i.allocUnsafe(t)
            }
            function o(e) {
                return e <= 127 ? 0 : e >> 5 == 6 ? 2 : e >> 4 == 14 ? 3 : e >> 3 == 30 ? 4 : e >> 6 == 2 ? -1 : -2
            }
            function a(e) {
                var t = this.lastTotal - this.lastNeed
                  , r = function(e, t, r) {
                    if (128 != (192 & t[0]))
                        return e.lastNeed = 0,
                        "�";
                    if (e.lastNeed > 1 && t.length > 1) {
                        if (128 != (192 & t[1]))
                            return e.lastNeed = 1,
                            "�";
                        if (e.lastNeed > 2 && t.length > 2 && 128 != (192 & t[2]))
                            return e.lastNeed = 2,
                            "�"
                    }
                }(this, e);
                return void 0 !== r ? r : this.lastNeed <= e.length ? (e.copy(this.lastChar, t, 0, this.lastNeed),
                this.lastChar.toString(this.encoding, 0, this.lastTotal)) : (e.copy(this.lastChar, t, 0, e.length),
                void (this.lastNeed -= e.length))
            }
            function c(e, t) {
                if ((e.length - t) % 2 == 0) {
                    var r = e.toString("utf16le", t);
                    if (r) {
                        var i = r.charCodeAt(r.length - 1);
                        if (i >= 55296 && i <= 56319)
                            return this.lastNeed = 2,
                            this.lastTotal = 4,
                            this.lastChar[0] = e[e.length - 2],
                            this.lastChar[1] = e[e.length - 1],
                            r.slice(0, -1)
                    }
                    return r
                }
                return this.lastNeed = 1,
                this.lastTotal = 2,
                this.lastChar[0] = e[e.length - 1],
                e.toString("utf16le", t, e.length - 1)
            }
            function u(e) {
                var t = e && e.length ? this.write(e) : "";
                if (this.lastNeed) {
                    var r = this.lastTotal - this.lastNeed;
                    return t + this.lastChar.toString("utf16le", 0, r)
                }
                return t
            }
            function f(e, t) {
                var r = (e.length - t) % 3;
                return 0 === r ? e.toString("base64", t) : (this.lastNeed = 3 - r,
                this.lastTotal = 3,
                1 === r ? this.lastChar[0] = e[e.length - 1] : (this.lastChar[0] = e[e.length - 2],
                this.lastChar[1] = e[e.length - 1]),
                e.toString("base64", t, e.length - r))
            }
            function h(e) {
                var t = e && e.length ? this.write(e) : "";
                return this.lastNeed ? t + this.lastChar.toString("base64", 0, 3 - this.lastNeed) : t
            }
            function l(e) {
                return e.toString(this.encoding)
            }
            function d(e) {
                return e && e.length ? this.write(e) : ""
            }
            r.StringDecoder = s,
            s.prototype.write = function(e) {
                if (0 === e.length)
                    return "";
                var t, r;
                if (this.lastNeed) {
                    if (void 0 === (t = this.fillLast(e)))
                        return "";
                    r = this.lastNeed,
                    this.lastNeed = 0
                } else
                    r = 0;
                return r < e.length ? t ? t + this.text(e, r) : this.text(e, r) : t || ""
            }
            ,
            s.prototype.end = function(e) {
                var t = e && e.length ? this.write(e) : "";
                return this.lastNeed ? t + "�" : t
            }
            ,
            s.prototype.text = function(e, t) {
                var r = function(e, t, r) {
                    var i = t.length - 1;
                    if (i < r)
                        return 0;
                    var n = o(t[i]);
                    if (n >= 0)
                        return n > 0 && (e.lastNeed = n - 1),
                        n;
                    if (--i < r || -2 === n)
                        return 0;
                    if ((n = o(t[i])) >= 0)
                        return n > 0 && (e.lastNeed = n - 2),
                        n;
                    if (--i < r || -2 === n)
                        return 0;
                    if ((n = o(t[i])) >= 0)
                        return n > 0 && (2 === n ? n = 0 : e.lastNeed = n - 3),
                        n;
                    return 0
                }(this, e, t);
                if (!this.lastNeed)
                    return e.toString("utf8", t);
                this.lastTotal = r;
                var i = e.length - (r - this.lastNeed);
                return e.copy(this.lastChar, 0, i),
                e.toString("utf8", t, i)
            }
            ,
            s.prototype.fillLast = function(e) {
                if (this.lastNeed <= e.length)
                    return e.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed),
                    this.lastChar.toString(this.encoding, 0, this.lastTotal);
                e.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, e.length),
                this.lastNeed -= e.length
            }
        }
        , {
            "safe-buffer": 136
        }],
        138: [function(e, t, r) {
            t.exports = e("./readable").PassThrough
        }
        , {
            "./readable": 139
        }],
        139: [function(e, t, r) {
            (r = t.exports = e("./lib/_stream_readable.js")).Stream = r,
            r.Readable = r,
            r.Writable = e("./lib/_stream_writable.js"),
            r.Duplex = e("./lib/_stream_duplex.js"),
            r.Transform = e("./lib/_stream_transform.js"),
            r.PassThrough = e("./lib/_stream_passthrough.js")
        }
        , {
            "./lib/_stream_duplex.js": 128,
            "./lib/_stream_passthrough.js": 129,
            "./lib/_stream_readable.js": 130,
            "./lib/_stream_transform.js": 131,
            "./lib/_stream_writable.js": 132
        }],
        140: [function(e, t, r) {
            t.exports = e("./readable").Transform
        }
        , {
            "./readable": 139
        }],
        141: [function(e, t, r) {
            t.exports = e("./lib/_stream_writable.js")
        }
        , {
            "./lib/_stream_writable.js": 132
        }],
        142: [function(e, t, r) {
            "use strict";
            var i = e("buffer").Buffer
              , n = e("inherits")
              , s = e("hash-base")
              , o = new Array(16)
              , a = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13]
              , c = [5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11]
              , u = [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6]
              , f = [8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11]
              , h = [0, 1518500249, 1859775393, 2400959708, 2840853838]
              , l = [1352829926, 1548603684, 1836072691, 2053994217, 0];
            function d() {
                s.call(this, 64),
                this._a = 1732584193,
                this._b = 4023233417,
                this._c = 2562383102,
                this._d = 271733878,
                this._e = 3285377520
            }
            function p(e, t) {
                return e << t | e >>> 32 - t
            }
            function b(e, t, r, i, n, s, o, a) {
                return p(e + (t ^ r ^ i) + s + o | 0, a) + n | 0
            }
            function g(e, t, r, i, n, s, o, a) {
                return p(e + (t & r | ~t & i) + s + o | 0, a) + n | 0
            }
            function m(e, t, r, i, n, s, o, a) {
                return p(e + ((t | ~r) ^ i) + s + o | 0, a) + n | 0
            }
            function y(e, t, r, i, n, s, o, a) {
                return p(e + (t & i | r & ~i) + s + o | 0, a) + n | 0
            }
            function v(e, t, r, i, n, s, o, a) {
                return p(e + (t ^ (r | ~i)) + s + o | 0, a) + n | 0
            }
            n(d, s),
            d.prototype._update = function() {
                for (var e = o, t = 0; t < 16; ++t)
                    e[t] = this._block.readInt32LE(4 * t);
                for (var r = 0 | this._a, i = 0 | this._b, n = 0 | this._c, s = 0 | this._d, d = 0 | this._e, w = 0 | this._a, E = 0 | this._b, _ = 0 | this._c, S = 0 | this._d, k = 0 | this._e, A = 0; A < 80; A += 1) {
                    var C, I;
                    A < 16 ? (C = b(r, i, n, s, d, e[a[A]], h[0], u[A]),
                    I = v(w, E, _, S, k, e[c[A]], l[0], f[A])) : A < 32 ? (C = g(r, i, n, s, d, e[a[A]], h[1], u[A]),
                    I = y(w, E, _, S, k, e[c[A]], l[1], f[A])) : A < 48 ? (C = m(r, i, n, s, d, e[a[A]], h[2], u[A]),
                    I = m(w, E, _, S, k, e[c[A]], l[2], f[A])) : A < 64 ? (C = y(r, i, n, s, d, e[a[A]], h[3], u[A]),
                    I = g(w, E, _, S, k, e[c[A]], l[3], f[A])) : (C = v(r, i, n, s, d, e[a[A]], h[4], u[A]),
                    I = b(w, E, _, S, k, e[c[A]], l[4], f[A])),
                    r = d,
                    d = s,
                    s = p(n, 10),
                    n = i,
                    i = C,
                    w = k,
                    k = S,
                    S = p(_, 10),
                    _ = E,
                    E = I
                }
                var T = this._b + n + S | 0;
                this._b = this._c + s + k | 0,
                this._c = this._d + d + w | 0,
                this._d = this._e + r + E | 0,
                this._e = this._a + i + _ | 0,
                this._a = T
            }
            ,
            d.prototype._digest = function() {
                this._block[this._blockOffset++] = 128,
                this._blockOffset > 56 && (this._block.fill(0, this._blockOffset, 64),
                this._update(),
                this._blockOffset = 0),
                this._block.fill(0, this._blockOffset, 56),
                this._block.writeUInt32LE(this._length[0], 56),
                this._block.writeUInt32LE(this._length[1], 60),
                this._update();
                var e = i.alloc ? i.alloc(20) : new i(20);
                return e.writeInt32LE(this._a, 0),
                e.writeInt32LE(this._b, 4),
                e.writeInt32LE(this._c, 8),
                e.writeInt32LE(this._d, 12),
                e.writeInt32LE(this._e, 16),
                e
            }
            ,
            t.exports = d
        }
        , {
            buffer: 48,
            "hash-base": 85,
            inherits: 100
        }],
        143: [function(e, t, r) {
            var i = e("buffer")
              , n = i.Buffer;
            function s(e, t) {
                for (var r in e)
                    t[r] = e[r]
            }
            function o(e, t, r) {
                return n(e, t, r)
            }
            n.from && n.alloc && n.allocUnsafe && n.allocUnsafeSlow ? t.exports = i : (s(i, r),
            r.Buffer = o),
            o.prototype = Object.create(n.prototype),
            s(n, o),
            o.from = function(e, t, r) {
                if ("number" == typeof e)
                    throw new TypeError("Argument must not be a number");
                return n(e, t, r)
            }
            ,
            o.alloc = function(e, t, r) {
                if ("number" != typeof e)
                    throw new TypeError("Argument must be a number");
                var i = n(e);
                return void 0 !== t ? "string" == typeof r ? i.fill(t, r) : i.fill(t) : i.fill(0),
                i
            }
            ,
            o.allocUnsafe = function(e) {
                if ("number" != typeof e)
                    throw new TypeError("Argument must be a number");
                return n(e)
            }
            ,
            o.allocUnsafeSlow = function(e) {
                if ("number" != typeof e)
                    throw new TypeError("Argument must be a number");
                return i.SlowBuffer(e)
            }
        }
        , {
            buffer: 48
        }],
        144: [function(e, t, r) {
            var i = e("safe-buffer").Buffer;
            function n(e, t) {
                this._block = i.alloc(e),
                this._finalSize = t,
                this._blockSize = e,
                this._len = 0
            }
            n.prototype.update = function(e, t) {
                "string" == typeof e && (t = t || "utf8",
                e = i.from(e, t));
                for (var r = this._block, n = this._blockSize, s = e.length, o = this._len, a = 0; a < s; ) {
                    for (var c = o % n, u = Math.min(s - a, n - c), f = 0; f < u; f++)
                        r[c + f] = e[a + f];
                    a += u,
                    (o += u) % n == 0 && this._update(r)
                }
                return this._len += s,
                this
            }
            ,
            n.prototype.digest = function(e) {
                var t = this._len % this._blockSize;
                this._block[t] = 128,
                this._block.fill(0, t + 1),
                t >= this._finalSize && (this._update(this._block),
                this._block.fill(0));
                var r = 8 * this._len;
                if (r <= 4294967295)
                    this._block.writeUInt32BE(r, this._blockSize - 4);
                else {
                    var i = (4294967295 & r) >>> 0
                      , n = (r - i) / 4294967296;
                    this._block.writeUInt32BE(n, this._blockSize - 8),
                    this._block.writeUInt32BE(i, this._blockSize - 4)
                }
                this._update(this._block);
                var s = this._hash();
                return e ? s.toString(e) : s
            }
            ,
            n.prototype._update = function() {
                throw new Error("_update must be implemented by subclass")
            }
            ,
            t.exports = n
        }
        , {
            "safe-buffer": 143
        }],
        145: [function(e, t, r) {
            (r = t.exports = function(e) {
                e = e.toLowerCase();
                var t = r[e];
                if (!t)
                    throw new Error(e + " is not supported (we accept pull requests)");
                return new t
            }
            ).sha = e("./sha"),
            r.sha1 = e("./sha1"),
            r.sha224 = e("./sha224"),
            r.sha256 = e("./sha256"),
            r.sha384 = e("./sha384"),
            r.sha512 = e("./sha512")
        }
        , {
            "./sha": 146,
            "./sha1": 147,
            "./sha224": 148,
            "./sha256": 149,
            "./sha384": 150,
            "./sha512": 151
        }],
        146: [function(e, t, r) {
            var i = e("inherits")
              , n = e("./hash")
              , s = e("safe-buffer").Buffer
              , o = [1518500249, 1859775393, -1894007588, -899497514]
              , a = new Array(80);
            function c() {
                this.init(),
                this._w = a,
                n.call(this, 64, 56)
            }
            function u(e) {
                return e << 30 | e >>> 2
            }
            function f(e, t, r, i) {
                return 0 === e ? t & r | ~t & i : 2 === e ? t & r | t & i | r & i : t ^ r ^ i
            }
            i(c, n),
            c.prototype.init = function() {
                return this._a = 1732584193,
                this._b = 4023233417,
                this._c = 2562383102,
                this._d = 271733878,
                this._e = 3285377520,
                this
            }
            ,
            c.prototype._update = function(e) {
                for (var t, r = this._w, i = 0 | this._a, n = 0 | this._b, s = 0 | this._c, a = 0 | this._d, c = 0 | this._e, h = 0; h < 16; ++h)
                    r[h] = e.readInt32BE(4 * h);
                for (; h < 80; ++h)
                    r[h] = r[h - 3] ^ r[h - 8] ^ r[h - 14] ^ r[h - 16];
                for (var l = 0; l < 80; ++l) {
                    var d = ~~(l / 20)
                      , p = 0 | ((t = i) << 5 | t >>> 27) + f(d, n, s, a) + c + r[l] + o[d];
                    c = a,
                    a = s,
                    s = u(n),
                    n = i,
                    i = p
                }
                this._a = i + this._a | 0,
                this._b = n + this._b | 0,
                this._c = s + this._c | 0,
                this._d = a + this._d | 0,
                this._e = c + this._e | 0
            }
            ,
            c.prototype._hash = function() {
                var e = s.allocUnsafe(20);
                return e.writeInt32BE(0 | this._a, 0),
                e.writeInt32BE(0 | this._b, 4),
                e.writeInt32BE(0 | this._c, 8),
                e.writeInt32BE(0 | this._d, 12),
                e.writeInt32BE(0 | this._e, 16),
                e
            }
            ,
            t.exports = c
        }
        , {
            "./hash": 144,
            inherits: 100,
            "safe-buffer": 143
        }],
        147: [function(e, t, r) {
            var i = e("inherits")
              , n = e("./hash")
              , s = e("safe-buffer").Buffer
              , o = [1518500249, 1859775393, -1894007588, -899497514]
              , a = new Array(80);
            function c() {
                this.init(),
                this._w = a,
                n.call(this, 64, 56)
            }
            function u(e) {
                return e << 5 | e >>> 27
            }
            function f(e) {
                return e << 30 | e >>> 2
            }
            function h(e, t, r, i) {
                return 0 === e ? t & r | ~t & i : 2 === e ? t & r | t & i | r & i : t ^ r ^ i
            }
            i(c, n),
            c.prototype.init = function() {
                return this._a = 1732584193,
                this._b = 4023233417,
                this._c = 2562383102,
                this._d = 271733878,
                this._e = 3285377520,
                this
            }
            ,
            c.prototype._update = function(e) {
                for (var t, r = this._w, i = 0 | this._a, n = 0 | this._b, s = 0 | this._c, a = 0 | this._d, c = 0 | this._e, l = 0; l < 16; ++l)
                    r[l] = e.readInt32BE(4 * l);
                for (; l < 80; ++l)
                    r[l] = (t = r[l - 3] ^ r[l - 8] ^ r[l - 14] ^ r[l - 16]) << 1 | t >>> 31;
                for (var d = 0; d < 80; ++d) {
                    var p = ~~(d / 20)
                      , b = u(i) + h(p, n, s, a) + c + r[d] + o[p] | 0;
                    c = a,
                    a = s,
                    s = f(n),
                    n = i,
                    i = b
                }
                this._a = i + this._a | 0,
                this._b = n + this._b | 0,
                this._c = s + this._c | 0,
                this._d = a + this._d | 0,
                this._e = c + this._e | 0
            }
            ,
            c.prototype._hash = function() {
                var e = s.allocUnsafe(20);
                return e.writeInt32BE(0 | this._a, 0),
                e.writeInt32BE(0 | this._b, 4),
                e.writeInt32BE(0 | this._c, 8),
                e.writeInt32BE(0 | this._d, 12),
                e.writeInt32BE(0 | this._e, 16),
                e
            }
            ,
            t.exports = c
        }
        , {
            "./hash": 144,
            inherits: 100,
            "safe-buffer": 143
        }],
        148: [function(e, t, r) {
            var i = e("inherits")
              , n = e("./sha256")
              , s = e("./hash")
              , o = e("safe-buffer").Buffer
              , a = new Array(64);
            function c() {
                this.init(),
                this._w = a,
                s.call(this, 64, 56)
            }
            i(c, n),
            c.prototype.init = function() {
                return this._a = 3238371032,
                this._b = 914150663,
                this._c = 812702999,
                this._d = 4144912697,
                this._e = 4290775857,
                this._f = 1750603025,
                this._g = 1694076839,
                this._h = 3204075428,
                this
            }
            ,
            c.prototype._hash = function() {
                var e = o.allocUnsafe(28);
                return e.writeInt32BE(this._a, 0),
                e.writeInt32BE(this._b, 4),
                e.writeInt32BE(this._c, 8),
                e.writeInt32BE(this._d, 12),
                e.writeInt32BE(this._e, 16),
                e.writeInt32BE(this._f, 20),
                e.writeInt32BE(this._g, 24),
                e
            }
            ,
            t.exports = c
        }
        , {
            "./hash": 144,
            "./sha256": 149,
            inherits: 100,
            "safe-buffer": 143
        }],
        149: [function(e, t, r) {
            var i = e("inherits")
              , n = e("./hash")
              , s = e("safe-buffer").Buffer
              , o = [1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298]
              , a = new Array(64);
            function c() {
                this.init(),
                this._w = a,
                n.call(this, 64, 56)
            }
            function u(e, t, r) {
                return r ^ e & (t ^ r)
            }
            function f(e, t, r) {
                return e & t | r & (e | t)
            }
            function h(e) {
                return (e >>> 2 | e << 30) ^ (e >>> 13 | e << 19) ^ (e >>> 22 | e << 10)
            }
            function l(e) {
                return (e >>> 6 | e << 26) ^ (e >>> 11 | e << 21) ^ (e >>> 25 | e << 7)
            }
            function d(e) {
                return (e >>> 7 | e << 25) ^ (e >>> 18 | e << 14) ^ e >>> 3
            }
            i(c, n),
            c.prototype.init = function() {
                return this._a = 1779033703,
                this._b = 3144134277,
                this._c = 1013904242,
                this._d = 2773480762,
                this._e = 1359893119,
                this._f = 2600822924,
                this._g = 528734635,
                this._h = 1541459225,
                this
            }
            ,
            c.prototype._update = function(e) {
                for (var t, r = this._w, i = 0 | this._a, n = 0 | this._b, s = 0 | this._c, a = 0 | this._d, c = 0 | this._e, p = 0 | this._f, b = 0 | this._g, g = 0 | this._h, m = 0; m < 16; ++m)
                    r[m] = e.readInt32BE(4 * m);
                for (; m < 64; ++m)
                    r[m] = 0 | (((t = r[m - 2]) >>> 17 | t << 15) ^ (t >>> 19 | t << 13) ^ t >>> 10) + r[m - 7] + d(r[m - 15]) + r[m - 16];
                for (var y = 0; y < 64; ++y) {
                    var v = g + l(c) + u(c, p, b) + o[y] + r[y] | 0
                      , w = h(i) + f(i, n, s) | 0;
                    g = b,
                    b = p,
                    p = c,
                    c = a + v | 0,
                    a = s,
                    s = n,
                    n = i,
                    i = v + w | 0
                }
                this._a = i + this._a | 0,
                this._b = n + this._b | 0,
                this._c = s + this._c | 0,
                this._d = a + this._d | 0,
                this._e = c + this._e | 0,
                this._f = p + this._f | 0,
                this._g = b + this._g | 0,
                this._h = g + this._h | 0
            }
            ,
            c.prototype._hash = function() {
                var e = s.allocUnsafe(32);
                return e.writeInt32BE(this._a, 0),
                e.writeInt32BE(this._b, 4),
                e.writeInt32BE(this._c, 8),
                e.writeInt32BE(this._d, 12),
                e.writeInt32BE(this._e, 16),
                e.writeInt32BE(this._f, 20),
                e.writeInt32BE(this._g, 24),
                e.writeInt32BE(this._h, 28),
                e
            }
            ,
            t.exports = c
        }
        , {
            "./hash": 144,
            inherits: 100,
            "safe-buffer": 143
        }],
        150: [function(e, t, r) {
            var i = e("inherits")
              , n = e("./sha512")
              , s = e("./hash")
              , o = e("safe-buffer").Buffer
              , a = new Array(160);
            function c() {
                this.init(),
                this._w = a,
                s.call(this, 128, 112)
            }
            i(c, n),
            c.prototype.init = function() {
                return this._ah = 3418070365,
                this._bh = 1654270250,
                this._ch = 2438529370,
                this._dh = 355462360,
                this._eh = 1731405415,
                this._fh = 2394180231,
                this._gh = 3675008525,
                this._hh = 1203062813,
                this._al = 3238371032,
                this._bl = 914150663,
                this._cl = 812702999,
                this._dl = 4144912697,
                this._el = 4290775857,
                this._fl = 1750603025,
                this._gl = 1694076839,
                this._hl = 3204075428,
                this
            }
            ,
            c.prototype._hash = function() {
                var e = o.allocUnsafe(48);
                function t(t, r, i) {
                    e.writeInt32BE(t, i),
                    e.writeInt32BE(r, i + 4)
                }
                return t(this._ah, this._al, 0),
                t(this._bh, this._bl, 8),
                t(this._ch, this._cl, 16),
                t(this._dh, this._dl, 24),
                t(this._eh, this._el, 32),
                t(this._fh, this._fl, 40),
                e
            }
            ,
            t.exports = c
        }
        , {
            "./hash": 144,
            "./sha512": 151,
            inherits: 100,
            "safe-buffer": 143
        }],
        151: [function(e, t, r) {
            var i = e("inherits")
              , n = e("./hash")
              , s = e("safe-buffer").Buffer
              , o = [1116352408, 3609767458, 1899447441, 602891725, 3049323471, 3964484399, 3921009573, 2173295548, 961987163, 4081628472, 1508970993, 3053834265, 2453635748, 2937671579, 2870763221, 3664609560, 3624381080, 2734883394, 310598401, 1164996542, 607225278, 1323610764, 1426881987, 3590304994, 1925078388, 4068182383, 2162078206, 991336113, 2614888103, 633803317, 3248222580, 3479774868, 3835390401, 2666613458, 4022224774, 944711139, 264347078, 2341262773, 604807628, 2007800933, 770255983, 1495990901, 1249150122, 1856431235, 1555081692, 3175218132, 1996064986, 2198950837, 2554220882, 3999719339, 2821834349, 766784016, 2952996808, 2566594879, 3210313671, 3203337956, 3336571891, 1034457026, 3584528711, 2466948901, 113926993, 3758326383, 338241895, 168717936, 666307205, 1188179964, 773529912, 1546045734, 1294757372, 1522805485, 1396182291, 2643833823, 1695183700, 2343527390, 1986661051, 1014477480, 2177026350, 1206759142, 2456956037, 344077627, 2730485921, 1290863460, 2820302411, 3158454273, 3259730800, 3505952657, 3345764771, 106217008, 3516065817, 3606008344, 3600352804, 1432725776, 4094571909, 1467031594, 275423344, 851169720, 430227734, 3100823752, 506948616, 1363258195, 659060556, 3750685593, 883997877, 3785050280, 958139571, 3318307427, 1322822218, 3812723403, 1537002063, 2003034995, 1747873779, 3602036899, 1955562222, 1575990012, 2024104815, 1125592928, 2227730452, 2716904306, 2361852424, 442776044, 2428436474, 593698344, 2756734187, 3733110249, 3204031479, 2999351573, 3329325298, 3815920427, 3391569614, 3928383900, 3515267271, 566280711, 3940187606, 3454069534, 4118630271, 4000239992, 116418474, 1914138554, 174292421, 2731055270, 289380356, 3203993006, 460393269, 320620315, 685471733, 587496836, 852142971, 1086792851, 1017036298, 365543100, 1126000580, 2618297676, 1288033470, 3409855158, 1501505948, 4234509866, 1607167915, 987167468, 1816402316, 1246189591]
              , a = new Array(160);
            function c() {
                this.init(),
                this._w = a,
                n.call(this, 128, 112)
            }
            function u(e, t, r) {
                return r ^ e & (t ^ r)
            }
            function f(e, t, r) {
                return e & t | r & (e | t)
            }
            function h(e, t) {
                return (e >>> 28 | t << 4) ^ (t >>> 2 | e << 30) ^ (t >>> 7 | e << 25)
            }
            function l(e, t) {
                return (e >>> 14 | t << 18) ^ (e >>> 18 | t << 14) ^ (t >>> 9 | e << 23)
            }
            function d(e, t) {
                return (e >>> 1 | t << 31) ^ (e >>> 8 | t << 24) ^ e >>> 7
            }
            function p(e, t) {
                return (e >>> 1 | t << 31) ^ (e >>> 8 | t << 24) ^ (e >>> 7 | t << 25)
            }
            function b(e, t) {
                return (e >>> 19 | t << 13) ^ (t >>> 29 | e << 3) ^ e >>> 6
            }
            function g(e, t) {
                return (e >>> 19 | t << 13) ^ (t >>> 29 | e << 3) ^ (e >>> 6 | t << 26)
            }
            function m(e, t) {
                return e >>> 0 < t >>> 0 ? 1 : 0
            }
            i(c, n),
            c.prototype.init = function() {
                return this._ah = 1779033703,
                this._bh = 3144134277,
                this._ch = 1013904242,
                this._dh = 2773480762,
                this._eh = 1359893119,
                this._fh = 2600822924,
                this._gh = 528734635,
                this._hh = 1541459225,
                this._al = 4089235720,
                this._bl = 2227873595,
                this._cl = 4271175723,
                this._dl = 1595750129,
                this._el = 2917565137,
                this._fl = 725511199,
                this._gl = 4215389547,
                this._hl = 327033209,
                this
            }
            ,
            c.prototype._update = function(e) {
                for (var t = this._w, r = 0 | this._ah, i = 0 | this._bh, n = 0 | this._ch, s = 0 | this._dh, a = 0 | this._eh, c = 0 | this._fh, y = 0 | this._gh, v = 0 | this._hh, w = 0 | this._al, E = 0 | this._bl, _ = 0 | this._cl, S = 0 | this._dl, k = 0 | this._el, A = 0 | this._fl, C = 0 | this._gl, I = 0 | this._hl, T = 0; T < 32; T += 2)
                    t[T] = e.readInt32BE(4 * T),
                    t[T + 1] = e.readInt32BE(4 * T + 4);
                for (; T < 160; T += 2) {
                    var B = t[T - 30]
                      , M = t[T - 30 + 1]
                      , R = d(B, M)
                      , x = p(M, B)
                      , N = b(B = t[T - 4], M = t[T - 4 + 1])
                      , P = g(M, B)
                      , D = t[T - 14]
                      , L = t[T - 14 + 1]
                      , O = t[T - 32]
                      , j = t[T - 32 + 1]
                      , U = x + L | 0
                      , K = R + D + m(U, x) | 0;
                    K = (K = K + N + m(U = U + P | 0, P) | 0) + O + m(U = U + j | 0, j) | 0,
                    t[T] = K,
                    t[T + 1] = U
                }
                for (var q = 0; q < 160; q += 2) {
                    K = t[q],
                    U = t[q + 1];
                    var V = f(r, i, n)
                      , F = f(w, E, _)
                      , z = h(r, w)
                      , H = h(w, r)
                      , G = l(a, k)
                      , $ = l(k, a)
                      , Y = o[q]
                      , W = o[q + 1]
                      , Q = u(a, c, y)
                      , X = u(k, A, C)
                      , Z = I + $ | 0
                      , J = v + G + m(Z, I) | 0;
                    J = (J = (J = J + Q + m(Z = Z + X | 0, X) | 0) + Y + m(Z = Z + W | 0, W) | 0) + K + m(Z = Z + U | 0, U) | 0;
                    var ee = H + F | 0
                      , te = z + V + m(ee, H) | 0;
                    v = y,
                    I = C,
                    y = c,
                    C = A,
                    c = a,
                    A = k,
                    a = s + J + m(k = S + Z | 0, S) | 0,
                    s = n,
                    S = _,
                    n = i,
                    _ = E,
                    i = r,
                    E = w,
                    r = J + te + m(w = Z + ee | 0, Z) | 0
                }
                this._al = this._al + w | 0,
                this._bl = this._bl + E | 0,
                this._cl = this._cl + _ | 0,
                this._dl = this._dl + S | 0,
                this._el = this._el + k | 0,
                this._fl = this._fl + A | 0,
                this._gl = this._gl + C | 0,
                this._hl = this._hl + I | 0,
                this._ah = this._ah + r + m(this._al, w) | 0,
                this._bh = this._bh + i + m(this._bl, E) | 0,
                this._ch = this._ch + n + m(this._cl, _) | 0,
                this._dh = this._dh + s + m(this._dl, S) | 0,
                this._eh = this._eh + a + m(this._el, k) | 0,
                this._fh = this._fh + c + m(this._fl, A) | 0,
                this._gh = this._gh + y + m(this._gl, C) | 0,
                this._hh = this._hh + v + m(this._hl, I) | 0
            }
            ,
            c.prototype._hash = function() {
                var e = s.allocUnsafe(64);
                function t(t, r, i) {
                    e.writeInt32BE(t, i),
                    e.writeInt32BE(r, i + 4)
                }
                return t(this._ah, this._al, 0),
                t(this._bh, this._bl, 8),
                t(this._ch, this._cl, 16),
                t(this._dh, this._dl, 24),
                t(this._eh, this._el, 32),
                t(this._fh, this._fl, 40),
                t(this._gh, this._gl, 48),
                t(this._hh, this._hl, 56),
                e
            }
            ,
            t.exports = c
        }
        , {
            "./hash": 144,
            inherits: 100,
            "safe-buffer": 143
        }],
        152: [function(e, t, r) {
            t.exports = n;
            var i = e("events").EventEmitter;
            function n() {
                i.call(this)
            }
            e("inherits")(n, i),
            n.Readable = e("readable-stream/readable.js"),
            n.Writable = e("readable-stream/writable.js"),
            n.Duplex = e("readable-stream/duplex.js"),
            n.Transform = e("readable-stream/transform.js"),
            n.PassThrough = e("readable-stream/passthrough.js"),
            n.Stream = n,
            n.prototype.pipe = function(e, t) {
                var r = this;
                function n(t) {
                    e.writable && !1 === e.write(t) && r.pause && r.pause()
                }
                function s() {
                    r.readable && r.resume && r.resume()
                }
                r.on("data", n),
                e.on("drain", s),
                e._isStdio || t && !1 === t.end || (r.on("end", a),
                r.on("close", c));
                var o = !1;
                function a() {
                    o || (o = !0,
                    e.end())
                }
                function c() {
                    o || (o = !0,
                    "function" == typeof e.destroy && e.destroy())
                }
                function u(e) {
                    if (f(),
                    0 === i.listenerCount(this, "error"))
                        throw e
                }
                function f() {
                    r.removeListener("data", n),
                    e.removeListener("drain", s),
                    r.removeListener("end", a),
                    r.removeListener("close", c),
                    r.removeListener("error", u),
                    e.removeListener("error", u),
                    r.removeListener("end", f),
                    r.removeListener("close", f),
                    e.removeListener("close", f)
                }
                return r.on("error", u),
                e.on("error", u),
                r.on("end", f),
                r.on("close", f),
                e.on("close", f),
                e.emit("pipe", r),
                e
            }
        }
        , {
            events: 83,
            inherits: 100,
            "readable-stream/duplex.js": 127,
            "readable-stream/passthrough.js": 138,
            "readable-stream/readable.js": 139,
            "readable-stream/transform.js": 140,
            "readable-stream/writable.js": 141
        }],
        153: [function(e, t, r) {
            arguments[4][137][0].apply(r, arguments)
        }
        , {
            dup: 137,
            "safe-buffer": 143
        }],
        154: [function(e, t, r) {
            (function(t, i) {
                var n = e("process/browser.js").nextTick
                  , s = Function.prototype.apply
                  , o = Array.prototype.slice
                  , a = {}
                  , c = 0;
                function u(e, t) {
                    this._id = e,
                    this._clearFn = t
                }
                r.setTimeout = function() {
                    return new u(s.call(setTimeout, window, arguments),clearTimeout)
                }
                ,
                r.setInterval = function() {
                    return new u(s.call(setInterval, window, arguments),clearInterval)
                }
                ,
                r.clearTimeout = r.clearInterval = function(e) {
                    e.close()
                }
                ,
                u.prototype.unref = u.prototype.ref = function() {}
                ,
                u.prototype.close = function() {
                    this._clearFn.call(window, this._id)
                }
                ,
                r.enroll = function(e, t) {
                    clearTimeout(e._idleTimeoutId),
                    e._idleTimeout = t
                }
                ,
                r.unenroll = function(e) {
                    clearTimeout(e._idleTimeoutId),
                    e._idleTimeout = -1
                }
                ,
                r._unrefActive = r.active = function(e) {
                    clearTimeout(e._idleTimeoutId);
                    var t = e._idleTimeout;
                    t >= 0 && (e._idleTimeoutId = setTimeout((function() {
                        e._onTimeout && e._onTimeout()
                    }
                    ), t))
                }
                ,
                r.setImmediate = "function" == typeof t ? t : function(e) {
                    var t = c++
                      , i = !(arguments.length < 2) && o.call(arguments, 1);
                    return a[t] = !0,
                    n((function() {
                        a[t] && (i ? e.apply(null, i) : e.call(null),
                        r.clearImmediate(t))
                    }
                    )),
                    t
                }
                ,
                r.clearImmediate = "function" == typeof i ? i : function(e) {
                    delete a[e]
                }
            }
            ).call(this, e("timers").setImmediate, e("timers").clearImmediate)
        }
        , {
            "process/browser.js": 118,
            timers: 154
        }],
        155: [function(e, t, r) {
            (function(e) {
                function r(t) {
                    try {
                        if (!e.localStorage)
                            return !1
                    } catch (e) {
                        return !1
                    }
                    var r = e.localStorage[t];
                    return null != r && "true" === String(r).toLowerCase()
                }
                t.exports = function(e, t) {
                    if (r("noDeprecation"))
                        return e;
                    var i = !1;
                    return function() {
                        if (!i) {
                            if (r("throwDeprecation"))
                                throw new Error(t);
                            r("traceDeprecation") ? console.trace(t) : console.warn(t),
                            i = !0
                        }
                        return e.apply(this, arguments)
                    }
                }
            }
            ).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
        }
        , {}],
        156: [function(require, module, exports) {
            var indexOf = function(e, t) {
                if (e.indexOf)
                    return e.indexOf(t);
                for (var r = 0; r < e.length; r++)
                    if (e[r] === t)
                        return r;
                return -1
            }
              , Object_keys = function(e) {
                if (Object.keys)
                    return Object.keys(e);
                var t = [];
                for (var r in e)
                    t.push(r);
                return t
            }
              , forEach = function(e, t) {
                if (e.forEach)
                    return e.forEach(t);
                for (var r = 0; r < e.length; r++)
                    t(e[r], r, e)
            }
              , defineProp = function() {
                try {
                    return Object.defineProperty({}, "_", {}),
                    function(e, t, r) {
                        Object.defineProperty(e, t, {
                            writable: !0,
                            enumerable: !1,
                            configurable: !0,
                            value: r
                        })
                    }
                } catch (e) {
                    return function(e, t, r) {
                        e[t] = r
                    }
                }
            }()
              , globals = ["Array", "Boolean", "Date", "Error", "EvalError", "Function", "Infinity", "JSON", "Math", "NaN", "Number", "Object", "RangeError", "ReferenceError", "RegExp", "String", "SyntaxError", "TypeError", "URIError", "decodeURI", "decodeURIComponent", "encodeURI", "encodeURIComponent", "escape", "eval", "isFinite", "isNaN", "parseFloat", "parseInt", "undefined", "unescape"];
            function Context() {}
            Context.prototype = {};
            var Script = exports.Script = function(e) {
                if (!(this instanceof Script))
                    return new Script(e);
                this.code = e
            }
            ;
            Script.prototype.runInContext = function(e) {
                if (!(e instanceof Context))
                    throw new TypeError("needs a 'context' argument.");
                var t = document.createElement("iframe");
                t.style || (t.style = {}),
                t.style.display = "none",
                document.body.appendChild(t);
                var r = t.contentWindow
                  , i = r.eval
                  , n = r.execScript;
                !i && n && (n.call(r, "null"),
                i = r.eval),
                forEach(Object_keys(e), (function(t) {
                    r[t] = e[t]
                }
                )),
                forEach(globals, (function(t) {
                    e[t] && (r[t] = e[t])
                }
                ));
                var s = Object_keys(r)
                  , o = i.call(r, this.code);
                return forEach(Object_keys(r), (function(t) {
                    (t in e || -1 === indexOf(s, t)) && (e[t] = r[t])
                }
                )),
                forEach(globals, (function(t) {
                    t in e || defineProp(e, t, r[t])
                }
                )),
                document.body.removeChild(t),
                o
            }
            ,
            Script.prototype.runInThisContext = function() {
                return eval(this.code)
            }
            ,
            Script.prototype.runInNewContext = function(e) {
                var t = Script.createContext(e)
                  , r = this.runInContext(t);
                return e && forEach(Object_keys(t), (function(r) {
                    e[r] = t[r]
                }
                )),
                r
            }
            ,
            forEach(Object_keys(Script.prototype), (function(e) {
                exports[e] = Script[e] = function(t) {
                    var r = Script(t);
                    return r[e].apply(r, [].slice.call(arguments, 1))
                }
            }
            )),
            exports.isContext = function(e) {
                return e instanceof Context
            }
            ,
            exports.createScript = function(e) {
                return exports.Script(e)
            }
            ,
            exports.createContext = Script.createContext = function(e) {
                var t = new Context;
                return "object" == typeof e && forEach(Object_keys(e), (function(r) {
                    t[r] = e[r]
                }
                )),
                t
            }
        }
        , {}],
        157: [function(e, t, r) {
            "use strict";
            t.exports = function(e) {
                if (e.length >= 255)
                    throw new TypeError("Alphabet too long");
                for (var t = new Uint8Array(256), r = 0; r < t.length; r++)
                    t[r] = 255;
                for (var i = 0; i < e.length; i++) {
                    var n = e.charAt(i)
                      , s = n.charCodeAt(0);
                    if (255 !== t[s])
                        throw new TypeError(n + " is ambiguous");
                    t[s] = i
                }
                var o = e.length
                  , a = e.charAt(0)
                  , c = Math.log(o) / Math.log(256)
                  , u = Math.log(256) / Math.log(o);
                function f(e) {
                    if ("string" != typeof e)
                        throw new TypeError("Expected String");
                    if (0 === e.length)
                        return new Uint8Array;
                    var r = 0;
                    if (" " !== e[r]) {
                        for (var i = 0, n = 0; e[r] === a; )
                            i++,
                            r++;
                        for (var s = (e.length - r) * c + 1 >>> 0, u = new Uint8Array(s); e[r]; ) {
                            var f = t[e.charCodeAt(r)];
                            if (255 === f)
                                return;
                            for (var h = 0, l = s - 1; (0 !== f || h < n) && -1 !== l; l--,
                            h++)
                                f += o * u[l] >>> 0,
                                u[l] = f % 256 >>> 0,
                                f = f / 256 >>> 0;
                            if (0 !== f)
                                throw new Error("Non-zero carry");
                            n = h,
                            r++
                        }
                        if (" " !== e[r]) {
                            for (var d = s - n; d !== s && 0 === u[d]; )
                                d++;
                            for (var p = new Uint8Array(i + (s - d)), b = i; d !== s; )
                                p[b++] = u[d++];
                            return p
                        }
                    }
                }
                return {
                    encode: function(t) {
                        if (t instanceof Uint8Array || (ArrayBuffer.isView(t) ? t = new Uint8Array(t.buffer,t.byteOffset,t.byteLength) : Array.isArray(t) && (t = Uint8Array.from(t))),
                        !(t instanceof Uint8Array))
                            throw new TypeError("Expected Uint8Array");
                        if (0 === t.length)
                            return "";
                        for (var r = 0, i = 0, n = 0, s = t.length; n !== s && 0 === t[n]; )
                            n++,
                            r++;
                        for (var c = (s - n) * u + 1 >>> 0, f = new Uint8Array(c); n !== s; ) {
                            for (var h = t[n], l = 0, d = c - 1; (0 !== h || l < i) && -1 !== d; d--,
                            l++)
                                h += 256 * f[d] >>> 0,
                                f[d] = h % o >>> 0,
                                h = h / o >>> 0;
                            if (0 !== h)
                                throw new Error("Non-zero carry");
                            i = l,
                            n++
                        }
                        for (var p = c - i; p !== c && 0 === f[p]; )
                            p++;
                        for (var b = a.repeat(r); p < c; ++p)
                            b += e.charAt(f[p]);
                        return b
                    },
                    decodeUnsafe: f,
                    decode: function(e) {
                        var t = f(e);
                        if (t)
                            return t;
                        throw new Error("Non-base" + o + " character")
                    }
                }
            }
        }
        , {}],
        158: [function(e, t, r) {
            "use strict";
            const {AbortController: i, AbortSignal: n} = "undefined" != typeof self ? self : "undefined" != typeof window ? window : void 0;
            t.exports = i,
            t.exports.AbortSignal = n,
            t.exports.default = i
        }
        , {}],
        159: [function(e, t, r) {
            t.exports = class extends Error {
                constructor(e, t) {
                    super(e || "The operation was aborted"),
                    this.type = "aborted",
                    this.code = t || "ABORT_ERR"
                }
            }
        }
        , {}],
        160: [function(e, t, r) {
            const i = e("get-iterator")
              , n = e("./AbortError")
              , s = (e,t,r)=>o(e, Array.isArray(t) ? t : [{
                signal: t,
                options: r
            }])
              , o = (e,t)=>{
                return e = i(e),
                t = t.map(({signal: e, options: t})=>({
                    signal: e,
                    options: t || {}
                })),
                async function*() {
                    let r;
                    const i = ()=>{
                        r && r()
                    }
                    ;
                    for (const {signal: e} of t)
                        e.addEventListener("abort", i);
                    for (; ; ) {
                        let s;
                        try {
                            for (const {signal: e, options: r} of t)
                                if (e.aborted) {
                                    const {abortMessage: e, abortCode: t} = r;
                                    throw new n(e,t)
                                }
                            const i = new Promise((e,i)=>{
                                r = ()=>{
                                    const {options: e} = t.find(({signal: e})=>e.aborted)
                                      , {abortMessage: r, abortCode: s} = e;
                                    i(new n(r,s))
                                }
                            }
                            );
                            s = await Promise.race([i, e.next()]),
                            r = null
                        } catch (r) {
                            for (const {signal: e} of t)
                                e.removeEventListener("abort", i);
                            const n = t.find(({signal: e})=>e.aborted)
                              , s = "aborted" === r.type && n;
                            if (s && n.options.onAbort && await n.options.onAbort(e),
                            "function" == typeof e.return && await e.return(),
                            s && n.options.returnOnAbort)
                                return;
                            throw r
                        }
                        if (s.done)
                            break;
                        yield s.value
                    }
                    for (const {signal: e} of t)
                        e.removeEventListener("abort", i)
                }()
            }
              , a = (e,t,r)=>c(e, Array.isArray(t) ? t : [{
                signal: t,
                options: r
            }])
              , c = (e,t)=>r=>e(o(r, t))
              , u = (e,t)=>({
                sink: c(e.sink, t),
                source: o(e.source, t)
            });
            t.exports = s,
            t.exports.AbortError = n,
            t.exports.source = s,
            t.exports.sink = a,
            t.exports.transform = a,
            t.exports.duplex = (e,t,r)=>u(e, Array.isArray(t) ? t : [{
                signal: t,
                options: r
            }])
        }
        , {
            "./AbortError": 159,
            "get-iterator": 196
        }],
        161: [function(e, t, r) {
            "use strict";
            const i = e("indent-string")
              , n = e("clean-stack")
              , s = e=>e.replace(/\s+at .*aggregate-error\/index.js:\d+:\d+\)?/g, "");
            class o extends Error {
                constructor(e) {
                    if (!Array.isArray(e))
                        throw new TypeError(`Expected input to be an Array, got ${typeof e}`);
                    let t = (e = [...e].map(e=>e instanceof Error ? e : null !== e && "object" == typeof e ? Object.assign(new Error(e.message), e) : new Error(e))).map(e=>"string" == typeof e.stack ? s(n(e.stack)) : String(e)).join("\n");
                    super(t = "\n" + i(t, 4)),
                    this.name = "AggregateError",
                    Object.defineProperty(this, "_errors", {
                        value: e
                    })
                }
                *[Symbol.iterator]() {
                    for (const e of this._errors)
                        yield e
                }
            }
            t.exports = o
        }
        , {
            "clean-stack": 171,
            "indent-string": 215
        }],
        162: [function(e, t, r) {
            "use strict";
            t.exports = AbortController
        }
        , {}],
        163: [function(e, t, r) {
            const i = e("./abort-controller");
            function n(e) {
                const t = new i;
                function r() {
                    t.abort();
                    for (const t of e)
                        t && t.removeEventListener && t.removeEventListener("abort", r)
                }
                for (const t of e)
                    if (t && t.addEventListener) {
                        if (t.aborted) {
                            r();
                            break
                        }
                        t.addEventListener("abort", r)
                    }
                return t.signal
            }
            t.exports = n,
            t.exports.anySignal = n
        }
        , {
            "./abort-controller": 162
        }],
        164: [function(e, t, r) {
            !function(e) {
                "use strict";
                var r, i = /^-?(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?$/i, n = Math.ceil, s = Math.floor, o = "[BigNumber Error] ", a = o + "Number primitive has more than 15 significant digits: ", c = 1e14, u = 14, f = 9007199254740991, h = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13], l = 1e7, d = 1e9;
                function p(e) {
                    var t = 0 | e;
                    return e > 0 || e === t ? t : t - 1
                }
                function b(e) {
                    for (var t, r, i = 1, n = e.length, s = e[0] + ""; i < n; ) {
                        for (t = e[i++] + "",
                        r = u - t.length; r--; t = "0" + t)
                            ;
                        s += t
                    }
                    for (n = s.length; 48 === s.charCodeAt(--n); )
                        ;
                    return s.slice(0, n + 1 || 1)
                }
                function g(e, t) {
                    var r, i, n = e.c, s = t.c, o = e.s, a = t.s, c = e.e, u = t.e;
                    if (!o || !a)
                        return null;
                    if (r = n && !n[0],
                    i = s && !s[0],
                    r || i)
                        return r ? i ? 0 : -a : o;
                    if (o != a)
                        return o;
                    if (r = o < 0,
                    i = c == u,
                    !n || !s)
                        return i ? 0 : !n ^ r ? 1 : -1;
                    if (!i)
                        return c > u ^ r ? 1 : -1;
                    for (a = (c = n.length) < (u = s.length) ? c : u,
                    o = 0; o < a; o++)
                        if (n[o] != s[o])
                            return n[o] > s[o] ^ r ? 1 : -1;
                    return c == u ? 0 : c > u ^ r ? 1 : -1
                }
                function m(e, t, r, i) {
                    if (e < t || e > r || e !== s(e))
                        throw Error(o + (i || "Argument") + ("number" == typeof e ? e < t || e > r ? " out of range: " : " not an integer: " : " not a primitive number: ") + String(e))
                }
                function y(e) {
                    var t = e.c.length - 1;
                    return p(e.e / u) == t && e.c[t] % 2 != 0
                }
                function v(e, t) {
                    return (e.length > 1 ? e.charAt(0) + "." + e.slice(1) : e) + (t < 0 ? "e" : "e+") + t
                }
                function w(e, t, r) {
                    var i, n;
                    if (t < 0) {
                        for (n = r + "."; ++t; n += r)
                            ;
                        e = n + e
                    } else if (++t > (i = e.length)) {
                        for (n = r,
                        t -= i; --t; n += r)
                            ;
                        e += n
                    } else
                        t < i && (e = e.slice(0, t) + "." + e.slice(t));
                    return e
                }
                (r = function e(t) {
                    var r, E, _, S, k, A, C, I, T, B = V.prototype = {
                        constructor: V,
                        toString: null,
                        valueOf: null
                    }, M = new V(1), R = 20, x = 4, N = -7, P = 21, D = -1e7, L = 1e7, O = !1, j = 1, U = 0, K = {
                        prefix: "",
                        groupSize: 3,
                        secondaryGroupSize: 0,
                        groupSeparator: ",",
                        decimalSeparator: ".",
                        fractionGroupSize: 0,
                        fractionGroupSeparator: " ",
                        suffix: ""
                    }, q = "0123456789abcdefghijklmnopqrstuvwxyz";
                    function V(e, t) {
                        var r, n, o, c, h, l, d, p, b = this;
                        if (!(b instanceof V))
                            return new V(e,t);
                        if (null == t) {
                            if (e && !0 === e._isBigNumber)
                                return b.s = e.s,
                                void (!e.c || e.e > L ? b.c = b.e = null : e.e < D ? b.c = [b.e = 0] : (b.e = e.e,
                                b.c = e.c.slice()));
                            if ((l = "number" == typeof e) && 0 * e == 0) {
                                if (b.s = 1 / e < 0 ? (e = -e,
                                -1) : 1,
                                e === ~~e) {
                                    for (c = 0,
                                    h = e; h >= 10; h /= 10,
                                    c++)
                                        ;
                                    return void (c > L ? b.c = b.e = null : (b.e = c,
                                    b.c = [e]))
                                }
                                p = String(e)
                            } else {
                                if (!i.test(p = String(e)))
                                    return _(b, p, l);
                                b.s = 45 == p.charCodeAt(0) ? (p = p.slice(1),
                                -1) : 1
                            }
                            (c = p.indexOf(".")) > -1 && (p = p.replace(".", "")),
                            (h = p.search(/e/i)) > 0 ? (c < 0 && (c = h),
                            c += +p.slice(h + 1),
                            p = p.substring(0, h)) : c < 0 && (c = p.length)
                        } else {
                            if (m(t, 2, q.length, "Base"),
                            10 == t)
                                return G(b = new V(e), R + b.e + 1, x);
                            if (p = String(e),
                            l = "number" == typeof e) {
                                if (0 * e != 0)
                                    return _(b, p, l, t);
                                if (b.s = 1 / e < 0 ? (p = p.slice(1),
                                -1) : 1,
                                V.DEBUG && p.replace(/^0\.0*|\./, "").length > 15)
                                    throw Error(a + e)
                            } else
                                b.s = 45 === p.charCodeAt(0) ? (p = p.slice(1),
                                -1) : 1;
                            for (r = q.slice(0, t),
                            c = h = 0,
                            d = p.length; h < d; h++)
                                if (r.indexOf(n = p.charAt(h)) < 0) {
                                    if ("." == n) {
                                        if (h > c) {
                                            c = d;
                                            continue
                                        }
                                    } else if (!o && (p == p.toUpperCase() && (p = p.toLowerCase()) || p == p.toLowerCase() && (p = p.toUpperCase()))) {
                                        o = !0,
                                        h = -1,
                                        c = 0;
                                        continue
                                    }
                                    return _(b, String(e), l, t)
                                }
                            l = !1,
                            (c = (p = E(p, t, 10, b.s)).indexOf(".")) > -1 ? p = p.replace(".", "") : c = p.length
                        }
                        for (h = 0; 48 === p.charCodeAt(h); h++)
                            ;
                        for (d = p.length; 48 === p.charCodeAt(--d); )
                            ;
                        if (p = p.slice(h, ++d)) {
                            if (d -= h,
                            l && V.DEBUG && d > 15 && (e > f || e !== s(e)))
                                throw Error(a + b.s * e);
                            if ((c = c - h - 1) > L)
                                b.c = b.e = null;
                            else if (c < D)
                                b.c = [b.e = 0];
                            else {
                                if (b.e = c,
                                b.c = [],
                                h = (c + 1) % u,
                                c < 0 && (h += u),
                                h < d) {
                                    for (h && b.c.push(+p.slice(0, h)),
                                    d -= u; h < d; )
                                        b.c.push(+p.slice(h, h += u));
                                    h = u - (p = p.slice(h)).length
                                } else
                                    h -= d;
                                for (; h--; p += "0")
                                    ;
                                b.c.push(+p)
                            }
                        } else
                            b.c = [b.e = 0]
                    }
                    function F(e, t, r, i) {
                        var n, s, o, a, c;
                        if (null == r ? r = x : m(r, 0, 8),
                        !e.c)
                            return e.toString();
                        if (n = e.c[0],
                        o = e.e,
                        null == t)
                            c = b(e.c),
                            c = 1 == i || 2 == i && (o <= N || o >= P) ? v(c, o) : w(c, o, "0");
                        else if (s = (e = G(new V(e), t, r)).e,
                        a = (c = b(e.c)).length,
                        1 == i || 2 == i && (t <= s || s <= N)) {
                            for (; a < t; c += "0",
                            a++)
                                ;
                            c = v(c, s)
                        } else if (t -= o,
                        c = w(c, s, "0"),
                        s + 1 > a) {
                            if (--t > 0)
                                for (c += "."; t--; c += "0")
                                    ;
                        } else if ((t += s - a) > 0)
                            for (s + 1 == a && (c += "."); t--; c += "0")
                                ;
                        return e.s < 0 && n ? "-" + c : c
                    }
                    function z(e, t) {
                        for (var r, i = 1, n = new V(e[0]); i < e.length; i++) {
                            if (!(r = new V(e[i])).s) {
                                n = r;
                                break
                            }
                            t.call(n, r) && (n = r)
                        }
                        return n
                    }
                    function H(e, t, r) {
                        for (var i = 1, n = t.length; !t[--n]; t.pop())
                            ;
                        for (n = t[0]; n >= 10; n /= 10,
                        i++)
                            ;
                        return (r = i + r * u - 1) > L ? e.c = e.e = null : r < D ? e.c = [e.e = 0] : (e.e = r,
                        e.c = t),
                        e
                    }
                    function G(e, t, r, i) {
                        var o, a, f, l, d, p, b, g = e.c, m = h;
                        if (g) {
                            e: {
                                for (o = 1,
                                l = g[0]; l >= 10; l /= 10,
                                o++)
                                    ;
                                if ((a = t - o) < 0)
                                    a += u,
                                    f = t,
                                    b = (d = g[p = 0]) / m[o - f - 1] % 10 | 0;
                                else if ((p = n((a + 1) / u)) >= g.length) {
                                    if (!i)
                                        break e;
                                    for (; g.length <= p; g.push(0))
                                        ;
                                    d = b = 0,
                                    o = 1,
                                    f = (a %= u) - u + 1
                                } else {
                                    for (d = l = g[p],
                                    o = 1; l >= 10; l /= 10,
                                    o++)
                                        ;
                                    b = (f = (a %= u) - u + o) < 0 ? 0 : d / m[o - f - 1] % 10 | 0
                                }
                                if (i = i || t < 0 || null != g[p + 1] || (f < 0 ? d : d % m[o - f - 1]),
                                i = r < 4 ? (b || i) && (0 == r || r == (e.s < 0 ? 3 : 2)) : b > 5 || 5 == b && (4 == r || i || 6 == r && (a > 0 ? f > 0 ? d / m[o - f] : 0 : g[p - 1]) % 10 & 1 || r == (e.s < 0 ? 8 : 7)),
                                t < 1 || !g[0])
                                    return g.length = 0,
                                    i ? (t -= e.e + 1,
                                    g[0] = m[(u - t % u) % u],
                                    e.e = -t || 0) : g[0] = e.e = 0,
                                    e;
                                if (0 == a ? (g.length = p,
                                l = 1,
                                p--) : (g.length = p + 1,
                                l = m[u - a],
                                g[p] = f > 0 ? s(d / m[o - f] % m[f]) * l : 0),
                                i)
                                    for (; ; ) {
                                        if (0 == p) {
                                            for (a = 1,
                                            f = g[0]; f >= 10; f /= 10,
                                            a++)
                                                ;
                                            for (f = g[0] += l,
                                            l = 1; f >= 10; f /= 10,
                                            l++)
                                                ;
                                            a != l && (e.e++,
                                            g[0] == c && (g[0] = 1));
                                            break
                                        }
                                        if (g[p] += l,
                                        g[p] != c)
                                            break;
                                        g[p--] = 0,
                                        l = 1
                                    }
                                for (a = g.length; 0 === g[--a]; g.pop())
                                    ;
                            }
                            e.e > L ? e.c = e.e = null : e.e < D && (e.c = [e.e = 0])
                        }
                        return e
                    }
                    function $(e) {
                        var t, r = e.e;
                        return null === r ? e.toString() : (t = b(e.c),
                        t = r <= N || r >= P ? v(t, r) : w(t, r, "0"),
                        e.s < 0 ? "-" + t : t)
                    }
                    return V.clone = e,
                    V.ROUND_UP = 0,
                    V.ROUND_DOWN = 1,
                    V.ROUND_CEIL = 2,
                    V.ROUND_FLOOR = 3,
                    V.ROUND_HALF_UP = 4,
                    V.ROUND_HALF_DOWN = 5,
                    V.ROUND_HALF_EVEN = 6,
                    V.ROUND_HALF_CEIL = 7,
                    V.ROUND_HALF_FLOOR = 8,
                    V.EUCLID = 9,
                    V.config = V.set = function(e) {
                        var t, r;
                        if (null != e) {
                            if ("object" != typeof e)
                                throw Error(o + "Object expected: " + e);
                            if (e.hasOwnProperty(t = "DECIMAL_PLACES") && (m(r = e[t], 0, d, t),
                            R = r),
                            e.hasOwnProperty(t = "ROUNDING_MODE") && (m(r = e[t], 0, 8, t),
                            x = r),
                            e.hasOwnProperty(t = "EXPONENTIAL_AT") && ((r = e[t]) && r.pop ? (m(r[0], -d, 0, t),
                            m(r[1], 0, d, t),
                            N = r[0],
                            P = r[1]) : (m(r, -d, d, t),
                            N = -(P = r < 0 ? -r : r))),
                            e.hasOwnProperty(t = "RANGE"))
                                if ((r = e[t]) && r.pop)
                                    m(r[0], -d, -1, t),
                                    m(r[1], 1, d, t),
                                    D = r[0],
                                    L = r[1];
                                else {
                                    if (m(r, -d, d, t),
                                    !r)
                                        throw Error(o + t + " cannot be zero: " + r);
                                    D = -(L = r < 0 ? -r : r)
                                }
                            if (e.hasOwnProperty(t = "CRYPTO")) {
                                if ((r = e[t]) !== !!r)
                                    throw Error(o + t + " not true or false: " + r);
                                if (r) {
                                    if ("undefined" == typeof crypto || !crypto || !crypto.getRandomValues && !crypto.randomBytes)
                                        throw O = !r,
                                        Error(o + "crypto unavailable");
                                    O = r
                                } else
                                    O = r
                            }
                            if (e.hasOwnProperty(t = "MODULO_MODE") && (m(r = e[t], 0, 9, t),
                            j = r),
                            e.hasOwnProperty(t = "POW_PRECISION") && (m(r = e[t], 0, d, t),
                            U = r),
                            e.hasOwnProperty(t = "FORMAT")) {
                                if ("object" != typeof (r = e[t]))
                                    throw Error(o + t + " not an object: " + r);
                                K = r
                            }
                            if (e.hasOwnProperty(t = "ALPHABET")) {
                                if ("string" != typeof (r = e[t]) || /^.?$|[+\-.\s]|(.).*\1/.test(r))
                                    throw Error(o + t + " invalid: " + r);
                                q = r
                            }
                        }
                        return {
                            DECIMAL_PLACES: R,
                            ROUNDING_MODE: x,
                            EXPONENTIAL_AT: [N, P],
                            RANGE: [D, L],
                            CRYPTO: O,
                            MODULO_MODE: j,
                            POW_PRECISION: U,
                            FORMAT: K,
                            ALPHABET: q
                        }
                    }
                    ,
                    V.isBigNumber = function(e) {
                        if (!e || !0 !== e._isBigNumber)
                            return !1;
                        if (!V.DEBUG)
                            return !0;
                        var t, r, i = e.c, n = e.e, a = e.s;
                        e: if ("[object Array]" == {}.toString.call(i)) {
                            if ((1 === a || -1 === a) && n >= -d && n <= d && n === s(n)) {
                                if (0 === i[0]) {
                                    if (0 === n && 1 === i.length)
                                        return !0;
                                    break e
                                }
                                if ((t = (n + 1) % u) < 1 && (t += u),
                                String(i[0]).length == t) {
                                    for (t = 0; t < i.length; t++)
                                        if ((r = i[t]) < 0 || r >= c || r !== s(r))
                                            break e;
                                    if (0 !== r)
                                        return !0
                                }
                            }
                        } else if (null === i && null === n && (null === a || 1 === a || -1 === a))
                            return !0;
                        throw Error(o + "Invalid BigNumber: " + e)
                    }
                    ,
                    V.maximum = V.max = function() {
                        return z(arguments, B.lt)
                    }
                    ,
                    V.minimum = V.min = function() {
                        return z(arguments, B.gt)
                    }
                    ,
                    V.random = (S = 9007199254740992 * Math.random() & 2097151 ? function() {
                        return s(9007199254740992 * Math.random())
                    }
                    : function() {
                        return 8388608 * (1073741824 * Math.random() | 0) + (8388608 * Math.random() | 0)
                    }
                    ,
                    function(e) {
                        var t, r, i, a, c, f = 0, l = [], p = new V(M);
                        if (null == e ? e = R : m(e, 0, d),
                        a = n(e / u),
                        O)
                            if (crypto.getRandomValues) {
                                for (t = crypto.getRandomValues(new Uint32Array(a *= 2)); f < a; )
                                    (c = 131072 * t[f] + (t[f + 1] >>> 11)) >= 9e15 ? (r = crypto.getRandomValues(new Uint32Array(2)),
                                    t[f] = r[0],
                                    t[f + 1] = r[1]) : (l.push(c % 1e14),
                                    f += 2);
                                f = a / 2
                            } else {
                                if (!crypto.randomBytes)
                                    throw O = !1,
                                    Error(o + "crypto unavailable");
                                for (t = crypto.randomBytes(a *= 7); f < a; )
                                    (c = 281474976710656 * (31 & t[f]) + 1099511627776 * t[f + 1] + 4294967296 * t[f + 2] + 16777216 * t[f + 3] + (t[f + 4] << 16) + (t[f + 5] << 8) + t[f + 6]) >= 9e15 ? crypto.randomBytes(7).copy(t, f) : (l.push(c % 1e14),
                                    f += 7);
                                f = a / 7
                            }
                        if (!O)
                            for (; f < a; )
                                (c = S()) < 9e15 && (l[f++] = c % 1e14);
                        for (a = l[--f],
                        e %= u,
                        a && e && (c = h[u - e],
                        l[f] = s(a / c) * c); 0 === l[f]; l.pop(),
                        f--)
                            ;
                        if (f < 0)
                            l = [i = 0];
                        else {
                            for (i = -1; 0 === l[0]; l.splice(0, 1),
                            i -= u)
                                ;
                            for (f = 1,
                            c = l[0]; c >= 10; c /= 10,
                            f++)
                                ;
                            f < u && (i -= u - f)
                        }
                        return p.e = i,
                        p.c = l,
                        p
                    }
                    ),
                    V.sum = function() {
                        for (var e = 1, t = arguments, r = new V(t[0]); e < t.length; )
                            r = r.plus(t[e++]);
                        return r
                    }
                    ,
                    E = function() {
                        function e(e, t, r, i) {
                            for (var n, s, o = [0], a = 0, c = e.length; a < c; ) {
                                for (s = o.length; s--; o[s] *= t)
                                    ;
                                for (o[0] += i.indexOf(e.charAt(a++)),
                                n = 0; n < o.length; n++)
                                    o[n] > r - 1 && (null == o[n + 1] && (o[n + 1] = 0),
                                    o[n + 1] += o[n] / r | 0,
                                    o[n] %= r)
                            }
                            return o.reverse()
                        }
                        return function(t, i, n, s, o) {
                            var a, c, u, f, h, l, d, p, g = t.indexOf("."), m = R, y = x;
                            for (g >= 0 && (f = U,
                            U = 0,
                            t = t.replace(".", ""),
                            l = (p = new V(i)).pow(t.length - g),
                            U = f,
                            p.c = e(w(b(l.c), l.e, "0"), 10, n, "0123456789"),
                            p.e = p.c.length),
                            u = f = (d = e(t, i, n, o ? (a = q,
                            "0123456789") : (a = "0123456789",
                            q))).length; 0 == d[--f]; d.pop())
                                ;
                            if (!d[0])
                                return a.charAt(0);
                            if (g < 0 ? --u : (l.c = d,
                            l.e = u,
                            l.s = s,
                            d = (l = r(l, p, m, y, n)).c,
                            h = l.r,
                            u = l.e),
                            g = d[c = u + m + 1],
                            f = n / 2,
                            h = h || c < 0 || null != d[c + 1],
                            h = y < 4 ? (null != g || h) && (0 == y || y == (l.s < 0 ? 3 : 2)) : g > f || g == f && (4 == y || h || 6 == y && 1 & d[c - 1] || y == (l.s < 0 ? 8 : 7)),
                            c < 1 || !d[0])
                                t = h ? w(a.charAt(1), -m, a.charAt(0)) : a.charAt(0);
                            else {
                                if (d.length = c,
                                h)
                                    for (--n; ++d[--c] > n; )
                                        d[c] = 0,
                                        c || (++u,
                                        d = [1].concat(d));
                                for (f = d.length; !d[--f]; )
                                    ;
                                for (g = 0,
                                t = ""; g <= f; t += a.charAt(d[g++]))
                                    ;
                                t = w(t, u, a.charAt(0))
                            }
                            return t
                        }
                    }(),
                    r = function() {
                        function e(e, t, r) {
                            var i, n, s, o, a = 0, c = e.length, u = t % l, f = t / l | 0;
                            for (e = e.slice(); c--; )
                                a = ((n = u * (s = e[c] % l) + (i = f * s + (o = e[c] / l | 0) * u) % l * l + a) / r | 0) + (i / l | 0) + f * o,
                                e[c] = n % r;
                            return a && (e = [a].concat(e)),
                            e
                        }
                        function t(e, t, r, i) {
                            var n, s;
                            if (r != i)
                                s = r > i ? 1 : -1;
                            else
                                for (n = s = 0; n < r; n++)
                                    if (e[n] != t[n]) {
                                        s = e[n] > t[n] ? 1 : -1;
                                        break
                                    }
                            return s
                        }
                        function r(e, t, r, i) {
                            for (var n = 0; r--; )
                                e[r] -= n,
                                n = e[r] < t[r] ? 1 : 0,
                                e[r] = n * i + e[r] - t[r];
                            for (; !e[0] && e.length > 1; e.splice(0, 1))
                                ;
                        }
                        return function(i, n, o, a, f) {
                            var h, l, d, b, g, m, y, v, w, E, _, S, k, A, C, I, T, B = i.s == n.s ? 1 : -1, M = i.c, R = n.c;
                            if (!(M && M[0] && R && R[0]))
                                return new V(i.s && n.s && (M ? !R || M[0] != R[0] : R) ? M && 0 == M[0] || !R ? 0 * B : B / 0 : NaN);
                            for (w = (v = new V(B)).c = [],
                            B = o + (l = i.e - n.e) + 1,
                            f || (f = c,
                            l = p(i.e / u) - p(n.e / u),
                            B = B / u | 0),
                            d = 0; R[d] == (M[d] || 0); d++)
                                ;
                            if (R[d] > (M[d] || 0) && l--,
                            B < 0)
                                w.push(1),
                                b = !0;
                            else {
                                for (A = M.length,
                                I = R.length,
                                d = 0,
                                B += 2,
                                (g = s(f / (R[0] + 1))) > 1 && (R = e(R, g, f),
                                M = e(M, g, f),
                                I = R.length,
                                A = M.length),
                                k = I,
                                _ = (E = M.slice(0, I)).length; _ < I; E[_++] = 0)
                                    ;
                                T = R.slice(),
                                T = [0].concat(T),
                                C = R[0],
                                R[1] >= f / 2 && C++;
                                do {
                                    if (g = 0,
                                    (h = t(R, E, I, _)) < 0) {
                                        if (S = E[0],
                                        I != _ && (S = S * f + (E[1] || 0)),
                                        (g = s(S / C)) > 1)
                                            for (g >= f && (g = f - 1),
                                            y = (m = e(R, g, f)).length,
                                            _ = E.length; 1 == t(m, E, y, _); )
                                                g--,
                                                r(m, I < y ? T : R, y, f),
                                                y = m.length,
                                                h = 1;
                                        else
                                            0 == g && (h = g = 1),
                                            y = (m = R.slice()).length;
                                        if (y < _ && (m = [0].concat(m)),
                                        r(E, m, _, f),
                                        _ = E.length,
                                        -1 == h)
                                            for (; t(R, E, I, _) < 1; )
                                                g++,
                                                r(E, I < _ ? T : R, _, f),
                                                _ = E.length
                                    } else
                                        0 === h && (g++,
                                        E = [0]);
                                    w[d++] = g,
                                    E[0] ? E[_++] = M[k] || 0 : (E = [M[k]],
                                    _ = 1)
                                } while ((k++ < A || null != E[0]) && B--);b = null != E[0],
                                w[0] || w.splice(0, 1)
                            }
                            if (f == c) {
                                for (d = 1,
                                B = w[0]; B >= 10; B /= 10,
                                d++)
                                    ;
                                G(v, o + (v.e = d + l * u - 1) + 1, a, b)
                            } else
                                v.e = l,
                                v.r = +b;
                            return v
                        }
                    }(),
                    k = /^(-?)0([xbo])(?=\w[\w.]*$)/i,
                    A = /^([^.]+)\.$/,
                    C = /^\.([^.]+)$/,
                    I = /^-?(Infinity|NaN)$/,
                    T = /^\s*\+(?=[\w.])|^\s+|\s+$/g,
                    _ = function(e, t, r, i) {
                        var n, s = r ? t : t.replace(T, "");
                        if (I.test(s))
                            e.s = isNaN(s) ? null : s < 0 ? -1 : 1;
                        else {
                            if (!r && (s = s.replace(k, (function(e, t, r) {
                                return n = "x" == (r = r.toLowerCase()) ? 16 : "b" == r ? 2 : 8,
                                i && i != n ? e : t
                            }
                            )),
                            i && (n = i,
                            s = s.replace(A, "$1").replace(C, "0.$1")),
                            t != s))
                                return new V(s,n);
                            if (V.DEBUG)
                                throw Error(o + "Not a" + (i ? " base " + i : "") + " number: " + t);
                            e.s = null
                        }
                        e.c = e.e = null
                    }
                    ,
                    B.absoluteValue = B.abs = function() {
                        var e = new V(this);
                        return e.s < 0 && (e.s = 1),
                        e
                    }
                    ,
                    B.comparedTo = function(e, t) {
                        return g(this, new V(e,t))
                    }
                    ,
                    B.decimalPlaces = B.dp = function(e, t) {
                        var r, i, n, s = this;
                        if (null != e)
                            return m(e, 0, d),
                            null == t ? t = x : m(t, 0, 8),
                            G(new V(s), e + s.e + 1, t);
                        if (!(r = s.c))
                            return null;
                        if (i = ((n = r.length - 1) - p(this.e / u)) * u,
                        n = r[n])
                            for (; n % 10 == 0; n /= 10,
                            i--)
                                ;
                        return i < 0 && (i = 0),
                        i
                    }
                    ,
                    B.dividedBy = B.div = function(e, t) {
                        return r(this, new V(e,t), R, x)
                    }
                    ,
                    B.dividedToIntegerBy = B.idiv = function(e, t) {
                        return r(this, new V(e,t), 0, 1)
                    }
                    ,
                    B.exponentiatedBy = B.pow = function(e, t) {
                        var r, i, a, c, f, h, l, d, p = this;
                        if ((e = new V(e)).c && !e.isInteger())
                            throw Error(o + "Exponent not an integer: " + $(e));
                        if (null != t && (t = new V(t)),
                        f = e.e > 14,
                        !p.c || !p.c[0] || 1 == p.c[0] && !p.e && 1 == p.c.length || !e.c || !e.c[0])
                            return d = new V(Math.pow(+$(p), f ? 2 - y(e) : +$(e))),
                            t ? d.mod(t) : d;
                        if (h = e.s < 0,
                        t) {
                            if (t.c ? !t.c[0] : !t.s)
                                return new V(NaN);
                            (i = !h && p.isInteger() && t.isInteger()) && (p = p.mod(t))
                        } else {
                            if (e.e > 9 && (p.e > 0 || p.e < -1 || (0 == p.e ? p.c[0] > 1 || f && p.c[1] >= 24e7 : p.c[0] < 8e13 || f && p.c[0] <= 9999975e7)))
                                return c = p.s < 0 && y(e) ? -0 : 0,
                                p.e > -1 && (c = 1 / c),
                                new V(h ? 1 / c : c);
                            U && (c = n(U / u + 2))
                        }
                        for (f ? (r = new V(.5),
                        h && (e.s = 1),
                        l = y(e)) : l = (a = Math.abs(+$(e))) % 2,
                        d = new V(M); ; ) {
                            if (l) {
                                if (!(d = d.times(p)).c)
                                    break;
                                c ? d.c.length > c && (d.c.length = c) : i && (d = d.mod(t))
                            }
                            if (a) {
                                if (0 === (a = s(a / 2)))
                                    break;
                                l = a % 2
                            } else if (G(e = e.times(r), e.e + 1, 1),
                            e.e > 14)
                                l = y(e);
                            else {
                                if (0 === (a = +$(e)))
                                    break;
                                l = a % 2
                            }
                            p = p.times(p),
                            c ? p.c && p.c.length > c && (p.c.length = c) : i && (p = p.mod(t))
                        }
                        return i ? d : (h && (d = M.div(d)),
                        t ? d.mod(t) : c ? G(d, U, x, void 0) : d)
                    }
                    ,
                    B.integerValue = function(e) {
                        var t = new V(this);
                        return null == e ? e = x : m(e, 0, 8),
                        G(t, t.e + 1, e)
                    }
                    ,
                    B.isEqualTo = B.eq = function(e, t) {
                        return 0 === g(this, new V(e,t))
                    }
                    ,
                    B.isFinite = function() {
                        return !!this.c
                    }
                    ,
                    B.isGreaterThan = B.gt = function(e, t) {
                        return g(this, new V(e,t)) > 0
                    }
                    ,
                    B.isGreaterThanOrEqualTo = B.gte = function(e, t) {
                        return 1 === (t = g(this, new V(e,t))) || 0 === t
                    }
                    ,
                    B.isInteger = function() {
                        return !!this.c && p(this.e / u) > this.c.length - 2
                    }
                    ,
                    B.isLessThan = B.lt = function(e, t) {
                        return g(this, new V(e,t)) < 0
                    }
                    ,
                    B.isLessThanOrEqualTo = B.lte = function(e, t) {
                        return -1 === (t = g(this, new V(e,t))) || 0 === t
                    }
                    ,
                    B.isNaN = function() {
                        return !this.s
                    }
                    ,
                    B.isNegative = function() {
                        return this.s < 0
                    }
                    ,
                    B.isPositive = function() {
                        return this.s > 0
                    }
                    ,
                    B.isZero = function() {
                        return !!this.c && 0 == this.c[0]
                    }
                    ,
                    B.minus = function(e, t) {
                        var r, i, n, s, o = this, a = o.s;
                        if (t = (e = new V(e,t)).s,
                        !a || !t)
                            return new V(NaN);
                        if (a != t)
                            return e.s = -t,
                            o.plus(e);
                        var f = o.e / u
                          , h = e.e / u
                          , l = o.c
                          , d = e.c;
                        if (!f || !h) {
                            if (!l || !d)
                                return l ? (e.s = -t,
                                e) : new V(d ? o : NaN);
                            if (!l[0] || !d[0])
                                return d[0] ? (e.s = -t,
                                e) : new V(l[0] ? o : 3 == x ? -0 : 0)
                        }
                        if (f = p(f),
                        h = p(h),
                        l = l.slice(),
                        a = f - h) {
                            for ((s = a < 0) ? (a = -a,
                            n = l) : (h = f,
                            n = d),
                            n.reverse(),
                            t = a; t--; n.push(0))
                                ;
                            n.reverse()
                        } else
                            for (i = (s = (a = l.length) < (t = d.length)) ? a : t,
                            a = t = 0; t < i; t++)
                                if (l[t] != d[t]) {
                                    s = l[t] < d[t];
                                    break
                                }
                        if (s && (n = l,
                        l = d,
                        d = n,
                        e.s = -e.s),
                        (t = (i = d.length) - (r = l.length)) > 0)
                            for (; t--; l[r++] = 0)
                                ;
                        for (t = c - 1; i > a; ) {
                            if (l[--i] < d[i]) {
                                for (r = i; r && !l[--r]; l[r] = t)
                                    ;
                                --l[r],
                                l[i] += c
                            }
                            l[i] -= d[i]
                        }
                        for (; 0 == l[0]; l.splice(0, 1),
                        --h)
                            ;
                        return l[0] ? H(e, l, h) : (e.s = 3 == x ? -1 : 1,
                        e.c = [e.e = 0],
                        e)
                    }
                    ,
                    B.modulo = B.mod = function(e, t) {
                        var i, n, s = this;
                        return e = new V(e,t),
                        !s.c || !e.s || e.c && !e.c[0] ? new V(NaN) : !e.c || s.c && !s.c[0] ? new V(s) : (9 == j ? (n = e.s,
                        e.s = 1,
                        i = r(s, e, 0, 3),
                        e.s = n,
                        i.s *= n) : i = r(s, e, 0, j),
                        (e = s.minus(i.times(e))).c[0] || 1 != j || (e.s = s.s),
                        e)
                    }
                    ,
                    B.multipliedBy = B.times = function(e, t) {
                        var r, i, n, s, o, a, f, h, d, b, g, m, y, v, w, E = this, _ = E.c, S = (e = new V(e,t)).c;
                        if (!(_ && S && _[0] && S[0]))
                            return !E.s || !e.s || _ && !_[0] && !S || S && !S[0] && !_ ? e.c = e.e = e.s = null : (e.s *= E.s,
                            _ && S ? (e.c = [0],
                            e.e = 0) : e.c = e.e = null),
                            e;
                        for (i = p(E.e / u) + p(e.e / u),
                        e.s *= E.s,
                        (f = _.length) < (b = S.length) && (y = _,
                        _ = S,
                        S = y,
                        n = f,
                        f = b,
                        b = n),
                        n = f + b,
                        y = []; n--; y.push(0))
                            ;
                        for (v = c,
                        w = l,
                        n = b; --n >= 0; ) {
                            for (r = 0,
                            g = S[n] % w,
                            m = S[n] / w | 0,
                            s = n + (o = f); s > n; )
                                r = ((h = g * (h = _[--o] % w) + (a = m * h + (d = _[o] / w | 0) * g) % w * w + y[s] + r) / v | 0) + (a / w | 0) + m * d,
                                y[s--] = h % v;
                            y[s] = r
                        }
                        return r ? ++i : y.splice(0, 1),
                        H(e, y, i)
                    }
                    ,
                    B.negated = function() {
                        var e = new V(this);
                        return e.s = -e.s || null,
                        e
                    }
                    ,
                    B.plus = function(e, t) {
                        var r, i = this, n = i.s;
                        if (t = (e = new V(e,t)).s,
                        !n || !t)
                            return new V(NaN);
                        if (n != t)
                            return e.s = -t,
                            i.minus(e);
                        var s = i.e / u
                          , o = e.e / u
                          , a = i.c
                          , f = e.c;
                        if (!s || !o) {
                            if (!a || !f)
                                return new V(n / 0);
                            if (!a[0] || !f[0])
                                return f[0] ? e : new V(a[0] ? i : 0 * n)
                        }
                        if (s = p(s),
                        o = p(o),
                        a = a.slice(),
                        n = s - o) {
                            for (n > 0 ? (o = s,
                            r = f) : (n = -n,
                            r = a),
                            r.reverse(); n--; r.push(0))
                                ;
                            r.reverse()
                        }
                        for ((n = a.length) - (t = f.length) < 0 && (r = f,
                        f = a,
                        a = r,
                        t = n),
                        n = 0; t; )
                            n = (a[--t] = a[t] + f[t] + n) / c | 0,
                            a[t] = c === a[t] ? 0 : a[t] % c;
                        return n && (a = [n].concat(a),
                        ++o),
                        H(e, a, o)
                    }
                    ,
                    B.precision = B.sd = function(e, t) {
                        var r, i, n, s = this;
                        if (null != e && e !== !!e)
                            return m(e, 1, d),
                            null == t ? t = x : m(t, 0, 8),
                            G(new V(s), e, t);
                        if (!(r = s.c))
                            return null;
                        if (i = (n = r.length - 1) * u + 1,
                        n = r[n]) {
                            for (; n % 10 == 0; n /= 10,
                            i--)
                                ;
                            for (n = r[0]; n >= 10; n /= 10,
                            i++)
                                ;
                        }
                        return e && s.e + 1 > i && (i = s.e + 1),
                        i
                    }
                    ,
                    B.shiftedBy = function(e) {
                        return m(e, -f, f),
                        this.times("1e" + e)
                    }
                    ,
                    B.squareRoot = B.sqrt = function() {
                        var e, t, i, n, s, o = this, a = o.c, c = o.s, u = o.e, f = R + 4, h = new V("0.5");
                        if (1 !== c || !a || !a[0])
                            return new V(!c || c < 0 && (!a || a[0]) ? NaN : a ? o : 1 / 0);
                        if (0 == (c = Math.sqrt(+$(o))) || c == 1 / 0 ? (((t = b(a)).length + u) % 2 == 0 && (t += "0"),
                        c = Math.sqrt(+t),
                        u = p((u + 1) / 2) - (u < 0 || u % 2),
                        i = new V(t = c == 1 / 0 ? "5e" + u : (t = c.toExponential()).slice(0, t.indexOf("e") + 1) + u)) : i = new V(c + ""),
                        i.c[0])
                            for ((c = (u = i.e) + f) < 3 && (c = 0); ; )
                                if (s = i,
                                i = h.times(s.plus(r(o, s, f, 1))),
                                b(s.c).slice(0, c) === (t = b(i.c)).slice(0, c)) {
                                    if (i.e < u && --c,
                                    "9999" != (t = t.slice(c - 3, c + 1)) && (n || "4999" != t)) {
                                        +t && (+t.slice(1) || "5" != t.charAt(0)) || (G(i, i.e + R + 2, 1),
                                        e = !i.times(i).eq(o));
                                        break
                                    }
                                    if (!n && (G(s, s.e + R + 2, 0),
                                    s.times(s).eq(o))) {
                                        i = s;
                                        break
                                    }
                                    f += 4,
                                    c += 4,
                                    n = 1
                                }
                        return G(i, i.e + R + 1, x, e)
                    }
                    ,
                    B.toExponential = function(e, t) {
                        return null != e && (m(e, 0, d),
                        e++),
                        F(this, e, t, 1)
                    }
                    ,
                    B.toFixed = function(e, t) {
                        return null != e && (m(e, 0, d),
                        e = e + this.e + 1),
                        F(this, e, t)
                    }
                    ,
                    B.toFormat = function(e, t, r) {
                        var i, n = this;
                        if (null == r)
                            null != e && t && "object" == typeof t ? (r = t,
                            t = null) : e && "object" == typeof e ? (r = e,
                            e = t = null) : r = K;
                        else if ("object" != typeof r)
                            throw Error(o + "Argument not an object: " + r);
                        if (i = n.toFixed(e, t),
                        n.c) {
                            var s, a = i.split("."), c = +r.groupSize, u = +r.secondaryGroupSize, f = r.groupSeparator || "", h = a[0], l = a[1], d = n.s < 0, p = d ? h.slice(1) : h, b = p.length;
                            if (u && (s = c,
                            c = u,
                            u = s,
                            b -= s),
                            c > 0 && b > 0) {
                                for (s = b % c || c,
                                h = p.substr(0, s); s < b; s += c)
                                    h += f + p.substr(s, c);
                                u > 0 && (h += f + p.slice(s)),
                                d && (h = "-" + h)
                            }
                            i = l ? h + (r.decimalSeparator || "") + ((u = +r.fractionGroupSize) ? l.replace(new RegExp("\\d{" + u + "}\\B","g"), "$&" + (r.fractionGroupSeparator || "")) : l) : h
                        }
                        return (r.prefix || "") + i + (r.suffix || "")
                    }
                    ,
                    B.toFraction = function(e) {
                        var t, i, n, s, a, c, f, l, d, p, g, m, y = this, v = y.c;
                        if (null != e && (!(f = new V(e)).isInteger() && (f.c || 1 !== f.s) || f.lt(M)))
                            throw Error(o + "Argument " + (f.isInteger() ? "out of range: " : "not an integer: ") + $(f));
                        if (!v)
                            return new V(y);
                        for (t = new V(M),
                        d = i = new V(M),
                        n = l = new V(M),
                        m = b(v),
                        a = t.e = m.length - y.e - 1,
                        t.c[0] = h[(c = a % u) < 0 ? u + c : c],
                        e = !e || f.comparedTo(t) > 0 ? a > 0 ? t : d : f,
                        c = L,
                        L = 1 / 0,
                        f = new V(m),
                        l.c[0] = 0; p = r(f, t, 0, 1),
                        1 != (s = i.plus(p.times(n))).comparedTo(e); )
                            i = n,
                            n = s,
                            d = l.plus(p.times(s = d)),
                            l = s,
                            t = f.minus(p.times(s = t)),
                            f = s;
                        return s = r(e.minus(i), n, 0, 1),
                        l = l.plus(s.times(d)),
                        i = i.plus(s.times(n)),
                        l.s = d.s = y.s,
                        g = r(d, n, a *= 2, x).minus(y).abs().comparedTo(r(l, i, a, x).minus(y).abs()) < 1 ? [d, n] : [l, i],
                        L = c,
                        g
                    }
                    ,
                    B.toNumber = function() {
                        return +$(this)
                    }
                    ,
                    B.toPrecision = function(e, t) {
                        return null != e && m(e, 1, d),
                        F(this, e, t, 2)
                    }
                    ,
                    B.toString = function(e) {
                        var t, r = this, i = r.s, n = r.e;
                        return null === n ? i ? (t = "Infinity",
                        i < 0 && (t = "-" + t)) : t = "NaN" : (null == e ? t = n <= N || n >= P ? v(b(r.c), n) : w(b(r.c), n, "0") : 10 === e ? t = w(b((r = G(new V(r), R + n + 1, x)).c), r.e, "0") : (m(e, 2, q.length, "Base"),
                        t = E(w(b(r.c), n, "0"), 10, e, i, !0)),
                        i < 0 && r.c[0] && (t = "-" + t)),
                        t
                    }
                    ,
                    B.valueOf = B.toJSON = function() {
                        return $(this)
                    }
                    ,
                    B._isBigNumber = !0,
                    null != t && V.set(t),
                    V
                }()).default = r.BigNumber = r,
                "function" == typeof define && define.amd ? define((function() {
                    return r
                }
                )) : void 0 !== t && t.exports ? t.exports = r : (e || (e = "undefined" != typeof self && self ? self : window),
                e.BigNumber = r)
            }(this)
        }
        , {}],
        165: [function(e, t, r) {
            "use strict";
            const {Buffer: i} = e("buffer")
              , n = Symbol.for("BufferList");
            function s(e) {
                if (!(this instanceof s))
                    return new s(e);
                s._init.call(this, e)
            }
            s._init = function(e) {
                Object.defineProperty(this, n, {
                    value: !0
                }),
                this._bufs = [],
                this.length = 0,
                e && this.append(e)
            }
            ,
            s.prototype._new = function(e) {
                return new s(e)
            }
            ,
            s.prototype._offset = function(e) {
                if (0 === e)
                    return [0, 0];
                let t = 0;
                for (let r = 0; r < this._bufs.length; r++) {
                    const i = t + this._bufs[r].length;
                    if (e < i || r === this._bufs.length - 1)
                        return [r, e - t];
                    t = i
                }
            }
            ,
            s.prototype._reverseOffset = function(e) {
                const t = e[0];
                let r = e[1];
                for (let e = 0; e < t; e++)
                    r += this._bufs[e].length;
                return r
            }
            ,
            s.prototype.get = function(e) {
                if (e > this.length || e < 0)
                    return;
                const t = this._offset(e);
                return this._bufs[t[0]][t[1]]
            }
            ,
            s.prototype.slice = function(e, t) {
                return "number" == typeof e && e < 0 && (e += this.length),
                "number" == typeof t && t < 0 && (t += this.length),
                this.copy(null, 0, e, t)
            }
            ,
            s.prototype.copy = function(e, t, r, n) {
                if (("number" != typeof r || r < 0) && (r = 0),
                ("number" != typeof n || n > this.length) && (n = this.length),
                r >= this.length)
                    return e || i.alloc(0);
                if (n <= 0)
                    return e || i.alloc(0);
                const s = !!e
                  , o = this._offset(r)
                  , a = n - r;
                let c = a
                  , u = s && t || 0
                  , f = o[1];
                if (0 === r && n === this.length) {
                    if (!s)
                        return 1 === this._bufs.length ? this._bufs[0] : i.concat(this._bufs, this.length);
                    for (let t = 0; t < this._bufs.length; t++)
                        this._bufs[t].copy(e, u),
                        u += this._bufs[t].length;
                    return e
                }
                if (c <= this._bufs[o[0]].length - f)
                    return s ? this._bufs[o[0]].copy(e, t, f, f + c) : this._bufs[o[0]].slice(f, f + c);
                s || (e = i.allocUnsafe(a));
                for (let t = o[0]; t < this._bufs.length; t++) {
                    const r = this._bufs[t].length - f;
                    if (!(c > r)) {
                        this._bufs[t].copy(e, u, f, f + c),
                        u += r;
                        break
                    }
                    this._bufs[t].copy(e, u, f),
                    u += r,
                    c -= r,
                    f && (f = 0)
                }
                return e.length > u ? e.slice(0, u) : e
            }
            ,
            s.prototype.shallowSlice = function(e, t) {
                if (e = e || 0,
                t = "number" != typeof t ? this.length : t,
                e < 0 && (e += this.length),
                t < 0 && (t += this.length),
                e === t)
                    return this._new();
                const r = this._offset(e)
                  , i = this._offset(t)
                  , n = this._bufs.slice(r[0], i[0] + 1);
                return 0 === i[1] ? n.pop() : n[n.length - 1] = n[n.length - 1].slice(0, i[1]),
                0 !== r[1] && (n[0] = n[0].slice(r[1])),
                this._new(n)
            }
            ,
            s.prototype.toString = function(e, t, r) {
                return this.slice(t, r).toString(e)
            }
            ,
            s.prototype.consume = function(e) {
                if (e = Math.trunc(e),
                Number.isNaN(e) || e <= 0)
                    return this;
                for (; this._bufs.length; ) {
                    if (!(e >= this._bufs[0].length)) {
                        this._bufs[0] = this._bufs[0].slice(e),
                        this.length -= e;
                        break
                    }
                    e -= this._bufs[0].length,
                    this.length -= this._bufs[0].length,
                    this._bufs.shift()
                }
                return this
            }
            ,
            s.prototype.duplicate = function() {
                const e = this._new();
                for (let t = 0; t < this._bufs.length; t++)
                    e.append(this._bufs[t]);
                return e
            }
            ,
            s.prototype.append = function(e) {
                if (null == e)
                    return this;
                if (e.buffer)
                    this._appendBuffer(i.from(e.buffer, e.byteOffset, e.byteLength));
                else if (Array.isArray(e))
                    for (let t = 0; t < e.length; t++)
                        this.append(e[t]);
                else if (this._isBufferList(e))
                    for (let t = 0; t < e._bufs.length; t++)
                        this.append(e._bufs[t]);
                else
                    "number" == typeof e && (e = e.toString()),
                    this._appendBuffer(i.from(e));
                return this
            }
            ,
            s.prototype._appendBuffer = function(e) {
                this._bufs.push(e),
                this.length += e.length
            }
            ,
            s.prototype.indexOf = function(e, t, r) {
                if (void 0 === r && "string" == typeof t && (r = t,
                t = void 0),
                "function" == typeof e || Array.isArray(e))
                    throw new TypeError('The "value" argument must be one of type string, Buffer, BufferList, or Uint8Array.');
                if ("number" == typeof e ? e = i.from([e]) : "string" == typeof e ? e = i.from(e, r) : this._isBufferList(e) ? e = e.slice() : Array.isArray(e.buffer) ? e = i.from(e.buffer, e.byteOffset, e.byteLength) : i.isBuffer(e) || (e = i.from(e)),
                t = Number(t || 0),
                isNaN(t) && (t = 0),
                t < 0 && (t = this.length + t),
                t < 0 && (t = 0),
                0 === e.length)
                    return t > this.length ? this.length : t;
                const n = this._offset(t);
                let s = n[0]
                  , o = n[1];
                for (; s < this._bufs.length; s++) {
                    const t = this._bufs[s];
                    for (; o < t.length; ) {
                        if (t.length - o >= e.length) {
                            const r = t.indexOf(e, o);
                            if (-1 !== r)
                                return this._reverseOffset([s, r]);
                            o = t.length - e.length + 1
                        } else {
                            const t = this._reverseOffset([s, o]);
                            if (this._match(t, e))
                                return t;
                            o++
                        }
                    }
                    o = 0
                }
                return -1
            }
            ,
            s.prototype._match = function(e, t) {
                if (this.length - e < t.length)
                    return !1;
                for (let r = 0; r < t.length; r++)
                    if (this.get(e + r) !== t[r])
                        return !1;
                return !0
            }
            ,
            function() {
                const e = {
                    readDoubleBE: 8,
                    readDoubleLE: 8,
                    readFloatBE: 4,
                    readFloatLE: 4,
                    readInt32BE: 4,
                    readInt32LE: 4,
                    readUInt32BE: 4,
                    readUInt32LE: 4,
                    readInt16BE: 2,
                    readInt16LE: 2,
                    readUInt16BE: 2,
                    readUInt16LE: 2,
                    readInt8: 1,
                    readUInt8: 1,
                    readIntBE: null,
                    readIntLE: null,
                    readUIntBE: null,
                    readUIntLE: null
                };
                for (const t in e)
                    !function(t) {
                        s.prototype[t] = null === e[t] ? function(e, r) {
                            return this.slice(e, e + r)[t](0, r)
                        }
                        : function(r) {
                            return this.slice(r, r + e[t])[t](0)
                        }
                    }(t)
            }(),
            s.prototype._isBufferList = function(e) {
                return e instanceof s || s.isBufferList(e)
            }
            ,
            s.isBufferList = function(e) {
                return null != e && e[n]
            }
            ,
            t.exports = s
        }
        , {
            buffer: 48
        }],
        166: [function(e, t, r) {
            !function(t, r) {
                "use strict";
                function i(e, t) {
                    if (!e)
                        throw new Error(t || "Assertion failed")
                }
                function n(e, t) {
                    e.super_ = t;
                    var r = function() {};
                    r.prototype = t.prototype,
                    e.prototype = new r,
                    e.prototype.constructor = e
                }
                function s(e, t, r) {
                    if (s.isBN(e))
                        return e;
                    this.negative = 0,
                    this.words = null,
                    this.length = 0,
                    this.red = null,
                    null !== e && ("le" !== t && "be" !== t || (r = t,
                    t = 10),
                    this._init(e || 0, t || 10, r || "be"))
                }
                var o;
                "object" == typeof t ? t.exports = s : r.BN = s,
                s.BN = s,
                s.wordSize = 26;
                try {
                    o = e("buffer").Buffer
                } catch (e) {}
                function a(e, t, r) {
                    for (var i = 0, n = Math.min(e.length, r), s = t; s < n; s++) {
                        var o = e.charCodeAt(s) - 48;
                        i <<= 4,
                        i |= o >= 49 && o <= 54 ? o - 49 + 10 : o >= 17 && o <= 22 ? o - 17 + 10 : 15 & o
                    }
                    return i
                }
                function c(e, t, r, i) {
                    for (var n = 0, s = Math.min(e.length, r), o = t; o < s; o++) {
                        var a = e.charCodeAt(o) - 48;
                        n *= i,
                        n += a >= 49 ? a - 49 + 10 : a >= 17 ? a - 17 + 10 : a
                    }
                    return n
                }
                s.isBN = function(e) {
                    return e instanceof s || null !== e && "object" == typeof e && e.constructor.wordSize === s.wordSize && Array.isArray(e.words)
                }
                ,
                s.max = function(e, t) {
                    return e.cmp(t) > 0 ? e : t
                }
                ,
                s.min = function(e, t) {
                    return e.cmp(t) < 0 ? e : t
                }
                ,
                s.prototype._init = function(e, t, r) {
                    if ("number" == typeof e)
                        return this._initNumber(e, t, r);
                    if ("object" == typeof e)
                        return this._initArray(e, t, r);
                    "hex" === t && (t = 16),
                    i(t === (0 | t) && t >= 2 && t <= 36);
                    var n = 0;
                    "-" === (e = e.toString().replace(/\s+/g, ""))[0] && n++,
                    16 === t ? this._parseHex(e, n) : this._parseBase(e, t, n),
                    "-" === e[0] && (this.negative = 1),
                    this.strip(),
                    "le" === r && this._initArray(this.toArray(), t, r)
                }
                ,
                s.prototype._initNumber = function(e, t, r) {
                    e < 0 && (this.negative = 1,
                    e = -e),
                    e < 67108864 ? (this.words = [67108863 & e],
                    this.length = 1) : e < 4503599627370496 ? (this.words = [67108863 & e, e / 67108864 & 67108863],
                    this.length = 2) : (i(e < 9007199254740992),
                    this.words = [67108863 & e, e / 67108864 & 67108863, 1],
                    this.length = 3),
                    "le" === r && this._initArray(this.toArray(), t, r)
                }
                ,
                s.prototype._initArray = function(e, t, r) {
                    if (i("number" == typeof e.length),
                    e.length <= 0)
                        return this.words = [0],
                        this.length = 1,
                        this;
                    this.length = Math.ceil(e.length / 3),
                    this.words = new Array(this.length);
                    for (var n = 0; n < this.length; n++)
                        this.words[n] = 0;
                    var s, o, a = 0;
                    if ("be" === r)
                        for (n = e.length - 1,
                        s = 0; n >= 0; n -= 3)
                            o = e[n] | e[n - 1] << 8 | e[n - 2] << 16,
                            this.words[s] |= o << a & 67108863,
                            this.words[s + 1] = o >>> 26 - a & 67108863,
                            (a += 24) >= 26 && (a -= 26,
                            s++);
                    else if ("le" === r)
                        for (n = 0,
                        s = 0; n < e.length; n += 3)
                            o = e[n] | e[n + 1] << 8 | e[n + 2] << 16,
                            this.words[s] |= o << a & 67108863,
                            this.words[s + 1] = o >>> 26 - a & 67108863,
                            (a += 24) >= 26 && (a -= 26,
                            s++);
                    return this.strip()
                }
                ,
                s.prototype._parseHex = function(e, t) {
                    this.length = Math.ceil((e.length - t) / 6),
                    this.words = new Array(this.length);
                    for (var r = 0; r < this.length; r++)
                        this.words[r] = 0;
                    var i, n, s = 0;
                    for (r = e.length - 6,
                    i = 0; r >= t; r -= 6)
                        n = a(e, r, r + 6),
                        this.words[i] |= n << s & 67108863,
                        this.words[i + 1] |= n >>> 26 - s & 4194303,
                        (s += 24) >= 26 && (s -= 26,
                        i++);
                    r + 6 !== t && (n = a(e, t, r + 6),
                    this.words[i] |= n << s & 67108863,
                    this.words[i + 1] |= n >>> 26 - s & 4194303),
                    this.strip()
                }
                ,
                s.prototype._parseBase = function(e, t, r) {
                    this.words = [0],
                    this.length = 1;
                    for (var i = 0, n = 1; n <= 67108863; n *= t)
                        i++;
                    i--,
                    n = n / t | 0;
                    for (var s = e.length - r, o = s % i, a = Math.min(s, s - o) + r, u = 0, f = r; f < a; f += i)
                        u = c(e, f, f + i, t),
                        this.imuln(n),
                        this.words[0] + u < 67108864 ? this.words[0] += u : this._iaddn(u);
                    if (0 !== o) {
                        var h = 1;
                        for (u = c(e, f, e.length, t),
                        f = 0; f < o; f++)
                            h *= t;
                        this.imuln(h),
                        this.words[0] + u < 67108864 ? this.words[0] += u : this._iaddn(u)
                    }
                }
                ,
                s.prototype.copy = function(e) {
                    e.words = new Array(this.length);
                    for (var t = 0; t < this.length; t++)
                        e.words[t] = this.words[t];
                    e.length = this.length,
                    e.negative = this.negative,
                    e.red = this.red
                }
                ,
                s.prototype.clone = function() {
                    var e = new s(null);
                    return this.copy(e),
                    e
                }
                ,
                s.prototype._expand = function(e) {
                    for (; this.length < e; )
                        this.words[this.length++] = 0;
                    return this
                }
                ,
                s.prototype.strip = function() {
                    for (; this.length > 1 && 0 === this.words[this.length - 1]; )
                        this.length--;
                    return this._normSign()
                }
                ,
                s.prototype._normSign = function() {
                    return 1 === this.length && 0 === this.words[0] && (this.negative = 0),
                    this
                }
                ,
                s.prototype.inspect = function() {
                    return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">"
                }
                ;
                var u = ["", "0", "00", "000", "0000", "00000", "000000", "0000000", "00000000", "000000000", "0000000000", "00000000000", "000000000000", "0000000000000", "00000000000000", "000000000000000", "0000000000000000", "00000000000000000", "000000000000000000", "0000000000000000000", "00000000000000000000", "000000000000000000000", "0000000000000000000000", "00000000000000000000000", "000000000000000000000000", "0000000000000000000000000"]
                  , f = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
                  , h = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64e6, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 243e5, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];
                function l(e, t, r) {
                    r.negative = t.negative ^ e.negative;
                    var i = e.length + t.length | 0;
                    r.length = i,
                    i = i - 1 | 0;
                    var n = 0 | e.words[0]
                      , s = 0 | t.words[0]
                      , o = n * s
                      , a = 67108863 & o
                      , c = o / 67108864 | 0;
                    r.words[0] = a;
                    for (var u = 1; u < i; u++) {
                        for (var f = c >>> 26, h = 67108863 & c, l = Math.min(u, t.length - 1), d = Math.max(0, u - e.length + 1); d <= l; d++) {
                            var p = u - d | 0;
                            f += (o = (n = 0 | e.words[p]) * (s = 0 | t.words[d]) + h) / 67108864 | 0,
                            h = 67108863 & o
                        }
                        r.words[u] = 0 | h,
                        c = 0 | f
                    }
                    return 0 !== c ? r.words[u] = 0 | c : r.length--,
                    r.strip()
                }
                s.prototype.toString = function(e, t) {
                    var r;
                    if (t = 0 | t || 1,
                    16 === (e = e || 10) || "hex" === e) {
                        r = "";
                        for (var n = 0, s = 0, o = 0; o < this.length; o++) {
                            var a = this.words[o]
                              , c = (16777215 & (a << n | s)).toString(16);
                            r = 0 !== (s = a >>> 24 - n & 16777215) || o !== this.length - 1 ? u[6 - c.length] + c + r : c + r,
                            (n += 2) >= 26 && (n -= 26,
                            o--)
                        }
                        for (0 !== s && (r = s.toString(16) + r); r.length % t != 0; )
                            r = "0" + r;
                        return 0 !== this.negative && (r = "-" + r),
                        r
                    }
                    if (e === (0 | e) && e >= 2 && e <= 36) {
                        var l = f[e]
                          , d = h[e];
                        r = "";
                        var p = this.clone();
                        for (p.negative = 0; !p.isZero(); ) {
                            var b = p.modn(d).toString(e);
                            r = (p = p.idivn(d)).isZero() ? b + r : u[l - b.length] + b + r
                        }
                        for (this.isZero() && (r = "0" + r); r.length % t != 0; )
                            r = "0" + r;
                        return 0 !== this.negative && (r = "-" + r),
                        r
                    }
                    i(!1, "Base should be between 2 and 36")
                }
                ,
                s.prototype.toNumber = function() {
                    var e = this.words[0];
                    return 2 === this.length ? e += 67108864 * this.words[1] : 3 === this.length && 1 === this.words[2] ? e += 4503599627370496 + 67108864 * this.words[1] : this.length > 2 && i(!1, "Number can only safely store up to 53 bits"),
                    0 !== this.negative ? -e : e
                }
                ,
                s.prototype.toJSON = function() {
                    return this.toString(16)
                }
                ,
                s.prototype.toBuffer = function(e, t) {
                    return i(void 0 !== o),
                    this.toArrayLike(o, e, t)
                }
                ,
                s.prototype.toArray = function(e, t) {
                    return this.toArrayLike(Array, e, t)
                }
                ,
                s.prototype.toArrayLike = function(e, t, r) {
                    var n = this.byteLength()
                      , s = r || Math.max(1, n);
                    i(n <= s, "byte array longer than desired length"),
                    i(s > 0, "Requested array length <= 0"),
                    this.strip();
                    var o, a, c = "le" === t, u = new e(s), f = this.clone();
                    if (c) {
                        for (a = 0; !f.isZero(); a++)
                            o = f.andln(255),
                            f.iushrn(8),
                            u[a] = o;
                        for (; a < s; a++)
                            u[a] = 0
                    } else {
                        for (a = 0; a < s - n; a++)
                            u[a] = 0;
                        for (a = 0; !f.isZero(); a++)
                            o = f.andln(255),
                            f.iushrn(8),
                            u[s - a - 1] = o
                    }
                    return u
                }
                ,
                Math.clz32 ? s.prototype._countBits = function(e) {
                    return 32 - Math.clz32(e)
                }
                : s.prototype._countBits = function(e) {
                    var t = e
                      , r = 0;
                    return t >= 4096 && (r += 13,
                    t >>>= 13),
                    t >= 64 && (r += 7,
                    t >>>= 7),
                    t >= 8 && (r += 4,
                    t >>>= 4),
                    t >= 2 && (r += 2,
                    t >>>= 2),
                    r + t
                }
                ,
                s.prototype._zeroBits = function(e) {
                    if (0 === e)
                        return 26;
                    var t = e
                      , r = 0;
                    return 0 == (8191 & t) && (r += 13,
                    t >>>= 13),
                    0 == (127 & t) && (r += 7,
                    t >>>= 7),
                    0 == (15 & t) && (r += 4,
                    t >>>= 4),
                    0 == (3 & t) && (r += 2,
                    t >>>= 2),
                    0 == (1 & t) && r++,
                    r
                }
                ,
                s.prototype.bitLength = function() {
                    var e = this.words[this.length - 1]
                      , t = this._countBits(e);
                    return 26 * (this.length - 1) + t
                }
                ,
                s.prototype.zeroBits = function() {
                    if (this.isZero())
                        return 0;
                    for (var e = 0, t = 0; t < this.length; t++) {
                        var r = this._zeroBits(this.words[t]);
                        if (e += r,
                        26 !== r)
                            break
                    }
                    return e
                }
                ,
                s.prototype.byteLength = function() {
                    return Math.ceil(this.bitLength() / 8)
                }
                ,
                s.prototype.toTwos = function(e) {
                    return 0 !== this.negative ? this.abs().inotn(e).iaddn(1) : this.clone()
                }
                ,
                s.prototype.fromTwos = function(e) {
                    return this.testn(e - 1) ? this.notn(e).iaddn(1).ineg() : this.clone()
                }
                ,
                s.prototype.isNeg = function() {
                    return 0 !== this.negative
                }
                ,
                s.prototype.neg = function() {
                    return this.clone().ineg()
                }
                ,
                s.prototype.ineg = function() {
                    return this.isZero() || (this.negative ^= 1),
                    this
                }
                ,
                s.prototype.iuor = function(e) {
                    for (; this.length < e.length; )
                        this.words[this.length++] = 0;
                    for (var t = 0; t < e.length; t++)
                        this.words[t] = this.words[t] | e.words[t];
                    return this.strip()
                }
                ,
                s.prototype.ior = function(e) {
                    return i(0 == (this.negative | e.negative)),
                    this.iuor(e)
                }
                ,
                s.prototype.or = function(e) {
                    return this.length > e.length ? this.clone().ior(e) : e.clone().ior(this)
                }
                ,
                s.prototype.uor = function(e) {
                    return this.length > e.length ? this.clone().iuor(e) : e.clone().iuor(this)
                }
                ,
                s.prototype.iuand = function(e) {
                    var t;
                    t = this.length > e.length ? e : this;
                    for (var r = 0; r < t.length; r++)
                        this.words[r] = this.words[r] & e.words[r];
                    return this.length = t.length,
                    this.strip()
                }
                ,
                s.prototype.iand = function(e) {
                    return i(0 == (this.negative | e.negative)),
                    this.iuand(e)
                }
                ,
                s.prototype.and = function(e) {
                    return this.length > e.length ? this.clone().iand(e) : e.clone().iand(this)
                }
                ,
                s.prototype.uand = function(e) {
                    return this.length > e.length ? this.clone().iuand(e) : e.clone().iuand(this)
                }
                ,
                s.prototype.iuxor = function(e) {
                    var t, r;
                    this.length > e.length ? (t = this,
                    r = e) : (t = e,
                    r = this);
                    for (var i = 0; i < r.length; i++)
                        this.words[i] = t.words[i] ^ r.words[i];
                    if (this !== t)
                        for (; i < t.length; i++)
                            this.words[i] = t.words[i];
                    return this.length = t.length,
                    this.strip()
                }
                ,
                s.prototype.ixor = function(e) {
                    return i(0 == (this.negative | e.negative)),
                    this.iuxor(e)
                }
                ,
                s.prototype.xor = function(e) {
                    return this.length > e.length ? this.clone().ixor(e) : e.clone().ixor(this)
                }
                ,
                s.prototype.uxor = function(e) {
                    return this.length > e.length ? this.clone().iuxor(e) : e.clone().iuxor(this)
                }
                ,
                s.prototype.inotn = function(e) {
                    i("number" == typeof e && e >= 0);
                    var t = 0 | Math.ceil(e / 26)
                      , r = e % 26;
                    this._expand(t),
                    r > 0 && t--;
                    for (var n = 0; n < t; n++)
                        this.words[n] = 67108863 & ~this.words[n];
                    return r > 0 && (this.words[n] = ~this.words[n] & 67108863 >> 26 - r),
                    this.strip()
                }
                ,
                s.prototype.notn = function(e) {
                    return this.clone().inotn(e)
                }
                ,
                s.prototype.setn = function(e, t) {
                    i("number" == typeof e && e >= 0);
                    var r = e / 26 | 0
                      , n = e % 26;
                    return this._expand(r + 1),
                    this.words[r] = t ? this.words[r] | 1 << n : this.words[r] & ~(1 << n),
                    this.strip()
                }
                ,
                s.prototype.iadd = function(e) {
                    var t, r, i;
                    if (0 !== this.negative && 0 === e.negative)
                        return this.negative = 0,
                        t = this.isub(e),
                        this.negative ^= 1,
                        this._normSign();
                    if (0 === this.negative && 0 !== e.negative)
                        return e.negative = 0,
                        t = this.isub(e),
                        e.negative = 1,
                        t._normSign();
                    this.length > e.length ? (r = this,
                    i = e) : (r = e,
                    i = this);
                    for (var n = 0, s = 0; s < i.length; s++)
                        t = (0 | r.words[s]) + (0 | i.words[s]) + n,
                        this.words[s] = 67108863 & t,
                        n = t >>> 26;
                    for (; 0 !== n && s < r.length; s++)
                        t = (0 | r.words[s]) + n,
                        this.words[s] = 67108863 & t,
                        n = t >>> 26;
                    if (this.length = r.length,
                    0 !== n)
                        this.words[this.length] = n,
                        this.length++;
                    else if (r !== this)
                        for (; s < r.length; s++)
                            this.words[s] = r.words[s];
                    return this
                }
                ,
                s.prototype.add = function(e) {
                    var t;
                    return 0 !== e.negative && 0 === this.negative ? (e.negative = 0,
                    t = this.sub(e),
                    e.negative ^= 1,
                    t) : 0 === e.negative && 0 !== this.negative ? (this.negative = 0,
                    t = e.sub(this),
                    this.negative = 1,
                    t) : this.length > e.length ? this.clone().iadd(e) : e.clone().iadd(this)
                }
                ,
                s.prototype.isub = function(e) {
                    if (0 !== e.negative) {
                        e.negative = 0;
                        var t = this.iadd(e);
                        return e.negative = 1,
                        t._normSign()
                    }
                    if (0 !== this.negative)
                        return this.negative = 0,
                        this.iadd(e),
                        this.negative = 1,
                        this._normSign();
                    var r, i, n = this.cmp(e);
                    if (0 === n)
                        return this.negative = 0,
                        this.length = 1,
                        this.words[0] = 0,
                        this;
                    n > 0 ? (r = this,
                    i = e) : (r = e,
                    i = this);
                    for (var s = 0, o = 0; o < i.length; o++)
                        s = (t = (0 | r.words[o]) - (0 | i.words[o]) + s) >> 26,
                        this.words[o] = 67108863 & t;
                    for (; 0 !== s && o < r.length; o++)
                        s = (t = (0 | r.words[o]) + s) >> 26,
                        this.words[o] = 67108863 & t;
                    if (0 === s && o < r.length && r !== this)
                        for (; o < r.length; o++)
                            this.words[o] = r.words[o];
                    return this.length = Math.max(this.length, o),
                    r !== this && (this.negative = 1),
                    this.strip()
                }
                ,
                s.prototype.sub = function(e) {
                    return this.clone().isub(e)
                }
                ;
                var d = function(e, t, r) {
                    var i, n, s, o = e.words, a = t.words, c = r.words, u = 0, f = 0 | o[0], h = 8191 & f, l = f >>> 13, d = 0 | o[1], p = 8191 & d, b = d >>> 13, g = 0 | o[2], m = 8191 & g, y = g >>> 13, v = 0 | o[3], w = 8191 & v, E = v >>> 13, _ = 0 | o[4], S = 8191 & _, k = _ >>> 13, A = 0 | o[5], C = 8191 & A, I = A >>> 13, T = 0 | o[6], B = 8191 & T, M = T >>> 13, R = 0 | o[7], x = 8191 & R, N = R >>> 13, P = 0 | o[8], D = 8191 & P, L = P >>> 13, O = 0 | o[9], j = 8191 & O, U = O >>> 13, K = 0 | a[0], q = 8191 & K, V = K >>> 13, F = 0 | a[1], z = 8191 & F, H = F >>> 13, G = 0 | a[2], $ = 8191 & G, Y = G >>> 13, W = 0 | a[3], Q = 8191 & W, X = W >>> 13, Z = 0 | a[4], J = 8191 & Z, ee = Z >>> 13, te = 0 | a[5], re = 8191 & te, ie = te >>> 13, ne = 0 | a[6], se = 8191 & ne, oe = ne >>> 13, ae = 0 | a[7], ce = 8191 & ae, ue = ae >>> 13, fe = 0 | a[8], he = 8191 & fe, le = fe >>> 13, de = 0 | a[9], pe = 8191 & de, be = de >>> 13;
                    r.negative = e.negative ^ t.negative,
                    r.length = 19;
                    var ge = (u + (i = Math.imul(h, q)) | 0) + ((8191 & (n = (n = Math.imul(h, V)) + Math.imul(l, q) | 0)) << 13) | 0;
                    u = ((s = Math.imul(l, V)) + (n >>> 13) | 0) + (ge >>> 26) | 0,
                    ge &= 67108863,
                    i = Math.imul(p, q),
                    n = (n = Math.imul(p, V)) + Math.imul(b, q) | 0,
                    s = Math.imul(b, V);
                    var me = (u + (i = i + Math.imul(h, z) | 0) | 0) + ((8191 & (n = (n = n + Math.imul(h, H) | 0) + Math.imul(l, z) | 0)) << 13) | 0;
                    u = ((s = s + Math.imul(l, H) | 0) + (n >>> 13) | 0) + (me >>> 26) | 0,
                    me &= 67108863,
                    i = Math.imul(m, q),
                    n = (n = Math.imul(m, V)) + Math.imul(y, q) | 0,
                    s = Math.imul(y, V),
                    i = i + Math.imul(p, z) | 0,
                    n = (n = n + Math.imul(p, H) | 0) + Math.imul(b, z) | 0,
                    s = s + Math.imul(b, H) | 0;
                    var ye = (u + (i = i + Math.imul(h, $) | 0) | 0) + ((8191 & (n = (n = n + Math.imul(h, Y) | 0) + Math.imul(l, $) | 0)) << 13) | 0;
                    u = ((s = s + Math.imul(l, Y) | 0) + (n >>> 13) | 0) + (ye >>> 26) | 0,
                    ye &= 67108863,
                    i = Math.imul(w, q),
                    n = (n = Math.imul(w, V)) + Math.imul(E, q) | 0,
                    s = Math.imul(E, V),
                    i = i + Math.imul(m, z) | 0,
                    n = (n = n + Math.imul(m, H) | 0) + Math.imul(y, z) | 0,
                    s = s + Math.imul(y, H) | 0,
                    i = i + Math.imul(p, $) | 0,
                    n = (n = n + Math.imul(p, Y) | 0) + Math.imul(b, $) | 0,
                    s = s + Math.imul(b, Y) | 0;
                    var ve = (u + (i = i + Math.imul(h, Q) | 0) | 0) + ((8191 & (n = (n = n + Math.imul(h, X) | 0) + Math.imul(l, Q) | 0)) << 13) | 0;
                    u = ((s = s + Math.imul(l, X) | 0) + (n >>> 13) | 0) + (ve >>> 26) | 0,
                    ve &= 67108863,
                    i = Math.imul(S, q),
                    n = (n = Math.imul(S, V)) + Math.imul(k, q) | 0,
                    s = Math.imul(k, V),
                    i = i + Math.imul(w, z) | 0,
                    n = (n = n + Math.imul(w, H) | 0) + Math.imul(E, z) | 0,
                    s = s + Math.imul(E, H) | 0,
                    i = i + Math.imul(m, $) | 0,
                    n = (n = n + Math.imul(m, Y) | 0) + Math.imul(y, $) | 0,
                    s = s + Math.imul(y, Y) | 0,
                    i = i + Math.imul(p, Q) | 0,
                    n = (n = n + Math.imul(p, X) | 0) + Math.imul(b, Q) | 0,
                    s = s + Math.imul(b, X) | 0;
                    var we = (u + (i = i + Math.imul(h, J) | 0) | 0) + ((8191 & (n = (n = n + Math.imul(h, ee) | 0) + Math.imul(l, J) | 0)) << 13) | 0;
                    u = ((s = s + Math.imul(l, ee) | 0) + (n >>> 13) | 0) + (we >>> 26) | 0,
                    we &= 67108863,
                    i = Math.imul(C, q),
                    n = (n = Math.imul(C, V)) + Math.imul(I, q) | 0,
                    s = Math.imul(I, V),
                    i = i + Math.imul(S, z) | 0,
                    n = (n = n + Math.imul(S, H) | 0) + Math.imul(k, z) | 0,
                    s = s + Math.imul(k, H) | 0,
                    i = i + Math.imul(w, $) | 0,
                    n = (n = n + Math.imul(w, Y) | 0) + Math.imul(E, $) | 0,
                    s = s + Math.imul(E, Y) | 0,
                    i = i + Math.imul(m, Q) | 0,
                    n = (n = n + Math.imul(m, X) | 0) + Math.imul(y, Q) | 0,
                    s = s + Math.imul(y, X) | 0,
                    i = i + Math.imul(p, J) | 0,
                    n = (n = n + Math.imul(p, ee) | 0) + Math.imul(b, J) | 0,
                    s = s + Math.imul(b, ee) | 0;
                    var Ee = (u + (i = i + Math.imul(h, re) | 0) | 0) + ((8191 & (n = (n = n + Math.imul(h, ie) | 0) + Math.imul(l, re) | 0)) << 13) | 0;
                    u = ((s = s + Math.imul(l, ie) | 0) + (n >>> 13) | 0) + (Ee >>> 26) | 0,
                    Ee &= 67108863,
                    i = Math.imul(B, q),
                    n = (n = Math.imul(B, V)) + Math.imul(M, q) | 0,
                    s = Math.imul(M, V),
                    i = i + Math.imul(C, z) | 0,
                    n = (n = n + Math.imul(C, H) | 0) + Math.imul(I, z) | 0,
                    s = s + Math.imul(I, H) | 0,
                    i = i + Math.imul(S, $) | 0,
                    n = (n = n + Math.imul(S, Y) | 0) + Math.imul(k, $) | 0,
                    s = s + Math.imul(k, Y) | 0,
                    i = i + Math.imul(w, Q) | 0,
                    n = (n = n + Math.imul(w, X) | 0) + Math.imul(E, Q) | 0,
                    s = s + Math.imul(E, X) | 0,
                    i = i + Math.imul(m, J) | 0,
                    n = (n = n + Math.imul(m, ee) | 0) + Math.imul(y, J) | 0,
                    s = s + Math.imul(y, ee) | 0,
                    i = i + Math.imul(p, re) | 0,
                    n = (n = n + Math.imul(p, ie) | 0) + Math.imul(b, re) | 0,
                    s = s + Math.imul(b, ie) | 0;
                    var _e = (u + (i = i + Math.imul(h, se) | 0) | 0) + ((8191 & (n = (n = n + Math.imul(h, oe) | 0) + Math.imul(l, se) | 0)) << 13) | 0;
                    u = ((s = s + Math.imul(l, oe) | 0) + (n >>> 13) | 0) + (_e >>> 26) | 0,
                    _e &= 67108863,
                    i = Math.imul(x, q),
                    n = (n = Math.imul(x, V)) + Math.imul(N, q) | 0,
                    s = Math.imul(N, V),
                    i = i + Math.imul(B, z) | 0,
                    n = (n = n + Math.imul(B, H) | 0) + Math.imul(M, z) | 0,
                    s = s + Math.imul(M, H) | 0,
                    i = i + Math.imul(C, $) | 0,
                    n = (n = n + Math.imul(C, Y) | 0) + Math.imul(I, $) | 0,
                    s = s + Math.imul(I, Y) | 0,
                    i = i + Math.imul(S, Q) | 0,
                    n = (n = n + Math.imul(S, X) | 0) + Math.imul(k, Q) | 0,
                    s = s + Math.imul(k, X) | 0,
                    i = i + Math.imul(w, J) | 0,
                    n = (n = n + Math.imul(w, ee) | 0) + Math.imul(E, J) | 0,
                    s = s + Math.imul(E, ee) | 0,
                    i = i + Math.imul(m, re) | 0,
                    n = (n = n + Math.imul(m, ie) | 0) + Math.imul(y, re) | 0,
                    s = s + Math.imul(y, ie) | 0,
                    i = i + Math.imul(p, se) | 0,
                    n = (n = n + Math.imul(p, oe) | 0) + Math.imul(b, se) | 0,
                    s = s + Math.imul(b, oe) | 0;
                    var Se = (u + (i = i + Math.imul(h, ce) | 0) | 0) + ((8191 & (n = (n = n + Math.imul(h, ue) | 0) + Math.imul(l, ce) | 0)) << 13) | 0;
                    u = ((s = s + Math.imul(l, ue) | 0) + (n >>> 13) | 0) + (Se >>> 26) | 0,
                    Se &= 67108863,
                    i = Math.imul(D, q),
                    n = (n = Math.imul(D, V)) + Math.imul(L, q) | 0,
                    s = Math.imul(L, V),
                    i = i + Math.imul(x, z) | 0,
                    n = (n = n + Math.imul(x, H) | 0) + Math.imul(N, z) | 0,
                    s = s + Math.imul(N, H) | 0,
                    i = i + Math.imul(B, $) | 0,
                    n = (n = n + Math.imul(B, Y) | 0) + Math.imul(M, $) | 0,
                    s = s + Math.imul(M, Y) | 0,
                    i = i + Math.imul(C, Q) | 0,
                    n = (n = n + Math.imul(C, X) | 0) + Math.imul(I, Q) | 0,
                    s = s + Math.imul(I, X) | 0,
                    i = i + Math.imul(S, J) | 0,
                    n = (n = n + Math.imul(S, ee) | 0) + Math.imul(k, J) | 0,
                    s = s + Math.imul(k, ee) | 0,
                    i = i + Math.imul(w, re) | 0,
                    n = (n = n + Math.imul(w, ie) | 0) + Math.imul(E, re) | 0,
                    s = s + Math.imul(E, ie) | 0,
                    i = i + Math.imul(m, se) | 0,
                    n = (n = n + Math.imul(m, oe) | 0) + Math.imul(y, se) | 0,
                    s = s + Math.imul(y, oe) | 0,
                    i = i + Math.imul(p, ce) | 0,
                    n = (n = n + Math.imul(p, ue) | 0) + Math.imul(b, ce) | 0,
                    s = s + Math.imul(b, ue) | 0;
                    var ke = (u + (i = i + Math.imul(h, he) | 0) | 0) + ((8191 & (n = (n = n + Math.imul(h, le) | 0) + Math.imul(l, he) | 0)) << 13) | 0;
                    u = ((s = s + Math.imul(l, le) | 0) + (n >>> 13) | 0) + (ke >>> 26) | 0,
                    ke &= 67108863,
                    i = Math.imul(j, q),
                    n = (n = Math.imul(j, V)) + Math.imul(U, q) | 0,
                    s = Math.imul(U, V),
                    i = i + Math.imul(D, z) | 0,
                    n = (n = n + Math.imul(D, H) | 0) + Math.imul(L, z) | 0,
                    s = s + Math.imul(L, H) | 0,
                    i = i + Math.imul(x, $) | 0,
                    n = (n = n + Math.imul(x, Y) | 0) + Math.imul(N, $) | 0,
                    s = s + Math.imul(N, Y) | 0,
                    i = i + Math.imul(B, Q) | 0,
                    n = (n = n + Math.imul(B, X) | 0) + Math.imul(M, Q) | 0,
                    s = s + Math.imul(M, X) | 0,
                    i = i + Math.imul(C, J) | 0,
                    n = (n = n + Math.imul(C, ee) | 0) + Math.imul(I, J) | 0,
                    s = s + Math.imul(I, ee) | 0,
                    i = i + Math.imul(S, re) | 0,
                    n = (n = n + Math.imul(S, ie) | 0) + Math.imul(k, re) | 0,
                    s = s + Math.imul(k, ie) | 0,
                    i = i + Math.imul(w, se) | 0,
                    n = (n = n + Math.imul(w, oe) | 0) + Math.imul(E, se) | 0,
                    s = s + Math.imul(E, oe) | 0,
                    i = i + Math.imul(m, ce) | 0,
                    n = (n = n + Math.imul(m, ue) | 0) + Math.imul(y, ce) | 0,
                    s = s + Math.imul(y, ue) | 0,
                    i = i + Math.imul(p, he) | 0,
                    n = (n = n + Math.imul(p, le) | 0) + Math.imul(b, he) | 0,
                    s = s + Math.imul(b, le) | 0;
                    var Ae = (u + (i = i + Math.imul(h, pe) | 0) | 0) + ((8191 & (n = (n = n + Math.imul(h, be) | 0) + Math.imul(l, pe) | 0)) << 13) | 0;
                    u = ((s = s + Math.imul(l, be) | 0) + (n >>> 13) | 0) + (Ae >>> 26) | 0,
                    Ae &= 67108863,
                    i = Math.imul(j, z),
                    n = (n = Math.imul(j, H)) + Math.imul(U, z) | 0,
                    s = Math.imul(U, H),
                    i = i + Math.imul(D, $) | 0,
                    n = (n = n + Math.imul(D, Y) | 0) + Math.imul(L, $) | 0,
                    s = s + Math.imul(L, Y) | 0,
                    i = i + Math.imul(x, Q) | 0,
                    n = (n = n + Math.imul(x, X) | 0) + Math.imul(N, Q) | 0,
                    s = s + Math.imul(N, X) | 0,
                    i = i + Math.imul(B, J) | 0,
                    n = (n = n + Math.imul(B, ee) | 0) + Math.imul(M, J) | 0,
                    s = s + Math.imul(M, ee) | 0,
                    i = i + Math.imul(C, re) | 0,
                    n = (n = n + Math.imul(C, ie) | 0) + Math.imul(I, re) | 0,
                    s = s + Math.imul(I, ie) | 0,
                    i = i + Math.imul(S, se) | 0,
                    n = (n = n + Math.imul(S, oe) | 0) + Math.imul(k, se) | 0,
                    s = s + Math.imul(k, oe) | 0,
                    i = i + Math.imul(w, ce) | 0,
                    n = (n = n + Math.imul(w, ue) | 0) + Math.imul(E, ce) | 0,
                    s = s + Math.imul(E, ue) | 0,
                    i = i + Math.imul(m, he) | 0,
                    n = (n = n + Math.imul(m, le) | 0) + Math.imul(y, he) | 0,
                    s = s + Math.imul(y, le) | 0;
                    var Ce = (u + (i = i + Math.imul(p, pe) | 0) | 0) + ((8191 & (n = (n = n + Math.imul(p, be) | 0) + Math.imul(b, pe) | 0)) << 13) | 0;
                    u = ((s = s + Math.imul(b, be) | 0) + (n >>> 13) | 0) + (Ce >>> 26) | 0,
                    Ce &= 67108863,
                    i = Math.imul(j, $),
                    n = (n = Math.imul(j, Y)) + Math.imul(U, $) | 0,
                    s = Math.imul(U, Y),
                    i = i + Math.imul(D, Q) | 0,
                    n = (n = n + Math.imul(D, X) | 0) + Math.imul(L, Q) | 0,
                    s = s + Math.imul(L, X) | 0,
                    i = i + Math.imul(x, J) | 0,
                    n = (n = n + Math.imul(x, ee) | 0) + Math.imul(N, J) | 0,
                    s = s + Math.imul(N, ee) | 0,
                    i = i + Math.imul(B, re) | 0,
                    n = (n = n + Math.imul(B, ie) | 0) + Math.imul(M, re) | 0,
                    s = s + Math.imul(M, ie) | 0,
                    i = i + Math.imul(C, se) | 0,
                    n = (n = n + Math.imul(C, oe) | 0) + Math.imul(I, se) | 0,
                    s = s + Math.imul(I, oe) | 0,
                    i = i + Math.imul(S, ce) | 0,
                    n = (n = n + Math.imul(S, ue) | 0) + Math.imul(k, ce) | 0,
                    s = s + Math.imul(k, ue) | 0,
                    i = i + Math.imul(w, he) | 0,
                    n = (n = n + Math.imul(w, le) | 0) + Math.imul(E, he) | 0,
                    s = s + Math.imul(E, le) | 0;
                    var Ie = (u + (i = i + Math.imul(m, pe) | 0) | 0) + ((8191 & (n = (n = n + Math.imul(m, be) | 0) + Math.imul(y, pe) | 0)) << 13) | 0;
                    u = ((s = s + Math.imul(y, be) | 0) + (n >>> 13) | 0) + (Ie >>> 26) | 0,
                    Ie &= 67108863,
                    i = Math.imul(j, Q),
                    n = (n = Math.imul(j, X)) + Math.imul(U, Q) | 0,
                    s = Math.imul(U, X),
                    i = i + Math.imul(D, J) | 0,
                    n = (n = n + Math.imul(D, ee) | 0) + Math.imul(L, J) | 0,
                    s = s + Math.imul(L, ee) | 0,
                    i = i + Math.imul(x, re) | 0,
                    n = (n = n + Math.imul(x, ie) | 0) + Math.imul(N, re) | 0,
                    s = s + Math.imul(N, ie) | 0,
                    i = i + Math.imul(B, se) | 0,
                    n = (n = n + Math.imul(B, oe) | 0) + Math.imul(M, se) | 0,
                    s = s + Math.imul(M, oe) | 0,
                    i = i + Math.imul(C, ce) | 0,
                    n = (n = n + Math.imul(C, ue) | 0) + Math.imul(I, ce) | 0,
                    s = s + Math.imul(I, ue) | 0,
                    i = i + Math.imul(S, he) | 0,
                    n = (n = n + Math.imul(S, le) | 0) + Math.imul(k, he) | 0,
                    s = s + Math.imul(k, le) | 0;
                    var Te = (u + (i = i + Math.imul(w, pe) | 0) | 0) + ((8191 & (n = (n = n + Math.imul(w, be) | 0) + Math.imul(E, pe) | 0)) << 13) | 0;
                    u = ((s = s + Math.imul(E, be) | 0) + (n >>> 13) | 0) + (Te >>> 26) | 0,
                    Te &= 67108863,
                    i = Math.imul(j, J),
                    n = (n = Math.imul(j, ee)) + Math.imul(U, J) | 0,
                    s = Math.imul(U, ee),
                    i = i + Math.imul(D, re) | 0,
                    n = (n = n + Math.imul(D, ie) | 0) + Math.imul(L, re) | 0,
                    s = s + Math.imul(L, ie) | 0,
                    i = i + Math.imul(x, se) | 0,
                    n = (n = n + Math.imul(x, oe) | 0) + Math.imul(N, se) | 0,
                    s = s + Math.imul(N, oe) | 0,
                    i = i + Math.imul(B, ce) | 0,
                    n = (n = n + Math.imul(B, ue) | 0) + Math.imul(M, ce) | 0,
                    s = s + Math.imul(M, ue) | 0,
                    i = i + Math.imul(C, he) | 0,
                    n = (n = n + Math.imul(C, le) | 0) + Math.imul(I, he) | 0,
                    s = s + Math.imul(I, le) | 0;
                    var Be = (u + (i = i + Math.imul(S, pe) | 0) | 0) + ((8191 & (n = (n = n + Math.imul(S, be) | 0) + Math.imul(k, pe) | 0)) << 13) | 0;
                    u = ((s = s + Math.imul(k, be) | 0) + (n >>> 13) | 0) + (Be >>> 26) | 0,
                    Be &= 67108863,
                    i = Math.imul(j, re),
                    n = (n = Math.imul(j, ie)) + Math.imul(U, re) | 0,
                    s = Math.imul(U, ie),
                    i = i + Math.imul(D, se) | 0,
                    n = (n = n + Math.imul(D, oe) | 0) + Math.imul(L, se) | 0,
                    s = s + Math.imul(L, oe) | 0,
                    i = i + Math.imul(x, ce) | 0,
                    n = (n = n + Math.imul(x, ue) | 0) + Math.imul(N, ce) | 0,
                    s = s + Math.imul(N, ue) | 0,
                    i = i + Math.imul(B, he) | 0,
                    n = (n = n + Math.imul(B, le) | 0) + Math.imul(M, he) | 0,
                    s = s + Math.imul(M, le) | 0;
                    var Me = (u + (i = i + Math.imul(C, pe) | 0) | 0) + ((8191 & (n = (n = n + Math.imul(C, be) | 0) + Math.imul(I, pe) | 0)) << 13) | 0;
                    u = ((s = s + Math.imul(I, be) | 0) + (n >>> 13) | 0) + (Me >>> 26) | 0,
                    Me &= 67108863,
                    i = Math.imul(j, se),
                    n = (n = Math.imul(j, oe)) + Math.imul(U, se) | 0,
                    s = Math.imul(U, oe),
                    i = i + Math.imul(D, ce) | 0,
                    n = (n = n + Math.imul(D, ue) | 0) + Math.imul(L, ce) | 0,
                    s = s + Math.imul(L, ue) | 0,
                    i = i + Math.imul(x, he) | 0,
                    n = (n = n + Math.imul(x, le) | 0) + Math.imul(N, he) | 0,
                    s = s + Math.imul(N, le) | 0;
                    var Re = (u + (i = i + Math.imul(B, pe) | 0) | 0) + ((8191 & (n = (n = n + Math.imul(B, be) | 0) + Math.imul(M, pe) | 0)) << 13) | 0;
                    u = ((s = s + Math.imul(M, be) | 0) + (n >>> 13) | 0) + (Re >>> 26) | 0,
                    Re &= 67108863,
                    i = Math.imul(j, ce),
                    n = (n = Math.imul(j, ue)) + Math.imul(U, ce) | 0,
                    s = Math.imul(U, ue),
                    i = i + Math.imul(D, he) | 0,
                    n = (n = n + Math.imul(D, le) | 0) + Math.imul(L, he) | 0,
                    s = s + Math.imul(L, le) | 0;
                    var xe = (u + (i = i + Math.imul(x, pe) | 0) | 0) + ((8191 & (n = (n = n + Math.imul(x, be) | 0) + Math.imul(N, pe) | 0)) << 13) | 0;
                    u = ((s = s + Math.imul(N, be) | 0) + (n >>> 13) | 0) + (xe >>> 26) | 0,
                    xe &= 67108863,
                    i = Math.imul(j, he),
                    n = (n = Math.imul(j, le)) + Math.imul(U, he) | 0,
                    s = Math.imul(U, le);
                    var Ne = (u + (i = i + Math.imul(D, pe) | 0) | 0) + ((8191 & (n = (n = n + Math.imul(D, be) | 0) + Math.imul(L, pe) | 0)) << 13) | 0;
                    u = ((s = s + Math.imul(L, be) | 0) + (n >>> 13) | 0) + (Ne >>> 26) | 0,
                    Ne &= 67108863;
                    var Pe = (u + (i = Math.imul(j, pe)) | 0) + ((8191 & (n = (n = Math.imul(j, be)) + Math.imul(U, pe) | 0)) << 13) | 0;
                    return u = ((s = Math.imul(U, be)) + (n >>> 13) | 0) + (Pe >>> 26) | 0,
                    Pe &= 67108863,
                    c[0] = ge,
                    c[1] = me,
                    c[2] = ye,
                    c[3] = ve,
                    c[4] = we,
                    c[5] = Ee,
                    c[6] = _e,
                    c[7] = Se,
                    c[8] = ke,
                    c[9] = Ae,
                    c[10] = Ce,
                    c[11] = Ie,
                    c[12] = Te,
                    c[13] = Be,
                    c[14] = Me,
                    c[15] = Re,
                    c[16] = xe,
                    c[17] = Ne,
                    c[18] = Pe,
                    0 !== u && (c[19] = u,
                    r.length++),
                    r
                };
                function p(e, t, r) {
                    return (new b).mulp(e, t, r)
                }
                function b(e, t) {
                    this.x = e,
                    this.y = t
                }
                Math.imul || (d = l),
                s.prototype.mulTo = function(e, t) {
                    var r = this.length + e.length;
                    return 10 === this.length && 10 === e.length ? d(this, e, t) : r < 63 ? l(this, e, t) : r < 1024 ? function(e, t, r) {
                        r.negative = t.negative ^ e.negative,
                        r.length = e.length + t.length;
                        for (var i = 0, n = 0, s = 0; s < r.length - 1; s++) {
                            var o = n;
                            n = 0;
                            for (var a = 67108863 & i, c = Math.min(s, t.length - 1), u = Math.max(0, s - e.length + 1); u <= c; u++) {
                                var f = s - u
                                  , h = (0 | e.words[f]) * (0 | t.words[u])
                                  , l = 67108863 & h;
                                a = 67108863 & (l = l + a | 0),
                                n += (o = (o = o + (h / 67108864 | 0) | 0) + (l >>> 26) | 0) >>> 26,
                                o &= 67108863
                            }
                            r.words[s] = a,
                            i = o,
                            o = n
                        }
                        return 0 !== i ? r.words[s] = i : r.length--,
                        r.strip()
                    }(this, e, t) : p(this, e, t)
                }
                ,
                b.prototype.makeRBT = function(e) {
                    for (var t = new Array(e), r = s.prototype._countBits(e) - 1, i = 0; i < e; i++)
                        t[i] = this.revBin(i, r, e);
                    return t
                }
                ,
                b.prototype.revBin = function(e, t, r) {
                    if (0 === e || e === r - 1)
                        return e;
                    for (var i = 0, n = 0; n < t; n++)
                        i |= (1 & e) << t - n - 1,
                        e >>= 1;
                    return i
                }
                ,
                b.prototype.permute = function(e, t, r, i, n, s) {
                    for (var o = 0; o < s; o++)
                        i[o] = t[e[o]],
                        n[o] = r[e[o]]
                }
                ,
                b.prototype.transform = function(e, t, r, i, n, s) {
                    this.permute(s, e, t, r, i, n);
                    for (var o = 1; o < n; o <<= 1)
                        for (var a = o << 1, c = Math.cos(2 * Math.PI / a), u = Math.sin(2 * Math.PI / a), f = 0; f < n; f += a)
                            for (var h = c, l = u, d = 0; d < o; d++) {
                                var p = r[f + d]
                                  , b = i[f + d]
                                  , g = r[f + d + o]
                                  , m = i[f + d + o]
                                  , y = h * g - l * m;
                                m = h * m + l * g,
                                g = y,
                                r[f + d] = p + g,
                                i[f + d] = b + m,
                                r[f + d + o] = p - g,
                                i[f + d + o] = b - m,
                                d !== a && (y = c * h - u * l,
                                l = c * l + u * h,
                                h = y)
                            }
                }
                ,
                b.prototype.guessLen13b = function(e, t) {
                    var r = 1 | Math.max(t, e)
                      , i = 1 & r
                      , n = 0;
                    for (r = r / 2 | 0; r; r >>>= 1)
                        n++;
                    return 1 << n + 1 + i
                }
                ,
                b.prototype.conjugate = function(e, t, r) {
                    if (!(r <= 1))
                        for (var i = 0; i < r / 2; i++) {
                            var n = e[i];
                            e[i] = e[r - i - 1],
                            e[r - i - 1] = n,
                            n = t[i],
                            t[i] = -t[r - i - 1],
                            t[r - i - 1] = -n
                        }
                }
                ,
                b.prototype.normalize13b = function(e, t) {
                    for (var r = 0, i = 0; i < t / 2; i++) {
                        var n = 8192 * Math.round(e[2 * i + 1] / t) + Math.round(e[2 * i] / t) + r;
                        e[i] = 67108863 & n,
                        r = n < 67108864 ? 0 : n / 67108864 | 0
                    }
                    return e
                }
                ,
                b.prototype.convert13b = function(e, t, r, n) {
                    for (var s = 0, o = 0; o < t; o++)
                        s += 0 | e[o],
                        r[2 * o] = 8191 & s,
                        s >>>= 13,
                        r[2 * o + 1] = 8191 & s,
                        s >>>= 13;
                    for (o = 2 * t; o < n; ++o)
                        r[o] = 0;
                    i(0 === s),
                    i(0 == (-8192 & s))
                }
                ,
                b.prototype.stub = function(e) {
                    for (var t = new Array(e), r = 0; r < e; r++)
                        t[r] = 0;
                    return t
                }
                ,
                b.prototype.mulp = function(e, t, r) {
                    var i = 2 * this.guessLen13b(e.length, t.length)
                      , n = this.makeRBT(i)
                      , s = this.stub(i)
                      , o = new Array(i)
                      , a = new Array(i)
                      , c = new Array(i)
                      , u = new Array(i)
                      , f = new Array(i)
                      , h = new Array(i)
                      , l = r.words;
                    l.length = i,
                    this.convert13b(e.words, e.length, o, i),
                    this.convert13b(t.words, t.length, u, i),
                    this.transform(o, s, a, c, i, n),
                    this.transform(u, s, f, h, i, n);
                    for (var d = 0; d < i; d++) {
                        var p = a[d] * f[d] - c[d] * h[d];
                        c[d] = a[d] * h[d] + c[d] * f[d],
                        a[d] = p
                    }
                    return this.conjugate(a, c, i),
                    this.transform(a, c, l, s, i, n),
                    this.conjugate(l, s, i),
                    this.normalize13b(l, i),
                    r.negative = e.negative ^ t.negative,
                    r.length = e.length + t.length,
                    r.strip()
                }
                ,
                s.prototype.mul = function(e) {
                    var t = new s(null);
                    return t.words = new Array(this.length + e.length),
                    this.mulTo(e, t)
                }
                ,
                s.prototype.mulf = function(e) {
                    var t = new s(null);
                    return t.words = new Array(this.length + e.length),
                    p(this, e, t)
                }
                ,
                s.prototype.imul = function(e) {
                    return this.clone().mulTo(e, this)
                }
                ,
                s.prototype.imuln = function(e) {
                    i("number" == typeof e),
                    i(e < 67108864);
                    for (var t = 0, r = 0; r < this.length; r++) {
                        var n = (0 | this.words[r]) * e
                          , s = (67108863 & n) + (67108863 & t);
                        t >>= 26,
                        t += n / 67108864 | 0,
                        t += s >>> 26,
                        this.words[r] = 67108863 & s
                    }
                    return 0 !== t && (this.words[r] = t,
                    this.length++),
                    this
                }
                ,
                s.prototype.muln = function(e) {
                    return this.clone().imuln(e)
                }
                ,
                s.prototype.sqr = function() {
                    return this.mul(this)
                }
                ,
                s.prototype.isqr = function() {
                    return this.imul(this.clone())
                }
                ,
                s.prototype.pow = function(e) {
                    var t = function(e) {
                        for (var t = new Array(e.bitLength()), r = 0; r < t.length; r++) {
                            var i = r / 26 | 0
                              , n = r % 26;
                            t[r] = (e.words[i] & 1 << n) >>> n
                        }
                        return t
                    }(e);
                    if (0 === t.length)
                        return new s(1);
                    for (var r = this, i = 0; i < t.length && 0 === t[i]; i++,
                    r = r.sqr())
                        ;
                    if (++i < t.length)
                        for (var n = r.sqr(); i < t.length; i++,
                        n = n.sqr())
                            0 !== t[i] && (r = r.mul(n));
                    return r
                }
                ,
                s.prototype.iushln = function(e) {
                    i("number" == typeof e && e >= 0);
                    var t, r = e % 26, n = (e - r) / 26, s = 67108863 >>> 26 - r << 26 - r;
                    if (0 !== r) {
                        var o = 0;
                        for (t = 0; t < this.length; t++) {
                            var a = this.words[t] & s
                              , c = (0 | this.words[t]) - a << r;
                            this.words[t] = c | o,
                            o = a >>> 26 - r
                        }
                        o && (this.words[t] = o,
                        this.length++)
                    }
                    if (0 !== n) {
                        for (t = this.length - 1; t >= 0; t--)
                            this.words[t + n] = this.words[t];
                        for (t = 0; t < n; t++)
                            this.words[t] = 0;
                        this.length += n
                    }
                    return this.strip()
                }
                ,
                s.prototype.ishln = function(e) {
                    return i(0 === this.negative),
                    this.iushln(e)
                }
                ,
                s.prototype.iushrn = function(e, t, r) {
                    var n;
                    i("number" == typeof e && e >= 0),
                    n = t ? (t - t % 26) / 26 : 0;
                    var s = e % 26
                      , o = Math.min((e - s) / 26, this.length)
                      , a = 67108863 ^ 67108863 >>> s << s
                      , c = r;
                    if (n -= o,
                    n = Math.max(0, n),
                    c) {
                        for (var u = 0; u < o; u++)
                            c.words[u] = this.words[u];
                        c.length = o
                    }
                    if (0 === o)
                        ;
                    else if (this.length > o)
                        for (this.length -= o,
                        u = 0; u < this.length; u++)
                            this.words[u] = this.words[u + o];
                    else
                        this.words[0] = 0,
                        this.length = 1;
                    var f = 0;
                    for (u = this.length - 1; u >= 0 && (0 !== f || u >= n); u--) {
                        var h = 0 | this.words[u];
                        this.words[u] = f << 26 - s | h >>> s,
                        f = h & a
                    }
                    return c && 0 !== f && (c.words[c.length++] = f),
                    0 === this.length && (this.words[0] = 0,
                    this.length = 1),
                    this.strip()
                }
                ,
                s.prototype.ishrn = function(e, t, r) {
                    return i(0 === this.negative),
                    this.iushrn(e, t, r)
                }
                ,
                s.prototype.shln = function(e) {
                    return this.clone().ishln(e)
                }
                ,
                s.prototype.ushln = function(e) {
                    return this.clone().iushln(e)
                }
                ,
                s.prototype.shrn = function(e) {
                    return this.clone().ishrn(e)
                }
                ,
                s.prototype.ushrn = function(e) {
                    return this.clone().iushrn(e)
                }
                ,
                s.prototype.testn = function(e) {
                    i("number" == typeof e && e >= 0);
                    var t = e % 26
                      , r = (e - t) / 26
                      , n = 1 << t;
                    return !(this.length <= r) && !!(this.words[r] & n)
                }
                ,
                s.prototype.imaskn = function(e) {
                    i("number" == typeof e && e >= 0);
                    var t = e % 26
                      , r = (e - t) / 26;
                    if (i(0 === this.negative, "imaskn works only with positive numbers"),
                    this.length <= r)
                        return this;
                    if (0 !== t && r++,
                    this.length = Math.min(r, this.length),
                    0 !== t) {
                        var n = 67108863 ^ 67108863 >>> t << t;
                        this.words[this.length - 1] &= n
                    }
                    return this.strip()
                }
                ,
                s.prototype.maskn = function(e) {
                    return this.clone().imaskn(e)
                }
                ,
                s.prototype.iaddn = function(e) {
                    return i("number" == typeof e),
                    i(e < 67108864),
                    e < 0 ? this.isubn(-e) : 0 !== this.negative ? 1 === this.length && (0 | this.words[0]) < e ? (this.words[0] = e - (0 | this.words[0]),
                    this.negative = 0,
                    this) : (this.negative = 0,
                    this.isubn(e),
                    this.negative = 1,
                    this) : this._iaddn(e)
                }
                ,
                s.prototype._iaddn = function(e) {
                    this.words[0] += e;
                    for (var t = 0; t < this.length && this.words[t] >= 67108864; t++)
                        this.words[t] -= 67108864,
                        t === this.length - 1 ? this.words[t + 1] = 1 : this.words[t + 1]++;
                    return this.length = Math.max(this.length, t + 1),
                    this
                }
                ,
                s.prototype.isubn = function(e) {
                    if (i("number" == typeof e),
                    i(e < 67108864),
                    e < 0)
                        return this.iaddn(-e);
                    if (0 !== this.negative)
                        return this.negative = 0,
                        this.iaddn(e),
                        this.negative = 1,
                        this;
                    if (this.words[0] -= e,
                    1 === this.length && this.words[0] < 0)
                        this.words[0] = -this.words[0],
                        this.negative = 1;
                    else
                        for (var t = 0; t < this.length && this.words[t] < 0; t++)
                            this.words[t] += 67108864,
                            this.words[t + 1] -= 1;
                    return this.strip()
                }
                ,
                s.prototype.addn = function(e) {
                    return this.clone().iaddn(e)
                }
                ,
                s.prototype.subn = function(e) {
                    return this.clone().isubn(e)
                }
                ,
                s.prototype.iabs = function() {
                    return this.negative = 0,
                    this
                }
                ,
                s.prototype.abs = function() {
                    return this.clone().iabs()
                }
                ,
                s.prototype._ishlnsubmul = function(e, t, r) {
                    var n, s, o = e.length + r;
                    this._expand(o);
                    var a = 0;
                    for (n = 0; n < e.length; n++) {
                        s = (0 | this.words[n + r]) + a;
                        var c = (0 | e.words[n]) * t;
                        a = ((s -= 67108863 & c) >> 26) - (c / 67108864 | 0),
                        this.words[n + r] = 67108863 & s
                    }
                    for (; n < this.length - r; n++)
                        a = (s = (0 | this.words[n + r]) + a) >> 26,
                        this.words[n + r] = 67108863 & s;
                    if (0 === a)
                        return this.strip();
                    for (i(-1 === a),
                    a = 0,
                    n = 0; n < this.length; n++)
                        a = (s = -(0 | this.words[n]) + a) >> 26,
                        this.words[n] = 67108863 & s;
                    return this.negative = 1,
                    this.strip()
                }
                ,
                s.prototype._wordDiv = function(e, t) {
                    var r = (this.length,
                    e.length)
                      , i = this.clone()
                      , n = e
                      , o = 0 | n.words[n.length - 1];
                    0 !== (r = 26 - this._countBits(o)) && (n = n.ushln(r),
                    i.iushln(r),
                    o = 0 | n.words[n.length - 1]);
                    var a, c = i.length - n.length;
                    if ("mod" !== t) {
                        (a = new s(null)).length = c + 1,
                        a.words = new Array(a.length);
                        for (var u = 0; u < a.length; u++)
                            a.words[u] = 0
                    }
                    var f = i.clone()._ishlnsubmul(n, 1, c);
                    0 === f.negative && (i = f,
                    a && (a.words[c] = 1));
                    for (var h = c - 1; h >= 0; h--) {
                        var l = 67108864 * (0 | i.words[n.length + h]) + (0 | i.words[n.length + h - 1]);
                        for (l = Math.min(l / o | 0, 67108863),
                        i._ishlnsubmul(n, l, h); 0 !== i.negative; )
                            l--,
                            i.negative = 0,
                            i._ishlnsubmul(n, 1, h),
                            i.isZero() || (i.negative ^= 1);
                        a && (a.words[h] = l)
                    }
                    return a && a.strip(),
                    i.strip(),
                    "div" !== t && 0 !== r && i.iushrn(r),
                    {
                        div: a || null,
                        mod: i
                    }
                }
                ,
                s.prototype.divmod = function(e, t, r) {
                    return i(!e.isZero()),
                    this.isZero() ? {
                        div: new s(0),
                        mod: new s(0)
                    } : 0 !== this.negative && 0 === e.negative ? (a = this.neg().divmod(e, t),
                    "mod" !== t && (n = a.div.neg()),
                    "div" !== t && (o = a.mod.neg(),
                    r && 0 !== o.negative && o.iadd(e)),
                    {
                        div: n,
                        mod: o
                    }) : 0 === this.negative && 0 !== e.negative ? (a = this.divmod(e.neg(), t),
                    "mod" !== t && (n = a.div.neg()),
                    {
                        div: n,
                        mod: a.mod
                    }) : 0 != (this.negative & e.negative) ? (a = this.neg().divmod(e.neg(), t),
                    "div" !== t && (o = a.mod.neg(),
                    r && 0 !== o.negative && o.isub(e)),
                    {
                        div: a.div,
                        mod: o
                    }) : e.length > this.length || this.cmp(e) < 0 ? {
                        div: new s(0),
                        mod: this
                    } : 1 === e.length ? "div" === t ? {
                        div: this.divn(e.words[0]),
                        mod: null
                    } : "mod" === t ? {
                        div: null,
                        mod: new s(this.modn(e.words[0]))
                    } : {
                        div: this.divn(e.words[0]),
                        mod: new s(this.modn(e.words[0]))
                    } : this._wordDiv(e, t);
                    var n, o, a
                }
                ,
                s.prototype.div = function(e) {
                    return this.divmod(e, "div", !1).div
                }
                ,
                s.prototype.mod = function(e) {
                    return this.divmod(e, "mod", !1).mod
                }
                ,
                s.prototype.umod = function(e) {
                    return this.divmod(e, "mod", !0).mod
                }
                ,
                s.prototype.divRound = function(e) {
                    var t = this.divmod(e);
                    if (t.mod.isZero())
                        return t.div;
                    var r = 0 !== t.div.negative ? t.mod.isub(e) : t.mod
                      , i = e.ushrn(1)
                      , n = e.andln(1)
                      , s = r.cmp(i);
                    return s < 0 || 1 === n && 0 === s ? t.div : 0 !== t.div.negative ? t.div.isubn(1) : t.div.iaddn(1)
                }
                ,
                s.prototype.modn = function(e) {
                    i(e <= 67108863);
                    for (var t = (1 << 26) % e, r = 0, n = this.length - 1; n >= 0; n--)
                        r = (t * r + (0 | this.words[n])) % e;
                    return r
                }
                ,
                s.prototype.idivn = function(e) {
                    i(e <= 67108863);
                    for (var t = 0, r = this.length - 1; r >= 0; r--) {
                        var n = (0 | this.words[r]) + 67108864 * t;
                        this.words[r] = n / e | 0,
                        t = n % e
                    }
                    return this.strip()
                }
                ,
                s.prototype.divn = function(e) {
                    return this.clone().idivn(e)
                }
                ,
                s.prototype.egcd = function(e) {
                    i(0 === e.negative),
                    i(!e.isZero());
                    var t = this
                      , r = e.clone();
                    t = 0 !== t.negative ? t.umod(e) : t.clone();
                    for (var n = new s(1), o = new s(0), a = new s(0), c = new s(1), u = 0; t.isEven() && r.isEven(); )
                        t.iushrn(1),
                        r.iushrn(1),
                        ++u;
                    for (var f = r.clone(), h = t.clone(); !t.isZero(); ) {
                        for (var l = 0, d = 1; 0 == (t.words[0] & d) && l < 26; ++l,
                        d <<= 1)
                            ;
                        if (l > 0)
                            for (t.iushrn(l); l-- > 0; )
                                (n.isOdd() || o.isOdd()) && (n.iadd(f),
                                o.isub(h)),
                                n.iushrn(1),
                                o.iushrn(1);
                        for (var p = 0, b = 1; 0 == (r.words[0] & b) && p < 26; ++p,
                        b <<= 1)
                            ;
                        if (p > 0)
                            for (r.iushrn(p); p-- > 0; )
                                (a.isOdd() || c.isOdd()) && (a.iadd(f),
                                c.isub(h)),
                                a.iushrn(1),
                                c.iushrn(1);
                        t.cmp(r) >= 0 ? (t.isub(r),
                        n.isub(a),
                        o.isub(c)) : (r.isub(t),
                        a.isub(n),
                        c.isub(o))
                    }
                    return {
                        a: a,
                        b: c,
                        gcd: r.iushln(u)
                    }
                }
                ,
                s.prototype._invmp = function(e) {
                    i(0 === e.negative),
                    i(!e.isZero());
                    var t = this
                      , r = e.clone();
                    t = 0 !== t.negative ? t.umod(e) : t.clone();
                    for (var n, o = new s(1), a = new s(0), c = r.clone(); t.cmpn(1) > 0 && r.cmpn(1) > 0; ) {
                        for (var u = 0, f = 1; 0 == (t.words[0] & f) && u < 26; ++u,
                        f <<= 1)
                            ;
                        if (u > 0)
                            for (t.iushrn(u); u-- > 0; )
                                o.isOdd() && o.iadd(c),
                                o.iushrn(1);
                        for (var h = 0, l = 1; 0 == (r.words[0] & l) && h < 26; ++h,
                        l <<= 1)
                            ;
                        if (h > 0)
                            for (r.iushrn(h); h-- > 0; )
                                a.isOdd() && a.iadd(c),
                                a.iushrn(1);
                        t.cmp(r) >= 0 ? (t.isub(r),
                        o.isub(a)) : (r.isub(t),
                        a.isub(o))
                    }
                    return (n = 0 === t.cmpn(1) ? o : a).cmpn(0) < 0 && n.iadd(e),
                    n
                }
                ,
                s.prototype.gcd = function(e) {
                    if (this.isZero())
                        return e.abs();
                    if (e.isZero())
                        return this.abs();
                    var t = this.clone()
                      , r = e.clone();
                    t.negative = 0,
                    r.negative = 0;
                    for (var i = 0; t.isEven() && r.isEven(); i++)
                        t.iushrn(1),
                        r.iushrn(1);
                    for (; ; ) {
                        for (; t.isEven(); )
                            t.iushrn(1);
                        for (; r.isEven(); )
                            r.iushrn(1);
                        var n = t.cmp(r);
                        if (n < 0) {
                            var s = t;
                            t = r,
                            r = s
                        } else if (0 === n || 0 === r.cmpn(1))
                            break;
                        t.isub(r)
                    }
                    return r.iushln(i)
                }
                ,
                s.prototype.invm = function(e) {
                    return this.egcd(e).a.umod(e)
                }
                ,
                s.prototype.isEven = function() {
                    return 0 == (1 & this.words[0])
                }
                ,
                s.prototype.isOdd = function() {
                    return 1 == (1 & this.words[0])
                }
                ,
                s.prototype.andln = function(e) {
                    return this.words[0] & e
                }
                ,
                s.prototype.bincn = function(e) {
                    i("number" == typeof e);
                    var t = e % 26
                      , r = (e - t) / 26
                      , n = 1 << t;
                    if (this.length <= r)
                        return this._expand(r + 1),
                        this.words[r] |= n,
                        this;
                    for (var s = n, o = r; 0 !== s && o < this.length; o++) {
                        var a = 0 | this.words[o];
                        s = (a += s) >>> 26,
                        a &= 67108863,
                        this.words[o] = a
                    }
                    return 0 !== s && (this.words[o] = s,
                    this.length++),
                    this
                }
                ,
                s.prototype.isZero = function() {
                    return 1 === this.length && 0 === this.words[0]
                }
                ,
                s.prototype.cmpn = function(e) {
                    var t, r = e < 0;
                    if (0 !== this.negative && !r)
                        return -1;
                    if (0 === this.negative && r)
                        return 1;
                    if (this.strip(),
                    this.length > 1)
                        t = 1;
                    else {
                        r && (e = -e),
                        i(e <= 67108863, "Number is too big");
                        var n = 0 | this.words[0];
                        t = n === e ? 0 : n < e ? -1 : 1
                    }
                    return 0 !== this.negative ? 0 | -t : t
                }
                ,
                s.prototype.cmp = function(e) {
                    if (0 !== this.negative && 0 === e.negative)
                        return -1;
                    if (0 === this.negative && 0 !== e.negative)
                        return 1;
                    var t = this.ucmp(e);
                    return 0 !== this.negative ? 0 | -t : t
                }
                ,
                s.prototype.ucmp = function(e) {
                    if (this.length > e.length)
                        return 1;
                    if (this.length < e.length)
                        return -1;
                    for (var t = 0, r = this.length - 1; r >= 0; r--) {
                        var i = 0 | this.words[r]
                          , n = 0 | e.words[r];
                        if (i !== n) {
                            i < n ? t = -1 : i > n && (t = 1);
                            break
                        }
                    }
                    return t
                }
                ,
                s.prototype.gtn = function(e) {
                    return 1 === this.cmpn(e)
                }
                ,
                s.prototype.gt = function(e) {
                    return 1 === this.cmp(e)
                }
                ,
                s.prototype.gten = function(e) {
                    return this.cmpn(e) >= 0
                }
                ,
                s.prototype.gte = function(e) {
                    return this.cmp(e) >= 0
                }
                ,
                s.prototype.ltn = function(e) {
                    return -1 === this.cmpn(e)
                }
                ,
                s.prototype.lt = function(e) {
                    return -1 === this.cmp(e)
                }
                ,
                s.prototype.lten = function(e) {
                    return this.cmpn(e) <= 0
                }
                ,
                s.prototype.lte = function(e) {
                    return this.cmp(e) <= 0
                }
                ,
                s.prototype.eqn = function(e) {
                    return 0 === this.cmpn(e)
                }
                ,
                s.prototype.eq = function(e) {
                    return 0 === this.cmp(e)
                }
                ,
                s.red = function(e) {
                    return new _(e)
                }
                ,
                s.prototype.toRed = function(e) {
                    return i(!this.red, "Already a number in reduction context"),
                    i(0 === this.negative, "red works only with positives"),
                    e.convertTo(this)._forceRed(e)
                }
                ,
                s.prototype.fromRed = function() {
                    return i(this.red, "fromRed works only with numbers in reduction context"),
                    this.red.convertFrom(this)
                }
                ,
                s.prototype._forceRed = function(e) {
                    return this.red = e,
                    this
                }
                ,
                s.prototype.forceRed = function(e) {
                    return i(!this.red, "Already a number in reduction context"),
                    this._forceRed(e)
                }
                ,
                s.prototype.redAdd = function(e) {
                    return i(this.red, "redAdd works only with red numbers"),
                    this.red.add(this, e)
                }
                ,
                s.prototype.redIAdd = function(e) {
                    return i(this.red, "redIAdd works only with red numbers"),
                    this.red.iadd(this, e)
                }
                ,
                s.prototype.redSub = function(e) {
                    return i(this.red, "redSub works only with red numbers"),
                    this.red.sub(this, e)
                }
                ,
                s.prototype.redISub = function(e) {
                    return i(this.red, "redISub works only with red numbers"),
                    this.red.isub(this, e)
                }
                ,
                s.prototype.redShl = function(e) {
                    return i(this.red, "redShl works only with red numbers"),
                    this.red.shl(this, e)
                }
                ,
                s.prototype.redMul = function(e) {
                    return i(this.red, "redMul works only with red numbers"),
                    this.red._verify2(this, e),
                    this.red.mul(this, e)
                }
                ,
                s.prototype.redIMul = function(e) {
                    return i(this.red, "redMul works only with red numbers"),
                    this.red._verify2(this, e),
                    this.red.imul(this, e)
                }
                ,
                s.prototype.redSqr = function() {
                    return i(this.red, "redSqr works only with red numbers"),
                    this.red._verify1(this),
                    this.red.sqr(this)
                }
                ,
                s.prototype.redISqr = function() {
                    return i(this.red, "redISqr works only with red numbers"),
                    this.red._verify1(this),
                    this.red.isqr(this)
                }
                ,
                s.prototype.redSqrt = function() {
                    return i(this.red, "redSqrt works only with red numbers"),
                    this.red._verify1(this),
                    this.red.sqrt(this)
                }
                ,
                s.prototype.redInvm = function() {
                    return i(this.red, "redInvm works only with red numbers"),
                    this.red._verify1(this),
                    this.red.invm(this)
                }
                ,
                s.prototype.redNeg = function() {
                    return i(this.red, "redNeg works only with red numbers"),
                    this.red._verify1(this),
                    this.red.neg(this)
                }
                ,
                s.prototype.redPow = function(e) {
                    return i(this.red && !e.red, "redPow(normalNum)"),
                    this.red._verify1(this),
                    this.red.pow(this, e)
                }
                ;
                var g = {
                    k256: null,
                    p224: null,
                    p192: null,
                    p25519: null
                };
                function m(e, t) {
                    this.name = e,
                    this.p = new s(t,16),
                    this.n = this.p.bitLength(),
                    this.k = new s(1).iushln(this.n).isub(this.p),
                    this.tmp = this._tmp()
                }
                function y() {
                    m.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")
                }
                function v() {
                    m.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")
                }
                function w() {
                    m.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")
                }
                function E() {
                    m.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")
                }
                function _(e) {
                    if ("string" == typeof e) {
                        var t = s._prime(e);
                        this.m = t.p,
                        this.prime = t
                    } else
                        i(e.gtn(1), "modulus must be greater than 1"),
                        this.m = e,
                        this.prime = null
                }
                function S(e) {
                    _.call(this, e),
                    this.shift = this.m.bitLength(),
                    this.shift % 26 != 0 && (this.shift += 26 - this.shift % 26),
                    this.r = new s(1).iushln(this.shift),
                    this.r2 = this.imod(this.r.sqr()),
                    this.rinv = this.r._invmp(this.m),
                    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m),
                    this.minv = this.minv.umod(this.r),
                    this.minv = this.r.sub(this.minv)
                }
                m.prototype._tmp = function() {
                    var e = new s(null);
                    return e.words = new Array(Math.ceil(this.n / 13)),
                    e
                }
                ,
                m.prototype.ireduce = function(e) {
                    var t, r = e;
                    do {
                        this.split(r, this.tmp),
                        t = (r = (r = this.imulK(r)).iadd(this.tmp)).bitLength()
                    } while (t > this.n);var i = t < this.n ? -1 : r.ucmp(this.p);
                    return 0 === i ? (r.words[0] = 0,
                    r.length = 1) : i > 0 ? r.isub(this.p) : void 0 !== r.strip ? r.strip() : r._strip(),
                    r
                }
                ,
                m.prototype.split = function(e, t) {
                    e.iushrn(this.n, 0, t)
                }
                ,
                m.prototype.imulK = function(e) {
                    return e.imul(this.k)
                }
                ,
                n(y, m),
                y.prototype.split = function(e, t) {
                    for (var r = Math.min(e.length, 9), i = 0; i < r; i++)
                        t.words[i] = e.words[i];
                    if (t.length = r,
                    e.length <= 9)
                        return e.words[0] = 0,
                        void (e.length = 1);
                    var n = e.words[9];
                    for (t.words[t.length++] = 4194303 & n,
                    i = 10; i < e.length; i++) {
                        var s = 0 | e.words[i];
                        e.words[i - 10] = (4194303 & s) << 4 | n >>> 22,
                        n = s
                    }
                    n >>>= 22,
                    e.words[i - 10] = n,
                    0 === n && e.length > 10 ? e.length -= 10 : e.length -= 9
                }
                ,
                y.prototype.imulK = function(e) {
                    e.words[e.length] = 0,
                    e.words[e.length + 1] = 0,
                    e.length += 2;
                    for (var t = 0, r = 0; r < e.length; r++) {
                        var i = 0 | e.words[r];
                        t += 977 * i,
                        e.words[r] = 67108863 & t,
                        t = 64 * i + (t / 67108864 | 0)
                    }
                    return 0 === e.words[e.length - 1] && (e.length--,
                    0 === e.words[e.length - 1] && e.length--),
                    e
                }
                ,
                n(v, m),
                n(w, m),
                n(E, m),
                E.prototype.imulK = function(e) {
                    for (var t = 0, r = 0; r < e.length; r++) {
                        var i = 19 * (0 | e.words[r]) + t
                          , n = 67108863 & i;
                        i >>>= 26,
                        e.words[r] = n,
                        t = i
                    }
                    return 0 !== t && (e.words[e.length++] = t),
                    e
                }
                ,
                s._prime = function(e) {
                    if (g[e])
                        return g[e];
                    var t;
                    if ("k256" === e)
                        t = new y;
                    else if ("p224" === e)
                        t = new v;
                    else if ("p192" === e)
                        t = new w;
                    else {
                        if ("p25519" !== e)
                            throw new Error("Unknown prime " + e);
                        t = new E
                    }
                    return g[e] = t,
                    t
                }
                ,
                _.prototype._verify1 = function(e) {
                    i(0 === e.negative, "red works only with positives"),
                    i(e.red, "red works only with red numbers")
                }
                ,
                _.prototype._verify2 = function(e, t) {
                    i(0 == (e.negative | t.negative), "red works only with positives"),
                    i(e.red && e.red === t.red, "red works only with red numbers")
                }
                ,
                _.prototype.imod = function(e) {
                    return this.prime ? this.prime.ireduce(e)._forceRed(this) : e.umod(this.m)._forceRed(this)
                }
                ,
                _.prototype.neg = function(e) {
                    return e.isZero() ? e.clone() : this.m.sub(e)._forceRed(this)
                }
                ,
                _.prototype.add = function(e, t) {
                    this._verify2(e, t);
                    var r = e.add(t);
                    return r.cmp(this.m) >= 0 && r.isub(this.m),
                    r._forceRed(this)
                }
                ,
                _.prototype.iadd = function(e, t) {
                    this._verify2(e, t);
                    var r = e.iadd(t);
                    return r.cmp(this.m) >= 0 && r.isub(this.m),
                    r
                }
                ,
                _.prototype.sub = function(e, t) {
                    this._verify2(e, t);
                    var r = e.sub(t);
                    return r.cmpn(0) < 0 && r.iadd(this.m),
                    r._forceRed(this)
                }
                ,
                _.prototype.isub = function(e, t) {
                    this._verify2(e, t);
                    var r = e.isub(t);
                    return r.cmpn(0) < 0 && r.iadd(this.m),
                    r
                }
                ,
                _.prototype.shl = function(e, t) {
                    return this._verify1(e),
                    this.imod(e.ushln(t))
                }
                ,
                _.prototype.imul = function(e, t) {
                    return this._verify2(e, t),
                    this.imod(e.imul(t))
                }
                ,
                _.prototype.mul = function(e, t) {
                    return this._verify2(e, t),
                    this.imod(e.mul(t))
                }
                ,
                _.prototype.isqr = function(e) {
                    return this.imul(e, e.clone())
                }
                ,
                _.prototype.sqr = function(e) {
                    return this.mul(e, e)
                }
                ,
                _.prototype.sqrt = function(e) {
                    if (e.isZero())
                        return e.clone();
                    var t = this.m.andln(3);
                    if (i(t % 2 == 1),
                    3 === t) {
                        var r = this.m.add(new s(1)).iushrn(2);
                        return this.pow(e, r)
                    }
                    for (var n = this.m.subn(1), o = 0; !n.isZero() && 0 === n.andln(1); )
                        o++,
                        n.iushrn(1);
                    i(!n.isZero());
                    var a = new s(1).toRed(this)
                      , c = a.redNeg()
                      , u = this.m.subn(1).iushrn(1)
                      , f = this.m.bitLength();
                    for (f = new s(2 * f * f).toRed(this); 0 !== this.pow(f, u).cmp(c); )
                        f.redIAdd(c);
                    for (var h = this.pow(f, n), l = this.pow(e, n.addn(1).iushrn(1)), d = this.pow(e, n), p = o; 0 !== d.cmp(a); ) {
                        for (var b = d, g = 0; 0 !== b.cmp(a); g++)
                            b = b.redSqr();
                        i(g < p);
                        var m = this.pow(h, new s(1).iushln(p - g - 1));
                        l = l.redMul(m),
                        h = m.redSqr(),
                        d = d.redMul(h),
                        p = g
                    }
                    return l
                }
                ,
                _.prototype.invm = function(e) {
                    var t = e._invmp(this.m);
                    return 0 !== t.negative ? (t.negative = 0,
                    this.imod(t).redNeg()) : this.imod(t)
                }
                ,
                _.prototype.pow = function(e, t) {
                    if (t.isZero())
                        return new s(1).toRed(this);
                    if (0 === t.cmpn(1))
                        return e.clone();
                    var r = new Array(16);
                    r[0] = new s(1).toRed(this),
                    r[1] = e;
                    for (var i = 2; i < r.length; i++)
                        r[i] = this.mul(r[i - 1], e);
                    var n = r[0]
                      , o = 0
                      , a = 0
                      , c = t.bitLength() % 26;
                    for (0 === c && (c = 26),
                    i = t.length - 1; i >= 0; i--) {
                        for (var u = t.words[i], f = c - 1; f >= 0; f--) {
                            var h = u >> f & 1;
                            n !== r[0] && (n = this.sqr(n)),
                            0 !== h || 0 !== o ? (o <<= 1,
                            o |= h,
                            (4 === ++a || 0 === i && 0 === f) && (n = this.mul(n, r[o]),
                            a = 0,
                            o = 0)) : a = 0
                        }
                        c = 26
                    }
                    return n
                }
                ,
                _.prototype.convertTo = function(e) {
                    var t = e.umod(this.m);
                    return t === e ? t.clone() : t
                }
                ,
                _.prototype.convertFrom = function(e) {
                    var t = e.clone();
                    return t.red = null,
                    t
                }
                ,
                s.mont = function(e) {
                    return new S(e)
                }
                ,
                n(S, _),
                S.prototype.convertTo = function(e) {
                    return this.imod(e.ushln(this.shift))
                }
                ,
                S.prototype.convertFrom = function(e) {
                    var t = this.imod(e.mul(this.rinv));
                    return t.red = null,
                    t
                }
                ,
                S.prototype.imul = function(e, t) {
                    if (e.isZero() || t.isZero())
                        return e.words[0] = 0,
                        e.length = 1,
                        e;
                    var r = e.imul(t)
                      , i = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m)
                      , n = r.isub(i).iushrn(this.shift)
                      , s = n;
                    return n.cmp(this.m) >= 0 ? s = n.isub(this.m) : n.cmpn(0) < 0 && (s = n.iadd(this.m)),
                    s._forceRed(this)
                }
                ,
                S.prototype.mul = function(e, t) {
                    if (e.isZero() || t.isZero())
                        return new s(0)._forceRed(this);
                    var r = e.mul(t)
                      , i = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m)
                      , n = r.isub(i).iushrn(this.shift)
                      , o = n;
                    return n.cmp(this.m) >= 0 ? o = n.isub(this.m) : n.cmpn(0) < 0 && (o = n.iadd(this.m)),
                    o._forceRed(this)
                }
                ,
                S.prototype.invm = function(e) {
                    return this.imod(e._invmp(this.m).mul(this.r2))._forceRed(this)
                }
            }(void 0 === t || t, this)
        }
        , {
            buffer: 18
        }],
        167: [function(e, t, r) {
            arguments[4][17][0].apply(r, arguments)
        }
        , {
            crypto: 18,
            dup: 17
        }],
        168: [function(e, t, r) {
            "use strict";
            const i = e("multihashes")
              , n = {
                checkCIDComponents: function(e) {
                    if (null == e)
                        return "null values are not valid CIDs";
                    if (0 !== e.version && 1 !== e.version)
                        return "Invalid version, must be a number equal to 1 or 0";
                    if ("string" != typeof e.codec)
                        return "codec must be string";
                    if (0 === e.version) {
                        if ("dag-pb" !== e.codec)
                            return "codec must be 'dag-pb' for CIDv0";
                        if ("base58btc" !== e.multibaseName)
                            return "multibaseName must be 'base58btc' for CIDv0"
                    }
                    if (!(e.multihash instanceof Uint8Array))
                        return "multihash must be a Uint8Array";
                    try {
                        i.validate(e.multihash)
                    } catch (e) {
                        let t = e.message;
                        return t || (t = "Multihash validation failed"),
                        t
                    }
                }
            };
            t.exports = n
        }
        , {
            multihashes: 315
        }],
        169: [function(e, t, r) {
            "use strict";
            const i = e("multihashes")
              , n = e("multibase")
              , s = e("multicodec")
              , o = e("multicodec/src/base-table.json")
              , a = e("./cid-util")
              , c = e("class-is")
              , u = e("uint8arrays/concat")
              , f = e("uint8arrays/to-string")
              , h = e("uint8arrays/equals")
              , l = Object.keys(o).reduce((e,t)=>(e[o[t]] = t,
            e), {});
            class d {
                constructor(e, t, r, o) {
                    if (p.isCID(e)) {
                        const t = e;
                        return this.version = t.version,
                        this.codec = t.codec,
                        this.multihash = t.multihash,
                        void (this.multibaseName = t.multibaseName || (0 === t.version ? "base58btc" : "base32"))
                    }
                    if ("string" == typeof e) {
                        const t = n.isEncoded(e);
                        if (t) {
                            const r = n.decode(e);
                            this.version = parseInt(r.slice(0, 1).toString("hex"), 16),
                            this.codec = s.getCodec(r.slice(1)),
                            this.multihash = s.rmPrefix(r.slice(1)),
                            this.multibaseName = t
                        } else
                            this.version = 0,
                            this.codec = "dag-pb",
                            this.multihash = i.fromB58String(e),
                            this.multibaseName = "base58btc";
                        return d.validateCID(this),
                        void Object.defineProperty(this, "string", {
                            value: e
                        })
                    }
                    if (e instanceof Uint8Array) {
                        const t = e.slice(0, 1)
                          , r = parseInt(t.toString("hex"), 16);
                        if (1 === r) {
                            const t = e;
                            this.version = r,
                            this.codec = s.getCodec(t.slice(1)),
                            this.multihash = s.rmPrefix(t.slice(1)),
                            this.multibaseName = "base32"
                        } else
                            this.version = 0,
                            this.codec = "dag-pb",
                            this.multihash = e,
                            this.multibaseName = "base58btc";
                        d.validateCID(this)
                    } else
                        this.version = e,
                        "number" == typeof t && (t = l[t]),
                        this.codec = t,
                        this.multihash = r,
                        this.multibaseName = o || (0 === e ? "base58btc" : "base32"),
                        d.validateCID(this)
                }
                get bytes() {
                    let e = this._bytes;
                    if (!e) {
                        if (0 === this.version)
                            e = this.multihash;
                        else {
                            if (1 !== this.version)
                                throw new Error("unsupported version");
                            {
                                const t = s.getCodeVarint(this.codec);
                                e = u([[1], t, this.multihash], 1 + t.byteLength + this.multihash.byteLength)
                            }
                        }
                        Object.defineProperty(this, "_bytes", {
                            value: e
                        })
                    }
                    return e
                }
                get prefix() {
                    const e = s.getCodeVarint(this.codec)
                      , t = i.prefix(this.multihash);
                    return u([[this.version], e, t], 1 + e.byteLength + t.byteLength)
                }
                get code() {
                    return o[this.codec]
                }
                toV0() {
                    if ("dag-pb" !== this.codec)
                        throw new Error("Cannot convert a non dag-pb CID to CIDv0");
                    const {name: e, length: t} = i.decode(this.multihash);
                    if ("sha2-256" !== e)
                        throw new Error("Cannot convert non sha2-256 multihash CID to CIDv0");
                    if (32 !== t)
                        throw new Error("Cannot convert non 32 byte multihash CID to CIDv0");
                    return new p(0,this.codec,this.multihash)
                }
                toV1() {
                    return new p(1,this.codec,this.multihash)
                }
                toBaseEncodedString(e=this.multibaseName) {
                    if (this.string && e === this.multibaseName)
                        return this.string;
                    let t = null;
                    if (0 === this.version) {
                        if ("base58btc" !== e)
                            throw new Error("not supported with CIDv0, to support different bases, please migrate the instance do CIDv1, you can do that through cid.toV1()");
                        t = i.toB58String(this.multihash)
                    } else {
                        if (1 !== this.version)
                            throw new Error("unsupported version");
                        t = f(n.encode(e, this.bytes))
                    }
                    return e === this.multibaseName && Object.defineProperty(this, "string", {
                        value: t
                    }),
                    t
                }
                [Symbol.for("nodejs.util.inspect.custom")]() {
                    return "CID(" + this.toString() + ")"
                }
                toString(e) {
                    return this.toBaseEncodedString(e)
                }
                toJSON() {
                    return {
                        codec: this.codec,
                        version: this.version,
                        hash: this.multihash
                    }
                }
                equals(e) {
                    return this.codec === e.codec && this.version === e.version && h(this.multihash, e.multihash)
                }
                static validateCID(e) {
                    const t = a.checkCIDComponents(e);
                    if (t)
                        throw new Error(t)
                }
            }
            const p = c(d, {
                className: "CID",
                symbolName: "@ipld/js-cid/CID"
            });
            p.codecs = o,
            t.exports = p
        }
        , {
            "./cid-util": 168,
            "class-is": 170,
            multibase: 297,
            multicodec: 305,
            "multicodec/src/base-table.json": 303,
            multihashes: 315,
            "uint8arrays/concat": 410,
            "uint8arrays/equals": 411,
            "uint8arrays/to-string": 413
        }],
        170: [function(e, t, r) {
            "use strict";
            t.exports = function(e, {className: t, symbolName: r}) {
                const i = Symbol.for(r)
                  , n = {
                    [t]: class extends e {
                        constructor(...e) {
                            super(...e),
                            Object.defineProperty(this, i, {
                                value: !0
                            })
                        }
                        get[Symbol.toStringTag]() {
                            return t
                        }
                    }
                }[t];
                return n[`is${t}`] = e=>!(!e || !e[i]),
                n
            }
            ,
            t.exports.proto = function(e, {className: t, symbolName: r, withoutNew: i}) {
                const n = Symbol.for(r)
                  , s = {
                    [t]: function(...t) {
                        if (i && !(this instanceof s))
                            return new s(...t);
                        const r = e.call(this, ...t) || this;
                        return r && !r[n] && Object.defineProperty(r, n, {
                            value: !0
                        }),
                        r
                    }
                }[t];
                return s.prototype = Object.create(e.prototype),
                s.prototype.constructor = s,
                Object.defineProperty(s.prototype, Symbol.toStringTag, {
                    get: ()=>t
                }),
                s[`is${t}`] = e=>!(!e || !e[n]),
                s
            }
        }
        , {}],
        171: [function(e, t, r) {
            "use strict";
            const i = e("os")
              , n = /\s+at.*(?:\(|\s)(.*)\)?/
              , s = /^(?:(?:(?:node|(?:internal\/[\w/]*|.*node_modules\/(?:babel-polyfill|pirates)\/.*)?\w+)\.js:\d+:\d+)|native)/
              , o = void 0 === i.homedir ? "" : i.homedir();
            t.exports = (e,t)=>(t = Object.assign({
                pretty: !1
            }, t),
            e.replace(/\\/g, "/").split("\n").filter(e=>{
                const t = e.match(n);
                if (null === t || !t[1])
                    return !0;
                const r = t[1];
                return !r.includes(".app/Contents/Resources/electron.asar") && !r.includes(".app/Contents/Resources/default_app.asar") && !s.test(r)
            }
            ).filter(e=>"" !== e.trim()).map(e=>t.pretty ? e.replace(n, (e,t)=>e.replace(t, t.replace(o, "~"))) : e).join("\n"))
        }
        , {
            os: 18
        }],
        172: [function(e, t, r) {
            (function(i) {
                r.formatArgs = function(e) {
                    if (e[0] = (this.useColors ? "%c" : "") + this.namespace + (this.useColors ? " %c" : " ") + e[0] + (this.useColors ? "%c " : " ") + "+" + t.exports.humanize(this.diff),
                    !this.useColors)
                        return;
                    const r = "color: " + this.color;
                    e.splice(1, 0, r, "color: inherit");
                    let i = 0
                      , n = 0;
                    e[0].replace(/%[a-zA-Z%]/g, e=>{
                        "%%" !== e && (i++,
                        "%c" === e && (n = i))
                    }
                    ),
                    e.splice(n, 0, r)
                }
                ,
                r.save = function(e) {
                    try {
                        e ? r.storage.setItem("debug", e) : r.storage.removeItem("debug")
                    } catch (e) {}
                }
                ,
                r.load = function() {
                    let e;
                    try {
                        e = r.storage.getItem("debug")
                    } catch (e) {}
                    !e && void 0 !== i && "env"in i && (e = i.env.DEBUG);
                    return e
                }
                ,
                r.useColors = function() {
                    if ("undefined" != typeof window && window.process && ("renderer" === window.process.type || window.process.__nwjs))
                        return !0;
                    if ("undefined" != typeof navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/))
                        return !1;
                    return "undefined" != typeof document && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || "undefined" != typeof window && window.console && (window.console.firebug || window.console.exception && window.console.table) || "undefined" != typeof navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31 || "undefined" != typeof navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/)
                }
                ,
                r.storage = function() {
                    try {
                        return localStorage
                    } catch (e) {}
                }(),
                r.destroy = (()=>{
                    let e = !1;
                    return ()=>{
                        e || (e = !0,
                        console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`."))
                    }
                }
                )(),
                r.colors = ["#0000CC", "#0000FF", "#0033CC", "#0033FF", "#0066CC", "#0066FF", "#0099CC", "#0099FF", "#00CC00", "#00CC33", "#00CC66", "#00CC99", "#00CCCC", "#00CCFF", "#3300CC", "#3300FF", "#3333CC", "#3333FF", "#3366CC", "#3366FF", "#3399CC", "#3399FF", "#33CC00", "#33CC33", "#33CC66", "#33CC99", "#33CCCC", "#33CCFF", "#6600CC", "#6600FF", "#6633CC", "#6633FF", "#66CC00", "#66CC33", "#9900CC", "#9900FF", "#9933CC", "#9933FF", "#99CC00", "#99CC33", "#CC0000", "#CC0033", "#CC0066", "#CC0099", "#CC00CC", "#CC00FF", "#CC3300", "#CC3333", "#CC3366", "#CC3399", "#CC33CC", "#CC33FF", "#CC6600", "#CC6633", "#CC9900", "#CC9933", "#CCCC00", "#CCCC33", "#FF0000", "#FF0033", "#FF0066", "#FF0099", "#FF00CC", "#FF00FF", "#FF3300", "#FF3333", "#FF3366", "#FF3399", "#FF33CC", "#FF33FF", "#FF6600", "#FF6633", "#FF9900", "#FF9933", "#FFCC00", "#FFCC33"],
                r.log = console.debug || console.log || (()=>{}
                ),
                t.exports = e("./common")(r);
                const {formatters: n} = t.exports;
                n.j = function(e) {
                    try {
                        return JSON.stringify(e)
                    } catch (e) {
                        return "[UnexpectedJSONParseError]: " + e.message
                    }
                }
            }
            ).call(this, e("_process"))
        }
        , {
            "./common": 173,
            _process: 118
        }],
        173: [function(e, t, r) {
            t.exports = function(t) {
                function r(e) {
                    let t, n = null;
                    function s(...e) {
                        if (!s.enabled)
                            return;
                        const i = s
                          , n = Number(new Date)
                          , o = n - (t || n);
                        i.diff = o,
                        i.prev = t,
                        i.curr = n,
                        t = n,
                        e[0] = r.coerce(e[0]),
                        "string" != typeof e[0] && e.unshift("%O");
                        let a = 0;
                        e[0] = e[0].replace(/%([a-zA-Z%])/g, (t,n)=>{
                            if ("%%" === t)
                                return "%";
                            a++;
                            const s = r.formatters[n];
                            if ("function" == typeof s) {
                                const r = e[a];
                                t = s.call(i, r),
                                e.splice(a, 1),
                                a--
                            }
                            return t
                        }
                        ),
                        r.formatArgs.call(i, e),
                        (i.log || r.log).apply(i, e)
                    }
                    return s.namespace = e,
                    s.useColors = r.useColors(),
                    s.color = r.selectColor(e),
                    s.extend = i,
                    s.destroy = r.destroy,
                    Object.defineProperty(s, "enabled", {
                        enumerable: !0,
                        configurable: !1,
                        get: ()=>null === n ? r.enabled(e) : n,
                        set: e=>{
                            n = e
                        }
                    }),
                    "function" == typeof r.init && r.init(s),
                    s
                }
                function i(e, t) {
                    const i = r(this.namespace + (void 0 === t ? ":" : t) + e);
                    return i.log = this.log,
                    i
                }
                function n(e) {
                    return e.toString().substring(2, e.toString().length - 2).replace(/\.\*\?$/, "*")
                }
                return r.debug = r,
                r.default = r,
                r.coerce = function(e) {
                    if (e instanceof Error)
                        return e.stack || e.message;
                    return e
                }
                ,
                r.disable = function() {
                    const e = [...r.names.map(n), ...r.skips.map(n).map(e=>"-" + e)].join(",");
                    return r.enable(""),
                    e
                }
                ,
                r.enable = function(e) {
                    let t;
                    r.save(e),
                    r.names = [],
                    r.skips = [];
                    const i = ("string" == typeof e ? e : "").split(/[\s,]+/)
                      , n = i.length;
                    for (t = 0; t < n; t++)
                        i[t] && ("-" === (e = i[t].replace(/\*/g, ".*?"))[0] ? r.skips.push(new RegExp("^" + e.substr(1) + "$")) : r.names.push(new RegExp("^" + e + "$")))
                }
                ,
                r.enabled = function(e) {
                    if ("*" === e[e.length - 1])
                        return !0;
                    let t, i;
                    for (t = 0,
                    i = r.skips.length; t < i; t++)
                        if (r.skips[t].test(e))
                            return !1;
                    for (t = 0,
                    i = r.names.length; t < i; t++)
                        if (r.names[t].test(e))
                            return !0;
                    return !1
                }
                ,
                r.humanize = e("ms"),
                r.destroy = function() {
                    console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.")
                }
                ,
                Object.keys(t).forEach(e=>{
                    r[e] = t[e]
                }
                ),
                r.names = [],
                r.skips = [],
                r.formatters = {},
                r.selectColor = function(e) {
                    let t = 0;
                    for (let r = 0; r < e.length; r++)
                        t = (t << 5) - t + e.charCodeAt(r),
                        t |= 0;
                    return r.colors[Math.abs(t) % r.colors.length]
                }
                ,
                r.enable(r.load()),
                r
            }
        }
        , {
            ms: 287
        }],
        174: [function(e, t, r) {
            "use strict";
            var i = e("object-keys")
              , n = "function" == typeof Symbol && "symbol" == typeof Symbol("foo")
              , s = Object.prototype.toString
              , o = Array.prototype.concat
              , a = Object.defineProperty
              , c = a && function() {
                var e = {};
                try {
                    for (var t in a(e, "x", {
                        enumerable: !1,
                        value: e
                    }),
                    e)
                        return !1;
                    return e.x === e
                } catch (e) {
                    return !1
                }
            }()
              , u = function(e, t, r, i) {
                var n;
                t in e && ("function" != typeof (n = i) || "[object Function]" !== s.call(n) || !i()) || (c ? a(e, t, {
                    configurable: !0,
                    enumerable: !1,
                    value: r,
                    writable: !0
                }) : e[t] = r)
            }
              , f = function(e, t) {
                var r = arguments.length > 2 ? arguments[2] : {}
                  , s = i(t);
                n && (s = o.call(s, Object.getOwnPropertySymbols(t)));
                for (var a = 0; a < s.length; a += 1)
                    u(e, s[a], t[s[a]], r[s[a]])
            };
            f.supportsDescriptors = !!c,
            t.exports = f
        }
        , {
            "object-keys": 361
        }],
        175: [function(e, t, r) {
            "use strict";
            const i = e("debug")
              , n = i("dns-over-http-resolver");
            n.error = i("dns-over-http-resolver:error");
            const s = e("receptacle")
              , {buildResource: o, fetch: a, getCacheKey: c} = e("./utils");
            class u {
                constructor({maxCache: e=100}={}) {
                    this._cache = new s({
                        max: e
                    }),
                    this._servers = ["https://cloudflare-dns.com/dns-query", "https://dns.google/resolve"]
                }
                getServers() {
                    return this._servers
                }
                _getShuffledServers() {
                    const e = [].concat(this._servers);
                    for (let t = e.length - 1; t > 0; t--) {
                        const r = Math.floor(Math.random() * t)
                          , i = e[t];
                        e[t] = e[r],
                        e[r] = i
                    }
                    return e
                }
                setServers(e) {
                    this._servers = e
                }
                resolve(e, t="A") {
                    switch (t) {
                    case "A":
                        return this.resolve4(e);
                    case "AAAA":
                        return this.resolve6(e);
                    case "TXT":
                        return this.resolveTxt(e);
                    default:
                        throw new Error(`${t} is not supported`)
                    }
                }
                async resolve4(e) {
                    const t = this._cache.get(c(e, "A"));
                    if (t)
                        return t;
                    for (const t of this._getShuffledServers())
                        try {
                            const r = await a(o({
                                serverResolver: t,
                                hostname: e,
                                recordType: "A"
                            }))
                              , i = await r.json()
                              , n = i.Answer.map(e=>e.data)
                              , s = Math.min(i.Answer.map(e=>e.TTL));
                            return this._cache.set(c(e, "A"), n, {
                                ttl: s
                            }),
                            n
                        } catch (r) {
                            n.error(`${t} could not resolve ${e} record A`)
                        }
                    throw new Error(`Could not resolve ${e} record A`)
                }
                async resolve6(e) {
                    const t = this._cache.get(c(e, "AAAA"));
                    if (t)
                        return t;
                    for (const t of this._getShuffledServers())
                        try {
                            const r = await a(o({
                                serverResolver: t,
                                hostname: e,
                                recordType: "AAAA"
                            }))
                              , i = await r.json()
                              , n = i.Answer.map(e=>e.data)
                              , s = Math.min(i.Answer.map(e=>e.TTL));
                            return this._cache.set(c(e, "AAAA"), n, {
                                ttl: s
                            }),
                            n
                        } catch (r) {
                            n.error(`${t} could not resolve ${e} record AAAA`)
                        }
                    throw new Error(`Could not resolve ${e} record AAAA`)
                }
                async resolveTxt(e) {
                    const t = this._cache.get(c(e, "TXT"));
                    if (t)
                        return t;
                    for (const t of this._getShuffledServers())
                        try {
                            const r = await a(o({
                                serverResolver: t,
                                hostname: e,
                                recordType: "TXT"
                            }))
                              , i = await r.json()
                              , n = i.Answer.map(e=>[e.data.replace(/['"]+/g, "")])
                              , s = Math.min(i.Answer.map(e=>e.TTL));
                            return this._cache.set(c(e, "TXT"), n, {
                                ttl: s
                            }),
                            n
                        } catch (r) {
                            n.error(`${t} could not resolve ${e} record TXT`)
                        }
                    throw new Error(`Could not resolve ${e} record TXT`)
                }
            }
            u.Resolver = u,
            t.exports = u
        }
        , {
            "./utils": 176,
            debug: 172,
            receptacle: 398
        }],
        176: [function(e, t, r) {
            "use strict";
            const {default: i, Headers: n} = e("native-fetch");
            t.exports.buildResource = function({serverResolver: e, hostname: t, recordType: r}) {
                return `${e}?name=${t}&type=${r}`
            }
            ,
            t.exports.fetch = function(e) {
                return i(e, {
                    headers: new n({
                        accept: "application/dns-json"
                    })
                })
            }
            ,
            t.exports.getCacheKey = function(e, t) {
                return `${t}_${e}`
            }
        }
        , {
            "native-fetch": 326
        }],
        177: [function(e, t, r) {
            arguments[4][67][0].apply(r, arguments)
        }
        , {
            "../package.json": 192,
            "./elliptic/curve": 180,
            "./elliptic/curves": 183,
            "./elliptic/ec": 184,
            "./elliptic/eddsa": 187,
            "./elliptic/utils": 191,
            brorand: 167,
            dup: 67
        }],
        178: [function(e, t, r) {
            "use strict";
            var i = e("bn.js")
              , n = e("../utils")
              , s = n.getNAF
              , o = n.getJSF
              , a = n.assert;
            function c(e, t) {
                this.type = e,
                this.p = new i(t.p,16),
                this.red = t.prime ? i.red(t.prime) : i.mont(this.p),
                this.zero = new i(0).toRed(this.red),
                this.one = new i(1).toRed(this.red),
                this.two = new i(2).toRed(this.red),
                this.n = t.n && new i(t.n,16),
                this.g = t.g && this.pointFromJSON(t.g, t.gRed),
                this._wnafT1 = new Array(4),
                this._wnafT2 = new Array(4),
                this._wnafT3 = new Array(4),
                this._wnafT4 = new Array(4),
                this._bitLength = this.n ? this.n.bitLength() : 0;
                var r = this.n && this.p.div(this.n);
                !r || r.cmpn(100) > 0 ? this.redN = null : (this._maxwellTrick = !0,
                this.redN = this.n.toRed(this.red))
            }
            function u(e, t) {
                this.curve = e,
                this.type = t,
                this.precomputed = null
            }
            t.exports = c,
            c.prototype.point = function() {
                throw new Error("Not implemented")
            }
            ,
            c.prototype.validate = function() {
                throw new Error("Not implemented")
            }
            ,
            c.prototype._fixedNafMul = function(e, t) {
                a(e.precomputed);
                var r = e._getDoubles()
                  , i = s(t, 1, this._bitLength)
                  , n = (1 << r.step + 1) - (r.step % 2 == 0 ? 2 : 1);
                n /= 3;
                for (var o = [], c = 0; c < i.length; c += r.step) {
                    var u = 0;
                    for (t = c + r.step - 1; t >= c; t--)
                        u = (u << 1) + i[t];
                    o.push(u)
                }
                for (var f = this.jpoint(null, null, null), h = this.jpoint(null, null, null), l = n; l > 0; l--) {
                    for (c = 0; c < o.length; c++) {
                        (u = o[c]) === l ? h = h.mixedAdd(r.points[c]) : u === -l && (h = h.mixedAdd(r.points[c].neg()))
                    }
                    f = f.add(h)
                }
                return f.toP()
            }
            ,
            c.prototype._wnafMul = function(e, t) {
                var r = 4
                  , i = e._getNAFPoints(r);
                r = i.wnd;
                for (var n = i.points, o = s(t, r, this._bitLength), c = this.jpoint(null, null, null), u = o.length - 1; u >= 0; u--) {
                    for (t = 0; u >= 0 && 0 === o[u]; u--)
                        t++;
                    if (u >= 0 && t++,
                    c = c.dblp(t),
                    u < 0)
                        break;
                    var f = o[u];
                    a(0 !== f),
                    c = "affine" === e.type ? f > 0 ? c.mixedAdd(n[f - 1 >> 1]) : c.mixedAdd(n[-f - 1 >> 1].neg()) : f > 0 ? c.add(n[f - 1 >> 1]) : c.add(n[-f - 1 >> 1].neg())
                }
                return "affine" === e.type ? c.toP() : c
            }
            ,
            c.prototype._wnafMulAdd = function(e, t, r, i, n) {
                for (var a = this._wnafT1, c = this._wnafT2, u = this._wnafT3, f = 0, h = 0; h < i; h++) {
                    var l = (A = t[h])._getNAFPoints(e);
                    a[h] = l.wnd,
                    c[h] = l.points
                }
                for (h = i - 1; h >= 1; h -= 2) {
                    var d = h - 1
                      , p = h;
                    if (1 === a[d] && 1 === a[p]) {
                        var b = [t[d], null, null, t[p]];
                        0 === t[d].y.cmp(t[p].y) ? (b[1] = t[d].add(t[p]),
                        b[2] = t[d].toJ().mixedAdd(t[p].neg())) : 0 === t[d].y.cmp(t[p].y.redNeg()) ? (b[1] = t[d].toJ().mixedAdd(t[p]),
                        b[2] = t[d].add(t[p].neg())) : (b[1] = t[d].toJ().mixedAdd(t[p]),
                        b[2] = t[d].toJ().mixedAdd(t[p].neg()));
                        var g = [-3, -1, -5, -7, 0, 7, 5, 1, 3]
                          , m = o(r[d], r[p]);
                        f = Math.max(m[0].length, f),
                        u[d] = new Array(f),
                        u[p] = new Array(f);
                        for (var y = 0; y < f; y++) {
                            var v = 0 | m[0][y]
                              , w = 0 | m[1][y];
                            u[d][y] = g[3 * (v + 1) + (w + 1)],
                            u[p][y] = 0,
                            c[d] = b
                        }
                    } else
                        u[d] = s(r[d], a[d], this._bitLength),
                        u[p] = s(r[p], a[p], this._bitLength),
                        f = Math.max(u[d].length, f),
                        f = Math.max(u[p].length, f)
                }
                var E = this.jpoint(null, null, null)
                  , _ = this._wnafT4;
                for (h = f; h >= 0; h--) {
                    for (var S = 0; h >= 0; ) {
                        var k = !0;
                        for (y = 0; y < i; y++)
                            _[y] = 0 | u[y][h],
                            0 !== _[y] && (k = !1);
                        if (!k)
                            break;
                        S++,
                        h--
                    }
                    if (h >= 0 && S++,
                    E = E.dblp(S),
                    h < 0)
                        break;
                    for (y = 0; y < i; y++) {
                        var A, C = _[y];
                        0 !== C && (C > 0 ? A = c[y][C - 1 >> 1] : C < 0 && (A = c[y][-C - 1 >> 1].neg()),
                        E = "affine" === A.type ? E.mixedAdd(A) : E.add(A))
                    }
                }
                for (h = 0; h < i; h++)
                    c[h] = null;
                return n ? E : E.toP()
            }
            ,
            c.BasePoint = u,
            u.prototype.eq = function() {
                throw new Error("Not implemented")
            }
            ,
            u.prototype.validate = function() {
                return this.curve.validate(this)
            }
            ,
            c.prototype.decodePoint = function(e, t) {
                e = n.toArray(e, t);
                var r = this.p.byteLength();
                if ((4 === e[0] || 6 === e[0] || 7 === e[0]) && e.length - 1 == 2 * r)
                    return 6 === e[0] ? a(e[e.length - 1] % 2 == 0) : 7 === e[0] && a(e[e.length - 1] % 2 == 1),
                    this.point(e.slice(1, 1 + r), e.slice(1 + r, 1 + 2 * r));
                if ((2 === e[0] || 3 === e[0]) && e.length - 1 === r)
                    return this.pointFromX(e.slice(1, 1 + r), 3 === e[0]);
                throw new Error("Unknown point format")
            }
            ,
            u.prototype.encodeCompressed = function(e) {
                return this.encode(e, !0)
            }
            ,
            u.prototype._encode = function(e) {
                var t = this.curve.p.byteLength()
                  , r = this.getX().toArray("be", t);
                return e ? [this.getY().isEven() ? 2 : 3].concat(r) : [4].concat(r, this.getY().toArray("be", t))
            }
            ,
            u.prototype.encode = function(e, t) {
                return n.encode(this._encode(t), e)
            }
            ,
            u.prototype.precompute = function(e) {
                if (this.precomputed)
                    return this;
                var t = {
                    doubles: null,
                    naf: null,
                    beta: null
                };
                return t.naf = this._getNAFPoints(8),
                t.doubles = this._getDoubles(4, e),
                t.beta = this._getBeta(),
                this.precomputed = t,
                this
            }
            ,
            u.prototype._hasDoubles = function(e) {
                if (!this.precomputed)
                    return !1;
                var t = this.precomputed.doubles;
                return !!t && t.points.length >= Math.ceil((e.bitLength() + 1) / t.step)
            }
            ,
            u.prototype._getDoubles = function(e, t) {
                if (this.precomputed && this.precomputed.doubles)
                    return this.precomputed.doubles;
                for (var r = [this], i = this, n = 0; n < t; n += e) {
                    for (var s = 0; s < e; s++)
                        i = i.dbl();
                    r.push(i)
                }
                return {
                    step: e,
                    points: r
                }
            }
            ,
            u.prototype._getNAFPoints = function(e) {
                if (this.precomputed && this.precomputed.naf)
                    return this.precomputed.naf;
                for (var t = [this], r = (1 << e) - 1, i = 1 === r ? null : this.dbl(), n = 1; n < r; n++)
                    t[n] = t[n - 1].add(i);
                return {
                    wnd: e,
                    points: t
                }
            }
            ,
            u.prototype._getBeta = function() {
                return null
            }
            ,
            u.prototype.dblp = function(e) {
                for (var t = this, r = 0; r < e; r++)
                    t = t.dbl();
                return t
            }
        }
        , {
            "../utils": 191,
            "bn.js": 166
        }],
        179: [function(e, t, r) {
            arguments[4][69][0].apply(r, arguments)
        }
        , {
            "../utils": 191,
            "./base": 178,
            "bn.js": 166,
            dup: 69,
            inherits: 216
        }],
        180: [function(e, t, r) {
            arguments[4][70][0].apply(r, arguments)
        }
        , {
            "./base": 178,
            "./edwards": 179,
            "./mont": 181,
            "./short": 182,
            dup: 70
        }],
        181: [function(e, t, r) {
            arguments[4][71][0].apply(r, arguments)
        }
        , {
            "../utils": 191,
            "./base": 178,
            "bn.js": 166,
            dup: 71,
            inherits: 216
        }],
        182: [function(e, t, r) {
            arguments[4][72][0].apply(r, arguments)
        }
        , {
            "../utils": 191,
            "./base": 178,
            "bn.js": 166,
            dup: 72,
            inherits: 216
        }],
        183: [function(e, t, r) {
            arguments[4][73][0].apply(r, arguments)
        }
        , {
            "./curve": 180,
            "./precomputed/secp256k1": 190,
            "./utils": 191,
            dup: 73,
            "hash.js": 201
        }],
        184: [function(e, t, r) {
            arguments[4][74][0].apply(r, arguments)
        }
        , {
            "../curves": 183,
            "../utils": 191,
            "./key": 185,
            "./signature": 186,
            "bn.js": 166,
            brorand: 167,
            dup: 74,
            "hmac-drbg": 214
        }],
        185: [function(e, t, r) {
            arguments[4][75][0].apply(r, arguments)
        }
        , {
            "../utils": 191,
            "bn.js": 166,
            dup: 75
        }],
        186: [function(e, t, r) {
            "use strict";
            var i = e("bn.js")
              , n = e("../utils")
              , s = n.assert;
            function o(e, t) {
                if (e instanceof o)
                    return e;
                this._importDER(e, t) || (s(e.r && e.s, "Signature without r or s"),
                this.r = new i(e.r,16),
                this.s = new i(e.s,16),
                void 0 === e.recoveryParam ? this.recoveryParam = null : this.recoveryParam = e.recoveryParam)
            }
            function a() {
                this.place = 0
            }
            function c(e, t) {
                var r = e[t.place++];
                if (!(128 & r))
                    return r;
                var i = 15 & r;
                if (0 === i || i > 4)
                    return !1;
                for (var n = 0, s = 0, o = t.place; s < i; s++,
                o++)
                    n <<= 8,
                    n |= e[o],
                    n >>>= 0;
                return !(n <= 127) && (t.place = o,
                n)
            }
            function u(e) {
                for (var t = 0, r = e.length - 1; !e[t] && !(128 & e[t + 1]) && t < r; )
                    t++;
                return 0 === t ? e : e.slice(t)
            }
            function f(e, t) {
                if (t < 128)
                    e.push(t);
                else {
                    var r = 1 + (Math.log(t) / Math.LN2 >>> 3);
                    for (e.push(128 | r); --r; )
                        e.push(t >>> (r << 3) & 255);
                    e.push(t)
                }
            }
            t.exports = o,
            o.prototype._importDER = function(e, t) {
                e = n.toArray(e, t);
                var r = new a;
                if (48 !== e[r.place++])
                    return !1;
                var s = c(e, r);
                if (!1 === s)
                    return !1;
                if (s + r.place !== e.length)
                    return !1;
                if (2 !== e[r.place++])
                    return !1;
                var o = c(e, r);
                if (!1 === o)
                    return !1;
                var u = e.slice(r.place, o + r.place);
                if (r.place += o,
                2 !== e[r.place++])
                    return !1;
                var f = c(e, r);
                if (!1 === f)
                    return !1;
                if (e.length !== f + r.place)
                    return !1;
                var h = e.slice(r.place, f + r.place);
                if (0 === u[0]) {
                    if (!(128 & u[1]))
                        return !1;
                    u = u.slice(1)
                }
                if (0 === h[0]) {
                    if (!(128 & h[1]))
                        return !1;
                    h = h.slice(1)
                }
                return this.r = new i(u),
                this.s = new i(h),
                this.recoveryParam = null,
                !0
            }
            ,
            o.prototype.toDER = function(e) {
                var t = this.r.toArray()
                  , r = this.s.toArray();
                for (128 & t[0] && (t = [0].concat(t)),
                128 & r[0] && (r = [0].concat(r)),
                t = u(t),
                r = u(r); !(r[0] || 128 & r[1]); )
                    r = r.slice(1);
                var i = [2];
                f(i, t.length),
                (i = i.concat(t)).push(2),
                f(i, r.length);
                var s = i.concat(r)
                  , o = [48];
                return f(o, s.length),
                o = o.concat(s),
                n.encode(o, e)
            }
        }
        , {
            "../utils": 191,
            "bn.js": 166
        }],
        187: [function(e, t, r) {
            arguments[4][77][0].apply(r, arguments)
        }
        , {
            "../curves": 183,
            "../utils": 191,
            "./key": 188,
            "./signature": 189,
            dup: 77,
            "hash.js": 201
        }],
        188: [function(e, t, r) {
            arguments[4][78][0].apply(r, arguments)
        }
        , {
            "../utils": 191,
            dup: 78
        }],
        189: [function(e, t, r) {
            arguments[4][79][0].apply(r, arguments)
        }
        , {
            "../utils": 191,
            "bn.js": 166,
            dup: 79
        }],
        190: [function(e, t, r) {
            arguments[4][80][0].apply(r, arguments)
        }
        , {
            dup: 80
        }],
        191: [function(e, t, r) {
            "use strict";
            var i = r
              , n = e("bn.js")
              , s = e("minimalistic-assert")
              , o = e("minimalistic-crypto-utils");
            i.assert = s,
            i.toArray = o.toArray,
            i.zero2 = o.zero2,
            i.toHex = o.toHex,
            i.encode = o.encode,
            i.getNAF = function(e, t, r) {
                var i = new Array(Math.max(e.bitLength(), r) + 1);
                i.fill(0);
                for (var n = 1 << t + 1, s = e.clone(), o = 0; o < i.length; o++) {
                    var a, c = s.andln(n - 1);
                    s.isOdd() ? (a = c > (n >> 1) - 1 ? (n >> 1) - c : c,
                    s.isubn(a)) : a = 0,
                    i[o] = a,
                    s.iushrn(1)
                }
                return i
            }
            ,
            i.getJSF = function(e, t) {
                var r = [[], []];
                e = e.clone(),
                t = t.clone();
                for (var i = 0, n = 0; e.cmpn(-i) > 0 || t.cmpn(-n) > 0; ) {
                    var s, o, a, c = e.andln(3) + i & 3, u = t.andln(3) + n & 3;
                    if (3 === c && (c = -1),
                    3 === u && (u = -1),
                    0 == (1 & c))
                        s = 0;
                    else
                        s = 3 !== (a = e.andln(7) + i & 7) && 5 !== a || 2 !== u ? c : -c;
                    if (r[0].push(s),
                    0 == (1 & u))
                        o = 0;
                    else
                        o = 3 !== (a = t.andln(7) + n & 7) && 5 !== a || 2 !== c ? u : -u;
                    r[1].push(o),
                    2 * i === s + 1 && (i = 1 - i),
                    2 * n === o + 1 && (n = 1 - n),
                    e.iushrn(1),
                    t.iushrn(1)
                }
                return r
            }
            ,
            i.cachedProperty = function(e, t, r) {
                var i = "_" + t;
                e.prototype[t] = function() {
                    return void 0 !== this[i] ? this[i] : this[i] = r.call(this)
                }
            }
            ,
            i.parseBytes = function(e) {
                return "string" == typeof e ? i.toArray(e, "hex") : e
            }
            ,
            i.intFromLE = function(e) {
                return new n(e,"hex","le")
            }
        }
        , {
            "bn.js": 166,
            "minimalistic-assert": 284,
            "minimalistic-crypto-utils": 285
        }],
        192: [function(e, t, r) {
            t.exports = {
                _from: "elliptic@^6.5.2",
                _id: "elliptic@6.5.3",
                _inBundle: !1,
                _integrity: "sha512-IMqzv5wNQf+E6aHeIqATs0tOLeOTwj1QKbRcS3jBbYkl5oLAserA8yJTT7/VyHUYG91PRmPyeQDObKLPpeS4dw==",
                _location: "/elliptic",
                _phantomChildren: {},
                _requested: {
                    type: "range",
                    registry: !0,
                    raw: "elliptic@^6.5.2",
                    name: "elliptic",
                    escapedName: "elliptic",
                    rawSpec: "^6.5.2",
                    saveSpec: null,
                    fetchSpec: "^6.5.2"
                },
                _requiredBy: ["/browserify-sign", "/create-ecdh", "/secp256k1"],
                _resolved: "https://registry.npmjs.org/elliptic/-/elliptic-6.5.3.tgz",
                _shasum: "cb59eb2efdaf73a0bd78ccd7015a62ad6e0f93d6",
                _spec: "elliptic@^6.5.2",
                _where: "/tmp/libp2p1201026-13187-x76baq.2pe1k/node_modules/libp2p/node_modules/secp256k1",
                author: {
                    name: "Fedor Indutny",
                    email: "fedor@indutny.com"
                },
                bugs: {
                    url: "https://github.com/indutny/elliptic/issues"
                },
                bundleDependencies: !1,
                dependencies: {
                    "bn.js": "^4.4.0",
                    brorand: "^1.0.1",
                    "hash.js": "^1.0.0",
                    "hmac-drbg": "^1.0.0",
                    inherits: "^2.0.1",
                    "minimalistic-assert": "^1.0.0",
                    "minimalistic-crypto-utils": "^1.0.0"
                },
                deprecated: !1,
                description: "EC cryptography",
                devDependencies: {
                    brfs: "^1.4.3",
                    coveralls: "^3.0.8",
                    grunt: "^1.0.4",
                    "grunt-browserify": "^5.0.0",
                    "grunt-cli": "^1.2.0",
                    "grunt-contrib-connect": "^1.0.0",
                    "grunt-contrib-copy": "^1.0.0",
                    "grunt-contrib-uglify": "^1.0.1",
                    "grunt-mocha-istanbul": "^3.0.1",
                    "grunt-saucelabs": "^9.0.1",
                    istanbul: "^0.4.2",
                    jscs: "^3.0.7",
                    jshint: "^2.10.3",
                    mocha: "^6.2.2"
                },
                files: ["lib"],
                homepage: "https://github.com/indutny/elliptic",
                keywords: ["EC", "Elliptic", "curve", "Cryptography"],
                license: "MIT",
                main: "lib/elliptic.js",
                name: "elliptic",
                repository: {
                    type: "git",
                    url: "git+ssh://git@github.com/indutny/elliptic.git"
                },
                scripts: {
                    jscs: "jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js",
                    jshint: "jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js",
                    lint: "npm run jscs && npm run jshint",
                    test: "npm run lint && npm run unit",
                    unit: "istanbul test _mocha --reporter=spec test/index.js",
                    version: "grunt dist && git add dist/"
                },
                version: "6.5.3"
            }
        }
        , {}],
        193: [function(e, t, r) {
            "use strict";
            function i(e, t) {
                for (const r in t)
                    Object.defineProperty(e, r, {
                        value: t[r],
                        enumerable: !0,
                        configurable: !0
                    });
                return e
            }
            t.exports = function(e, t, r) {
                if (!e || "string" == typeof e)
                    throw new TypeError("Please pass an Error to err-code");
                r || (r = {}),
                "object" == typeof t && (r = t,
                t = void 0),
                null != t && (r.code = t);
                try {
                    return i(e, r)
                } catch (t) {
                    r.message = e.message,
                    r.stack = e.stack;
                    const n = function() {};
                    return n.prototype = Object.create(Object.getPrototypeOf(e)),
                    i(new n, r)
                }
            }
        }
        , {}],
        194: [function(e, t, r) {
            t.exports = class {
                constructor(e) {
                    if (!(e > 0) || 0 != (e - 1 & e))
                        throw new Error("Max size for a FixedFIFO should be a power of two");
                    this.buffer = new Array(e),
                    this.mask = e - 1,
                    this.top = 0,
                    this.btm = 0,
                    this.next = null
                }
                push(e) {
                    return void 0 === this.buffer[this.top] && (this.buffer[this.top] = e,
                    this.top = this.top + 1 & this.mask,
                    !0)
                }
                shift() {
                    const e = this.buffer[this.btm];
                    if (void 0 !== e)
                        return this.buffer[this.btm] = void 0,
                        this.btm = this.btm + 1 & this.mask,
                        e
                }
                isEmpty() {
                    return void 0 === this.buffer[this.btm]
                }
            }
        }
        , {}],
        195: [function(e, t, r) {
            const i = e("./fixed-size");
            t.exports = class {
                constructor(e) {
                    this.hwm = e || 16,
                    this.head = new i(this.hwm),
                    this.tail = this.head
                }
                push(e) {
                    if (!this.head.push(e)) {
                        const t = this.head;
                        this.head = t.next = new i(2 * this.head.buffer.length),
                        this.head.push(e)
                    }
                }
                shift() {
                    const e = this.tail.shift();
                    if (void 0 === e && this.tail.next) {
                        const e = this.tail.next;
                        return this.tail.next = null,
                        this.tail = e,
                        this.tail.shift()
                    }
                    return e
                }
                isEmpty() {
                    return this.head.isEmpty()
                }
            }
        }
        , {
            "./fixed-size": 194
        }],
        196: [function(e, t, r) {
            t.exports = function(e) {
                if (e) {
                    if ("function" == typeof e[Symbol.iterator])
                        return e[Symbol.iterator]();
                    if ("function" == typeof e[Symbol.asyncIterator])
                        return e[Symbol.asyncIterator]();
                    if ("function" == typeof e.next)
                        return e
                }
                throw new Error("argument is not an iterator or iterable")
            }
        }
        , {}],
        197: [function(e, t, r) {
            "use strict";
            "undefined" != typeof self ? t.exports = self : "undefined" != typeof window ? t.exports = window : t.exports = Function("return this")()
        }
        , {}],
        198: [function(e, t, r) {
            "use strict";
            var i = e("define-properties")
              , n = e("./implementation")
              , s = e("./polyfill")
              , o = e("./shim")
              , a = s()
              , c = function() {
                return a
            };
            i(c, {
                getPolyfill: s,
                implementation: n,
                shim: o
            }),
            t.exports = c
        }
        , {
            "./implementation": 197,
            "./polyfill": 199,
            "./shim": 200,
            "define-properties": 174
        }],
        199: [function(e, t, r) {
            (function(r) {
                "use strict";
                var i = e("./implementation");
                t.exports = function() {
                    return "object" == typeof r && r && r.Math === Math && r.Array === Array ? r : i
                }
            }
            ).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
        }
        , {
            "./implementation": 197
        }],
        200: [function(e, t, r) {
            "use strict";
            var i = e("define-properties")
              , n = e("./polyfill");
            t.exports = function() {
                var e = n();
                if (i.supportsDescriptors) {
                    var t = Object.getOwnPropertyDescriptor(e, "globalThis");
                    (!t || t.configurable && (t.enumerable || t.writable || globalThis !== e)) && Object.defineProperty(e, "globalThis", {
                        configurable: !0,
                        enumerable: !1,
                        value: e,
                        writable: !1
                    })
                } else
                    "object" == typeof globalThis && globalThis === e || (e.globalThis = e);
                return e
            }
        }
        , {
            "./polyfill": 199,
            "define-properties": 174
        }],
        201: [function(e, t, r) {
            arguments[4][86][0].apply(r, arguments)
        }
        , {
            "./hash/common": 202,
            "./hash/hmac": 203,
            "./hash/ripemd": 204,
            "./hash/sha": 205,
            "./hash/utils": 212,
            dup: 86
        }],
        202: [function(e, t, r) {
            arguments[4][87][0].apply(r, arguments)
        }
        , {
            "./utils": 212,
            dup: 87,
            "minimalistic-assert": 284
        }],
        203: [function(e, t, r) {
            arguments[4][88][0].apply(r, arguments)
        }
        , {
            "./utils": 212,
            dup: 88,
            "minimalistic-assert": 284
        }],
        204: [function(e, t, r) {
            arguments[4][89][0].apply(r, arguments)
        }
        , {
            "./common": 202,
            "./utils": 212,
            dup: 89
        }],
        205: [function(e, t, r) {
            arguments[4][90][0].apply(r, arguments)
        }
        , {
            "./sha/1": 206,
            "./sha/224": 207,
            "./sha/256": 208,
            "./sha/384": 209,
            "./sha/512": 210,
            dup: 90
        }],
        206: [function(e, t, r) {
            arguments[4][91][0].apply(r, arguments)
        }
        , {
            "../common": 202,
            "../utils": 212,
            "./common": 211,
            dup: 91
        }],
        207: [function(e, t, r) {
            arguments[4][92][0].apply(r, arguments)
        }
        , {
            "../utils": 212,
            "./256": 208,
            dup: 92
        }],
        208: [function(e, t, r) {
            arguments[4][93][0].apply(r, arguments)
        }
        , {
            "../common": 202,
            "../utils": 212,
            "./common": 211,
            dup: 93,
            "minimalistic-assert": 284
        }],
        209: [function(e, t, r) {
            arguments[4][94][0].apply(r, arguments)
        }
        , {
            "../utils": 212,
            "./512": 210,
            dup: 94
        }],
        210: [function(e, t, r) {
            arguments[4][95][0].apply(r, arguments)
        }
        , {
            "../common": 202,
            "../utils": 212,
            dup: 95,
            "minimalistic-assert": 284
        }],
        211: [function(e, t, r) {
            arguments[4][96][0].apply(r, arguments)
        }
        , {
            "../utils": 212,
            dup: 96
        }],
        212: [function(e, t, r) {
            arguments[4][97][0].apply(r, arguments)
        }
        , {
            dup: 97,
            inherits: 216,
            "minimalistic-assert": 284
        }],
        213: [function(e, t, r) {
            t.exports = function(e) {
                if (!e)
                    throw Error("hashlru must have a max value, of type number, greater than 0");
                var t = 0
                  , r = Object.create(null)
                  , i = Object.create(null);
                function n(n, s) {
                    r[n] = s,
                    ++t >= e && (t = 0,
                    i = r,
                    r = Object.create(null))
                }
                return {
                    has: function(e) {
                        return void 0 !== r[e] || void 0 !== i[e]
                    },
                    remove: function(e) {
                        void 0 !== r[e] && (r[e] = void 0),
                        void 0 !== i[e] && (i[e] = void 0)
                    },
                    get: function(e) {
                        var t = r[e];
                        return void 0 !== t ? t : void 0 !== (t = i[e]) ? (n(e, t),
                        t) : void 0
                    },
                    set: function(e, t) {
                        void 0 !== r[e] ? r[e] = t : n(e, t)
                    },
                    clear: function() {
                        r = Object.create(null),
                        i = Object.create(null)
                    }
                }
            }
        }
        , {}],
        214: [function(e, t, r) {
            arguments[4][98][0].apply(r, arguments)
        }
        , {
            dup: 98,
            "hash.js": 201,
            "minimalistic-assert": 284,
            "minimalistic-crypto-utils": 285
        }],
        215: [function(e, t, r) {
            "use strict";
            t.exports = (e,t=1,r)=>{
                if (r = {
                    indent: " ",
                    includeEmptyLines: !1,
                    ...r
                },
                "string" != typeof e)
                    throw new TypeError(`Expected \`input\` to be a \`string\`, got \`${typeof e}\``);
                if ("number" != typeof t)
                    throw new TypeError(`Expected \`count\` to be a \`number\`, got \`${typeof t}\``);
                if ("string" != typeof r.indent)
                    throw new TypeError(`Expected \`options.indent\` to be a \`string\`, got \`${typeof r.indent}\``);
                if (0 === t)
                    return e;
                const i = r.includeEmptyLines ? /^/gm : /^(?!\s*$)/gm;
                return e.replace(i, r.indent.repeat(t))
            }
        }
        , {}],
        216: [function(e, t, r) {
            "function" == typeof Object.create ? t.exports = function(e, t) {
                t && (e.super_ = t,
                e.prototype = Object.create(t.prototype, {
                    constructor: {
                        value: e,
                        enumerable: !1,
                        writable: !0,
                        configurable: !0
                    }
                }))
            }
            : t.exports = function(e, t) {
                if (t) {
                    e.super_ = t;
                    var r = function() {};
                    r.prototype = t.prototype,
                    e.prototype = new r,
                    e.prototype.constructor = e
                }
            }
        }
        , {}],
        217: [function(e, t, r) {
            "object" != typeof globalThis && (Object.defineProperty(Object.prototype, "__magic__", {
                get: function() {
                    return this
                },
                configurable: !0
            }),
            __magic__.globalThis = __magic__,
            delete Object.prototype.__magic__),
            t.exports = globalThis
        }
        , {}],
        218: [function(e, t, r) {
            "use strict";
            const {nanoid: i} = e("nanoid");
            t.exports = (e=(e=>e))=>e(i())
        }
        , {
            nanoid: 324
        }],
        219: [function(e, t, r) {
            "use strict";
            t.exports = e("./globalthis").TextDecoder
        }
        , {
            "./globalthis": 217
        }],
        220: [function(e, t, r) {
            "use strict";
            t.exports = e("./globalthis").TextEncoder
        }
        , {
            "./globalthis": 217
        }],
        221: [function(e, t, r) {
            "use strict";
            const {filter: i, sortAll: n, take: s, map: o} = e("./utils")
              , a = e("it-drain");
            t.exports = class {
                async open() {}
                async close() {}
                async put(e, t, r={}) {}
                async*putMany(e, t={}) {
                    for await(const {key: r, value: i} of e)
                        await this.put(r, i, t),
                        yield{
                            key: r,
                            value: i
                        }
                }
                async get(e, t={}) {}
                async*getMany(e, t={}) {
                    for await(const r of e)
                        yield this.get(r, t)
                }
                async has(e) {}
                async delete(e, t={}) {}
                async*deleteMany(e, t={}) {
                    for await(const r of e)
                        await this.delete(r, t),
                        yield r
                }
                batch() {
                    let e = []
                      , t = [];
                    return {
                        put(t, r) {
                            e.push({
                                key: t,
                                value: r
                            })
                        },
                        delete(e) {
                            t.push(e)
                        },
                        commit: async r=>{
                            await a(this.putMany(e, r)),
                            e = [],
                            await a(this.deleteMany(t, r)),
                            t = []
                        }
                    }
                }
                async*_all(e, t) {}
                async*query(e, t) {
                    let r = this._all(e, t);
                    if (null != e.prefix && (r = i(r, t=>t.key.toString().startsWith(e.prefix))),
                    Array.isArray(e.filters) && (r = e.filters.reduce((e,t)=>i(e, t), r)),
                    Array.isArray(e.orders) && (r = e.orders.reduce((e,t)=>n(e, t), r)),
                    null != e.offset) {
                        let t = 0;
                        r = i(r, ()=>t++ >= e.offset)
                    }
                    null != e.limit && (r = s(r, e.limit)),
                    !0 === e.keysOnly && (r = o(r, e=>({
                        key: e.key
                    }))),
                    yield*r
                }
            }
        }
        , {
            "./utils": 226,
            "it-drain": 234
        }],
        222: [function(e, t, r) {
            "use strict";
            const i = e("err-code");
            t.exports.dbOpenFailedError = e=>(e = e || new Error("Cannot open database"),
            i(e, "ERR_DB_OPEN_FAILED")),
            t.exports.dbDeleteFailedError = e=>(e = e || new Error("Delete failed"),
            i(e, "ERR_DB_DELETE_FAILED")),
            t.exports.dbWriteFailedError = e=>(e = e || new Error("Write failed"),
            i(e, "ERR_DB_WRITE_FAILED")),
            t.exports.notFoundError = e=>(e = e || new Error("Not Found"),
            i(e, "ERR_NOT_FOUND")),
            t.exports.abortedError = e=>(e = e || new Error("Aborted"),
            i(e, "ERR_ABORTED"))
        }
        , {
            "err-code": 193
        }],
        223: [function(e, t, r) {
            "use strict";
            const i = e("./key")
              , n = e("./memory")
              , s = e("./utils")
              , o = e("./errors")
              , a = e("./adapter");
            r.Key = i,
            r.MemoryDatastore = n,
            r.utils = s,
            r.Errors = o,
            r.Adapter = a
        }
        , {
            "./adapter": 221,
            "./errors": 222,
            "./key": 224,
            "./memory": 225,
            "./utils": 226
        }],
        224: [function(e, t, r) {
            "use strict";
            const {nanoid: i} = e("nanoid")
              , n = e("class-is")
              , {utf8Encoder: s, utf8Decoder: o} = e("./utils")
              , a = e("ipfs-utils/src/text-decoder")
              , c = "/"
              , u = s.encode(c)
              , f = u[0];
            class h {
                constructor(e, t) {
                    if ("string" == typeof e)
                        this._buf = s.encode(e);
                    else {
                        if (!(e instanceof Uint8Array))
                            throw new Error("Invalid key, should be String of Uint8Array");
                        this._buf = e
                    }
                    if (null == t && (t = !0),
                    t && this.clean(),
                    0 === this._buf.byteLength || this._buf[0] !== f)
                        throw new Error("Invalid key")
                }
                toString(e="utf8") {
                    return "utf8" === e || "utf-8" === e ? o.decode(this._buf) : new a(e).decode(this._buf)
                }
                uint8Array() {
                    return this._buf
                }
                get[Symbol.toStringTag]() {
                    return `Key(${this.toString()})`
                }
                static withNamespaces(e) {
                    return new l(e.join(c))
                }
                static random() {
                    return new l(i().replace(/-/g, ""))
                }
                clean() {
                    if (this._buf && 0 !== this._buf.byteLength || (this._buf = u),
                    this._buf[0] !== f) {
                        const e = new Uint8Array(this._buf.byteLength + 1);
                        e.fill(f, 0, 1),
                        e.set(this._buf, 1),
                        this._buf = e
                    }
                    for (; this._buf.byteLength > 1 && this._buf[this._buf.byteLength - 1] === f; )
                        this._buf = this._buf.subarray(0, -1)
                }
                less(e) {
                    const t = this.list()
                      , r = e.list();
                    for (let e = 0; e < t.length; e++) {
                        if (r.length < e + 1)
                            return !1;
                        const i = t[e]
                          , n = r[e];
                        if (i < n)
                            return !0;
                        if (i > n)
                            return !1
                    }
                    return t.length < r.length
                }
                reverse() {
                    return h.withNamespaces(this.list().slice().reverse())
                }
                namespaces() {
                    return this.list()
                }
                baseNamespace() {
                    const e = this.namespaces();
                    return e[e.length - 1]
                }
                list() {
                    return this.toString().split(c).slice(1)
                }
                type() {
                    return function(e) {
                        const t = e.split(":");
                        if (t.length < 2)
                            return "";
                        return t.slice(0, -1).join(":")
                    }(this.baseNamespace())
                }
                name() {
                    return function(e) {
                        const t = e.split(":");
                        return t[t.length - 1]
                    }(this.baseNamespace())
                }
                instance(e) {
                    return new l(this.toString() + ":" + e)
                }
                path() {
                    let e = this.parent().toString();
                    return e.endsWith(c) || (e += c),
                    e += this.type(),
                    new l(e)
                }
                parent() {
                    const e = this.list();
                    return 1 === e.length ? new l(c) : new l(e.slice(0, -1).join(c))
                }
                child(e) {
                    return this.toString() === c ? e : e.toString() === c ? this : new l(this.toString() + e.toString(),!1)
                }
                isAncestorOf(e) {
                    return e.toString() !== this.toString() && e.toString().startsWith(this.toString())
                }
                isDecendantOf(e) {
                    return e.toString() !== this.toString() && this.toString().startsWith(e.toString())
                }
                isTopLevel() {
                    return 1 === this.list().length
                }
                concat(...e) {
                    return h.withNamespaces([...this.namespaces(), ...(t = e.map(e=>e.namespaces()),
                    [].concat(...t))]);
                    var t
                }
            }
            const l = n(h, {
                className: "Key",
                symbolName: "@ipfs/interface-datastore/key"
            });
            t.exports = l
        }
        , {
            "./utils": 226,
            "class-is": 170,
            "ipfs-utils/src/text-decoder": 219,
            nanoid: 324
        }],
        225: [function(e, t, r) {
            "use strict";
            const i = e("./key")
              , n = e("./adapter")
              , s = e("./errors");
            t.exports = class extends n {
                constructor() {
                    super(),
                    this.data = {}
                }
                async put(e, t) {
                    this.data[e.toString()] = t
                }
                async get(e) {
                    if (!await this.has(e))
                        throw s.notFoundError();
                    return this.data[e.toString()]
                }
                async has(e) {
                    return void 0 !== this.data[e.toString()]
                }
                async delete(e) {
                    delete this.data[e.toString()]
                }
                *_all() {
                    yield*Object.entries(this.data).map(([e,t])=>({
                        key: new i(e),
                        value: t
                    }))
                }
            }
        }
        , {
            "./adapter": 221,
            "./errors": 222,
            "./key": 224
        }],
        226: [function(e, t, r) {
            "use strict";
            const i = e("ipfs-utils/src/temp-dir")
              , n = e("ipfs-utils/src/text-encoder")
              , s = e("ipfs-utils/src/text-decoder");
            r.utf8Encoder = new n("utf8"),
            r.utf8Decoder = new s("utf8"),
            r.filter = (e,t)=>(async function*() {
                for await(const r of e) {
                    await t(r) && (yield r)
                }
            }
            )(),
            r.sortAll = (e,t)=>(async function*() {
                let r = [];
                for await(const t of e)
                    r.push(t);
                r = await t(r);
                for (const e of r)
                    yield e
            }
            )(),
            r.take = (e,t)=>(async function*() {
                if (t <= 0)
                    return;
                let r = 0;
                for await(const i of e)
                    if (yield i,
                    ++r >= t)
                        return
            }
            )(),
            r.map = (e,t)=>(async function*() {
                for await(const r of e)
                    yield t(r)
            }
            )(),
            r.replaceStartWith = function(e, t) {
                const r = new RegExp("^" + t);
                return e.replace(r, "")
            }
            ,
            r.tmpdir = i
        }
        , {
            "ipfs-utils/src/temp-dir": 218,
            "ipfs-utils/src/text-decoder": 219,
            "ipfs-utils/src/text-encoder": 220
        }],
        227: [function(e, t, r) {
            "use strict";
            const i = e=>e && e.includeBoundaries ? "(?:(?<=\\s|^)(?=[a-fA-F\\d:])|(?<=[a-fA-F\\d:])(?=\\s|$))" : ""
              , n = "(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}"
              , s = "[a-fA-F\\d]{1,4}"
              , o = `\n(\n(?:${s}:){7}(?:${s}|:)|                                // 1:2:3:4:5:6:7::  1:2:3:4:5:6:7:8\n(?:${s}:){6}(?:${n}|:${s}|:)|                         // 1:2:3:4:5:6::    1:2:3:4:5:6::8   1:2:3:4:5:6::8  1:2:3:4:5:6::1.2.3.4\n(?:${s}:){5}(?::${n}|(:${s}){1,2}|:)|                 // 1:2:3:4:5::      1:2:3:4:5::7:8   1:2:3:4:5::8    1:2:3:4:5::7:1.2.3.4\n(?:${s}:){4}(?:(:${s}){0,1}:${n}|(:${s}){1,3}|:)| // 1:2:3:4::        1:2:3:4::6:7:8   1:2:3:4::8      1:2:3:4::6:7:1.2.3.4\n(?:${s}:){3}(?:(:${s}){0,2}:${n}|(:${s}){1,4}|:)| // 1:2:3::          1:2:3::5:6:7:8   1:2:3::8        1:2:3::5:6:7:1.2.3.4\n(?:${s}:){2}(?:(:${s}){0,3}:${n}|(:${s}){1,5}|:)| // 1:2::            1:2::4:5:6:7:8   1:2::8          1:2::4:5:6:7:1.2.3.4\n(?:${s}:){1}(?:(:${s}){0,4}:${n}|(:${s}){1,6}|:)| // 1::              1::3:4:5:6:7:8   1::8            1::3:4:5:6:7:1.2.3.4\n(?::((?::${s}){0,5}:${n}|(?::${s}){1,7}|:))           // ::2:3:4:5:6:7:8  ::2:3:4:5:6:7:8  ::8             ::1.2.3.4\n)(%[0-9a-zA-Z]{1,})?                                           // %eth0            %1\n`.replace(/\s*\/\/.*$/gm, "").replace(/\n/g, "").trim()
              , a = new RegExp(`(?:^${n}$)|(?:^${o}$)`)
              , c = new RegExp(`^${n}$`)
              , u = new RegExp(`^${o}$`)
              , f = e=>e && e.exact ? a : new RegExp(`(?:${i(e)}${n}${i(e)})|(?:${i(e)}${o}${i(e)})`,"g");
            f.v4 = e=>e && e.exact ? c : new RegExp(`${i(e)}${n}${i(e)}`,"g"),
            f.v6 = e=>e && e.exact ? u : new RegExp(`${i(e)}${o}${i(e)}`,"g"),
            t.exports = f
        }
        , {}],
        228: [function(e, t, r) {
            arguments[4][217][0].apply(r, arguments)
        }
        , {
            dup: 217
        }],
        229: [function(e, t, r) {
            "use strict";
            const i = e("ip-regex")
              , n = e=>i({
                exact: !0
            }).test(e);
            n.v4 = e=>i.v4({
                exact: !0
            }).test(e),
            n.v6 = e=>i.v6({
                exact: !0
            }).test(e),
            n.version = e=>n(e) ? n.v4(e) ? 4 : 6 : void 0,
            t.exports = n
        }
        , {
            "ip-regex": 227
        }],
        230: [function(e, t, r) {
            "use strict";
            t.exports = e=>{
                if ("[object Object]" !== Object.prototype.toString.call(e))
                    return !1;
                const t = Object.getPrototypeOf(e);
                return null === t || t === Object.prototype
            }
        }
        , {}],
        231: [function(e, t, r) {
            "use strict";
            const i = self.crypto || self.msCrypto
              , {Buffer: n} = e("buffer")
              , s = 65536;
            i && i.getRandomValues ? t.exports = function(e) {
                const t = new Uint8Array(e);
                let r = 0;
                if (e > 0)
                    if (e > s)
                        for (; r < e; )
                            r + s > e ? (i.getRandomValues(t.subarray(r, r + (e - r))),
                            r += e - r) : (i.getRandomValues(t.subarray(r, r + s)),
                            r += s);
                    else
                        i.getRandomValues(t);
                return n.from(t)
            }
            : t.exports = function() {
                throw new Error("Secure random number generation is not supported by this browser.\nUse Chrome, Firefox or Internet Explorer 11")
            }
        }
        , {
            buffer: 48
        }],
        232: [function(e, t, r) {
            "use strict";
            t.exports = async e=>{
                const t = [];
                for await(const r of e)
                    t.push(r);
                return t
            }
        }
        , {}],
        233: [function(e, t, r) {
            "use strict";
            const {Buffer: i} = e("buffer")
              , n = e("bl/BufferList");
            t.exports = async function*(e) {
                for await(const t of e)
                    i.isBuffer(t) ? yield t : n.isBufferList(t) ? yield t.slice() : yield i.from(t)
            }
            ,
            t.exports.toBuffer = t.exports,
            t.exports.toList = async function*(e) {
                for await(const t of e)
                    i.isBuffer(t) ? yield(new n).append(t) : n.isBufferList(t) ? yield t : yield(new n).append(i.from(t))
            }
        }
        , {
            "bl/BufferList": 165,
            buffer: 48
        }],
        234: [function(e, t, r) {
            "use strict";
            t.exports = async e=>{
                for await(const t of e)
                    ;
            }
        }
        , {}],
        235: [function(e, t, r) {
            "use strict";
            const i = e("it-reader")
              , n = e("it-pushable")
              , s = e("p-defer");
            t.exports = e=>{
                const t = n()
                  , r = i(e.source)
                  , o = s();
                let a;
                const c = e.sink(async function*() {
                    yield*t;
                    const e = await o.promise;
                    yield*e
                }());
                return c.catch(e=>{
                    a = e
                }
                ),
                {
                    reader: r,
                    writer: t,
                    stream: {
                        sink: e=>a ? Promise.reject(a) : (o.resolve(e),
                        c),
                        source: r
                    },
                    rest: ()=>t.end(),
                    write: t.push,
                    read: async()=>(await r.next()).value
                }
            }
        }
        , {
            "it-pushable": 246,
            "it-reader": 247,
            "p-defer": 365
        }],
        236: [function(e, t, r) {
            "use strict";
            const {Buffer: i} = e("buffer")
              , n = e("bl/BufferList")
              , s = e("./varint-decode")
              , o = 8
              , a = 4194304
              , c = i.alloc(0)
              , u = {
                LENGTH: "readLength",
                DATA: "readData"
            }
              , f = {
                [u.LENGTH]: (e,t,r,i)=>{
                    let s;
                    t = t.append(e);
                    try {
                        s = i.lengthDecoder(t)
                    } catch (e) {
                        if (t.length > i.maxLengthLength)
                            throw Object.assign(e, {
                                message: "message length too long",
                                code: "ERR_MSG_LENGTH_TOO_LONG"
                            });
                        if (e instanceof RangeError)
                            return {
                                mode: u.LENGTH,
                                buffer: t
                            };
                        throw e
                    }
                    if (s > i.maxDataLength)
                        throw Object.assign(new Error("message data too long"), {
                            code: "ERR_MSG_DATA_TOO_LONG"
                        });
                    return e = t.shallowSlice(i.lengthDecoder.bytes),
                    t = new n,
                    i.onLength && i.onLength(s),
                    s <= 0 ? (i.onData && i.onData(c),
                    {
                        mode: u.LENGTH,
                        chunk: e,
                        buffer: t,
                        data: c
                    }) : {
                        mode: u.DATA,
                        chunk: e,
                        buffer: t,
                        state: {
                            dataLength: s
                        }
                    }
                }
                ,
                [u.DATA]: (e,t,r,i)=>{
                    if ((t = t.append(e)).length < r.dataLength)
                        return {
                            mode: u.DATA,
                            buffer: t,
                            state: r
                        };
                    const {dataLength: s} = r
                      , o = t.shallowSlice(0, s);
                    return e = t.length > s ? t.shallowSlice(s) : null,
                    t = new n,
                    i.onData && i.onData(o),
                    {
                        mode: u.LENGTH,
                        chunk: e,
                        buffer: t,
                        data: o
                    }
                }
            };
            function h(e) {
                return (e = e || {}).lengthDecoder = e.lengthDecoder || s,
                e.maxLengthLength = e.maxLengthLength || o,
                e.maxDataLength = e.maxDataLength || a,
                t=>(async function*() {
                    let r, i = new n, s = u.LENGTH;
                    for await(let n of t)
                        for (; n; ) {
                            const t = f[s](n, i, r, e);
                            ({mode: s, chunk: n, buffer: i, state: r} = t),
                            t.data && (yield t.data)
                        }
                    if (i.length)
                        throw Object.assign(new Error("unexpected end of input"), {
                            code: "ERR_UNEXPECTED_EOF"
                        })
                }
                )()
            }
            h.fromReader = (e,t)=>{
                t = t || {};
                let r = 1;
                const i = {
                    [Symbol.asyncIterator]() {
                        return this
                    },
                    next: async()=>{
                        try {
                            return await e.next(r)
                        } catch (e) {
                            if ("ERR_UNDER_READ" === e.code)
                                return {
                                    done: !0,
                                    value: null
                                };
                            throw e
                        } finally {
                            r = 1
                        }
                    }
                };
                return t.onLength = e=>{
                    r = e
                }
                ,
                h(t)(i)
            }
            ,
            t.exports = h,
            t.exports.MAX_LENGTH_LENGTH = o,
            t.exports.MAX_DATA_LENGTH = a
        }
        , {
            "./varint-decode": 241,
            "bl/BufferList": 165,
            buffer: 48
        }],
        237: [function(e, t, r) {
            "use strict";
            const {Buffer: i} = e("buffer")
              , n = e("bl/BufferList")
              , s = e("./varint-encode")
              , o = 8
              , a = 10240;
            function c(e) {
                e = e || {};
                const t = Math.max(e.poolSize || a, e.minPoolSize || o)
                  , r = e.lengthEncoder || s;
                return e=>(async function*() {
                    let s = i.alloc(t)
                      , a = 0;
                    for await(const c of e) {
                        r(c.length, s, a);
                        const e = s.slice(a, a + r.bytes);
                        a += r.bytes,
                        s.length - a < o && (s = i.alloc(t),
                        a = 0),
                        yield(new n).append(e).append(c)
                    }
                }
                )()
            }
            c.single = (e,t)=>{
                const r = (t = t || {}).lengthEncoder || s;
                return new n([r(e.length), e])
            }
            ,
            t.exports = c,
            t.exports.MIN_POOL_SIZE = o,
            t.exports.DEFAULT_POOL_SIZE = a
        }
        , {
            "./varint-encode": 242,
            "bl/BufferList": 165,
            buffer: 48
        }],
        238: [function(e, t, r) {
            "use strict";
            r.encode = e("./encode"),
            r.decode = e("./decode"),
            r.varintEncode = e("./varint-encode"),
            r.varintDecode = e("./varint-decode"),
            r.int32BEEncode = e("./int32BE-encode"),
            r.int32BEDecode = e("./int32BE-decode")
        }
        , {
            "./decode": 236,
            "./encode": 237,
            "./int32BE-decode": 239,
            "./int32BE-encode": 240,
            "./varint-decode": 241,
            "./varint-encode": 242
        }],
        239: [function(e, t, r) {
            "use strict";
            const i = e=>{
                if (e.length < 4)
                    throw RangeError("Could not decode int32BE");
                return e.readInt32BE(0)
            }
            ;
            i.bytes = 4,
            t.exports = i
        }
        , {}],
        240: [function(e, t, r) {
            "use strict";
            const {Buffer: i} = e("buffer")
              , n = (e,t,r)=>((t = t || i.allocUnsafe(4)).writeInt32BE(e, r),
            t);
            n.bytes = 4,
            t.exports = n
        }
        , {
            buffer: 48
        }],
        241: [function(e, t, r) {
            "use strict";
            const {Buffer: i} = e("buffer")
              , n = e("varint")
              , s = e=>{
                const t = n.decode(i.isBuffer(e) ? e : (e=>new Proxy({},{
                    get: (t,r)=>"l" === r[0] ? e[r] : e.get(parseInt(r))
                }))(e));
                return s.bytes = n.decode.bytes,
                t
            }
            ;
            t.exports = s
        }
        , {
            buffer: 48,
            varint: 417
        }],
        242: [function(e, t, r) {
            "use strict";
            const i = e("varint")
              , {Buffer: n} = e("buffer")
              , s = (e,t,r)=>{
                const o = i.encode(e, t, r);
                return s.bytes = i.encode.bytes,
                t || n.from(o)
            }
            ;
            t.exports = s
        }
        , {
            buffer: 48,
            varint: 417
        }],
        243: [function(e, t, r) {
            const i = (...e)=>{
                let t;
                for (; e.length; )
                    t = e.shift()(t);
                return t
            }
              , n = e=>e && ("function" == typeof e[Symbol.asyncIterator] || "function" == typeof e[Symbol.iterator] || "function" == typeof e.next)
              , s = e=>e && "function" == typeof e.sink && n(e.source)
              , o = e=>t=>(e.sink(t),
            e.source)
              , a = (...e)=>{
                if (s(e[0])) {
                    const t = e[0];
                    e[0] = ()=>t.source
                } else if (n(e[0])) {
                    const t = e[0];
                    e[0] = ()=>t
                }
                if (e.length > 1 && s(e[e.length - 1]) && (e[e.length - 1] = e[e.length - 1].sink),
                e.length > 2)
                    for (let t = 1; t < e.length - 1; t++)
                        s(e[t]) && (e[t] = o(e[t]));
                return i(...e)
            }
            ;
            t.exports = a,
            t.exports.pipe = a,
            t.exports.rawPipe = i,
            t.exports.isIterable = n,
            t.exports.isDuplex = s
        }
        , {}],
        244: [function(e, t, r) {
            "use strict";
            const i = e("it-length-prefixed")
              , n = e("./it")
              , s = e("it-buffer");
            t.exports.encode = e=>t=>i.encode()(n.encode(e)(t)),
            t.exports.decode = e=>t=>n.decode(e)(s(i.decode()(t))),
            t.exports.it = n
        }
        , {
            "./it": 245,
            "it-buffer": 233,
            "it-length-prefixed": 238
        }],
        245: [function(e, t, r) {
            "use strict";
            t.exports.encode = e=>t=>(async function*() {
                for await(const r of t)
                    yield e.encode(r)
            }
            )(),
            t.exports.decode = e=>t=>(async function*() {
                for await(const r of t)
                    yield e.decode(r)
            }
            )()
        }
        , {}],
        246: [function(e, t, r) {
            const i = e("fast-fifo");
            t.exports = e=>{
                let t;
                "function" == typeof (e = e || {}) ? (t = e,
                e = {}) : t = e.onEnd;
                let r, n, s, o = new i;
                const a = e=>n ? n(e) : (o.push(e),
                r)
                  , c = e=>s ? r : a({
                    done: !1,
                    value: e
                })
                  , u = e=>s ? r : (s = !0,
                e ? (e=>(o = new i,
                n ? n({
                    error: e
                }) : (o.push({
                    error: e
                }),
                r)))(e) : a({
                    done: !0
                }));
                if (r = {
                    [Symbol.asyncIterator]() {
                        return this
                    },
                    next: ()=>{
                        if (!o.isEmpty()) {
                            if (e.writev) {
                                let e;
                                const t = [];
                                for (; !o.isEmpty(); ) {
                                    if ((e = o.shift()).error)
                                        throw e.error;
                                    t.push(e.value)
                                }
                                return {
                                    done: e.done,
                                    value: t
                                }
                            }
                            const t = o.shift();
                            if (t.error)
                                throw t.error;
                            return t
                        }
                        return s ? {
                            done: !0
                        } : new Promise((t,i)=>{
                            n = s=>(n = null,
                            s.error ? i(s.error) : e.writev && !s.done ? t({
                                done: s.done,
                                value: [s.value]
                            }) : t(s),
                            r)
                        }
                        )
                    }
                    ,
                    return: ()=>(o = new i,
                    u(),
                    {
                        done: !0
                    }),
                    throw: e=>(u(e),
                    {
                        done: !0
                    }),
                    push: c,
                    end: u
                },
                !t)
                    return r;
                const f = r;
                return r = {
                    [Symbol.asyncIterator]() {
                        return this
                    },
                    next: ()=>f.next(),
                    throw: e=>(f.throw(e),
                    t && (t(e),
                    t = null),
                    {
                        done: !0
                    }),
                    return: ()=>(f.return(),
                    t && (t(),
                    t = null),
                    {
                        done: !0
                    }),
                    push: c,
                    end: e=>(f.end(e),
                    t && (t(e),
                    t = null),
                    r)
                }
            }
        }
        , {
            "fast-fifo": 195
        }],
        247: [function(e, t, r) {
            const i = e("bl/BufferList");
            t.exports = e=>{
                const t = async function*() {
                    let t = yield
                      , r = new i;
                    for await(const n of e)
                        if (t)
                            for (r.append(n); r.length >= t; ) {
                                const e = r.shallowSlice(0, t);
                                if (r.consume(t),
                                !(t = yield e)) {
                                    r.length && (t = yield r,
                                    r = new i);
                                    break
                                }
                            }
                        else
                            t = yield r.append(n),
                            r = new i;
                    if (t)
                        throw Object.assign(new Error(`stream ended before ${t} bytes became available`), {
                            code: "ERR_UNDER_READ",
                            buffer: r
                        })
                }();
                return t.next(),
                t
            }
        }
        , {
            "bl/BufferList": 165
        }],
        248: [function(e, t, r) {
            "use strict";
            const i = e("err-code")
              , n = {
                16: "aes-128-ctr",
                32: "aes-256-ctr"
            };
            t.exports = function(e) {
                const t = n[e.length];
                if (!t) {
                    const t = Object.entries(n).map(([e,t])=>`${e} (${t})`).join(" / ");
                    throw i(new Error(`Invalid key length ${e.length} bytes. Must be ${t}`), "ERR_INVALID_KEY_LENGTH")
                }
                return t
            }
        }
        , {
            "err-code": 193
        }],
        249: [function(e, t, r) {
            "use strict";
            e("node-forge/lib/aes");
            const i = e("node-forge/lib/forge")
              , n = e("uint8arrays/to-string")
              , s = e("uint8arrays/from-string");
            t.exports = {
                createCipheriv: (e,t,r)=>{
                    const o = i.cipher.createCipher("AES-CTR", n(t, "ascii"));
                    return o.start({
                        iv: n(r, "ascii")
                    }),
                    {
                        update: e=>(o.update(i.util.createBuffer(n(e, "ascii"))),
                        s(o.output.getBytes(), "ascii"))
                    }
                }
                ,
                createDecipheriv: (e,t,r)=>{
                    const o = i.cipher.createDecipher("AES-CTR", n(t, "ascii"));
                    return o.start({
                        iv: n(r, "ascii")
                    }),
                    {
                        update: e=>(o.update(i.util.createBuffer(n(e, "ascii"))),
                        s(o.output.getBytes(), "ascii"))
                    }
                }
            }
        }
        , {
            "node-forge/lib/aes": 328,
            "node-forge/lib/forge": 336,
            "uint8arrays/from-string": 412,
            "uint8arrays/to-string": 413
        }],
        250: [function(e, t, r) {
            "use strict";
            const i = e("./ciphers")
              , n = e("./cipher-mode");
            r.create = async function(e, t) {
                const r = n(e)
                  , s = i.createCipheriv(r, e, t)
                  , o = i.createDecipheriv(r, e, t);
                return {
                    encrypt: async e=>s.update(e),
                    decrypt: async e=>o.update(e)
                }
            }
        }
        , {
            "./cipher-mode": 248,
            "./ciphers": 249
        }],
        251: [function(e, t, r) {
            "use strict";
            const i = e("uint8arrays/concat")
              , n = e("uint8arrays/from-string")
              , s = e("../webcrypto");
            t.exports = {
                create: function({algorithm: e="AES-GCM", nonceLength: t=12, keyLength: r=16, digest: o="SHA-256", saltLength: a=16, iterations: c=32767}={}) {
                    const u = s.get();
                    return r *= 8,
                    {
                        encrypt: async function(s, f) {
                            const h = u.getRandomValues(new Uint8Array(a))
                              , l = u.getRandomValues(new Uint8Array(t))
                              , d = {
                                name: e,
                                iv: l
                            }
                              , p = {
                                name: "PBKDF2",
                                salt: h,
                                iterations: c,
                                hash: {
                                    name: o
                                }
                            }
                              , b = await u.subtle.importKey("raw", n(f), {
                                name: "PBKDF2"
                            }, !1, ["deriveKey", "deriveBits"])
                              , g = await u.subtle.deriveKey(p, b, {
                                name: e,
                                length: r
                            }, !0, ["encrypt"])
                              , m = await u.subtle.encrypt(d, g, s);
                            return i([h, d.iv, new Uint8Array(m)])
                        },
                        decrypt: async function(i, s) {
                            const f = i.slice(0, a)
                              , h = i.slice(a, a + t)
                              , l = i.slice(a + t)
                              , d = {
                                name: e,
                                iv: h
                            }
                              , p = {
                                name: "PBKDF2",
                                salt: f,
                                iterations: c,
                                hash: {
                                    name: o
                                }
                            }
                              , b = await u.subtle.importKey("raw", n(s), {
                                name: "PBKDF2"
                            }, !1, ["deriveKey", "deriveBits"])
                              , g = await u.subtle.deriveKey(p, b, {
                                name: e,
                                length: r
                            }, !0, ["decrypt"])
                              , m = await u.subtle.decrypt(d, g, l);
                            return new Uint8Array(m)
                        }
                    }
                }
            }
        }
        , {
            "../webcrypto": 274,
            "uint8arrays/concat": 410,
            "uint8arrays/from-string": 412
        }],
        252: [function(e, t, r) {
            "use strict";
            const i = e("../webcrypto")
              , n = e("./lengths")
              , s = {
                SHA1: "SHA-1",
                SHA256: "SHA-256",
                SHA512: "SHA-512"
            };
            r.create = async function(e, t) {
                const r = s[e]
                  , o = await i.get().subtle.importKey("raw", t, {
                    name: "HMAC",
                    hash: {
                        name: r
                    }
                }, !1, ["sign"]);
                return {
                    digest: async e=>(async(e,t)=>{
                        const r = await i.get().subtle.sign({
                            name: "HMAC"
                        }, e, t);
                        return new Uint8Array(r,r.byteOffset,r.byteLength)
                    }
                    )(o, e),
                    length: n[e]
                }
            }
        }
        , {
            "../webcrypto": 274,
            "./lengths": 253
        }],
        253: [function(e, t, r) {
            "use strict";
            t.exports = {
                SHA1: 20,
                SHA256: 32,
                SHA512: 64
            }
        }
        , {}],
        254: [function(e, t, r) {
            "use strict";
            const i = e("./hmac")
              , n = e("./aes")
              , s = e("./keys");
            r.aes = n,
            r.hmac = i,
            r.keys = s,
            r.randomBytes = e("./random-bytes"),
            r.pbkdf2 = e("./pbkdf2")
        }
        , {
            "./aes": 250,
            "./hmac": 252,
            "./keys": 261,
            "./pbkdf2": 271,
            "./random-bytes": 272
        }],
        255: [function(e, t, r) {
            "use strict";
            const i = e("err-code")
              , n = e("../webcrypto")
              , {base64urlToBuffer: s} = e("../util")
              , o = e("./validate-curve-type")
              , a = e("uint8arrays/to-string")
              , c = e("uint8arrays/concat")
              , u = e("uint8arrays/equals")
              , f = {
                "P-256": 256,
                "P-384": 384,
                "P-521": 521
            };
            r.generateEphmeralKeyPair = async function(e) {
                o(Object.keys(f), e);
                const t = await n.get().subtle.generateKey({
                    name: "ECDH",
                    namedCurve: e
                }, !0, ["deriveBits"]);
                return {
                    key: l(await n.get().subtle.exportKey("jwk", t.publicKey)),
                    genSharedKey: async(r,i)=>{
                        let s;
                        s = i ? await n.get().subtle.importKey("jwk", p(e, i), {
                            name: "ECDH",
                            namedCurve: e
                        }, !1, ["deriveBits"]) : t.privateKey;
                        const o = [await n.get().subtle.importKey("jwk", d(e, r), {
                            name: "ECDH",
                            namedCurve: e
                        }, !1, []), s]
                          , a = await n.get().subtle.deriveBits({
                            name: "ECDH",
                            namedCurve: e,
                            public: o[0]
                        }, o[1], f[e]);
                        return new Uint8Array(a,a.byteOffset,a.byteLength)
                    }
                }
            }
            ;
            const h = {
                "P-256": 32,
                "P-384": 48,
                "P-521": 66
            };
            function l(e) {
                const t = h[e.crv];
                return c([Uint8Array.from([4]), s(e.x, t), s(e.y, t)], 1 + 2 * t)
            }
            function d(e, t) {
                const r = h[e];
                if (u(!t.slice(0, 1), Uint8Array.from([4])))
                    throw i(new Error("Cannot unmarshal public key - invalid key format"), "ERR_INVALID_KEY_FORMAT");
                return {
                    kty: "EC",
                    crv: e,
                    x: a(t.slice(1, r + 1), "base64url"),
                    y: a(t.slice(1 + r), "base64url"),
                    ext: !0
                }
            }
            const p = (e,t)=>({
                ...d(e, t.public),
                d: a(t.private, "base64url")
            })
        }
        , {
            "../util": 273,
            "../webcrypto": 274,
            "./validate-curve-type": 270,
            "err-code": 193,
            "uint8arrays/concat": 410,
            "uint8arrays/equals": 411,
            "uint8arrays/to-string": 413
        }],
        256: [function(e, t, r) {
            "use strict";
            const i = e("multihashing-async/src/sha")
              , n = e("protons")
              , s = e("multibase")
              , o = e("err-code")
              , a = e("uint8arrays/equals")
              , c = e("./ed25519")
              , u = n(e("./keys.proto"))
              , f = e("./exporter");
            class h {
                constructor(e) {
                    this._key = d(e, c.publicKeyLength)
                }
                async verify(e, t) {
                    return c.hashAndVerify(this._key, t, e)
                }
                marshal() {
                    return this._key
                }
                get bytes() {
                    return u.PublicKey.encode({
                        Type: u.KeyType.Ed25519,
                        Data: this.marshal()
                    })
                }
                equals(e) {
                    return a(this.bytes, e.bytes)
                }
                async hash() {
                    return i.multihashing(this.bytes, "sha2-256")
                }
            }
            class l {
                constructor(e, t) {
                    this._key = d(e, c.privateKeyLength),
                    this._publicKey = d(t, c.publicKeyLength)
                }
                async sign(e) {
                    return c.hashAndSign(this._key, e)
                }
                get public() {
                    return new h(this._publicKey)
                }
                marshal() {
                    return this._key
                }
                get bytes() {
                    return u.PrivateKey.encode({
                        Type: u.KeyType.Ed25519,
                        Data: this.marshal()
                    })
                }
                equals(e) {
                    return a(this.bytes, e.bytes)
                }
                async hash() {
                    return i.multihashing(this.bytes, "sha2-256")
                }
                async id() {
                    const e = await this.public.hash();
                    return s.encode("base58btc", e).toString().slice(1)
                }
                async export(e, t="libp2p-key") {
                    if ("libp2p-key" === t)
                        return f.export(this.bytes, e);
                    throw o(new Error(`export format '${t}' is not supported`), "ERR_INVALID_EXPORT_FORMAT")
                }
            }
            function d(e, t) {
                if ((e = Uint8Array.from(e || [])).length !== t)
                    throw o(new Error(`Key must be a Uint8Array of length ${t}, got ${e.length}`), "ERR_INVALID_KEY_TYPE");
                return e
            }
            t.exports = {
                Ed25519PublicKey: h,
                Ed25519PrivateKey: l,
                unmarshalEd25519PrivateKey: function(e) {
                    if (e.length > c.privateKeyLength) {
                        const t = (e = d(e, c.privateKeyLength + c.publicKeyLength)).slice(0, c.privateKeyLength)
                          , r = e.slice(c.privateKeyLength, e.length);
                        return new l(t,r)
                    }
                    const t = (e = d(e, c.privateKeyLength)).slice(0, c.privateKeyLength)
                      , r = e.slice(c.publicKeyLength);
                    return new l(t,r)
                },
                unmarshalEd25519PublicKey: function(e) {
                    return e = d(e, c.publicKeyLength),
                    new h(e)
                },
                generateKeyPair: async function() {
                    const {privateKey: e, publicKey: t} = await c.generateKey();
                    return new l(e,t)
                },
                generateKeyPairFromSeed: async function(e) {
                    const {privateKey: t, publicKey: r} = await c.generateKeyFromSeed(e);
                    return new l(t,r)
                }
            }
        }
        , {
            "./ed25519": 257,
            "./exporter": 259,
            "./keys.proto": 264,
            "err-code": 193,
            multibase: 297,
            "multihashing-async/src/sha": 316,
            protons: 397,
            "uint8arrays/equals": 411
        }],
        257: [function(e, t, r) {
            "use strict";
            e("node-forge/lib/ed25519");
            const i = e("node-forge/lib/forge");
            r.publicKeyLength = i.pki.ed25519.constants.PUBLIC_KEY_BYTE_LENGTH,
            r.privateKeyLength = i.pki.ed25519.constants.PRIVATE_KEY_BYTE_LENGTH,
            r.generateKey = async function() {
                return i.pki.ed25519.generateKeyPair()
            }
            ,
            r.generateKeyFromSeed = async function(e) {
                return i.pki.ed25519.generateKeyPair({
                    seed: e
                })
            }
            ,
            r.hashAndSign = async function(e, t) {
                return i.pki.ed25519.sign({
                    message: t,
                    privateKey: e
                })
            }
            ,
            r.hashAndVerify = async function(e, t, r) {
                return i.pki.ed25519.verify({
                    signature: t,
                    message: r,
                    publicKey: e
                })
            }
        }
        , {
            "node-forge/lib/ed25519": 335,
            "node-forge/lib/forge": 336
        }],
        258: [function(e, t, r) {
            "use strict";
            const i = e("./ecdh");
            t.exports = async e=>i.generateEphmeralKeyPair(e)
        }
        , {
            "./ecdh": 255
        }],
        259: [function(e, t, r) {
            "use strict";
            const i = e("multibase")
              , n = e("../ciphers/aes-gcm");
            t.exports = {
                export: async function(e, t) {
                    const r = n.create()
                      , s = await r.encrypt(e, t);
                    return i.names.base64.encode(s)
                }
            }
        }
        , {
            "../ciphers/aes-gcm": 251,
            multibase: 297
        }],
        260: [function(e, t, r) {
            "use strict";
            const i = e("multibase")
              , n = e("../ciphers/aes-gcm");
            t.exports = {
                import: async function(e, t) {
                    const r = i.names.base64.decode(e)
                      , s = n.create();
                    return await s.decrypt(r, t)
                }
            }
        }
        , {
            "../ciphers/aes-gcm": 251,
            multibase: 297
        }],
        261: [function(e, t, r) {
            "use strict";
            const i = e("protons")(e("./keys.proto"));
            e("node-forge/lib/asn1"),
            e("node-forge/lib/pbe");
            const n = e("node-forge/lib/forge")
              , s = e("err-code")
              , o = e("uint8arrays/from-string")
              , a = e("./importer");
            r = t.exports;
            const c = {
                rsa: e("./rsa-class"),
                ed25519: e("./ed25519-class"),
                secp256k1: e("./secp256k1-class")(i, e("../random-bytes"))
            };
            r.supportedKeys = c,
            r.keysPBM = i;
            const u = "secp256k1 support requires libp2p-crypto-secp256k1 package"
              , f = "ERR_MISSING_PACKAGE";
            function h(e) {
                const t = c[e.toLowerCase()];
                if (!t) {
                    const t = Object.keys(c).join(" / ");
                    throw s(new Error(`invalid or unsupported key type ${e}. Must be ${t}`), "ERR_UNSUPPORTED_KEY_TYPE")
                }
                return t
            }
            r.keyStretcher = e("./key-stretcher"),
            r.generateEphemeralKeyPair = e("./ephemeral-keys"),
            r.generateKeyPair = async(e,t)=>h(e).generateKeyPair(t),
            r.generateKeyPairFromSeed = async(e,t,r)=>{
                const i = h(e);
                if ("ed25519" !== e.toLowerCase())
                    throw s(new Error("Seed key derivation is unimplemented for RSA or secp256k1"), "ERR_UNSUPPORTED_KEY_DERIVATION_TYPE");
                return i.generateKeyPairFromSeed(t, r)
            }
            ,
            r.unmarshalPublicKey = e=>{
                const t = i.PublicKey.decode(e)
                  , r = t.Data;
                switch (t.Type) {
                case i.KeyType.RSA:
                    return c.rsa.unmarshalRsaPublicKey(r);
                case i.KeyType.Ed25519:
                    return c.ed25519.unmarshalEd25519PublicKey(r);
                case i.KeyType.Secp256k1:
                    if (c.secp256k1)
                        return c.secp256k1.unmarshalSecp256k1PublicKey(r);
                    throw s(new Error(u), f);
                default:
                    h(t.Type)
                }
            }
            ,
            r.marshalPublicKey = (e,t)=>(h(t = (t || "rsa").toLowerCase()),
            e.bytes),
            r.unmarshalPrivateKey = async e=>{
                const t = i.PrivateKey.decode(e)
                  , r = t.Data;
                switch (t.Type) {
                case i.KeyType.RSA:
                    return c.rsa.unmarshalRsaPrivateKey(r);
                case i.KeyType.Ed25519:
                    return c.ed25519.unmarshalEd25519PrivateKey(r);
                case i.KeyType.Secp256k1:
                    if (c.secp256k1)
                        return c.secp256k1.unmarshalSecp256k1PrivateKey(r);
                    throw s(new Error(u), f);
                default:
                    h(t.Type)
                }
            }
            ,
            r.marshalPrivateKey = (e,t)=>(h(t = (t || "rsa").toLowerCase()),
            e.bytes),
            r.import = async(e,t)=>{
                try {
                    const i = await a.import(e, t);
                    return r.unmarshalPrivateKey(i)
                } catch (e) {}
                const i = n.pki.decryptRsaPrivateKey(e, t);
                if (null === i)
                    throw s(new Error("Cannot read the key, most likely the password is wrong or not a RSA key"), "ERR_CANNOT_DECRYPT_PEM");
                let u = n.asn1.toDer(n.pki.privateKeyToAsn1(i));
                return u = o(u.getBytes(), "ascii"),
                c.rsa.unmarshalRsaPrivateKey(u)
            }
        }
        , {
            "../random-bytes": 272,
            "./ed25519-class": 256,
            "./ephemeral-keys": 258,
            "./importer": 260,
            "./key-stretcher": 263,
            "./keys.proto": 264,
            "./rsa-class": 266,
            "./secp256k1-class": 268,
            "err-code": 193,
            "node-forge/lib/asn1": 330,
            "node-forge/lib/forge": 336,
            "node-forge/lib/pbe": 343,
            protons: 397,
            "uint8arrays/from-string": 412
        }],
        262: [function(e, t, r) {
            "use strict";
            e("node-forge/lib/rsa");
            const i = e("node-forge/lib/forge")
              , {base64urlToBigInteger: n} = e("../util");
            function s(e, t) {
                return t.map(t=>n(e[t]))
            }
            t.exports = {
                jwk2pub: function(e) {
                    return i.pki.setRsaPublicKey(...s(e, ["n", "e"]))
                },
                jwk2priv: function(e) {
                    return i.pki.setRsaPrivateKey(...s(e, ["n", "e", "d", "p", "q", "dp", "dq", "qi"]))
                }
            }
        }
        , {
            "../util": 273,
            "node-forge/lib/forge": 336,
            "node-forge/lib/rsa": 354
        }],
        263: [function(e, t, r) {
            "use strict";
            const i = e("err-code")
              , n = e("uint8arrays/concat")
              , s = e("uint8arrays/from-string")
              , o = e("../hmac")
              , a = {
                "AES-128": {
                    ivSize: 16,
                    keySize: 16
                },
                "AES-256": {
                    ivSize: 16,
                    keySize: 32
                },
                Blowfish: {
                    ivSize: 8,
                    cipherKeySize: 32
                }
            };
            t.exports = async(e,t,r)=>{
                const c = a[e];
                if (!c) {
                    const t = Object.keys(a).join(" / ");
                    throw i(new Error(`unknown cipher type '${e}'. Must be ${t}`), "ERR_INVALID_CIPHER_TYPE")
                }
                if (!t)
                    throw i(new Error("missing hash type"), "ERR_MISSING_HASH_TYPE");
                const u = c.keySize
                  , f = c.ivSize
                  , h = s("key expansion")
                  , l = 2 * (f + u + 20)
                  , d = await o.create(t, r);
                let p = await d.digest(h);
                const b = [];
                let g = 0;
                for (; g < l; ) {
                    const e = await d.digest(n([p, h]));
                    let t = e.length;
                    g + t > l && (t = l - g),
                    b.push(e),
                    g += t,
                    p = await d.digest(p)
                }
                const m = l / 2
                  , y = n(b)
                  , v = y.slice(0, m)
                  , w = y.slice(m, l)
                  , E = e=>({
                    iv: e.slice(0, f),
                    cipherKey: e.slice(f, f + u),
                    macKey: e.slice(f + u)
                });
                return {
                    k1: E(v),
                    k2: E(w)
                }
            }
        }
        , {
            "../hmac": 252,
            "err-code": 193,
            "uint8arrays/concat": 410,
            "uint8arrays/from-string": 412
        }],
        264: [function(e, t, r) {
            "use strict";
            t.exports = "enum KeyType {\n  RSA = 0;\n  Ed25519 = 1;\n  Secp256k1 = 2;\n}\nmessage PublicKey {\n  required KeyType Type = 1;\n  required bytes Data = 2;\n}\nmessage PrivateKey {\n  required KeyType Type = 1;\n  required bytes Data = 2;\n}"
        }
        , {}],
        265: [function(e, t, r) {
            "use strict";
            const i = e("../webcrypto")
              , n = e("../random-bytes")
              , s = e("uint8arrays/to-string")
              , o = e("uint8arrays/from-string");
            function a(e) {
                return Promise.all([i.get().subtle.exportKey("jwk", e.privateKey), i.get().subtle.exportKey("jwk", e.publicKey)])
            }
            r.utils = e("./rsa-utils"),
            r.generateKey = async function(e) {
                const t = await i.get().subtle.generateKey({
                    name: "RSASSA-PKCS1-v1_5",
                    modulusLength: e,
                    publicExponent: new Uint8Array([1, 0, 1]),
                    hash: {
                        name: "SHA-256"
                    }
                }, !0, ["sign", "verify"])
                  , r = await a(t);
                return {
                    privateKey: r[0],
                    publicKey: r[1]
                }
            }
            ,
            r.unmarshalPrivateKey = async function(e) {
                const t = [await i.get().subtle.importKey("jwk", e, {
                    name: "RSASSA-PKCS1-v1_5",
                    hash: {
                        name: "SHA-256"
                    }
                }, !0, ["sign"]), await (r = e,
                i.get().subtle.importKey("jwk", {
                    kty: r.kty,
                    n: r.n,
                    e: r.e
                }, {
                    name: "RSASSA-PKCS1-v1_5",
                    hash: {
                        name: "SHA-256"
                    }
                }, !0, ["verify"]))];
                var r;
                const n = await a({
                    privateKey: t[0],
                    publicKey: t[1]
                });
                return {
                    privateKey: n[0],
                    publicKey: n[1]
                }
            }
            ,
            r.getRandomValues = n,
            r.hashAndSign = async function(e, t) {
                const r = await i.get().subtle.importKey("jwk", e, {
                    name: "RSASSA-PKCS1-v1_5",
                    hash: {
                        name: "SHA-256"
                    }
                }, !1, ["sign"])
                  , n = await i.get().subtle.sign({
                    name: "RSASSA-PKCS1-v1_5"
                }, r, Uint8Array.from(t));
                return new Uint8Array(n,n.byteOffset,n.byteLength)
            }
            ,
            r.hashAndVerify = async function(e, t, r) {
                const n = await i.get().subtle.importKey("jwk", e, {
                    name: "RSASSA-PKCS1-v1_5",
                    hash: {
                        name: "SHA-256"
                    }
                }, !1, ["verify"]);
                return i.get().subtle.verify({
                    name: "RSASSA-PKCS1-v1_5"
                }, n, t, r)
            }
            ;
            const {jwk2pub: c, jwk2priv: u} = e("./jwk2pem");
            function f(e, t, r, i) {
                const n = t ? c(e) : u(e)
                  , a = i(s(Uint8Array.from(r), "ascii"), n);
                return o(a, "ascii")
            }
            r.encrypt = function(e, t) {
                return f(e, !0, t, (e,t)=>t.encrypt(e))
            }
            ,
            r.decrypt = function(e, t) {
                return f(e, !1, t, (e,t)=>t.decrypt(e))
            }
        }
        , {
            "../random-bytes": 272,
            "../webcrypto": 274,
            "./jwk2pem": 262,
            "./rsa-utils": 267,
            "uint8arrays/from-string": 412,
            "uint8arrays/to-string": 413
        }],
        266: [function(e, t, r) {
            "use strict";
            const i = e("multihashing-async/src/sha")
              , n = e("protons")
              , s = e("err-code")
              , o = e("uint8arrays/equals")
              , a = e("uint8arrays/to-string");
            e("node-forge/lib/sha512"),
            e("node-forge/lib/ed25519");
            const c = e("node-forge/lib/forge")
              , u = e("./rsa")
              , f = n(e("./keys.proto"))
              , h = e("./exporter");
            class l {
                constructor(e) {
                    this._key = e
                }
                async verify(e, t) {
                    return u.hashAndVerify(this._key, t, e)
                }
                marshal() {
                    return u.utils.jwkToPkix(this._key)
                }
                get bytes() {
                    return f.PublicKey.encode({
                        Type: f.KeyType.RSA,
                        Data: this.marshal()
                    })
                }
                encrypt(e) {
                    return u.encrypt(this._key, e)
                }
                equals(e) {
                    return o(this.bytes, e.bytes)
                }
                async hash() {
                    return i.multihashing(this.bytes, "sha2-256")
                }
            }
            class d {
                constructor(e, t) {
                    this._key = e,
                    this._publicKey = t
                }
                genSecret() {
                    return u.getRandomValues(16)
                }
                async sign(e) {
                    return u.hashAndSign(this._key, e)
                }
                get public() {
                    if (!this._publicKey)
                        throw s(new Error("public key not provided"), "ERR_PUBKEY_NOT_PROVIDED");
                    return new l(this._publicKey)
                }
                decrypt(e) {
                    return u.decrypt(this._key, e)
                }
                marshal() {
                    return u.utils.jwkToPkcs1(this._key)
                }
                get bytes() {
                    return f.PrivateKey.encode({
                        Type: f.KeyType.RSA,
                        Data: this.marshal()
                    })
                }
                equals(e) {
                    return o(this.bytes, e.bytes)
                }
                async hash() {
                    return i.multihashing(this.bytes, "sha2-256")
                }
                async id() {
                    const e = await this.public.hash();
                    return a(e, "base58btc")
                }
                async export(e, t="pkcs-8") {
                    if ("pkcs-8" === t) {
                        const t = new c.util.ByteBuffer(this.marshal())
                          , r = c.asn1.fromDer(t)
                          , i = c.pki.privateKeyFromAsn1(r)
                          , n = {
                            algorithm: "aes256",
                            count: 1e4,
                            saltSize: 16,
                            prfAlgorithm: "sha512"
                        };
                        return c.pki.encryptRsaPrivateKey(i, e, n)
                    }
                    if ("libp2p-key" === t)
                        return h.export(this.bytes, e);
                    throw s(new Error(`export format '${t}' is not supported`), "ERR_INVALID_EXPORT_FORMAT")
                }
            }
            t.exports = {
                RsaPublicKey: l,
                RsaPrivateKey: d,
                unmarshalRsaPublicKey: function(e) {
                    const t = u.utils.pkixToJwk(e);
                    return new l(t)
                },
                unmarshalRsaPrivateKey: async function(e) {
                    const t = u.utils.pkcs1ToJwk(e)
                      , r = await u.unmarshalPrivateKey(t);
                    return new d(r.privateKey,r.publicKey)
                },
                generateKeyPair: async function(e) {
                    const t = await u.generateKey(e);
                    return new d(t.privateKey,t.publicKey)
                },
                fromJwk: async function(e) {
                    const t = await u.unmarshalPrivateKey(e);
                    return new d(t.privateKey,t.publicKey)
                }
            }
        }
        , {
            "./exporter": 259,
            "./keys.proto": 264,
            "./rsa": 265,
            "err-code": 193,
            "multihashing-async/src/sha": 316,
            "node-forge/lib/ed25519": 335,
            "node-forge/lib/forge": 336,
            "node-forge/lib/sha512": 357,
            protons: 397,
            "uint8arrays/equals": 411,
            "uint8arrays/to-string": 413
        }],
        267: [function(e, t, r) {
            "use strict";
            e("node-forge/lib/asn1"),
            e("node-forge/lib/rsa");
            const i = e("node-forge/lib/forge")
              , {bigIntegerToUintBase64url: n, base64urlToBigInteger: s} = e("./../util")
              , o = e("uint8arrays/from-string")
              , a = e("uint8arrays/to-string");
            r.pkcs1ToJwk = function(e) {
                const t = i.asn1.fromDer(a(e, "ascii"))
                  , r = i.pki.privateKeyFromAsn1(t);
                return {
                    kty: "RSA",
                    n: n(r.n),
                    e: n(r.e),
                    d: n(r.d),
                    p: n(r.p),
                    q: n(r.q),
                    dp: n(r.dP),
                    dq: n(r.dQ),
                    qi: n(r.qInv),
                    alg: "RS256",
                    kid: "2011-04-29"
                }
            }
            ,
            r.jwkToPkcs1 = function(e) {
                const t = i.pki.privateKeyToAsn1({
                    n: s(e.n),
                    e: s(e.e),
                    d: s(e.d),
                    p: s(e.p),
                    q: s(e.q),
                    dP: s(e.dp),
                    dQ: s(e.dq),
                    qInv: s(e.qi)
                });
                return o(i.asn1.toDer(t).getBytes(), "ascii")
            }
            ,
            r.pkixToJwk = function(e) {
                const t = i.asn1.fromDer(a(e, "ascii"))
                  , r = i.pki.publicKeyFromAsn1(t);
                return {
                    kty: "RSA",
                    n: n(r.n),
                    e: n(r.e),
                    alg: "RS256",
                    kid: "2011-04-29"
                }
            }
            ,
            r.jwkToPkix = function(e) {
                const t = i.pki.publicKeyToAsn1({
                    n: s(e.n),
                    e: s(e.e)
                });
                return o(i.asn1.toDer(t).getBytes(), "ascii")
            }
        }
        , {
            "./../util": 273,
            "node-forge/lib/asn1": 330,
            "node-forge/lib/forge": 336,
            "node-forge/lib/rsa": 354,
            "uint8arrays/from-string": 412,
            "uint8arrays/to-string": 413
        }],
        268: [function(e, t, r) {
            "use strict";
            const i = e("multihashing-async/src/sha")
              , n = e("err-code")
              , s = e("uint8arrays/equals")
              , o = e("uint8arrays/to-string")
              , a = e("./exporter");
            t.exports = (t,r,c)=>{
                c = c || e("./secp256k1")(r);
                class u {
                    constructor(e) {
                        c.validatePublicKey(e),
                        this._key = e
                    }
                    verify(e, t) {
                        return c.hashAndVerify(this._key, t, e)
                    }
                    marshal() {
                        return c.compressPublicKey(this._key)
                    }
                    get bytes() {
                        return t.PublicKey.encode({
                            Type: t.KeyType.Secp256k1,
                            Data: this.marshal()
                        })
                    }
                    equals(e) {
                        return s(this.bytes, e.bytes)
                    }
                    hash() {
                        return i.multihashing(this.bytes, "sha2-256")
                    }
                }
                class f {
                    constructor(e, t) {
                        this._key = e,
                        this._publicKey = t || c.computePublicKey(e),
                        c.validatePrivateKey(this._key),
                        c.validatePublicKey(this._publicKey)
                    }
                    sign(e) {
                        return c.hashAndSign(this._key, e)
                    }
                    get public() {
                        return new u(this._publicKey)
                    }
                    marshal() {
                        return this._key
                    }
                    get bytes() {
                        return t.PrivateKey.encode({
                            Type: t.KeyType.Secp256k1,
                            Data: this.marshal()
                        })
                    }
                    equals(e) {
                        return s(this.bytes, e.bytes)
                    }
                    hash() {
                        return i.multihashing(this.bytes, "sha2-256")
                    }
                    async id() {
                        const e = await this.public.hash();
                        return o(e, "base58btc")
                    }
                    async export(e, t="libp2p-key") {
                        if ("libp2p-key" === t)
                            return a.export(this.bytes, e);
                        throw n(new Error(`export format '${t}' is not supported`), "ERR_INVALID_EXPORT_FORMAT")
                    }
                }
                return {
                    Secp256k1PublicKey: u,
                    Secp256k1PrivateKey: f,
                    unmarshalSecp256k1PrivateKey: function(e) {
                        return new f(e)
                    },
                    unmarshalSecp256k1PublicKey: function(e) {
                        return new u(e)
                    },
                    generateKeyPair: async function() {
                        const e = await c.generateKey();
                        return new f(e)
                    }
                }
            }
        }
        , {
            "./exporter": 259,
            "./secp256k1": 269,
            "err-code": 193,
            "multihashing-async/src/sha": 316,
            "uint8arrays/equals": 411,
            "uint8arrays/to-string": 413
        }],
        269: [function(e, t, r) {
            "use strict";
            const i = e("secp256k1")
              , n = e("multihashing-async/src/sha")
              , s = "sha2-256";
            t.exports = e=>{
                function t(e) {
                    if (!i.privateKeyVerify(e))
                        throw new Error("Invalid private key")
                }
                return {
                    generateKey: function() {
                        let t;
                        do {
                            t = e(32)
                        } while (!i.privateKeyVerify(t));return t
                    },
                    privateKeyLength: 32,
                    hashAndSign: async function(e, t) {
                        const r = await n.digest(t, s)
                          , o = i.ecdsaSign(r, e);
                        return i.signatureExport(o.signature)
                    },
                    hashAndVerify: async function(e, t, r) {
                        const o = await n.digest(r, s);
                        return t = i.signatureImport(t),
                        i.ecdsaVerify(t, o, e)
                    },
                    compressPublicKey: function(e) {
                        if (!i.publicKeyVerify(e))
                            throw new Error("Invalid public key");
                        return i.publicKeyConvert(e, !0)
                    },
                    decompressPublicKey: function(e) {
                        return i.publicKeyConvert(e, !1)
                    },
                    validatePrivateKey: t,
                    validatePublicKey: function(e) {
                        if (!i.publicKeyVerify(e))
                            throw new Error("Invalid public key")
                    },
                    computePublicKey: function(e) {
                        return t(e),
                        i.publicKeyCreate(e)
                    }
                }
            }
        }
        , {
            "multihashing-async/src/sha": 316,
            secp256k1: 402
        }],
        270: [function(e, t, r) {
            "use strict";
            const i = e("err-code");
            t.exports = function(e, t) {
                if (!e.includes(t)) {
                    const r = e.join(" / ");
                    throw i(new Error(`Unknown curve: ${t}. Must be ${r}`), "ERR_INVALID_CURVE")
                }
            }
        }
        , {
            "err-code": 193
        }],
        271: [function(e, t, r) {
            "use strict";
            const i = e("node-forge/lib/pbkdf2")
              , n = e("node-forge/lib/util")
              , s = e("err-code")
              , o = {
                sha1: "sha1",
                "sha2-256": "sha256",
                "sha2-512": "sha512"
            };
            t.exports = function(e, t, r, a, c) {
                const u = o[c];
                if (!u) {
                    const e = Object.keys(o).join(" / ");
                    throw s(new Error(`Hash '${c}' is unknown or not supported. Must be ${e}`), "ERR_UNSUPPORTED_HASH_TYPE")
                }
                const f = i(e, t, r, a, u);
                return n.encode64(f)
            }
        }
        , {
            "err-code": 193,
            "node-forge/lib/pbkdf2": 344,
            "node-forge/lib/util": 358
        }],
        272: [function(e, t, r) {
            "use strict";
            const i = e("iso-random-stream/src/random")
              , n = e("err-code");
            t.exports = function(e) {
                if (isNaN(e) || e <= 0)
                    throw n(new Error("random bytes length must be a Number bigger than 0"), "ERR_INVALID_LENGTH");
                return i(e)
            }
        }
        , {
            "err-code": 193,
            "iso-random-stream/src/random": 231
        }],
        273: [function(e, t, r) {
            "use strict";
            e("node-forge/lib/util"),
            e("node-forge/lib/jsbn");
            const i = e("node-forge/lib/forge")
              , n = e("uint8arrays/from-string")
              , s = e("uint8arrays/to-string")
              , o = e("uint8arrays/concat");
            r.bigIntegerToUintBase64url = (e,t)=>{
                let r = Uint8Array.from(e.abs().toByteArray());
                if (r = 0 === r[0] ? r.slice(1) : r,
                null != t) {
                    if (r.length > t)
                        throw new Error("byte array longer than desired length");
                    r = o([new Uint8Array(t - r.length), r])
                }
                return s(r, "base64url")
            }
            ,
            r.base64urlToBigInteger = e=>{
                const t = r.base64urlToBuffer(e);
                return new i.jsbn.BigInteger(s(t, "base16"),16)
            }
            ,
            r.base64urlToBuffer = (e,t)=>{
                let r = n(e, "base64urlpad");
                if (null != t) {
                    if (r.length > t)
                        throw new Error("byte array longer than desired length");
                    r = o([new Uint8Array(t - r.length), r])
                }
                return r
            }
        }
        , {
            "node-forge/lib/forge": 336,
            "node-forge/lib/jsbn": 338,
            "node-forge/lib/util": 358,
            "uint8arrays/concat": 410,
            "uint8arrays/from-string": 412,
            "uint8arrays/to-string": 413
        }],
        274: [function(e, t, r) {
            "use strict";
            r.get = (e=self)=>{
                const t = e.crypto || e.msCrypto;
                if (!t || !t.subtle)
                    throw Object.assign(new Error("Missing Web Crypto API. The most likely cause of this error is that this page is being accessed from an insecure context (i.e. not HTTPS). For more information and possible resolutions see https://github.com/libp2p/js-libp2p-crypto/blob/master/README.md#web-crypto-api"), {
                        code: "ERR_MISSING_WEB_CRYPTO"
                    });
                return t
            }
        }
        , {}],
        275: [function(e, t, r) {
            "use strict";
            const i = e("peer-id")
              , n = e("multiaddr")
              , s = e("class-is")
              , o = e("err-code")
              , a = e("./status");
            t.exports = s(class {
                constructor({localAddr: e, remoteAddr: t, localPeer: r, remotePeer: s, newStream: c, close: u, getStreams: f, stat: h}) {
                    !function(e, t, r, s, a, c, u) {
                        if (e && !n.isMultiaddr(e))
                            throw o(new Error("localAddr must be an instance of multiaddr"), "ERR_INVALID_PARAMETERS");
                        if (!i.isPeerId(t))
                            throw o(new Error("localPeer must be an instance of peer-id"), "ERR_INVALID_PARAMETERS");
                        if (!i.isPeerId(r))
                            throw o(new Error("remotePeer must be an instance of peer-id"), "ERR_INVALID_PARAMETERS");
                        if ("function" != typeof s)
                            throw o(new Error("new stream must be a function"), "ERR_INVALID_PARAMETERS");
                        if ("function" != typeof a)
                            throw o(new Error("close must be a function"), "ERR_INVALID_PARAMETERS");
                        if ("function" != typeof c)
                            throw o(new Error("getStreams must be a function"), "ERR_INVALID_PARAMETERS");
                        if (!u)
                            throw o(new Error("connection metadata object must be provided"), "ERR_INVALID_PARAMETERS");
                        if ("inbound" !== u.direction && "outbound" !== u.direction)
                            throw o(new Error('direction must be "inbound" or "outbound"'), "ERR_INVALID_PARAMETERS");
                        if (!u.timeline)
                            throw o(new Error("connection timeline object must be provided in the stat object"), "ERR_INVALID_PARAMETERS");
                        if (!u.timeline.open)
                            throw o(new Error("connection open timestamp must be provided"), "ERR_INVALID_PARAMETERS");
                        if (!u.timeline.upgraded)
                            throw o(new Error("connection upgraded timestamp must be provided"), "ERR_INVALID_PARAMETERS")
                    }(e, r, s, c, u, f, h),
                    this.id = parseInt(1e9 * Math.random()).toString(36) + Date.now(),
                    this.localAddr = e,
                    this.remoteAddr = t,
                    this.localPeer = r,
                    this.remotePeer = s,
                    this._stat = {
                        ...h,
                        status: a.OPEN
                    },
                    this._newStream = c,
                    this._close = u,
                    this._getStreams = f,
                    this.registry = new Map,
                    this.tags = []
                }
                get stat() {
                    return this._stat
                }
                get streams() {
                    return this._getStreams()
                }
                async newStream(e) {
                    if (this.stat.status === a.CLOSING)
                        throw o(new Error("the connection is being closed"), "ERR_CONNECTION_BEING_CLOSED");
                    if (this.stat.status === a.CLOSED)
                        throw o(new Error("the connection is closed"), "ERR_CONNECTION_CLOSED");
                    Array.isArray(e) || (e = [e]);
                    const {stream: t, protocol: r} = await this._newStream(e);
                    return this.addStream(t, {
                        protocol: r
                    }),
                    {
                        stream: t,
                        protocol: r
                    }
                }
                addStream(e, {protocol: t, metadata: r={}}) {
                    this.registry.set(e.id, {
                        protocol: t,
                        ...r
                    })
                }
                removeStream(e) {
                    this.registry.delete(e)
                }
                async close() {
                    if (this.stat.status !== a.CLOSED) {
                        if (this._closing)
                            return this._closing;
                        this.stat.status = a.CLOSING,
                        this._closing = await this._close(),
                        this._stat.timeline.close = Date.now(),
                        this.stat.status = a.CLOSED
                    }
                }
            }
            , {
                className: "Connection",
                symbolName: "@libp2p/interface-connection/connection"
            })
        }
        , {
            "./status": 277,
            "class-is": 170,
            "err-code": 193,
            multiaddr: 290,
            "peer-id": 372
        }],
        276: [function(e, t, r) {
            "use strict";
            r.Connection = e("./connection")
        }
        , {
            "./connection": 275
        }],
        277: [function(e, t, r) {
            "use strict";
            t.exports = {
                OPEN: "open",
                CLOSING: "closing",
                CLOSED: "closed"
            }
        }
        , {}],
        278: [function(e, t, r) {
            "use strict";
            const i = e("err-code");
            t.exports = class {
                constructor(e, t) {
                    this.domain = e,
                    this.codec = t
                }
                marshal() {
                    throw i(new Error("marshal must be implemented by the subclass"), "ERR_NOT_IMPLEMENTED")
                }
                equals(e) {
                    throw i(new Error("equals must be implemented by the subclass"), "ERR_NOT_IMPLEMENTED")
                }
            }
        }
        , {
            "err-code": 193
        }],
        279: [function(e, t, r) {
            "use strict";
            const i = e("class-is")
              , n = ()=>{}
            ;
            t.exports = i(class {
                constructor({min: e=0, max: t=1 / 0, handlers: r={}}) {
                    this.min = e,
                    this.max = t,
                    this._onConnect = r.onConnect || n,
                    this._onDisconnect = r.onDisconnect || n,
                    this.peers = new Set
                }
                set registrar(e) {
                    this._registrar = e
                }
                disconnect(e) {
                    this._onDisconnect(e)
                }
            }
            , {
                className: "Topology",
                symbolName: "@libp2p/js-interfaces/topology"
            })
        }
        , {
            "class-is": 170
        }],
        280: [function(e, t, r) {
            "use strict";
            t.exports = function(e, t) {
                return e.length === t.length && t.sort() && e.sort().every((e,r)=>t[r].equals(e))
            }
        }
        , {}],
        281: [function(e, t, r) {
            "use strict";
            const i = e("abortable-iterator")
              , n = e("debug")("libp2p:stream:converter");
            t.exports = function({stream: e, remoteAddr: t, localAddr: r}, s={}) {
                const {sink: o, source: a} = e
                  , c = {
                    async sink(e) {
                        s.signal && (e = i(e, s.signal));
                        try {
                            await o(e)
                        } catch (e) {
                            "aborted" !== e.type && n(e)
                        }
                        u()
                    },
                    source: s.signal ? i(a, s.signal) : a,
                    conn: e,
                    localAddr: r,
                    remoteAddr: t,
                    timeline: {
                        open: Date.now()
                    },
                    close() {
                        o([]),
                        u()
                    }
                };
                function u() {
                    c.timeline.close || (c.timeline.close = Date.now())
                }
                return c
            }
        }
        , {
            "abortable-iterator": 160,
            debug: 172
        }],
        282: [function(e, t, r) {
            "use strict";
            const i = e("multiaddr")
              , n = B("dns4")
              , s = B("dns6")
              , o = B("dnsaddr")
              , a = T(B("dns"), o, n, s)
              , c = T(B("ip4"), B("ip6"))
              , u = T(I(c, B("tcp")), I(a, B("tcp")))
              , f = I(c, B("udp"))
              , h = I(f, B("utp"))
              , l = T(I(u, B("ws")), I(a, B("ws")))
              , d = T(I(u, B("wss")), I(a, B("wss")))
              , p = T(I(u, B("http")), I(c, B("http")), I(a, B("http")))
              , b = T(I(u, B("https")), I(c, B("https")), I(a, B("https")))
              , g = T(I(l, B("p2p-webrtc-star"), B("p2p")), I(d, B("p2p-webrtc-star"), B("p2p")), I(l, B("p2p-webrtc-star")), I(d, B("p2p-webrtc-star")))
              , m = T(I(l, B("p2p-websocket-star"), B("p2p")), I(d, B("p2p-websocket-star"), B("p2p")), I(l, B("p2p-websocket-star")), I(d, B("p2p-websocket-star")))
              , y = T(I(p, B("p2p-webrtc-direct")), I(b, B("p2p-webrtc-direct")))
              , v = T(l, d, p, b, g, y, u, h, a)
              , w = T(I(v, B("p2p-stardust"), B("p2p")), I(v, B("p2p-stardust")))
              , E = T(I(v, B("p2p")), g, B("p2p"))
              , _ = T(I(E, B("p2p-circuit"), E), I(E, B("p2p-circuit")), I(B("p2p-circuit"), E), I(v, B("p2p-circuit")), I(B("p2p-circuit"), v), B("p2p-circuit"))
              , S = ()=>T(I(_, S), _)
              , k = S()
              , A = T(I(k, E, k), I(E, k), I(k, E), k, E);
            function C(e) {
                return function(t) {
                    if (!i.isMultiaddr(t))
                        try {
                            t = i(t)
                        } catch (e) {
                            return !1
                        }
                    const r = e(t.protoNames());
                    return null !== r && 0 === r.length
                }
            }
            function I() {
                const e = Array.from(arguments);
                function t(t) {
                    return t.length < e.length ? null : (e.some(e=>{
                        if (null === (t = "function" == typeof e ? e().partialMatch(t) : e.partialMatch(t)))
                            return !0
                    }
                    ),
                    t)
                }
                return {
                    toString: function() {
                        return "{ " + e.join(" ") + " }"
                    },
                    input: e,
                    matches: C(t),
                    partialMatch: t
                }
            }
            function T() {
                const e = Array.from(arguments);
                function t(t) {
                    let r = null;
                    return e.some(e=>{
                        const i = "function" == typeof e ? e().partialMatch(t) : e.partialMatch(t);
                        if (i)
                            return r = i,
                            !0
                    }
                    ),
                    r
                }
                return {
                    toString: function() {
                        return "{ " + e.join(" ") + " }"
                    },
                    input: e,
                    matches: C(t),
                    partialMatch: t
                }
            }
            function B(e) {
                const t = e;
                return {
                    toString: function() {
                        return t
                    },
                    matches: function(e) {
                        if ("string" == typeof e)
                            try {
                                e = i(e)
                            } catch (e) {
                                return !1
                            }
                        const r = e.protoNames();
                        return 1 === r.length && r[0] === t
                    },
                    partialMatch: function(e) {
                        return 0 === e.length ? null : e[0] === t ? e.slice(1) : null
                    }
                }
            }
            r.DNS = a,
            r.DNS4 = n,
            r.DNS6 = s,
            r.DNSADDR = o,
            r.IP = c,
            r.TCP = u,
            r.UDP = f,
            r.UTP = h,
            r.HTTP = p,
            r.HTTPS = b,
            r.WebSockets = l,
            r.WebSocketsSecure = d,
            r.WebSocketStar = m,
            r.WebRTCStar = g,
            r.WebRTCDirect = y,
            r.Reliable = v,
            r.Stardust = w,
            r.Circuit = k,
            r.P2P = A,
            r.IPFS = A
        }
        , {
            multiaddr: 290
        }],
        283: [function(e, t, r) {
            "use strict";
            const i = e("is-plain-obj")
              , {hasOwnProperty: n} = Object.prototype
              , {propertyIsEnumerable: s} = Object
              , o = (e,t,r)=>Object.defineProperty(e, t, {
                value: r,
                writable: !0,
                enumerable: !0,
                configurable: !0
            })
              , a = this
              , c = {
                concatArrays: !1,
                ignoreUndefined: !1
            }
              , u = e=>{
                const t = [];
                for (const r in e)
                    n.call(e, r) && t.push(r);
                if (Object.getOwnPropertySymbols) {
                    const r = Object.getOwnPropertySymbols(e);
                    for (const i of r)
                        s.call(e, i) && t.push(i)
                }
                return t
            }
            ;
            function f(e) {
                return Array.isArray(e) ? function(e) {
                    const t = e.slice(0, 0);
                    return u(e).forEach(r=>{
                        o(t, r, f(e[r]))
                    }
                    ),
                    t
                }(e) : i(e) ? function(e) {
                    const t = null === Object.getPrototypeOf(e) ? Object.create(null) : {};
                    return u(e).forEach(r=>{
                        o(t, r, f(e[r]))
                    }
                    ),
                    t
                }(e) : e
            }
            const h = (e,t,r,i)=>(r.forEach(r=>{
                void 0 === t[r] && i.ignoreUndefined || (r in e && e[r] !== Object.getPrototypeOf(e) ? o(e, r, d(e[r], t[r], i)) : o(e, r, f(t[r])))
            }
            ),
            e)
              , l = (e,t,r)=>{
                let i = e.slice(0, 0)
                  , s = 0;
                return [e, t].forEach(t=>{
                    const a = [];
                    for (let r = 0; r < t.length; r++)
                        n.call(t, r) && (a.push(String(r)),
                        o(i, s++, t === e ? t[r] : f(t[r])));
                    i = h(i, t, u(t).filter(e=>!a.includes(e)), r)
                }
                ),
                i
            }
            ;
            function d(e, t, r) {
                return r.concatArrays && Array.isArray(e) && Array.isArray(t) ? l(e, t, r) : i(t) && i(e) ? h(e, t, u(t), r) : f(t)
            }
            t.exports = function(...e) {
                const t = d(f(c), this !== a && this || {}, c);
                let r = {
                    _: {}
                };
                for (const n of e)
                    if (void 0 !== n) {
                        if (!i(n))
                            throw new TypeError("`" + n + "` is not an Option Object");
                        r = d(r, {
                            _: n
                        }, t)
                    }
                return r._
            }
        }
        , {
            "is-plain-obj": 230
        }],
        284: [function(e, t, r) {
            arguments[4][105][0].apply(r, arguments)
        }
        , {
            dup: 105
        }],
        285: [function(e, t, r) {
            arguments[4][106][0].apply(r, arguments)
        }
        , {
            dup: 106
        }],
        286: [function(e, t, r) {
            "use strict";
            const i = Math.exp;
            t.exports = function(e) {
                if ("number" != typeof e)
                    throw new Error("must provide a timespan to the moving average constructor");
                if (e <= 0)
                    throw new Error("must provide a timespan > 0 to the moving average constructor");
                let t, r, n = 0, s = 0, o = 0, a = {};
                return a.push = function(a, c) {
                    if (r) {
                        const u = 1 - i(-(a - r) / e)
                          , f = c - t;
                        t = u * c + (1 - u) * t,
                        n = (1 - u) * (n + f * (u * f)),
                        s = Math.sqrt(n),
                        o = t + u * f
                    } else
                        t = c;
                    r = a
                }
                ,
                a.movingAverage = function() {
                    return t
                }
                ,
                a.variance = function() {
                    return n
                }
                ,
                a.deviation = function() {
                    return s
                }
                ,
                a.forecast = function() {
                    return o
                }
                ,
                a
            }
        }
        , {}],
        287: [function(e, t, r) {
            var i = 1e3
              , n = 60 * i
              , s = 60 * n
              , o = 24 * s
              , a = 7 * o
              , c = 365.25 * o;
            function u(e, t, r, i) {
                var n = t >= 1.5 * r;
                return Math.round(e / r) + " " + i + (n ? "s" : "")
            }
            t.exports = function(e, t) {
                t = t || {};
                var r = typeof e;
                if ("string" === r && e.length > 0)
                    return function(e) {
                        if ((e = String(e)).length > 100)
                            return;
                        var t = /^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(e);
                        if (!t)
                            return;
                        var r = parseFloat(t[1]);
                        switch ((t[2] || "ms").toLowerCase()) {
                        case "years":
                        case "year":
                        case "yrs":
                        case "yr":
                        case "y":
                            return r * c;
                        case "weeks":
                        case "week":
                        case "w":
                            return r * a;
                        case "days":
                        case "day":
                        case "d":
                            return r * o;
                        case "hours":
                        case "hour":
                        case "hrs":
                        case "hr":
                        case "h":
                            return r * s;
                        case "minutes":
                        case "minute":
                        case "mins":
                        case "min":
                        case "m":
                            return r * n;
                        case "seconds":
                        case "second":
                        case "secs":
                        case "sec":
                        case "s":
                            return r * i;
                        case "milliseconds":
                        case "millisecond":
                        case "msecs":
                        case "msec":
                        case "ms":
                            return r;
                        default:
                            return
                        }
                    }(e);
                if ("number" === r && isFinite(e))
                    return t.long ? function(e) {
                        var t = Math.abs(e);
                        if (t >= o)
                            return u(e, t, o, "day");
                        if (t >= s)
                            return u(e, t, s, "hour");
                        if (t >= n)
                            return u(e, t, n, "minute");
                        if (t >= i)
                            return u(e, t, i, "second");
                        return e + " ms"
                    }(e) : function(e) {
                        var t = Math.abs(e);
                        if (t >= o)
                            return Math.round(e / o) + "d";
                        if (t >= s)
                            return Math.round(e / s) + "h";
                        if (t >= n)
                            return Math.round(e / n) + "m";
                        if (t >= i)
                            return Math.round(e / i) + "s";
                        return e + "ms"
                    }(e);
                throw new Error("val is not a non-empty string or a valid number. val=" + JSON.stringify(e))
            }
        }
        , {}],
        288: [function(e, t, r) {
            "use strict";
            const i = e("./convert")
              , n = e("./protocols-table")
              , s = e("varint")
              , o = e("uint8arrays/concat")
              , a = e("uint8arrays/to-string");
            function c(e) {
                const t = []
                  , r = e.split("/").slice(1);
                if (1 === r.length && "" === r[0])
                    return [];
                for (let i = 0; i < r.length; i++) {
                    const s = r[i]
                      , o = n(s);
                    if (0 !== o.size) {
                        if (++i >= r.length)
                            throw v("invalid address: " + e);
                        if (o.path) {
                            t.push([s, y(r.slice(i).join("/"))]);
                            break
                        }
                        t.push([s, r[i]])
                    } else
                        t.push([s])
                }
                return t
            }
            function u(e) {
                const t = [];
                return e.map(e=>{
                    const r = w(e);
                    t.push(r.name),
                    e.length > 1 && t.push(e[1])
                }
                ),
                y(t.join("/"))
            }
            function f(e) {
                return e.map(e=>{
                    Array.isArray(e) || (e = [e]);
                    const t = w(e);
                    return e.length > 1 ? [t.code, i.toBytes(t.code, e[1])] : [t.code]
                }
                )
            }
            function h(e) {
                return e.map(e=>{
                    const t = w(e);
                    return e.length > 1 ? [t.code, i.toString(t.code, e[1])] : [t.code]
                }
                )
            }
            function l(e) {
                return g(o(e.map(e=>{
                    const t = w(e);
                    let r = Uint8Array.from(s.encode(t.code));
                    return e.length > 1 && (r = o([r, e[1]])),
                    r
                }
                )))
            }
            function d(e, t) {
                if (e.size > 0)
                    return e.size / 8;
                if (0 === e.size)
                    return 0;
                return s.decode(t) + s.decode.bytes
            }
            function p(e) {
                const t = [];
                let r = 0;
                for (; r < e.length; ) {
                    const i = s.decode(e, r)
                      , o = s.decode.bytes
                      , c = d(n(i), e.slice(r + o));
                    if (0 === c) {
                        t.push([i]),
                        r += o;
                        continue
                    }
                    const u = e.slice(r + o, r + o + c);
                    if ((r += c + o) > e.length)
                        throw v("Invalid address Uint8Array: " + a(e, "base16"));
                    t.push([i, u])
                }
                return t
            }
            function b(e) {
                return l(f(c(e = y(e))))
            }
            function g(e) {
                const t = m(e);
                if (t)
                    throw t;
                return Uint8Array.from(e)
            }
            function m(e) {
                try {
                    p(e)
                } catch (e) {
                    return e
                }
            }
            function y(e) {
                return "/" + e.trim().split("/").filter(e=>e).join("/")
            }
            function v(e) {
                return new Error("Error parsing address: " + e)
            }
            function w(e) {
                return n(e[0])
            }
            t.exports = {
                stringToStringTuples: c,
                stringTuplesToString: u,
                tuplesToStringTuples: h,
                stringTuplesToTuples: f,
                bytesToTuples: p,
                tuplesToBytes: l,
                bytesToString: function(e) {
                    return u(h(p(e)))
                },
                stringToBytes: b,
                fromString: function(e) {
                    return b(e)
                },
                fromBytes: g,
                validateBytes: m,
                isValidBytes: function(e) {
                    return void 0 === m(e)
                },
                cleanPath: y,
                ParseError: v,
                protoFromTuple: w,
                sizeForAddr: d
            }
        }
        , {
            "./convert": 289,
            "./protocols-table": 292,
            "uint8arrays/concat": 410,
            "uint8arrays/to-string": 413,
            varint: 417
        }],
        289: [function(e, t, r) {
            "use strict";
            const i = e("./ip")
              , n = e("./protocols-table")
              , s = e("cids")
              , o = e("multibase")
              , a = e("varint")
              , c = e("uint8arrays/to-string")
              , u = e("uint8arrays/from-string")
              , f = e("uint8arrays/concat");
            function h(e, t) {
                return t instanceof Uint8Array ? h.toString(e, t) : h.toBytes(e, t)
            }
            function l(e) {
                if (!i.isIP(e))
                    throw new Error("invalid ip address");
                return i.toBytes(e)
            }
            function d(e) {
                const t = new ArrayBuffer(2);
                return new DataView(t).setUint16(0, e),
                new Uint8Array(t)
            }
            function p(e) {
                return new DataView(e.buffer).getUint16(0)
            }
            function b(e) {
                const t = e.slice(0, e.length - 2)
                  , r = e.slice(e.length - 2);
                return c(t, "base32") + ":" + p(r)
            }
            t.exports = h,
            h.toString = function(e, t) {
                switch ((e = n(e)).code) {
                case 4:
                case 41:
                    return function(e) {
                        const t = i.toString(e);
                        if (!t || !i.isIP(t))
                            throw new Error("invalid ip address");
                        return t
                    }(t);
                case 6:
                case 273:
                case 33:
                case 132:
                    return p(t);
                case 53:
                case 54:
                case 55:
                case 56:
                case 400:
                case 777:
                    return function(e) {
                        const t = a.decode(e);
                        if ((e = e.slice(a.decode.bytes)).length !== t)
                            throw new Error("inconsistent lengths");
                        return c(e)
                    }(t);
                case 421:
                    return function(e) {
                        const t = a.decode(e)
                          , r = e.slice(a.decode.bytes);
                        if (r.length !== t)
                            throw new Error("inconsistent lengths");
                        return c(r, "base58btc")
                    }(t);
                case 444:
                case 445:
                    return b(t);
                default:
                    return c(t, "base16")
                }
            }
            ,
            h.toBytes = function(e, t) {
                switch ((e = n(e)).code) {
                case 4:
                case 41:
                    return l(t);
                case 6:
                case 273:
                case 33:
                case 132:
                    return d(parseInt(t, 10));
                case 53:
                case 54:
                case 55:
                case 56:
                case 400:
                case 777:
                    return function(e) {
                        const t = u(e)
                          , r = Uint8Array.from(a.encode(t.length));
                        return f([r, t], r.length + t.length)
                    }(t);
                case 421:
                    return function(e) {
                        const t = new s(e).multihash
                          , r = Uint8Array.from(a.encode(t.length));
                        return f([r, t], r.length + t.length)
                    }(t);
                case 444:
                    return function(e) {
                        const t = e.split(":");
                        if (2 !== t.length)
                            throw new Error("failed to parse onion addr: " + t + " does not contain a port number");
                        if (16 !== t[0].length)
                            throw new Error("failed to parse onion addr: " + t[0] + " not a Tor onion address.");
                        const r = o.decode("b" + t[0])
                          , i = parseInt(t[1], 10);
                        if (i < 1 || i > 65536)
                            throw new Error("Port number is not in range(1, 65536)");
                        const n = d(i);
                        return f([r, n], r.length + n.length)
                    }(t);
                case 445:
                    return function(e) {
                        const t = e.split(":");
                        if (2 !== t.length)
                            throw new Error("failed to parse onion addr: " + t + " does not contain a port number");
                        if (56 !== t[0].length)
                            throw new Error("failed to parse onion addr: " + t[0] + " not a Tor onion3 address.");
                        const r = o.decode("b" + t[0])
                          , i = parseInt(t[1], 10);
                        if (i < 1 || i > 65536)
                            throw new Error("Port number is not in range(1, 65536)");
                        const n = d(i);
                        return f([r, n], r.length + n.length)
                    }(t);
                default:
                    return u(t, "base16")
                }
            }
        }
        , {
            "./ip": 291,
            "./protocols-table": 292,
            cids: 169,
            multibase: 297,
            "uint8arrays/concat": 410,
            "uint8arrays/from-string": 412,
            "uint8arrays/to-string": 413,
            varint: 417
        }],
        290: [function(e, t, r) {
            "use strict";
            const i = e("./codec")
              , n = e("./protocols-table")
              , s = e("varint")
              , o = e("cids")
              , a = e("class-is")
              , c = e("err-code")
              , u = Symbol.for("nodejs.util.inspect.custom")
              , f = e("uint8arrays/to-string")
              , h = e("uint8arrays/equals")
              , l = new Map
              , d = a.proto((function(e) {
                if (!(this instanceof d))
                    return new d(e);
                if (null == e && (e = ""),
                e instanceof Uint8Array)
                    this.bytes = i.fromBytes(e);
                else if ("string" == typeof e || e instanceof String) {
                    if (e.length > 0 && "/" !== e.charAt(0))
                        throw new Error(`multiaddr "${e}" must start with a "/"`);
                    this.bytes = i.fromString(e)
                } else {
                    if (!(e.bytes && e.protos && e.protoCodes))
                        throw new Error("addr must be a string, Buffer, or another Multiaddr");
                    this.bytes = i.fromBytes(e.bytes)
                }
            }
            ), {
                className: "Multiaddr",
                symbolName: "@multiformats/js-multiaddr/multiaddr"
            });
            d.prototype.toString = function() {
                return i.bytesToString(this.bytes)
            }
            ,
            d.prototype.toJSON = d.prototype.toString,
            d.prototype.toOptions = function() {
                const e = {}
                  , t = this.toString().split("/");
                return e.family = "ip4" === t[1] ? "ipv4" : "ipv6",
                e.host = t[2],
                e.transport = t[3],
                e.port = parseInt(t[4]),
                e
            }
            ,
            d.prototype[u] = function() {
                return "<Multiaddr " + f(this.bytes, "base16") + " - " + i.bytesToString(this.bytes) + ">"
            }
            ,
            d.prototype.inspect = function() {
                return "<Multiaddr " + f(this.bytes, "base16") + " - " + i.bytesToString(this.bytes) + ">"
            }
            ,
            d.prototype.protos = function() {
                return this.protoCodes().map(e=>Object.assign({}, n(e)))
            }
            ,
            d.prototype.protoCodes = function() {
                const e = []
                  , t = this.bytes;
                let r = 0;
                for (; r < t.length; ) {
                    const o = s.decode(t, r)
                      , a = s.decode.bytes
                      , c = n(o);
                    r += i.sizeForAddr(c, t.slice(r + a)) + a,
                    e.push(o)
                }
                return e
            }
            ,
            d.prototype.protoNames = function() {
                return this.protos().map(e=>e.name)
            }
            ,
            d.prototype.tuples = function() {
                return i.bytesToTuples(this.bytes)
            }
            ,
            d.prototype.stringTuples = function() {
                const e = i.bytesToTuples(this.bytes);
                return i.tuplesToStringTuples(e)
            }
            ,
            d.prototype.encapsulate = function(e) {
                return e = d(e),
                d(this.toString() + e.toString())
            }
            ,
            d.prototype.decapsulate = function(e) {
                e = e.toString();
                const t = this.toString()
                  , r = t.lastIndexOf(e);
                if (r < 0)
                    throw new Error("Address " + this + " does not contain subaddress: " + e);
                return d(t.slice(0, r))
            }
            ,
            d.prototype.decapsulateCode = function(e) {
                const t = this.tuples();
                for (let r = t.length - 1; r >= 0; r--)
                    if (t[r][0] === e)
                        return d(i.tuplesToBytes(t.slice(0, r)));
                return this
            }
            ,
            d.prototype.getPeerId = function() {
                let e = null;
                try {
                    e = this.stringTuples().filter(e=>{
                        if (e[0] === n.names.ipfs.code)
                            return !0
                    }
                    ).pop()[1],
                    e = f(new o(e).multihash, "base58btc")
                } catch (t) {
                    e = null
                }
                return e
            }
            ,
            d.prototype.getPath = function() {
                let e = null;
                try {
                    e = this.stringTuples().filter(e=>{
                        if (n(e[0]).path)
                            return !0
                    }
                    )[0][1]
                } catch (t) {
                    e = null
                }
                return e
            }
            ,
            d.prototype.equals = function(e) {
                return h(this.bytes, e.bytes)
            }
            ,
            d.prototype.resolve = async function() {
                const e = this.protos().find(e=>e.resolvable);
                if (!e)
                    return [this];
                const t = l.get(e.name);
                if (!t)
                    throw c(new Error(`no available resolver for ${e.name}`), "ERR_NO_AVAILABLE_RESOLVER");
                return (await t(this)).map(e=>d(e))
            }
            ,
            d.prototype.nodeAddress = function() {
                const e = this.protoCodes()
                  , t = this.protoNames()
                  , r = this.toString().split("/").slice(1);
                if (r.length < 4)
                    throw new Error('multiaddr must have a valid format: "/{ip4, ip6, dns4, dns6}/{address}/{tcp, udp}/{port}".');
                if (4 !== e[0] && 41 !== e[0] && 54 !== e[0] && 55 !== e[0])
                    throw new Error(`no protocol with name: "'${t[0]}'". Must have a valid family name: "{ip4, ip6, dns4, dns6}".`);
                if ("tcp" !== r[2] && "udp" !== r[2])
                    throw new Error(`no protocol with name: "'${t[1]}'". Must have a valid transport protocol: "{tcp, udp}".`);
                return {
                    family: 41 === e[0] || 55 === e[0] ? 6 : 4,
                    address: r[1],
                    port: parseInt(r[3])
                }
            }
            ,
            d.fromNodeAddress = function(e, t) {
                if (!e)
                    throw new Error("requires node address object");
                if (!t)
                    throw new Error("requires transport protocol");
                let r;
                switch (e.family) {
                case "IPv4":
                    r = "ip4";
                    break;
                case "IPv6":
                    r = "ip6";
                    break;
                default:
                    throw Error(`Invalid addr family. Got '${e.family}' instead of 'IPv4' or 'IPv6'`)
                }
                return d("/" + [r, e.address, t, e.port].join("/"))
            }
            ,
            d.prototype.isThinWaistAddress = function(e) {
                const t = (e || this).protos();
                return 2 === t.length && ((4 === t[0].code || 41 === t[0].code) && (6 === t[1].code || 273 === t[1].code))
            }
            ,
            d.protocols = n,
            d.isName = function(e) {
                return !!d.isMultiaddr(e) && e.protos().some(e=>e.resolvable)
            }
            ,
            d.resolve = function(e) {
                return d.isMultiaddr(e) && d.isName(e) ? Promise.reject(new Error("not implemented yet")) : Promise.reject(Error("not a valid name"))
            }
            ,
            d.resolvers = l,
            t.exports = d
        }
        , {
            "./codec": 288,
            "./protocols-table": 292,
            cids: 169,
            "class-is": 170,
            "err-code": 193,
            "uint8arrays/equals": 411,
            "uint8arrays/to-string": 413,
            varint: 417
        }],
        291: [function(e, t, r) {
            "use strict";
            const i = e("is-ip")
              , n = e("uint8arrays/to-string")
              , s = i
              , o = i.v4
              , a = i.v6
              , c = function(e, t, r) {
                var i;
                if (r = ~~r,
                o(e))
                    i = t || new Uint8Array(r + 4),
                    e.split(/\./g).map((function(e) {
                        i[r++] = 255 & parseInt(e, 10)
                    }
                    ));
                else if (a(e)) {
                    var s, u = e.split(":", 8);
                    for (s = 0; s < u.length; s++) {
                        var f;
                        o(u[s]) && (f = c(u[s]),
                        u[s] = n(f.slice(0, 2), "base16")),
                        f && ++s < 8 && u.splice(s, 0, n(f.slice(2, 4), "base16"))
                    }
                    if ("" === u[0])
                        for (; u.length < 8; )
                            u.unshift("0");
                    else if ("" === u[u.length - 1])
                        for (; u.length < 8; )
                            u.push("0");
                    else if (u.length < 8) {
                        for (s = 0; s < u.length && "" !== u[s]; s++)
                            ;
                        var h = [s, "1"];
                        for (s = 9 - u.length; s > 0; s--)
                            h.push("0");
                        u.splice.apply(u, h)
                    }
                    for (i = t || new Uint8Array(r + 16),
                    s = 0; s < u.length; s++) {
                        var l = parseInt(u[s], 16);
                        i[r++] = l >> 8 & 255,
                        i[r++] = 255 & l
                    }
                }
                if (!i)
                    throw Error("Invalid ip address: " + e);
                return i
            };
            t.exports = {
                isIP: s,
                isV4: o,
                isV6: a,
                toBytes: c,
                toString: function(e, t, r) {
                    t = ~~t,
                    r = r || e.length - t;
                    var i, n = [];
                    const s = new DataView(e.buffer);
                    if (4 === r) {
                        for (let i = 0; i < r; i++)
                            n.push(e[t + i]);
                        i = n.join(".")
                    } else if (16 === r) {
                        for (let e = 0; e < r; e += 2)
                            n.push(s.getUint16(t + e).toString(16));
                        i = (i = (i = n.join(":")).replace(/(^|:)0(:0)*:0(:|$)/, "$1::$3")).replace(/:{3,4}/, "::")
                    }
                    return i
                }
            }
        }
        , {
            "is-ip": 229,
            "uint8arrays/to-string": 413
        }],
        292: [function(e, t, r) {
            "use strict";
            function i(e) {
                if ("number" == typeof e) {
                    if (i.codes[e])
                        return i.codes[e];
                    throw new Error("no protocol with code: " + e)
                }
                if ("string" == typeof e || e instanceof String) {
                    if (i.names[e])
                        return i.names[e];
                    throw new Error("no protocol with name: " + e)
                }
                throw new Error("invalid protocol id type: " + e)
            }
            const n = -1;
            function s(e, t, r, i, n) {
                return {
                    code: e,
                    size: t,
                    name: r,
                    resolvable: Boolean(i),
                    path: Boolean(n)
                }
            }
            i.lengthPrefixedVarSize = n,
            i.V = n,
            i.table = [[4, 32, "ip4"], [6, 16, "tcp"], [33, 16, "dccp"], [41, 128, "ip6"], [42, n, "ip6zone"], [53, n, "dns", "resolvable"], [54, n, "dns4", "resolvable"], [55, n, "dns6", "resolvable"], [56, n, "dnsaddr", "resolvable"], [132, 16, "sctp"], [273, 16, "udp"], [275, 0, "p2p-webrtc-star"], [276, 0, "p2p-webrtc-direct"], [277, 0, "p2p-stardust"], [290, 0, "p2p-circuit"], [301, 0, "udt"], [302, 0, "utp"], [400, n, "unix", !1, "path"], [421, n, "ipfs"], [421, n, "p2p"], [443, 0, "https"], [444, 96, "onion"], [445, 296, "onion3"], [446, n, "garlic64"], [460, 0, "quic"], [477, 0, "ws"], [478, 0, "wss"], [479, 0, "p2p-websocket-star"], [480, 0, "http"], [777, n, "memory"]],
            i.names = {},
            i.codes = {},
            i.table.map(e=>{
                const t = s.apply(null, e);
                i.codes[t.code] = t,
                i.names[t.name] = t
            }
            ),
            i.object = s,
            t.exports = i
        }
        , {}],
        293: [function(e, t, r) {
            "use strict";
            let i;
            try {
                if (!(i = e("dns").promises))
                    throw new Error("no dns available")
            } catch (t) {
                i = e("dns-over-http-resolver")
            }
            t.exports = i
        }
        , {
            dns: 46,
            "dns-over-http-resolver": 175
        }],
        294: [function(e, t, r) {
            "use strict";
            e("..");
            const i = e("../protocols-table")
              , {code: n} = i("dnsaddr");
            t.exports = {
                dnsaddrResolver: async function(t) {
                    const {Resolver: r} = e("./dns")
                      , i = new r
                      , s = t.getPeerId()
                      , [,o] = t.stringTuples().find(([e])=>e === n) || [];
                    let a = (await i.resolveTxt(`_dnsaddr.${o}`)).flat().map(e=>e.split("=")[1]);
                    return s && (a = a.filter(e=>e.includes(s))),
                    a
                }
            }
        }
        , {
            "..": 290,
            "../protocols-table": 292,
            "./dns": 293
        }],
        295: [function(e, t, r) {
            "use strict";
            const {encodeText: i} = e("./util");
            t.exports = class {
                constructor(e, t, r, n) {
                    this.name = e,
                    this.code = t,
                    this.codeBuf = i(this.code),
                    this.alphabet = n,
                    this.codec = r(n)
                }
                encode(e) {
                    return this.codec.encode(e)
                }
                decode(e) {
                    for (const t of e)
                        if (this.alphabet && this.alphabet.indexOf(t) < 0)
                            throw new Error(`invalid character '${t}' in '${e}'`);
                    return this.codec.decode(e)
                }
            }
        }
        , {
            "./util": 299
        }],
        296: [function(e, t, r) {
            "use strict";
            const i = e("@multiformats/base-x")
              , n = e("./base.js")
              , {rfc4648: s} = e("./rfc4648")
              , {decodeText: o, encodeText: a} = e("./util")
              , c = [["identity", "\0", ()=>({
                encode: o,
                decode: a
            }), ""], ["base2", "0", s(1), "01"], ["base8", "7", s(3), "01234567"], ["base10", "9", i, "0123456789"], ["base16", "f", s(4), "0123456789abcdef"], ["base16upper", "F", s(4), "0123456789ABCDEF"], ["base32hex", "v", s(5), "0123456789abcdefghijklmnopqrstuv"], ["base32hexupper", "V", s(5), "0123456789ABCDEFGHIJKLMNOPQRSTUV"], ["base32hexpad", "t", s(5), "0123456789abcdefghijklmnopqrstuv="], ["base32hexpadupper", "T", s(5), "0123456789ABCDEFGHIJKLMNOPQRSTUV="], ["base32", "b", s(5), "abcdefghijklmnopqrstuvwxyz234567"], ["base32upper", "B", s(5), "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567"], ["base32pad", "c", s(5), "abcdefghijklmnopqrstuvwxyz234567="], ["base32padupper", "C", s(5), "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567="], ["base32z", "h", s(5), "ybndrfg8ejkmcpqxot1uwisza345h769"], ["base36", "k", i, "0123456789abcdefghijklmnopqrstuvwxyz"], ["base36upper", "K", i, "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"], ["base58btc", "z", i, "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"], ["base58flickr", "Z", i, "123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"], ["base64", "m", s(6), "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"], ["base64pad", "M", s(6), "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="], ["base64url", "u", s(6), "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_"], ["base64urlpad", "U", s(6), "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_="]]
              , u = c.reduce((e,t)=>(e[t[0]] = new n(t[0],t[1],t[2],t[3]),
            e), {})
              , f = c.reduce((e,t)=>(e[t[1]] = u[t[0]],
            e), {});
            t.exports = {
                names: u,
                codes: f
            }
        }
        , {
            "./base.js": 295,
            "./rfc4648": 298,
            "./util": 299,
            "@multiformats/base-x": 157
        }],
        297: [function(e, t, r) {
            "use strict";
            const i = e("./constants")
              , {encodeText: n, decodeText: s, concat: o} = e("./util");
            function a(e) {
                if (i.names[e])
                    return i.names[e];
                if (i.codes[e])
                    return i.codes[e];
                throw new Error(`Unsupported encoding: ${e}`)
            }
            (r = t.exports = function(e, t) {
                if (!t)
                    throw new Error("requires an encoded Uint8Array");
                const {name: r, codeBuf: i} = a(e);
                return function(e, t) {
                    a(e).decode(s(t))
                }(r, t),
                o([i, t], i.length + t.length)
            }
            ).encode = function(e, t) {
                const r = a(e)
                  , i = n(r.encode(t));
                return o([r.codeBuf, i], r.codeBuf.length + i.length)
            }
            ,
            r.decode = function(e) {
                e instanceof Uint8Array && (e = s(e));
                const t = e[0];
                return ["f", "F", "v", "V", "t", "T", "b", "B", "c", "C", "h", "k", "K"].includes(t) && (e = e.toLowerCase()),
                a(e[0]).decode(e.substring(1))
            }
            ,
            r.isEncoded = function(e) {
                if (e instanceof Uint8Array && (e = s(e)),
                "[object String]" !== Object.prototype.toString.call(e))
                    return !1;
                try {
                    return a(e[0]).name
                } catch (e) {
                    return !1
                }
            }
            ,
            r.encoding = a,
            r.encodingFromData = function(e) {
                return e instanceof Uint8Array && (e = s(e)),
                a(e[0])
            }
            ,
            r.names = Object.freeze(i.names),
            r.codes = Object.freeze(i.codes)
        }
        , {
            "./constants": 296,
            "./util": 299
        }],
        298: [function(e, t, r) {
            "use strict";
            t.exports = {
                rfc4648: e=>t=>({
                    encode: r=>((e,t,r)=>{
                        const i = "=" === t[t.length - 1]
                          , n = (1 << r) - 1;
                        let s = ""
                          , o = 0
                          , a = 0;
                        for (let i = 0; i < e.length; ++i)
                            for (a = a << 8 | e[i],
                            o += 8; o > r; )
                                s += t[n & a >> (o -= r)];
                        if (o && (s += t[n & a << r - o]),
                        i)
                            for (; s.length * r & 7; )
                                s += "=";
                        return s
                    }
                    )(r, t, e),
                    decode: r=>((e,t,r)=>{
                        const i = {};
                        for (let e = 0; e < t.length; ++e)
                            i[t[e]] = e;
                        let n = e.length;
                        for (; "=" === e[n - 1]; )
                            --n;
                        const s = new Uint8Array(n * r / 8 | 0);
                        let o = 0
                          , a = 0
                          , c = 0;
                        for (let t = 0; t < n; ++t) {
                            const n = i[e[t]];
                            if (void 0 === n)
                                throw new SyntaxError("Invalid character " + e[t]);
                            a = a << r | n,
                            (o += r) >= 8 && (o -= 8,
                            s[c++] = 255 & a >> o)
                        }
                        if (o >= r || 255 & a << 8 - o)
                            throw new SyntaxError("Unexpected end of data");
                        return s
                    }
                    )(r, t, e)
                })
            }
        }
        , {}],
        299: [function(e, t, r) {
            "use strict";
            const {TextEncoder: i, TextDecoder: n} = e("web-encoding")
              , s = new n
              , o = new i;
            t.exports = {
                decodeText: e=>s.decode(e),
                encodeText: e=>o.encode(e),
                concat: function(e, t) {
                    const r = new Uint8Array(t);
                    let i = 0;
                    for (const t of e)
                        r.set(t, i),
                        i += t.length;
                    return r
                }
            }
        }
        , {
            "web-encoding": 419
        }],
        300: [function(e, t, r) {
            "use strict";
            t.exports = function(e, t) {
                t || (t = e.reduce((e,t)=>e + t.length, 0));
                const r = new Uint8Array(t);
                let i = 0;
                for (const t of e)
                    r.set(t, i),
                    i += t.length;
                return r
            }
        }
        , {}],
        301: [function(e, t, r) {
            "use strict";
            const {names: i} = e("multibase/src/constants")
              , {TextEncoder: n} = e("web-encoding")
              , s = new n;
            t.exports = function(e, t="utf8") {
                if ("utf8" === t || "utf-8" === t)
                    return s.encode(e);
                const r = i[t];
                if (!r)
                    throw new Error("Unknown base");
                return r.decode(e)
            }
        }
        , {
            "multibase/src/constants": 296,
            "web-encoding": 419
        }],
        302: [function(e, t, r) {
            "use strict";
            const {names: i} = e("multibase/src/constants")
              , {TextDecoder: n} = e("web-encoding")
              , s = new n("utf8");
            t.exports = function(e, t="utf8") {
                if ("utf8" === t || "utf-8" === t)
                    return s.decode(e);
                const r = i[t];
                if (!r)
                    throw new Error("Unknown base");
                return r.encode(e)
            }
        }
        , {
            "multibase/src/constants": 296,
            "web-encoding": 419
        }],
        303: [function(e, t, r) {
            t.exports = {
                identity: 0,
                ip4: 4,
                tcp: 6,
                sha1: 17,
                "sha2-256": 18,
                "sha2-512": 19,
                "sha3-512": 20,
                "sha3-384": 21,
                "sha3-256": 22,
                "sha3-224": 23,
                "shake-128": 24,
                "shake-256": 25,
                "keccak-224": 26,
                "keccak-256": 27,
                "keccak-384": 28,
                "keccak-512": 29,
                blake3: 30,
                dccp: 33,
                "murmur3-128": 34,
                "murmur3-32": 35,
                ip6: 41,
                ip6zone: 42,
                path: 47,
                multicodec: 48,
                multihash: 49,
                multiaddr: 50,
                multibase: 51,
                dns: 53,
                dns4: 54,
                dns6: 55,
                dnsaddr: 56,
                protobuf: 80,
                cbor: 81,
                raw: 85,
                "dbl-sha2-256": 86,
                rlp: 96,
                bencode: 99,
                "dag-pb": 112,
                "dag-cbor": 113,
                "libp2p-key": 114,
                "git-raw": 120,
                "torrent-info": 123,
                "torrent-file": 124,
                "leofcoin-block": 129,
                "leofcoin-tx": 130,
                "leofcoin-pr": 131,
                sctp: 132,
                "dag-jose": 133,
                "dag-cose": 134,
                "eth-block": 144,
                "eth-block-list": 145,
                "eth-tx-trie": 146,
                "eth-tx": 147,
                "eth-tx-receipt-trie": 148,
                "eth-tx-receipt": 149,
                "eth-state-trie": 150,
                "eth-account-snapshot": 151,
                "eth-storage-trie": 152,
                "bitcoin-block": 176,
                "bitcoin-tx": 177,
                "bitcoin-witness-commitment": 178,
                "zcash-block": 192,
                "zcash-tx": 193,
                "stellar-block": 208,
                "stellar-tx": 209,
                md4: 212,
                md5: 213,
                bmt: 214,
                "decred-block": 224,
                "decred-tx": 225,
                "ipld-ns": 226,
                "ipfs-ns": 227,
                "swarm-ns": 228,
                "ipns-ns": 229,
                zeronet: 230,
                "secp256k1-pub": 231,
                "bls12_381-g1-pub": 234,
                "bls12_381-g2-pub": 235,
                "x25519-pub": 236,
                "ed25519-pub": 237,
                "dash-block": 240,
                "dash-tx": 241,
                "swarm-manifest": 250,
                "swarm-feed": 251,
                udp: 273,
                "p2p-webrtc-star": 275,
                "p2p-webrtc-direct": 276,
                "p2p-stardust": 277,
                "p2p-circuit": 290,
                "dag-json": 297,
                udt: 301,
                utp: 302,
                unix: 400,
                p2p: 421,
                ipfs: 421,
                https: 443,
                onion: 444,
                onion3: 445,
                garlic64: 446,
                garlic32: 447,
                tls: 448,
                quic: 460,
                ws: 477,
                wss: 478,
                "p2p-websocket-star": 479,
                http: 480,
                json: 512,
                messagepack: 513,
                "libp2p-peer-record": 769,
                "sha2-256-trunc254-padded": 4114,
                "ripemd-128": 4178,
                "ripemd-160": 4179,
                "ripemd-256": 4180,
                "ripemd-320": 4181,
                x11: 4352,
                "sm3-256": 21325,
                "blake2b-8": 45569,
                "blake2b-16": 45570,
                "blake2b-24": 45571,
                "blake2b-32": 45572,
                "blake2b-40": 45573,
                "blake2b-48": 45574,
                "blake2b-56": 45575,
                "blake2b-64": 45576,
                "blake2b-72": 45577,
                "blake2b-80": 45578,
                "blake2b-88": 45579,
                "blake2b-96": 45580,
                "blake2b-104": 45581,
                "blake2b-112": 45582,
                "blake2b-120": 45583,
                "blake2b-128": 45584,
                "blake2b-136": 45585,
                "blake2b-144": 45586,
                "blake2b-152": 45587,
                "blake2b-160": 45588,
                "blake2b-168": 45589,
                "blake2b-176": 45590,
                "blake2b-184": 45591,
                "blake2b-192": 45592,
                "blake2b-200": 45593,
                "blake2b-208": 45594,
                "blake2b-216": 45595,
                "blake2b-224": 45596,
                "blake2b-232": 45597,
                "blake2b-240": 45598,
                "blake2b-248": 45599,
                "blake2b-256": 45600,
                "blake2b-264": 45601,
                "blake2b-272": 45602,
                "blake2b-280": 45603,
                "blake2b-288": 45604,
                "blake2b-296": 45605,
                "blake2b-304": 45606,
                "blake2b-312": 45607,
                "blake2b-320": 45608,
                "blake2b-328": 45609,
                "blake2b-336": 45610,
                "blake2b-344": 45611,
                "blake2b-352": 45612,
                "blake2b-360": 45613,
                "blake2b-368": 45614,
                "blake2b-376": 45615,
                "blake2b-384": 45616,
                "blake2b-392": 45617,
                "blake2b-400": 45618,
                "blake2b-408": 45619,
                "blake2b-416": 45620,
                "blake2b-424": 45621,
                "blake2b-432": 45622,
                "blake2b-440": 45623,
                "blake2b-448": 45624,
                "blake2b-456": 45625,
                "blake2b-464": 45626,
                "blake2b-472": 45627,
                "blake2b-480": 45628,
                "blake2b-488": 45629,
                "blake2b-496": 45630,
                "blake2b-504": 45631,
                "blake2b-512": 45632,
                "blake2s-8": 45633,
                "blake2s-16": 45634,
                "blake2s-24": 45635,
                "blake2s-32": 45636,
                "blake2s-40": 45637,
                "blake2s-48": 45638,
                "blake2s-56": 45639,
                "blake2s-64": 45640,
                "blake2s-72": 45641,
                "blake2s-80": 45642,
                "blake2s-88": 45643,
                "blake2s-96": 45644,
                "blake2s-104": 45645,
                "blake2s-112": 45646,
                "blake2s-120": 45647,
                "blake2s-128": 45648,
                "blake2s-136": 45649,
                "blake2s-144": 45650,
                "blake2s-152": 45651,
                "blake2s-160": 45652,
                "blake2s-168": 45653,
                "blake2s-176": 45654,
                "blake2s-184": 45655,
                "blake2s-192": 45656,
                "blake2s-200": 45657,
                "blake2s-208": 45658,
                "blake2s-216": 45659,
                "blake2s-224": 45660,
                "blake2s-232": 45661,
                "blake2s-240": 45662,
                "blake2s-248": 45663,
                "blake2s-256": 45664,
                "skein256-8": 45825,
                "skein256-16": 45826,
                "skein256-24": 45827,
                "skein256-32": 45828,
                "skein256-40": 45829,
                "skein256-48": 45830,
                "skein256-56": 45831,
                "skein256-64": 45832,
                "skein256-72": 45833,
                "skein256-80": 45834,
                "skein256-88": 45835,
                "skein256-96": 45836,
                "skein256-104": 45837,
                "skein256-112": 45838,
                "skein256-120": 45839,
                "skein256-128": 45840,
                "skein256-136": 45841,
                "skein256-144": 45842,
                "skein256-152": 45843,
                "skein256-160": 45844,
                "skein256-168": 45845,
                "skein256-176": 45846,
                "skein256-184": 45847,
                "skein256-192": 45848,
                "skein256-200": 45849,
                "skein256-208": 45850,
                "skein256-216": 45851,
                "skein256-224": 45852,
                "skein256-232": 45853,
                "skein256-240": 45854,
                "skein256-248": 45855,
                "skein256-256": 45856,
                "skein512-8": 45857,
                "skein512-16": 45858,
                "skein512-24": 45859,
                "skein512-32": 45860,
                "skein512-40": 45861,
                "skein512-48": 45862,
                "skein512-56": 45863,
                "skein512-64": 45864,
                "skein512-72": 45865,
                "skein512-80": 45866,
                "skein512-88": 45867,
                "skein512-96": 45868,
                "skein512-104": 45869,
                "skein512-112": 45870,
                "skein512-120": 45871,
                "skein512-128": 45872,
                "skein512-136": 45873,
                "skein512-144": 45874,
                "skein512-152": 45875,
                "skein512-160": 45876,
                "skein512-168": 45877,
                "skein512-176": 45878,
                "skein512-184": 45879,
                "skein512-192": 45880,
                "skein512-200": 45881,
                "skein512-208": 45882,
                "skein512-216": 45883,
                "skein512-224": 45884,
                "skein512-232": 45885,
                "skein512-240": 45886,
                "skein512-248": 45887,
                "skein512-256": 45888,
                "skein512-264": 45889,
                "skein512-272": 45890,
                "skein512-280": 45891,
                "skein512-288": 45892,
                "skein512-296": 45893,
                "skein512-304": 45894,
                "skein512-312": 45895,
                "skein512-320": 45896,
                "skein512-328": 45897,
                "skein512-336": 45898,
                "skein512-344": 45899,
                "skein512-352": 45900,
                "skein512-360": 45901,
                "skein512-368": 45902,
                "skein512-376": 45903,
                "skein512-384": 45904,
                "skein512-392": 45905,
                "skein512-400": 45906,
                "skein512-408": 45907,
                "skein512-416": 45908,
                "skein512-424": 45909,
                "skein512-432": 45910,
                "skein512-440": 45911,
                "skein512-448": 45912,
                "skein512-456": 45913,
                "skein512-464": 45914,
                "skein512-472": 45915,
                "skein512-480": 45916,
                "skein512-488": 45917,
                "skein512-496": 45918,
                "skein512-504": 45919,
                "skein512-512": 45920,
                "skein1024-8": 45921,
                "skein1024-16": 45922,
                "skein1024-24": 45923,
                "skein1024-32": 45924,
                "skein1024-40": 45925,
                "skein1024-48": 45926,
                "skein1024-56": 45927,
                "skein1024-64": 45928,
                "skein1024-72": 45929,
                "skein1024-80": 45930,
                "skein1024-88": 45931,
                "skein1024-96": 45932,
                "skein1024-104": 45933,
                "skein1024-112": 45934,
                "skein1024-120": 45935,
                "skein1024-128": 45936,
                "skein1024-136": 45937,
                "skein1024-144": 45938,
                "skein1024-152": 45939,
                "skein1024-160": 45940,
                "skein1024-168": 45941,
                "skein1024-176": 45942,
                "skein1024-184": 45943,
                "skein1024-192": 45944,
                "skein1024-200": 45945,
                "skein1024-208": 45946,
                "skein1024-216": 45947,
                "skein1024-224": 45948,
                "skein1024-232": 45949,
                "skein1024-240": 45950,
                "skein1024-248": 45951,
                "skein1024-256": 45952,
                "skein1024-264": 45953,
                "skein1024-272": 45954,
                "skein1024-280": 45955,
                "skein1024-288": 45956,
                "skein1024-296": 45957,
                "skein1024-304": 45958,
                "skein1024-312": 45959,
                "skein1024-320": 45960,
                "skein1024-328": 45961,
                "skein1024-336": 45962,
                "skein1024-344": 45963,
                "skein1024-352": 45964,
                "skein1024-360": 45965,
                "skein1024-368": 45966,
                "skein1024-376": 45967,
                "skein1024-384": 45968,
                "skein1024-392": 45969,
                "skein1024-400": 45970,
                "skein1024-408": 45971,
                "skein1024-416": 45972,
                "skein1024-424": 45973,
                "skein1024-432": 45974,
                "skein1024-440": 45975,
                "skein1024-448": 45976,
                "skein1024-456": 45977,
                "skein1024-464": 45978,
                "skein1024-472": 45979,
                "skein1024-480": 45980,
                "skein1024-488": 45981,
                "skein1024-496": 45982,
                "skein1024-504": 45983,
                "skein1024-512": 45984,
                "skein1024-520": 45985,
                "skein1024-528": 45986,
                "skein1024-536": 45987,
                "skein1024-544": 45988,
                "skein1024-552": 45989,
                "skein1024-560": 45990,
                "skein1024-568": 45991,
                "skein1024-576": 45992,
                "skein1024-584": 45993,
                "skein1024-592": 45994,
                "skein1024-600": 45995,
                "skein1024-608": 45996,
                "skein1024-616": 45997,
                "skein1024-624": 45998,
                "skein1024-632": 45999,
                "skein1024-640": 46e3,
                "skein1024-648": 46001,
                "skein1024-656": 46002,
                "skein1024-664": 46003,
                "skein1024-672": 46004,
                "skein1024-680": 46005,
                "skein1024-688": 46006,
                "skein1024-696": 46007,
                "skein1024-704": 46008,
                "skein1024-712": 46009,
                "skein1024-720": 46010,
                "skein1024-728": 46011,
                "skein1024-736": 46012,
                "skein1024-744": 46013,
                "skein1024-752": 46014,
                "skein1024-760": 46015,
                "skein1024-768": 46016,
                "skein1024-776": 46017,
                "skein1024-784": 46018,
                "skein1024-792": 46019,
                "skein1024-800": 46020,
                "skein1024-808": 46021,
                "skein1024-816": 46022,
                "skein1024-824": 46023,
                "skein1024-832": 46024,
                "skein1024-840": 46025,
                "skein1024-848": 46026,
                "skein1024-856": 46027,
                "skein1024-864": 46028,
                "skein1024-872": 46029,
                "skein1024-880": 46030,
                "skein1024-888": 46031,
                "skein1024-896": 46032,
                "skein1024-904": 46033,
                "skein1024-912": 46034,
                "skein1024-920": 46035,
                "skein1024-928": 46036,
                "skein1024-936": 46037,
                "skein1024-944": 46038,
                "skein1024-952": 46039,
                "skein1024-960": 46040,
                "skein1024-968": 46041,
                "skein1024-976": 46042,
                "skein1024-984": 46043,
                "skein1024-992": 46044,
                "skein1024-1000": 46045,
                "skein1024-1008": 46046,
                "skein1024-1016": 46047,
                "skein1024-1024": 46048,
                "poseidon-bls12_381-a2-fc1": 46081,
                "poseidon-bls12_381-a2-fc1-sc": 46082,
                "zeroxcert-imprint-256": 52753,
                "fil-commitment-unsealed": 61697,
                "fil-commitment-sealed": 61698,
                "holochain-adr-v0": 8417572,
                "holochain-adr-v1": 8483108,
                "holochain-key-v0": 9728292,
                "holochain-key-v1": 9793828,
                "holochain-sig-v0": 10645796,
                "holochain-sig-v1": 10711332
            }
        }
        , {}],
        304: [function(e, t, r) {
            "use strict";
            const i = e("./base-table.json")
              , n = {};
            for (const [e,t] of Object.entries(i))
                n[e.toUpperCase().replace(/-/g, "_")] = t;
            t.exports = Object.freeze(n)
        }
        , {
            "./base-table.json": 303
        }],
        305: [function(e, t, r) {
            "use strict";
            const i = e("varint")
              , n = e("./int-table")
              , s = e("./varint-table")
              , o = e("./util")
              , a = e("uint8arrays/concat");
            (r = t.exports).addPrefix = (e,t)=>{
                let r;
                if (e instanceof Uint8Array)
                    r = o.varintUint8ArrayEncode(e);
                else {
                    if (!s[e])
                        throw new Error("multicodec not recognized");
                    r = s[e]
                }
                return a([r, t], r.length + t.length)
            }
            ,
            r.rmPrefix = e=>(i.decode(e),
            e.slice(i.decode.bytes)),
            r.getCodec = e=>{
                const t = i.decode(e)
                  , r = n.get(t);
                if (void 0 === r)
                    throw new Error(`Code ${t} not found`);
                return r
            }
            ,
            r.getName = e=>n.get(e),
            r.getNumber = e=>{
                const t = s[e];
                if (void 0 === t)
                    throw new Error("Codec `" + e + "` not found");
                return i.decode(t)
            }
            ,
            r.getCode = e=>i.decode(e),
            r.getCodeVarint = e=>{
                const t = s[e];
                if (void 0 === t)
                    throw new Error("Codec `" + e + "` not found");
                return t
            }
            ,
            r.getVarint = e=>i.encode(e);
            const c = e("./constants");
            Object.assign(r, c),
            r.print = e("./print")
        }
        , {
            "./constants": 304,
            "./int-table": 306,
            "./print": 307,
            "./util": 308,
            "./varint-table": 309,
            "uint8arrays/concat": 300,
            varint: 417
        }],
        306: [function(e, t, r) {
            "use strict";
            const i = e("./base-table.json")
              , n = new Map;
            for (const e in i) {
                const t = i[e];
                n.set(t, e)
            }
            t.exports = Object.freeze(n)
        }
        , {
            "./base-table.json": 303
        }],
        307: [function(e, t, r) {
            "use strict";
            const i = e("./base-table.json")
              , n = {};
            for (const [e,t] of Object.entries(i))
                void 0 === n[t] && (n[t] = e);
            t.exports = Object.freeze(n)
        }
        , {
            "./base-table.json": 303
        }],
        308: [function(e, t, r) {
            "use strict";
            const i = e("varint")
              , n = e("uint8arrays/to-string")
              , s = e("uint8arrays/from-string");
            function o(e) {
                return parseInt(n(e, "base16"), 16)
            }
            t.exports = {
                numberToUint8Array: function(e) {
                    let t = e.toString(16);
                    t.length % 2 == 1 && (t = "0" + t);
                    return s(t, "base16")
                },
                uint8ArrayToNumber: o,
                varintUint8ArrayEncode: function(e) {
                    return Uint8Array.from(i.encode(o(e)))
                },
                varintEncode: function(e) {
                    return Uint8Array.from(i.encode(e))
                }
            }
        }
        , {
            "uint8arrays/from-string": 301,
            "uint8arrays/to-string": 302,
            varint: 417
        }],
        309: [function(e, t, r) {
            "use strict";
            const i = e("./base-table.json")
              , n = e("./util").varintEncode
              , s = {};
            for (const e in i) {
                const t = i[e];
                s[e] = n(t)
            }
            t.exports = Object.freeze(s)
        }
        , {
            "./base-table.json": 303,
            "./util": 308
        }],
        310: [function(e, t, r) {
            t.exports = function e(t, r) {
                var s, o = 0, a = (r = r || 0,
                0), c = r, u = t.length;
                do {
                    if (c >= u || a > 49)
                        throw e.bytes = 0,
                        new RangeError("Could not decode varint");
                    s = t[c++],
                    o += a < 28 ? (s & n) << a : (s & n) * Math.pow(2, a),
                    a += 7
                } while (s >= i);e.bytes = c - r;
                return o
            }
            ;
            var i = 128
              , n = 127
        }
        , {}],
        311: [function(e, t, r) {
            t.exports = function e(t, r, o) {
                if (Number.MAX_SAFE_INTEGER && t > Number.MAX_SAFE_INTEGER)
                    throw e.bytes = 0,
                    new RangeError("Could not encode varint");
                r = r || [];
                o = o || 0;
                var a = o;
                for (; t >= s; )
                    r[o++] = 255 & t | i,
                    t /= 128;
                for (; t & n; )
                    r[o++] = 255 & t | i,
                    t >>>= 7;
                r[o] = 0 | t;
                e.bytes = o - a + 1;
                return r
            }
            ;
            var i = 128
              , n = -128
              , s = Math.pow(2, 31)
        }
        , {}],
        312: [function(e, t, r) {
            t.exports = {
                encode: e("./encode.js"),
                decode: e("./decode.js"),
                encodingLength: e("./length.js")
            }
        }
        , {
            "./decode.js": 310,
            "./encode.js": 311,
            "./length.js": 313
        }],
        313: [function(e, t, r) {
            var i = Math.pow(2, 7)
              , n = Math.pow(2, 14)
              , s = Math.pow(2, 21)
              , o = Math.pow(2, 28)
              , a = Math.pow(2, 35)
              , c = Math.pow(2, 42)
              , u = Math.pow(2, 49)
              , f = Math.pow(2, 56)
              , h = Math.pow(2, 63);
            t.exports = function(e) {
                return e < i ? 1 : e < n ? 2 : e < s ? 3 : e < o ? 4 : e < a ? 5 : e < c ? 6 : e < u ? 7 : e < f ? 8 : e < h ? 9 : 10
            }
        }
        , {}],
        314: [function(e, t, r) {
            "use strict";
            const i = Object.freeze({
                identity: 0,
                sha1: 17,
                "sha2-256": 18,
                "sha2-512": 19,
                "sha3-512": 20,
                "sha3-384": 21,
                "sha3-256": 22,
                "sha3-224": 23,
                "shake-128": 24,
                "shake-256": 25,
                "keccak-224": 26,
                "keccak-256": 27,
                "keccak-384": 28,
                "keccak-512": 29,
                blake3: 30,
                "murmur3-128": 34,
                "murmur3-32": 35,
                "dbl-sha2-256": 86,
                md4: 212,
                md5: 213,
                bmt: 214,
                "sha2-256-trunc254-padded": 4114,
                "ripemd-128": 4178,
                "ripemd-160": 4179,
                "ripemd-256": 4180,
                "ripemd-320": 4181,
                x11: 4352,
                kangarootwelve: 7425,
                "sm3-256": 21325,
                "blake2b-8": 45569,
                "blake2b-16": 45570,
                "blake2b-24": 45571,
                "blake2b-32": 45572,
                "blake2b-40": 45573,
                "blake2b-48": 45574,
                "blake2b-56": 45575,
                "blake2b-64": 45576,
                "blake2b-72": 45577,
                "blake2b-80": 45578,
                "blake2b-88": 45579,
                "blake2b-96": 45580,
                "blake2b-104": 45581,
                "blake2b-112": 45582,
                "blake2b-120": 45583,
                "blake2b-128": 45584,
                "blake2b-136": 45585,
                "blake2b-144": 45586,
                "blake2b-152": 45587,
                "blake2b-160": 45588,
                "blake2b-168": 45589,
                "blake2b-176": 45590,
                "blake2b-184": 45591,
                "blake2b-192": 45592,
                "blake2b-200": 45593,
                "blake2b-208": 45594,
                "blake2b-216": 45595,
                "blake2b-224": 45596,
                "blake2b-232": 45597,
                "blake2b-240": 45598,
                "blake2b-248": 45599,
                "blake2b-256": 45600,
                "blake2b-264": 45601,
                "blake2b-272": 45602,
                "blake2b-280": 45603,
                "blake2b-288": 45604,
                "blake2b-296": 45605,
                "blake2b-304": 45606,
                "blake2b-312": 45607,
                "blake2b-320": 45608,
                "blake2b-328": 45609,
                "blake2b-336": 45610,
                "blake2b-344": 45611,
                "blake2b-352": 45612,
                "blake2b-360": 45613,
                "blake2b-368": 45614,
                "blake2b-376": 45615,
                "blake2b-384": 45616,
                "blake2b-392": 45617,
                "blake2b-400": 45618,
                "blake2b-408": 45619,
                "blake2b-416": 45620,
                "blake2b-424": 45621,
                "blake2b-432": 45622,
                "blake2b-440": 45623,
                "blake2b-448": 45624,
                "blake2b-456": 45625,
                "blake2b-464": 45626,
                "blake2b-472": 45627,
                "blake2b-480": 45628,
                "blake2b-488": 45629,
                "blake2b-496": 45630,
                "blake2b-504": 45631,
                "blake2b-512": 45632,
                "blake2s-8": 45633,
                "blake2s-16": 45634,
                "blake2s-24": 45635,
                "blake2s-32": 45636,
                "blake2s-40": 45637,
                "blake2s-48": 45638,
                "blake2s-56": 45639,
                "blake2s-64": 45640,
                "blake2s-72": 45641,
                "blake2s-80": 45642,
                "blake2s-88": 45643,
                "blake2s-96": 45644,
                "blake2s-104": 45645,
                "blake2s-112": 45646,
                "blake2s-120": 45647,
                "blake2s-128": 45648,
                "blake2s-136": 45649,
                "blake2s-144": 45650,
                "blake2s-152": 45651,
                "blake2s-160": 45652,
                "blake2s-168": 45653,
                "blake2s-176": 45654,
                "blake2s-184": 45655,
                "blake2s-192": 45656,
                "blake2s-200": 45657,
                "blake2s-208": 45658,
                "blake2s-216": 45659,
                "blake2s-224": 45660,
                "blake2s-232": 45661,
                "blake2s-240": 45662,
                "blake2s-248": 45663,
                "blake2s-256": 45664,
                "skein256-8": 45825,
                "skein256-16": 45826,
                "skein256-24": 45827,
                "skein256-32": 45828,
                "skein256-40": 45829,
                "skein256-48": 45830,
                "skein256-56": 45831,
                "skein256-64": 45832,
                "skein256-72": 45833,
                "skein256-80": 45834,
                "skein256-88": 45835,
                "skein256-96": 45836,
                "skein256-104": 45837,
                "skein256-112": 45838,
                "skein256-120": 45839,
                "skein256-128": 45840,
                "skein256-136": 45841,
                "skein256-144": 45842,
                "skein256-152": 45843,
                "skein256-160": 45844,
                "skein256-168": 45845,
                "skein256-176": 45846,
                "skein256-184": 45847,
                "skein256-192": 45848,
                "skein256-200": 45849,
                "skein256-208": 45850,
                "skein256-216": 45851,
                "skein256-224": 45852,
                "skein256-232": 45853,
                "skein256-240": 45854,
                "skein256-248": 45855,
                "skein256-256": 45856,
                "skein512-8": 45857,
                "skein512-16": 45858,
                "skein512-24": 45859,
                "skein512-32": 45860,
                "skein512-40": 45861,
                "skein512-48": 45862,
                "skein512-56": 45863,
                "skein512-64": 45864,
                "skein512-72": 45865,
                "skein512-80": 45866,
                "skein512-88": 45867,
                "skein512-96": 45868,
                "skein512-104": 45869,
                "skein512-112": 45870,
                "skein512-120": 45871,
                "skein512-128": 45872,
                "skein512-136": 45873,
                "skein512-144": 45874,
                "skein512-152": 45875,
                "skein512-160": 45876,
                "skein512-168": 45877,
                "skein512-176": 45878,
                "skein512-184": 45879,
                "skein512-192": 45880,
                "skein512-200": 45881,
                "skein512-208": 45882,
                "skein512-216": 45883,
                "skein512-224": 45884,
                "skein512-232": 45885,
                "skein512-240": 45886,
                "skein512-248": 45887,
                "skein512-256": 45888,
                "skein512-264": 45889,
                "skein512-272": 45890,
                "skein512-280": 45891,
                "skein512-288": 45892,
                "skein512-296": 45893,
                "skein512-304": 45894,
                "skein512-312": 45895,
                "skein512-320": 45896,
                "skein512-328": 45897,
                "skein512-336": 45898,
                "skein512-344": 45899,
                "skein512-352": 45900,
                "skein512-360": 45901,
                "skein512-368": 45902,
                "skein512-376": 45903,
                "skein512-384": 45904,
                "skein512-392": 45905,
                "skein512-400": 45906,
                "skein512-408": 45907,
                "skein512-416": 45908,
                "skein512-424": 45909,
                "skein512-432": 45910,
                "skein512-440": 45911,
                "skein512-448": 45912,
                "skein512-456": 45913,
                "skein512-464": 45914,
                "skein512-472": 45915,
                "skein512-480": 45916,
                "skein512-488": 45917,
                "skein512-496": 45918,
                "skein512-504": 45919,
                "skein512-512": 45920,
                "skein1024-8": 45921,
                "skein1024-16": 45922,
                "skein1024-24": 45923,
                "skein1024-32": 45924,
                "skein1024-40": 45925,
                "skein1024-48": 45926,
                "skein1024-56": 45927,
                "skein1024-64": 45928,
                "skein1024-72": 45929,
                "skein1024-80": 45930,
                "skein1024-88": 45931,
                "skein1024-96": 45932,
                "skein1024-104": 45933,
                "skein1024-112": 45934,
                "skein1024-120": 45935,
                "skein1024-128": 45936,
                "skein1024-136": 45937,
                "skein1024-144": 45938,
                "skein1024-152": 45939,
                "skein1024-160": 45940,
                "skein1024-168": 45941,
                "skein1024-176": 45942,
                "skein1024-184": 45943,
                "skein1024-192": 45944,
                "skein1024-200": 45945,
                "skein1024-208": 45946,
                "skein1024-216": 45947,
                "skein1024-224": 45948,
                "skein1024-232": 45949,
                "skein1024-240": 45950,
                "skein1024-248": 45951,
                "skein1024-256": 45952,
                "skein1024-264": 45953,
                "skein1024-272": 45954,
                "skein1024-280": 45955,
                "skein1024-288": 45956,
                "skein1024-296": 45957,
                "skein1024-304": 45958,
                "skein1024-312": 45959,
                "skein1024-320": 45960,
                "skein1024-328": 45961,
                "skein1024-336": 45962,
                "skein1024-344": 45963,
                "skein1024-352": 45964,
                "skein1024-360": 45965,
                "skein1024-368": 45966,
                "skein1024-376": 45967,
                "skein1024-384": 45968,
                "skein1024-392": 45969,
                "skein1024-400": 45970,
                "skein1024-408": 45971,
                "skein1024-416": 45972,
                "skein1024-424": 45973,
                "skein1024-432": 45974,
                "skein1024-440": 45975,
                "skein1024-448": 45976,
                "skein1024-456": 45977,
                "skein1024-464": 45978,
                "skein1024-472": 45979,
                "skein1024-480": 45980,
                "skein1024-488": 45981,
                "skein1024-496": 45982,
                "skein1024-504": 45983,
                "skein1024-512": 45984,
                "skein1024-520": 45985,
                "skein1024-528": 45986,
                "skein1024-536": 45987,
                "skein1024-544": 45988,
                "skein1024-552": 45989,
                "skein1024-560": 45990,
                "skein1024-568": 45991,
                "skein1024-576": 45992,
                "skein1024-584": 45993,
                "skein1024-592": 45994,
                "skein1024-600": 45995,
                "skein1024-608": 45996,
                "skein1024-616": 45997,
                "skein1024-624": 45998,
                "skein1024-632": 45999,
                "skein1024-640": 46e3,
                "skein1024-648": 46001,
                "skein1024-656": 46002,
                "skein1024-664": 46003,
                "skein1024-672": 46004,
                "skein1024-680": 46005,
                "skein1024-688": 46006,
                "skein1024-696": 46007,
                "skein1024-704": 46008,
                "skein1024-712": 46009,
                "skein1024-720": 46010,
                "skein1024-728": 46011,
                "skein1024-736": 46012,
                "skein1024-744": 46013,
                "skein1024-752": 46014,
                "skein1024-760": 46015,
                "skein1024-768": 46016,
                "skein1024-776": 46017,
                "skein1024-784": 46018,
                "skein1024-792": 46019,
                "skein1024-800": 46020,
                "skein1024-808": 46021,
                "skein1024-816": 46022,
                "skein1024-824": 46023,
                "skein1024-832": 46024,
                "skein1024-840": 46025,
                "skein1024-848": 46026,
                "skein1024-856": 46027,
                "skein1024-864": 46028,
                "skein1024-872": 46029,
                "skein1024-880": 46030,
                "skein1024-888": 46031,
                "skein1024-896": 46032,
                "skein1024-904": 46033,
                "skein1024-912": 46034,
                "skein1024-920": 46035,
                "skein1024-928": 46036,
                "skein1024-936": 46037,
                "skein1024-944": 46038,
                "skein1024-952": 46039,
                "skein1024-960": 46040,
                "skein1024-968": 46041,
                "skein1024-976": 46042,
                "skein1024-984": 46043,
                "skein1024-992": 46044,
                "skein1024-1000": 46045,
                "skein1024-1008": 46046,
                "skein1024-1016": 46047,
                "skein1024-1024": 46048,
                "poseidon-bls12_381-a2-fc1": 46081,
                "poseidon-bls12_381-a2-fc1-sc": 46082
            });
            t.exports = {
                names: i
            }
        }
        , {}],
        315: [function(e, t, r) {
            "use strict";
            const i = e("multibase")
              , n = e("varint")
              , {names: s} = e("./constants")
              , o = e("uint8arrays/to-string")
              , a = e("uint8arrays/from-string")
              , c = e("uint8arrays/concat")
              , u = {};
            for (const e in s)
                u[s[e]] = e;
            function f(e) {
                if (!(e instanceof Uint8Array))
                    throw new Error("multihash must be a Uint8Array");
                if (e.length < 2)
                    throw new Error("multihash too short. must be > 2 bytes.");
                const t = n.decode(e);
                if (!d(t))
                    throw new Error(`multihash unknown function code: 0x${t.toString(16)}`);
                e = e.slice(n.decode.bytes);
                const r = n.decode(e);
                if (r < 0)
                    throw new Error(`multihash invalid length: ${r}`);
                if ((e = e.slice(n.decode.bytes)).length !== r)
                    throw new Error(`multihash length inconsistent: 0x${o(e, "base16")}`);
                return {
                    code: t,
                    name: u[t],
                    length: r,
                    digest: e
                }
            }
            function h(e) {
                let t = e;
                if ("string" == typeof e) {
                    if (void 0 === s[e])
                        throw new Error(`Unrecognized hash function named: ${e}`);
                    t = s[e]
                }
                if ("number" != typeof t)
                    throw new Error(`Hash function code should be a number. Got: ${t}`);
                if (void 0 === u[t] && !l(t))
                    throw new Error(`Unrecognized function code: ${t}`);
                return t
            }
            function l(e) {
                return e > 0 && e < 16
            }
            function d(e) {
                return !!l(e) || !!u[e]
            }
            function p(e) {
                f(e)
            }
            t.exports = {
                names: s,
                codes: Object.freeze(u),
                toHexString: function(e) {
                    if (!(e instanceof Uint8Array))
                        throw new Error("must be passed a Uint8Array");
                    return o(e, "base16")
                },
                fromHexString: function(e) {
                    return a(e, "base16")
                },
                toB58String: function(e) {
                    if (!(e instanceof Uint8Array))
                        throw new Error("must be passed a Uint8Array");
                    return o(i.encode("base58btc", e)).slice(1)
                },
                fromB58String: function(e) {
                    const t = e instanceof Uint8Array ? o(e) : e;
                    return i.decode("z" + t)
                },
                decode: f,
                encode: function(e, t, r) {
                    if (!e || void 0 === t)
                        throw new Error("multihash encode requires at least two args: digest, code");
                    const i = h(t);
                    if (!(e instanceof Uint8Array))
                        throw new Error("digest should be a Uint8Array");
                    if (null == r && (r = e.length),
                    r && e.length !== r)
                        throw new Error("digest length should be equal to specified length.");
                    const s = n.encode(i)
                      , o = n.encode(r);
                    return c([s, o, e], s.length + o.length + e.length)
                },
                coerceCode: h,
                isAppCode: l,
                validate: p,
                prefix: function(e) {
                    return p(e),
                    e.subarray(0, 2)
                },
                isValidCode: d
            }
        }
        , {
            "./constants": 314,
            multibase: 297,
            "uint8arrays/concat": 410,
            "uint8arrays/from-string": 412,
            "uint8arrays/to-string": 413,
            varint: 312
        }],
        316: [function(e, t, r) {
            "use strict";
            const i = e("multihashes")
              , n = self.crypto || self.msCrypto
              , s = async(e,t)=>{
                if ("undefined" == typeof self || !self.crypto && !self.msCrypto)
                    throw new Error("Please use a browser with webcrypto support and ensure the code has been delivered securely via HTTPS/TLS and run within a Secure Context");
                switch (t) {
                case "sha1":
                    return new Uint8Array(await n.subtle.digest({
                        name: "SHA-1"
                    }, e));
                case "sha2-256":
                    return new Uint8Array(await n.subtle.digest({
                        name: "SHA-256"
                    }, e));
                case "sha2-512":
                    return new Uint8Array(await n.subtle.digest({
                        name: "SHA-512"
                    }, e));
                case "dbl-sha2-256":
                    {
                        const t = await n.subtle.digest({
                            name: "SHA-256"
                        }, e);
                        return new Uint8Array(await n.subtle.digest({
                            name: "SHA-256"
                        }, t))
                    }
                default:
                    throw new Error(`${t} is not a supported algorithm`)
                }
            }
            ;
            t.exports = {
                factory: e=>async t=>s(t, e),
                digest: s,
                multihashing: async(e,t,r)=>{
                    const n = await s(e, t);
                    return i.encode(n, t, r)
                }
            }
        }
        , {
            multihashes: 315
        }],
        317: [function(e, t, r) {
            "use strict";
            r.PROTOCOL_ID = "/multistream/1.0.0"
        }
        , {}],
        318: [function(e, t, r) {
            "use strict";
            const i = e("debug")("mss:handle")
              , n = e("bl/BufferList")
              , s = e("./multistream")
              , o = e("it-handshake")
              , {PROTOCOL_ID: a} = e("./constants");
            t.exports = async(e,t)=>{
                t = Array.isArray(t) ? t : [t];
                const {writer: r, reader: c, rest: u, stream: f} = o(e);
                for (; ; ) {
                    const e = (await s.read(c)).toString();
                    if (i('read "%s"', e),
                    e !== a) {
                        if (t.includes(e))
                            return s.write(r, e),
                            i('respond with "%s" for "%s"', e, e),
                            u(),
                            {
                                stream: f,
                                protocol: e
                            };
                        "ls" !== e ? (s.write(r, "na"),
                        i('respond with "na" for "%s"', e)) : (s.write(r, new n(t.map(e=>s.encode(e)))),
                        i('respond with "%s" for %s', t, e))
                    } else
                        i('respond with "%s" for "%s"', a, e),
                        s.write(r, a)
                }
            }
        }
        , {
            "./constants": 317,
            "./multistream": 321,
            "bl/BufferList": 165,
            debug: 172,
            "it-handshake": 235
        }],
        319: [function(e, t, r) {
            "use strict";
            const i = e("./select")
              , n = e("./handle")
              , s = e("./ls")
              , {PROTOCOL_ID: o} = e("./constants");
            r.PROTOCOL_ID = o;
            class a {
                constructor(e) {
                    this._stream = e,
                    this._shaken = !1
                }
                async _handshake() {
                    if (this._shaken)
                        return;
                    const {stream: e} = await i(this._stream, o);
                    this._stream = e,
                    this._shaken = !0
                }
            }
            r.Dialer = class extends a {
                select(e) {
                    return i(this._stream, e, this._shaken ? null : o)
                }
                async ls() {
                    await this._handshake();
                    const {stream: e, protocols: t} = await s(this._stream);
                    return this._stream = e,
                    t
                }
            }
            ;
            r.Listener = class extends a {
                handle(e) {
                    return n(this._stream, e)
                }
            }
        }
        , {
            "./constants": 317,
            "./handle": 318,
            "./ls": 320,
            "./select": 322
        }],
        320: [function(e, t, r) {
            "use strict";
            const i = e("it-reader")
              , n = e("debug")("it-multistream-select:ls")
              , s = e("./multistream")
              , o = e("it-handshake")
              , a = e("it-length-prefixed")
              , c = e("it-pipe");
            t.exports = async e=>{
                const {reader: t, writer: r, rest: u, stream: f} = o(e);
                n('write "ls"'),
                s.write(r, "ls"),
                u();
                const h = await s.read(t)
                  , l = i([h])
                  , d = [];
                return await c(l, a.decode(), async e=>{
                    for await(const t of e)
                        d.push(t.shallowSlice(0, -1).toString())
                }
                ),
                {
                    stream: f,
                    protocols: d
                }
            }
        }
        , {
            "./multistream": 321,
            debug: 172,
            "it-handshake": 235,
            "it-length-prefixed": 238,
            "it-pipe": 243,
            "it-reader": 247
        }],
        321: [function(e, t, r) {
            "use strict";
            const i = e("bl/BufferList")
              , n = e("it-length-prefixed")
              , s = e("it-pipe")
              , o = e("err-code")
              , a = e("uint8arrays/from-string")("\n");
            async function c(e) {
                for await(const t of e)
                    return t
            }
            r.encode = e=>n.encode.single(new i([e, a])),
            r.write = (e,t)=>e.push(r.encode(t)),
            r.writeAll = (e,t)=>{
                e.push(t.reduce((e,t)=>e.append(r.encode(t)), new i))
            }
            ,
            r.read = async e=>{
                let t = 1;
                const r = {
                    [Symbol.asyncIterator]() {
                        return this
                    },
                    next: ()=>e.next(t)
                }
                  , i = await s(r, n.decode({
                    onLength: e=>{
                        t = e
                    }
                }), c);
                if (i.get(i.length - 1) !== a[0])
                    throw o(new Error("missing newline"), "ERR_INVALID_MULTISTREAM_SELECT_MESSAGE");
                return i.shallowSlice(0, -1)
            }
        }
        , {
            "bl/BufferList": 165,
            "err-code": 193,
            "it-length-prefixed": 238,
            "it-pipe": 243,
            "uint8arrays/from-string": 412
        }],
        322: [function(e, t, r) {
            "use strict";
            const i = e("debug")("mss:select")
              , n = e("err-code")
              , s = e("./multistream")
              , o = e("it-handshake");
            t.exports = async(e,t,r)=>{
                t = Array.isArray(t) ? [...t] : [t];
                const {reader: a, writer: c, rest: u, stream: f} = o(e)
                  , h = t.shift();
                r ? (i('select: write ["%s", "%s"]', r, h),
                s.writeAll(c, [r, h])) : (i('select: write "%s"', h),
                s.write(c, h));
                let l = (await s.read(a)).toString();
                if (i('select: read "%s"', l),
                l === r && (l = (await s.read(a)).toString(),
                i('select: read "%s"', l)),
                l === h)
                    return u(),
                    {
                        stream: f,
                        protocol: h
                    };
                for (const e of t) {
                    i('select: write "%s"', e),
                    s.write(c, e);
                    const t = (await s.read(a)).toString();
                    if (i('select: read "%s" for "%s"', t, e),
                    t === e)
                        return u(),
                        {
                            stream: f,
                            protocol: e
                        }
                }
                throw u(),
                n(new Error("protocol selection failed"), "ERR_UNSUPPORTED_PROTOCOL")
            }
        }
        , {
            "./multistream": 321,
            debug: 172,
            "err-code": 193,
            "it-handshake": 235
        }],
        323: [function(e, t, r) {
            "use strict";
            function i(e) {
                if (Array.isArray(e)) {
                    for (var t = 0, r = Array(e.length); t < e.length; t++)
                        r[t] = e[t];
                    return r
                }
                return Array.from(e)
            }
            t.exports = function(e) {
                var t = void 0
                  , r = void 0;
                function n(e) {
                    if (!(e instanceof Object))
                        throw new Error('Target "' + e + '" is not an object');
                    r = e
                }
                function s(e) {
                    Object.keys(e).forEach((function(t) {
                        var r = e[t];
                        if ("function" != typeof r)
                            throw new Error('Trap "' + t + ": " + r + '" is not a function');
                        if (!Reflect[t])
                            throw new Error('Trap "' + t + ": " + r + '" is not a valid trap')
                    }
                    )),
                    t = e
                }
                n((function() {}
                )),
                e && n(e),
                s(Reflect);
                var o = new Proxy({},{
                    get: function(e, n) {
                        return function() {
                            for (var e = arguments.length, s = Array(e), o = 0; o < e; o++)
                                s[o] = arguments[o];
                            return t[n].apply(null, [r].concat(i(s.slice(1))))
                        }
                    }
                });
                return {
                    setTarget: n,
                    setHandler: s,
                    getTarget: function() {
                        return r
                    },
                    getHandler: function() {
                        return t
                    },
                    proxy: new Proxy(r,o)
                }
            }
        }
        , {}],
        324: [function(e, t, r) {
            (function(r) {
                let i = e("crypto")
                  , {urlAlphabet: n} = e("./url-alphabet/index.cjs");
                let s, o, a = e=>{
                    !s || s.length < e ? (s = r.allocUnsafe(32 * e),
                    i.randomFillSync(s),
                    o = 0) : o + e > s.length && (i.randomFillSync(s),
                    o = 0);
                    let t = s.subarray(o, o + e);
                    return o += e,
                    t
                }
                , c = (e,t,r)=>{
                    let i = (2 << 31 - Math.clz32(e.length - 1 | 1)) - 1
                      , n = Math.ceil(1.6 * i * t / e.length);
                    return ()=>{
                        let s = "";
                        for (; ; ) {
                            let o = r(n)
                              , a = n;
                            for (; a--; )
                                if ((s += e[o[a] & i] || "").length === +t)
                                    return s
                        }
                    }
                }
                ;
                t.exports = {
                    nanoid: (e=21)=>{
                        let t = a(e)
                          , r = "";
                        for (; e--; )
                            r += n[63 & t[e]];
                        return r
                    }
                    ,
                    customAlphabet: (e,t)=>c(e, t, a),
                    customRandom: c,
                    urlAlphabet: n,
                    random: a
                }
            }
            ).call(this, e("buffer").Buffer)
        }
        , {
            "./url-alphabet/index.cjs": 325,
            buffer: 48,
            crypto: 56
        }],
        325: [function(e, t, r) {
            t.exports = {
                urlAlphabet: "ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW"
            }
        }
        , {}],
        326: [function(e, t, r) {
            "use strict";
            const i = e("globalthis")();
            i.fetch && i.Headers && i.Request && i.Response ? (t.exports = function(...e) {
                return i.fetch(...e)
            }
            ,
            t.exports.Headers = i.Headers,
            t.exports.Request = i.Request,
            t.exports.Response = i.Response,
            t.exports.default = t.exports) : t.exports = e("node-fetch")
        }
        , {
            globalthis: 198,
            "node-fetch": 327
        }],
        327: [function(e, t, r) {
            (function(e) {
                "use strict";
                e = function() {
                    if ("undefined" != typeof self)
                        return self;
                    if ("undefined" != typeof window)
                        return window;
                    if (void 0 !== e)
                        return e;
                    throw new Error("unable to locate global object")
                }();
                t.exports = r = e.fetch,
                e.fetch && (r.default = e.fetch.bind(e)),
                r.Headers = e.Headers,
                r.Request = e.Request,
                r.Response = e.Response
            }
            ).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
        }
        , {}],
        328: [function(e, t, r) {
            var i = e("./forge");
            function n(e, t) {
                i.cipher.registerAlgorithm(e, (function() {
                    return new i.aes.Algorithm(e,t)
                }
                ))
            }
            e("./cipher"),
            e("./cipherModes"),
            e("./util"),
            t.exports = i.aes = i.aes || {},
            i.aes.startEncrypting = function(e, t, r, i) {
                var n = b({
                    key: e,
                    output: r,
                    decrypt: !1,
                    mode: i
                });
                return n.start(t),
                n
            }
            ,
            i.aes.createEncryptionCipher = function(e, t) {
                return b({
                    key: e,
                    output: null,
                    decrypt: !1,
                    mode: t
                })
            }
            ,
            i.aes.startDecrypting = function(e, t, r, i) {
                var n = b({
                    key: e,
                    output: r,
                    decrypt: !0,
                    mode: i
                });
                return n.start(t),
                n
            }
            ,
            i.aes.createDecryptionCipher = function(e, t) {
                return b({
                    key: e,
                    output: null,
                    decrypt: !0,
                    mode: t
                })
            }
            ,
            i.aes.Algorithm = function(e, t) {
                f || l();
                var r = this;
                r.name = e,
                r.mode = new t({
                    blockSize: 16,
                    cipher: {
                        encrypt: function(e, t) {
                            return p(r._w, e, t, !1)
                        },
                        decrypt: function(e, t) {
                            return p(r._w, e, t, !0)
                        }
                    }
                }),
                r._init = !1
            }
            ,
            i.aes.Algorithm.prototype.initialize = function(e) {
                if (!this._init) {
                    var t, r = e.key;
                    if ("string" != typeof r || 16 !== r.length && 24 !== r.length && 32 !== r.length) {
                        if (i.util.isArray(r) && (16 === r.length || 24 === r.length || 32 === r.length)) {
                            t = r,
                            r = i.util.createBuffer();
                            for (var n = 0; n < t.length; ++n)
                                r.putByte(t[n])
                        }
                    } else
                        r = i.util.createBuffer(r);
                    if (!i.util.isArray(r)) {
                        t = r,
                        r = [];
                        var s = t.length();
                        if (16 === s || 24 === s || 32 === s) {
                            s >>>= 2;
                            for (n = 0; n < s; ++n)
                                r.push(t.getInt32())
                        }
                    }
                    if (!i.util.isArray(r) || 4 !== r.length && 6 !== r.length && 8 !== r.length)
                        throw new Error("Invalid key parameter.");
                    var o = this.mode.name
                      , a = -1 !== ["CFB", "OFB", "CTR", "GCM"].indexOf(o);
                    this._w = d(r, e.decrypt && !a),
                    this._init = !0
                }
            }
            ,
            i.aes._expandKey = function(e, t) {
                return f || l(),
                d(e, t)
            }
            ,
            i.aes._updateBlock = p,
            n("AES-ECB", i.cipher.modes.ecb),
            n("AES-CBC", i.cipher.modes.cbc),
            n("AES-CFB", i.cipher.modes.cfb),
            n("AES-OFB", i.cipher.modes.ofb),
            n("AES-CTR", i.cipher.modes.ctr),
            n("AES-GCM", i.cipher.modes.gcm);
            var s, o, a, c, u, f = !1, h = 4;
            function l() {
                f = !0,
                a = [0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54];
                for (var e = new Array(256), t = 0; t < 128; ++t)
                    e[t] = t << 1,
                    e[t + 128] = t + 128 << 1 ^ 283;
                s = new Array(256),
                o = new Array(256),
                c = new Array(4),
                u = new Array(4);
                for (t = 0; t < 4; ++t)
                    c[t] = new Array(256),
                    u[t] = new Array(256);
                var r, i, n, h, l, d, p, b = 0, g = 0;
                for (t = 0; t < 256; ++t) {
                    h = (h = g ^ g << 1 ^ g << 2 ^ g << 3 ^ g << 4) >> 8 ^ 255 & h ^ 99,
                    s[b] = h,
                    o[h] = b,
                    d = (l = e[h]) << 24 ^ h << 16 ^ h << 8 ^ h ^ l,
                    p = ((r = e[b]) ^ (i = e[r]) ^ (n = e[i])) << 24 ^ (b ^ n) << 16 ^ (b ^ i ^ n) << 8 ^ b ^ r ^ n;
                    for (var m = 0; m < 4; ++m)
                        c[m][b] = d,
                        u[m][h] = p,
                        d = d << 24 | d >>> 8,
                        p = p << 24 | p >>> 8;
                    0 === b ? b = g = 1 : (b = r ^ e[e[e[r ^ n]]],
                    g ^= e[e[g]])
                }
            }
            function d(e, t) {
                for (var r, i = e.slice(0), n = 1, o = i.length, c = h * (o + 6 + 1), f = o; f < c; ++f)
                    r = i[f - 1],
                    f % o == 0 ? (r = s[r >>> 16 & 255] << 24 ^ s[r >>> 8 & 255] << 16 ^ s[255 & r] << 8 ^ s[r >>> 24] ^ a[n] << 24,
                    n++) : o > 6 && f % o == 4 && (r = s[r >>> 24] << 24 ^ s[r >>> 16 & 255] << 16 ^ s[r >>> 8 & 255] << 8 ^ s[255 & r]),
                    i[f] = i[f - o] ^ r;
                if (t) {
                    for (var l, d = u[0], p = u[1], b = u[2], g = u[3], m = i.slice(0), y = (f = 0,
                    (c = i.length) - h); f < c; f += h,
                    y -= h)
                        if (0 === f || f === c - h)
                            m[f] = i[y],
                            m[f + 1] = i[y + 3],
                            m[f + 2] = i[y + 2],
                            m[f + 3] = i[y + 1];
                        else
                            for (var v = 0; v < h; ++v)
                                l = i[y + v],
                                m[f + (3 & -v)] = d[s[l >>> 24]] ^ p[s[l >>> 16 & 255]] ^ b[s[l >>> 8 & 255]] ^ g[s[255 & l]];
                    i = m
                }
                return i
            }
            function p(e, t, r, i) {
                var n, a, f, h, l, d, p, b, g, m, y, v, w = e.length / 4 - 1;
                i ? (n = u[0],
                a = u[1],
                f = u[2],
                h = u[3],
                l = o) : (n = c[0],
                a = c[1],
                f = c[2],
                h = c[3],
                l = s),
                d = t[0] ^ e[0],
                p = t[i ? 3 : 1] ^ e[1],
                b = t[2] ^ e[2],
                g = t[i ? 1 : 3] ^ e[3];
                for (var E = 3, _ = 1; _ < w; ++_)
                    m = n[d >>> 24] ^ a[p >>> 16 & 255] ^ f[b >>> 8 & 255] ^ h[255 & g] ^ e[++E],
                    y = n[p >>> 24] ^ a[b >>> 16 & 255] ^ f[g >>> 8 & 255] ^ h[255 & d] ^ e[++E],
                    v = n[b >>> 24] ^ a[g >>> 16 & 255] ^ f[d >>> 8 & 255] ^ h[255 & p] ^ e[++E],
                    g = n[g >>> 24] ^ a[d >>> 16 & 255] ^ f[p >>> 8 & 255] ^ h[255 & b] ^ e[++E],
                    d = m,
                    p = y,
                    b = v;
                r[0] = l[d >>> 24] << 24 ^ l[p >>> 16 & 255] << 16 ^ l[b >>> 8 & 255] << 8 ^ l[255 & g] ^ e[++E],
                r[i ? 3 : 1] = l[p >>> 24] << 24 ^ l[b >>> 16 & 255] << 16 ^ l[g >>> 8 & 255] << 8 ^ l[255 & d] ^ e[++E],
                r[2] = l[b >>> 24] << 24 ^ l[g >>> 16 & 255] << 16 ^ l[d >>> 8 & 255] << 8 ^ l[255 & p] ^ e[++E],
                r[i ? 1 : 3] = l[g >>> 24] << 24 ^ l[d >>> 16 & 255] << 16 ^ l[p >>> 8 & 255] << 8 ^ l[255 & b] ^ e[++E]
            }
            function b(e) {
                var t, r = "AES-" + ((e = e || {}).mode || "CBC").toUpperCase(), n = (t = e.decrypt ? i.cipher.createDecipher(r, e.key) : i.cipher.createCipher(r, e.key)).start;
                return t.start = function(e, r) {
                    var s = null;
                    r instanceof i.util.ByteBuffer && (s = r,
                    r = {}),
                    (r = r || {}).output = s,
                    r.iv = e,
                    n.call(t, r)
                }
                ,
                t
            }
        }
        , {
            "./cipher": 332,
            "./cipherModes": 333,
            "./forge": 336,
            "./util": 358
        }],
        329: [function(e, t, r) {
            var i = e("./forge");
            e("./asn1");
            var n = i.asn1;
            r.privateKeyValidator = {
                name: "PrivateKeyInfo",
                tagClass: n.Class.UNIVERSAL,
                type: n.Type.SEQUENCE,
                constructed: !0,
                value: [{
                    name: "PrivateKeyInfo.version",
                    tagClass: n.Class.UNIVERSAL,
                    type: n.Type.INTEGER,
                    constructed: !1,
                    capture: "privateKeyVersion"
                }, {
                    name: "PrivateKeyInfo.privateKeyAlgorithm",
                    tagClass: n.Class.UNIVERSAL,
                    type: n.Type.SEQUENCE,
                    constructed: !0,
                    value: [{
                        name: "AlgorithmIdentifier.algorithm",
                        tagClass: n.Class.UNIVERSAL,
                        type: n.Type.OID,
                        constructed: !1,
                        capture: "privateKeyOid"
                    }]
                }, {
                    name: "PrivateKeyInfo",
                    tagClass: n.Class.UNIVERSAL,
                    type: n.Type.OCTETSTRING,
                    constructed: !1,
                    capture: "privateKey"
                }]
            },
            r.publicKeyValidator = {
                name: "SubjectPublicKeyInfo",
                tagClass: n.Class.UNIVERSAL,
                type: n.Type.SEQUENCE,
                constructed: !0,
                captureAsn1: "subjectPublicKeyInfo",
                value: [{
                    name: "SubjectPublicKeyInfo.AlgorithmIdentifier",
                    tagClass: n.Class.UNIVERSAL,
                    type: n.Type.SEQUENCE,
                    constructed: !0,
                    value: [{
                        name: "AlgorithmIdentifier.algorithm",
                        tagClass: n.Class.UNIVERSAL,
                        type: n.Type.OID,
                        constructed: !1,
                        capture: "publicKeyOid"
                    }]
                }, {
                    tagClass: n.Class.UNIVERSAL,
                    type: n.Type.BITSTRING,
                    constructed: !1,
                    composed: !0,
                    captureBitStringValue: "ed25519PublicKey"
                }]
            }
        }
        , {
            "./asn1": 330,
            "./forge": 336
        }],
        330: [function(e, t, r) {
            var i = e("./forge");
            e("./util"),
            e("./oids");
            var n = t.exports = i.asn1 = i.asn1 || {};
            function s(e, t, r) {
                if (r > t) {
                    var i = new Error("Too few bytes to parse DER.");
                    throw i.available = e.length(),
                    i.remaining = t,
                    i.requested = r,
                    i
                }
            }
            n.Class = {
                UNIVERSAL: 0,
                APPLICATION: 64,
                CONTEXT_SPECIFIC: 128,
                PRIVATE: 192
            },
            n.Type = {
                NONE: 0,
                BOOLEAN: 1,
                INTEGER: 2,
                BITSTRING: 3,
                OCTETSTRING: 4,
                NULL: 5,
                OID: 6,
                ODESC: 7,
                EXTERNAL: 8,
                REAL: 9,
                ENUMERATED: 10,
                EMBEDDED: 11,
                UTF8: 12,
                ROID: 13,
                SEQUENCE: 16,
                SET: 17,
                PRINTABLESTRING: 19,
                IA5STRING: 22,
                UTCTIME: 23,
                GENERALIZEDTIME: 24,
                BMPSTRING: 30
            },
            n.create = function(e, t, r, s, o) {
                if (i.util.isArray(s)) {
                    for (var a = [], c = 0; c < s.length; ++c)
                        void 0 !== s[c] && a.push(s[c]);
                    s = a
                }
                var u = {
                    tagClass: e,
                    type: t,
                    constructed: r,
                    composed: r || i.util.isArray(s),
                    value: s
                };
                return o && "bitStringContents"in o && (u.bitStringContents = o.bitStringContents,
                u.original = n.copy(u)),
                u
            }
            ,
            n.copy = function(e, t) {
                var r;
                if (i.util.isArray(e)) {
                    r = [];
                    for (var s = 0; s < e.length; ++s)
                        r.push(n.copy(e[s], t));
                    return r
                }
                return "string" == typeof e ? e : (r = {
                    tagClass: e.tagClass,
                    type: e.type,
                    constructed: e.constructed,
                    composed: e.composed,
                    value: n.copy(e.value, t)
                },
                t && !t.excludeBitStringContents && (r.bitStringContents = e.bitStringContents),
                r)
            }
            ,
            n.equals = function(e, t, r) {
                if (i.util.isArray(e)) {
                    if (!i.util.isArray(t))
                        return !1;
                    if (e.length !== t.length)
                        return !1;
                    for (var s = 0; s < e.length; ++s)
                        if (!n.equals(e[s], t[s]))
                            return !1;
                    return !0
                }
                if (typeof e != typeof t)
                    return !1;
                if ("string" == typeof e)
                    return e === t;
                var o = e.tagClass === t.tagClass && e.type === t.type && e.constructed === t.constructed && e.composed === t.composed && n.equals(e.value, t.value);
                return r && r.includeBitStringContents && (o = o && e.bitStringContents === t.bitStringContents),
                o
            }
            ,
            n.getBerValueLength = function(e) {
                var t = e.getByte();
                if (128 !== t)
                    return 128 & t ? e.getInt((127 & t) << 3) : t
            }
            ;
            var o = function(e, t) {
                var r = e.getByte();
                if (128 !== r) {
                    var i;
                    if (128 & r) {
                        var n = 127 & r;
                        s(e, --t, n),
                        i = e.getInt(n << 3)
                    } else
                        i = r;
                    if (i < 0)
                        throw new Error("Negative length: " + i);
                    return i
                }
            };
            n.fromDer = function(e, t) {
                return void 0 === t && (t = {
                    strict: !0,
                    decodeBitStrings: !0
                }),
                "boolean" == typeof t && (t = {
                    strict: t,
                    decodeBitStrings: !0
                }),
                "strict"in t || (t.strict = !0),
                "decodeBitStrings"in t || (t.decodeBitStrings = !0),
                "string" == typeof e && (e = i.util.createBuffer(e)),
                function e(t, r, i, a) {
                    var c;
                    s(t, r, 2);
                    var u = t.getByte();
                    r--;
                    var f = 192 & u;
                    var h = 31 & u;
                    c = t.length();
                    var l = o(t, r);
                    r -= c - t.length();
                    if (void 0 !== l && l > r) {
                        if (a.strict) {
                            var d = new Error("Too few bytes to read ASN.1 value.");
                            throw d.available = t.length(),
                            d.remaining = r,
                            d.requested = l,
                            d
                        }
                        l = r
                    }
                    var p;
                    var b;
                    var g = 32 == (32 & u);
                    if (g)
                        if (p = [],
                        void 0 === l)
                            for (; ; ) {
                                if (s(t, r, 2),
                                t.bytes(2) === String.fromCharCode(0, 0)) {
                                    t.getBytes(2),
                                    r -= 2;
                                    break
                                }
                                c = t.length(),
                                p.push(e(t, r, i + 1, a)),
                                r -= c - t.length()
                            }
                        else
                            for (; l > 0; )
                                c = t.length(),
                                p.push(e(t, l, i + 1, a)),
                                r -= c - t.length(),
                                l -= c - t.length();
                    void 0 === p && f === n.Class.UNIVERSAL && h === n.Type.BITSTRING && (b = t.bytes(l));
                    if (void 0 === p && a.decodeBitStrings && f === n.Class.UNIVERSAL && h === n.Type.BITSTRING && l > 1) {
                        var m = t.read
                          , y = r
                          , v = 0;
                        if (h === n.Type.BITSTRING && (s(t, r, 1),
                        v = t.getByte(),
                        r--),
                        0 === v)
                            try {
                                c = t.length();
                                var w = {
                                    verbose: a.verbose,
                                    strict: !0,
                                    decodeBitStrings: !0
                                }
                                  , E = e(t, r, i + 1, w)
                                  , _ = c - t.length();
                                r -= _,
                                h == n.Type.BITSTRING && _++;
                                var S = E.tagClass;
                                _ !== l || S !== n.Class.UNIVERSAL && S !== n.Class.CONTEXT_SPECIFIC || (p = [E])
                            } catch (e) {}
                        void 0 === p && (t.read = m,
                        r = y)
                    }
                    if (void 0 === p) {
                        if (void 0 === l) {
                            if (a.strict)
                                throw new Error("Non-constructed ASN.1 object of indefinite length.");
                            l = r
                        }
                        if (h === n.Type.BMPSTRING)
                            for (p = ""; l > 0; l -= 2)
                                s(t, r, 2),
                                p += String.fromCharCode(t.getInt16()),
                                r -= 2;
                        else
                            p = t.getBytes(l)
                    }
                    var k = void 0 === b ? null : {
                        bitStringContents: b
                    };
                    return n.create(f, h, g, p, k)
                }(e, e.length(), 0, t)
            }
            ,
            n.toDer = function(e) {
                var t = i.util.createBuffer()
                  , r = e.tagClass | e.type
                  , s = i.util.createBuffer()
                  , o = !1;
                if ("bitStringContents"in e && (o = !0,
                e.original && (o = n.equals(e, e.original))),
                o)
                    s.putBytes(e.bitStringContents);
                else if (e.composed) {
                    e.constructed ? r |= 32 : s.putByte(0);
                    for (var a = 0; a < e.value.length; ++a)
                        void 0 !== e.value[a] && s.putBuffer(n.toDer(e.value[a]))
                } else if (e.type === n.Type.BMPSTRING)
                    for (a = 0; a < e.value.length; ++a)
                        s.putInt16(e.value.charCodeAt(a));
                else
                    e.type === n.Type.INTEGER && e.value.length > 1 && (0 === e.value.charCodeAt(0) && 0 == (128 & e.value.charCodeAt(1)) || 255 === e.value.charCodeAt(0) && 128 == (128 & e.value.charCodeAt(1))) ? s.putBytes(e.value.substr(1)) : s.putBytes(e.value);
                if (t.putByte(r),
                s.length() <= 127)
                    t.putByte(127 & s.length());
                else {
                    var c = s.length()
                      , u = "";
                    do {
                        u += String.fromCharCode(255 & c),
                        c >>>= 8
                    } while (c > 0);t.putByte(128 | u.length);
                    for (a = u.length - 1; a >= 0; --a)
                        t.putByte(u.charCodeAt(a))
                }
                return t.putBuffer(s),
                t
            }
            ,
            n.oidToDer = function(e) {
                var t, r, n, s, o = e.split("."), a = i.util.createBuffer();
                a.putByte(40 * parseInt(o[0], 10) + parseInt(o[1], 10));
                for (var c = 2; c < o.length; ++c) {
                    t = !0,
                    r = [],
                    n = parseInt(o[c], 10);
                    do {
                        s = 127 & n,
                        n >>>= 7,
                        t || (s |= 128),
                        r.push(s),
                        t = !1
                    } while (n > 0);for (var u = r.length - 1; u >= 0; --u)
                        a.putByte(r[u])
                }
                return a
            }
            ,
            n.derToOid = function(e) {
                var t;
                "string" == typeof e && (e = i.util.createBuffer(e));
                var r = e.getByte();
                t = Math.floor(r / 40) + "." + r % 40;
                for (var n = 0; e.length() > 0; )
                    n <<= 7,
                    128 & (r = e.getByte()) ? n += 127 & r : (t += "." + (n + r),
                    n = 0);
                return t
            }
            ,
            n.utcTimeToDate = function(e) {
                var t = new Date
                  , r = parseInt(e.substr(0, 2), 10);
                r = r >= 50 ? 1900 + r : 2e3 + r;
                var i = parseInt(e.substr(2, 2), 10) - 1
                  , n = parseInt(e.substr(4, 2), 10)
                  , s = parseInt(e.substr(6, 2), 10)
                  , o = parseInt(e.substr(8, 2), 10)
                  , a = 0;
                if (e.length > 11) {
                    var c = e.charAt(10)
                      , u = 10;
                    "+" !== c && "-" !== c && (a = parseInt(e.substr(10, 2), 10),
                    u += 2)
                }
                if (t.setUTCFullYear(r, i, n),
                t.setUTCHours(s, o, a, 0),
                u && ("+" === (c = e.charAt(u)) || "-" === c)) {
                    var f = 60 * parseInt(e.substr(u + 1, 2), 10) + parseInt(e.substr(u + 4, 2), 10);
                    f *= 6e4,
                    "+" === c ? t.setTime(+t - f) : t.setTime(+t + f)
                }
                return t
            }
            ,
            n.generalizedTimeToDate = function(e) {
                var t = new Date
                  , r = parseInt(e.substr(0, 4), 10)
                  , i = parseInt(e.substr(4, 2), 10) - 1
                  , n = parseInt(e.substr(6, 2), 10)
                  , s = parseInt(e.substr(8, 2), 10)
                  , o = parseInt(e.substr(10, 2), 10)
                  , a = parseInt(e.substr(12, 2), 10)
                  , c = 0
                  , u = 0
                  , f = !1;
                "Z" === e.charAt(e.length - 1) && (f = !0);
                var h = e.length - 5
                  , l = e.charAt(h);
                "+" !== l && "-" !== l || (u = 60 * parseInt(e.substr(h + 1, 2), 10) + parseInt(e.substr(h + 4, 2), 10),
                u *= 6e4,
                "+" === l && (u *= -1),
                f = !0);
                return "." === e.charAt(14) && (c = 1e3 * parseFloat(e.substr(14), 10)),
                f ? (t.setUTCFullYear(r, i, n),
                t.setUTCHours(s, o, a, c),
                t.setTime(+t + u)) : (t.setFullYear(r, i, n),
                t.setHours(s, o, a, c)),
                t
            }
            ,
            n.dateToUtcTime = function(e) {
                if ("string" == typeof e)
                    return e;
                var t = ""
                  , r = [];
                r.push(("" + e.getUTCFullYear()).substr(2)),
                r.push("" + (e.getUTCMonth() + 1)),
                r.push("" + e.getUTCDate()),
                r.push("" + e.getUTCHours()),
                r.push("" + e.getUTCMinutes()),
                r.push("" + e.getUTCSeconds());
                for (var i = 0; i < r.length; ++i)
                    r[i].length < 2 && (t += "0"),
                    t += r[i];
                return t += "Z"
            }
            ,
            n.dateToGeneralizedTime = function(e) {
                if ("string" == typeof e)
                    return e;
                var t = ""
                  , r = [];
                r.push("" + e.getUTCFullYear()),
                r.push("" + (e.getUTCMonth() + 1)),
                r.push("" + e.getUTCDate()),
                r.push("" + e.getUTCHours()),
                r.push("" + e.getUTCMinutes()),
                r.push("" + e.getUTCSeconds());
                for (var i = 0; i < r.length; ++i)
                    r[i].length < 2 && (t += "0"),
                    t += r[i];
                return t += "Z"
            }
            ,
            n.integerToDer = function(e) {
                var t = i.util.createBuffer();
                if (e >= -128 && e < 128)
                    return t.putSignedInt(e, 8);
                if (e >= -32768 && e < 32768)
                    return t.putSignedInt(e, 16);
                if (e >= -8388608 && e < 8388608)
                    return t.putSignedInt(e, 24);
                if (e >= -2147483648 && e < 2147483648)
                    return t.putSignedInt(e, 32);
                var r = new Error("Integer too large; max is 32-bits.");
                throw r.integer = e,
                r
            }
            ,
            n.derToInteger = function(e) {
                "string" == typeof e && (e = i.util.createBuffer(e));
                var t = 8 * e.length();
                if (t > 32)
                    throw new Error("Integer too large; max is 32-bits.");
                return e.getSignedInt(t)
            }
            ,
            n.validate = function(e, t, r, s) {
                var o = !1;
                if (e.tagClass !== t.tagClass && void 0 !== t.tagClass || e.type !== t.type && void 0 !== t.type)
                    s && (e.tagClass !== t.tagClass && s.push("[" + t.name + '] Expected tag class "' + t.tagClass + '", got "' + e.tagClass + '"'),
                    e.type !== t.type && s.push("[" + t.name + '] Expected type "' + t.type + '", got "' + e.type + '"'));
                else if (e.constructed === t.constructed || void 0 === t.constructed) {
                    if (o = !0,
                    t.value && i.util.isArray(t.value))
                        for (var a = 0, c = 0; o && c < t.value.length; ++c)
                            o = t.value[c].optional || !1,
                            e.value[a] && ((o = n.validate(e.value[a], t.value[c], r, s)) ? ++a : t.value[c].optional && (o = !0)),
                            !o && s && s.push("[" + t.name + '] Tag class "' + t.tagClass + '", type "' + t.type + '" expected value length "' + t.value.length + '", got "' + e.value.length + '"');
                    if (o && r)
                        if (t.capture && (r[t.capture] = e.value),
                        t.captureAsn1 && (r[t.captureAsn1] = e),
                        t.captureBitStringContents && "bitStringContents"in e && (r[t.captureBitStringContents] = e.bitStringContents),
                        t.captureBitStringValue && "bitStringContents"in e)
                            if (e.bitStringContents.length < 2)
                                r[t.captureBitStringValue] = "";
                            else {
                                if (0 !== e.bitStringContents.charCodeAt(0))
                                    throw new Error("captureBitStringValue only supported for zero unused bits");
                                r[t.captureBitStringValue] = e.bitStringContents.slice(1)
                            }
                } else
                    s && s.push("[" + t.name + '] Expected constructed "' + t.constructed + '", got "' + e.constructed + '"');
                return o
            }
            ;
            var a = /[^\\u0000-\\u00ff]/;
            n.prettyPrint = function(e, t, r) {
                var s = "";
                r = r || 2,
                (t = t || 0) > 0 && (s += "\n");
                for (var o = "", c = 0; c < t * r; ++c)
                    o += " ";
                switch (s += o + "Tag: ",
                e.tagClass) {
                case n.Class.UNIVERSAL:
                    s += "Universal:";
                    break;
                case n.Class.APPLICATION:
                    s += "Application:";
                    break;
                case n.Class.CONTEXT_SPECIFIC:
                    s += "Context-Specific:";
                    break;
                case n.Class.PRIVATE:
                    s += "Private:"
                }
                if (e.tagClass === n.Class.UNIVERSAL)
                    switch (s += e.type,
                    e.type) {
                    case n.Type.NONE:
                        s += " (None)";
                        break;
                    case n.Type.BOOLEAN:
                        s += " (Boolean)";
                        break;
                    case n.Type.INTEGER:
                        s += " (Integer)";
                        break;
                    case n.Type.BITSTRING:
                        s += " (Bit string)";
                        break;
                    case n.Type.OCTETSTRING:
                        s += " (Octet string)";
                        break;
                    case n.Type.NULL:
                        s += " (Null)";
                        break;
                    case n.Type.OID:
                        s += " (Object Identifier)";
                        break;
                    case n.Type.ODESC:
                        s += " (Object Descriptor)";
                        break;
                    case n.Type.EXTERNAL:
                        s += " (External or Instance of)";
                        break;
                    case n.Type.REAL:
                        s += " (Real)";
                        break;
                    case n.Type.ENUMERATED:
                        s += " (Enumerated)";
                        break;
                    case n.Type.EMBEDDED:
                        s += " (Embedded PDV)";
                        break;
                    case n.Type.UTF8:
                        s += " (UTF8)";
                        break;
                    case n.Type.ROID:
                        s += " (Relative Object Identifier)";
                        break;
                    case n.Type.SEQUENCE:
                        s += " (Sequence)";
                        break;
                    case n.Type.SET:
                        s += " (Set)";
                        break;
                    case n.Type.PRINTABLESTRING:
                        s += " (Printable String)";
                        break;
                    case n.Type.IA5String:
                        s += " (IA5String (ASCII))";
                        break;
                    case n.Type.UTCTIME:
                        s += " (UTC time)";
                        break;
                    case n.Type.GENERALIZEDTIME:
                        s += " (Generalized time)";
                        break;
                    case n.Type.BMPSTRING:
                        s += " (BMP String)"
                    }
                else
                    s += e.type;
                if (s += "\n",
                s += o + "Constructed: " + e.constructed + "\n",
                e.composed) {
                    var u = 0
                      , f = "";
                    for (c = 0; c < e.value.length; ++c)
                        void 0 !== e.value[c] && (u += 1,
                        f += n.prettyPrint(e.value[c], t + 1, r),
                        c + 1 < e.value.length && (f += ","));
                    s += o + "Sub values: " + u + f
                } else {
                    if (s += o + "Value: ",
                    e.type === n.Type.OID) {
                        var h = n.derToOid(e.value);
                        s += h,
                        i.pki && i.pki.oids && h in i.pki.oids && (s += " (" + i.pki.oids[h] + ") ")
                    }
                    if (e.type === n.Type.INTEGER)
                        try {
                            s += n.derToInteger(e.value)
                        } catch (t) {
                            s += "0x" + i.util.bytesToHex(e.value)
                        }
                    else if (e.type === n.Type.BITSTRING) {
                        if (e.value.length > 1 ? s += "0x" + i.util.bytesToHex(e.value.slice(1)) : s += "(none)",
                        e.value.length > 0) {
                            var l = e.value.charCodeAt(0);
                            1 == l ? s += " (1 unused bit shown)" : l > 1 && (s += " (" + l + " unused bits shown)")
                        }
                    } else
                        e.type === n.Type.OCTETSTRING ? (a.test(e.value) || (s += "(" + e.value + ") "),
                        s += "0x" + i.util.bytesToHex(e.value)) : e.type === n.Type.UTF8 ? s += i.util.decodeUtf8(e.value) : e.type === n.Type.PRINTABLESTRING || e.type === n.Type.IA5String ? s += e.value : a.test(e.value) ? s += "0x" + i.util.bytesToHex(e.value) : 0 === e.value.length ? s += "[null]" : s += e.value
                }
                return s
            }
        }
        , {
            "./forge": 336,
            "./oids": 342,
            "./util": 358
        }],
        331: [function(e, t, r) {
            (function(e) {
                var r = {};
                t.exports = r;
                var i = {};
                r.encode = function(e, t, r) {
                    if ("string" != typeof t)
                        throw new TypeError('"alphabet" must be a string.');
                    if (void 0 !== r && "number" != typeof r)
                        throw new TypeError('"maxline" must be a number.');
                    var i = "";
                    if (e instanceof Uint8Array) {
                        var n = 0
                          , s = t.length
                          , o = t.charAt(0)
                          , a = [0];
                        for (n = 0; n < e.length; ++n) {
                            for (var c = 0, u = e[n]; c < a.length; ++c)
                                u += a[c] << 8,
                                a[c] = u % s,
                                u = u / s | 0;
                            for (; u > 0; )
                                a.push(u % s),
                                u = u / s | 0
                        }
                        for (n = 0; 0 === e[n] && n < e.length - 1; ++n)
                            i += o;
                        for (n = a.length - 1; n >= 0; --n)
                            i += t[a[n]]
                    } else
                        i = function(e, t) {
                            var r = 0
                              , i = t.length
                              , n = t.charAt(0)
                              , s = [0];
                            for (r = 0; r < e.length(); ++r) {
                                for (var o = 0, a = e.at(r); o < s.length; ++o)
                                    a += s[o] << 8,
                                    s[o] = a % i,
                                    a = a / i | 0;
                                for (; a > 0; )
                                    s.push(a % i),
                                    a = a / i | 0
                            }
                            var c = "";
                            for (r = 0; 0 === e.at(r) && r < e.length() - 1; ++r)
                                c += n;
                            for (r = s.length - 1; r >= 0; --r)
                                c += t[s[r]];
                            return c
                        }(e, t);
                    if (r) {
                        var f = new RegExp(".{1," + r + "}","g");
                        i = i.match(f).join("\r\n")
                    }
                    return i
                }
                ,
                r.decode = function(t, r) {
                    if ("string" != typeof t)
                        throw new TypeError('"input" must be a string.');
                    if ("string" != typeof r)
                        throw new TypeError('"alphabet" must be a string.');
                    var n = i[r];
                    if (!n) {
                        n = i[r] = [];
                        for (var s = 0; s < r.length; ++s)
                            n[r.charCodeAt(s)] = s
                    }
                    t = t.replace(/\s/g, "");
                    var o = r.length
                      , a = r.charAt(0)
                      , c = [0];
                    for (s = 0; s < t.length; s++) {
                        var u = n[t.charCodeAt(s)];
                        if (void 0 === u)
                            return;
                        for (var f = 0, h = u; f < c.length; ++f)
                            h += c[f] * o,
                            c[f] = 255 & h,
                            h >>= 8;
                        for (; h > 0; )
                            c.push(255 & h),
                            h >>= 8
                    }
                    for (var l = 0; t[l] === a && l < t.length - 1; ++l)
                        c.push(0);
                    return void 0 !== e ? e.from(c.reverse()) : new Uint8Array(c.reverse())
                }
            }
            ).call(this, e("buffer").Buffer)
        }
        , {
            buffer: 18
        }],
        332: [function(e, t, r) {
            var i = e("./forge");
            e("./util"),
            t.exports = i.cipher = i.cipher || {},
            i.cipher.algorithms = i.cipher.algorithms || {},
            i.cipher.createCipher = function(e, t) {
                var r = e;
                if ("string" == typeof r && (r = i.cipher.getAlgorithm(r)) && (r = r()),
                !r)
                    throw new Error("Unsupported algorithm: " + e);
                return new i.cipher.BlockCipher({
                    algorithm: r,
                    key: t,
                    decrypt: !1
                })
            }
            ,
            i.cipher.createDecipher = function(e, t) {
                var r = e;
                if ("string" == typeof r && (r = i.cipher.getAlgorithm(r)) && (r = r()),
                !r)
                    throw new Error("Unsupported algorithm: " + e);
                return new i.cipher.BlockCipher({
                    algorithm: r,
                    key: t,
                    decrypt: !0
                })
            }
            ,
            i.cipher.registerAlgorithm = function(e, t) {
                e = e.toUpperCase(),
                i.cipher.algorithms[e] = t
            }
            ,
            i.cipher.getAlgorithm = function(e) {
                return (e = e.toUpperCase())in i.cipher.algorithms ? i.cipher.algorithms[e] : null
            }
            ;
            var n = i.cipher.BlockCipher = function(e) {
                this.algorithm = e.algorithm,
                this.mode = this.algorithm.mode,
                this.blockSize = this.mode.blockSize,
                this._finish = !1,
                this._input = null,
                this.output = null,
                this._op = e.decrypt ? this.mode.decrypt : this.mode.encrypt,
                this._decrypt = e.decrypt,
                this.algorithm.initialize(e)
            }
            ;
            n.prototype.start = function(e) {
                e = e || {};
                var t = {};
                for (var r in e)
                    t[r] = e[r];
                t.decrypt = this._decrypt,
                this._finish = !1,
                this._input = i.util.createBuffer(),
                this.output = e.output || i.util.createBuffer(),
                this.mode.start(t)
            }
            ,
            n.prototype.update = function(e) {
                for (e && this._input.putBuffer(e); !this._op.call(this.mode, this._input, this.output, this._finish) && !this._finish; )
                    ;
                this._input.compact()
            }
            ,
            n.prototype.finish = function(e) {
                !e || "ECB" !== this.mode.name && "CBC" !== this.mode.name || (this.mode.pad = function(t) {
                    return e(this.blockSize, t, !1)
                }
                ,
                this.mode.unpad = function(t) {
                    return e(this.blockSize, t, !0)
                }
                );
                var t = {};
                return t.decrypt = this._decrypt,
                t.overflow = this._input.length() % this.blockSize,
                !(!this._decrypt && this.mode.pad && !this.mode.pad(this._input, t)) && (this._finish = !0,
                this.update(),
                !(this._decrypt && this.mode.unpad && !this.mode.unpad(this.output, t)) && !(this.mode.afterFinish && !this.mode.afterFinish(this.output, t)))
            }
        }
        , {
            "./forge": 336,
            "./util": 358
        }],
        333: [function(e, t, r) {
            var i = e("./forge");
            e("./util"),
            i.cipher = i.cipher || {};
            var n = t.exports = i.cipher.modes = i.cipher.modes || {};
            function s(e, t) {
                if ("string" == typeof e && (e = i.util.createBuffer(e)),
                i.util.isArray(e) && e.length > 4) {
                    var r = e;
                    e = i.util.createBuffer();
                    for (var n = 0; n < r.length; ++n)
                        e.putByte(r[n])
                }
                if (e.length() < t)
                    throw new Error("Invalid IV length; got " + e.length() + " bytes and expected " + t + " bytes.");
                if (!i.util.isArray(e)) {
                    var s = []
                      , o = t / 4;
                    for (n = 0; n < o; ++n)
                        s.push(e.getInt32());
                    e = s
                }
                return e
            }
            function o(e) {
                e[e.length - 1] = e[e.length - 1] + 1 & 4294967295
            }
            function a(e) {
                return [e / 4294967296 | 0, 4294967295 & e]
            }
            n.ecb = function(e) {
                e = e || {},
                this.name = "ECB",
                this.cipher = e.cipher,
                this.blockSize = e.blockSize || 16,
                this._ints = this.blockSize / 4,
                this._inBlock = new Array(this._ints),
                this._outBlock = new Array(this._ints)
            }
            ,
            n.ecb.prototype.start = function(e) {}
            ,
            n.ecb.prototype.encrypt = function(e, t, r) {
                if (e.length() < this.blockSize && !(r && e.length() > 0))
                    return !0;
                for (var i = 0; i < this._ints; ++i)
                    this._inBlock[i] = e.getInt32();
                this.cipher.encrypt(this._inBlock, this._outBlock);
                for (i = 0; i < this._ints; ++i)
                    t.putInt32(this._outBlock[i])
            }
            ,
            n.ecb.prototype.decrypt = function(e, t, r) {
                if (e.length() < this.blockSize && !(r && e.length() > 0))
                    return !0;
                for (var i = 0; i < this._ints; ++i)
                    this._inBlock[i] = e.getInt32();
                this.cipher.decrypt(this._inBlock, this._outBlock);
                for (i = 0; i < this._ints; ++i)
                    t.putInt32(this._outBlock[i])
            }
            ,
            n.ecb.prototype.pad = function(e, t) {
                var r = e.length() === this.blockSize ? this.blockSize : this.blockSize - e.length();
                return e.fillWithByte(r, r),
                !0
            }
            ,
            n.ecb.prototype.unpad = function(e, t) {
                if (t.overflow > 0)
                    return !1;
                var r = e.length()
                  , i = e.at(r - 1);
                return !(i > this.blockSize << 2) && (e.truncate(i),
                !0)
            }
            ,
            n.cbc = function(e) {
                e = e || {},
                this.name = "CBC",
                this.cipher = e.cipher,
                this.blockSize = e.blockSize || 16,
                this._ints = this.blockSize / 4,
                this._inBlock = new Array(this._ints),
                this._outBlock = new Array(this._ints)
            }
            ,
            n.cbc.prototype.start = function(e) {
                if (null === e.iv) {
                    if (!this._prev)
                        throw new Error("Invalid IV parameter.");
                    this._iv = this._prev.slice(0)
                } else {
                    if (!("iv"in e))
                        throw new Error("Invalid IV parameter.");
                    this._iv = s(e.iv, this.blockSize),
                    this._prev = this._iv.slice(0)
                }
            }
            ,
            n.cbc.prototype.encrypt = function(e, t, r) {
                if (e.length() < this.blockSize && !(r && e.length() > 0))
                    return !0;
                for (var i = 0; i < this._ints; ++i)
                    this._inBlock[i] = this._prev[i] ^ e.getInt32();
                this.cipher.encrypt(this._inBlock, this._outBlock);
                for (i = 0; i < this._ints; ++i)
                    t.putInt32(this._outBlock[i]);
                this._prev = this._outBlock
            }
            ,
            n.cbc.prototype.decrypt = function(e, t, r) {
                if (e.length() < this.blockSize && !(r && e.length() > 0))
                    return !0;
                for (var i = 0; i < this._ints; ++i)
                    this._inBlock[i] = e.getInt32();
                this.cipher.decrypt(this._inBlock, this._outBlock);
                for (i = 0; i < this._ints; ++i)
                    t.putInt32(this._prev[i] ^ this._outBlock[i]);
                this._prev = this._inBlock.slice(0)
            }
            ,
            n.cbc.prototype.pad = function(e, t) {
                var r = e.length() === this.blockSize ? this.blockSize : this.blockSize - e.length();
                return e.fillWithByte(r, r),
                !0
            }
            ,
            n.cbc.prototype.unpad = function(e, t) {
                if (t.overflow > 0)
                    return !1;
                var r = e.length()
                  , i = e.at(r - 1);
                return !(i > this.blockSize << 2) && (e.truncate(i),
                !0)
            }
            ,
            n.cfb = function(e) {
                e = e || {},
                this.name = "CFB",
                this.cipher = e.cipher,
                this.blockSize = e.blockSize || 16,
                this._ints = this.blockSize / 4,
                this._inBlock = null,
                this._outBlock = new Array(this._ints),
                this._partialBlock = new Array(this._ints),
                this._partialOutput = i.util.createBuffer(),
                this._partialBytes = 0
            }
            ,
            n.cfb.prototype.start = function(e) {
                if (!("iv"in e))
                    throw new Error("Invalid IV parameter.");
                this._iv = s(e.iv, this.blockSize),
                this._inBlock = this._iv.slice(0),
                this._partialBytes = 0
            }
            ,
            n.cfb.prototype.encrypt = function(e, t, r) {
                var i = e.length();
                if (0 === i)
                    return !0;
                if (this.cipher.encrypt(this._inBlock, this._outBlock),
                0 === this._partialBytes && i >= this.blockSize)
                    for (var n = 0; n < this._ints; ++n)
                        this._inBlock[n] = e.getInt32() ^ this._outBlock[n],
                        t.putInt32(this._inBlock[n]);
                else {
                    var s = (this.blockSize - i) % this.blockSize;
                    s > 0 && (s = this.blockSize - s),
                    this._partialOutput.clear();
                    for (n = 0; n < this._ints; ++n)
                        this._partialBlock[n] = e.getInt32() ^ this._outBlock[n],
                        this._partialOutput.putInt32(this._partialBlock[n]);
                    if (s > 0)
                        e.read -= this.blockSize;
                    else
                        for (n = 0; n < this._ints; ++n)
                            this._inBlock[n] = this._partialBlock[n];
                    if (this._partialBytes > 0 && this._partialOutput.getBytes(this._partialBytes),
                    s > 0 && !r)
                        return t.putBytes(this._partialOutput.getBytes(s - this._partialBytes)),
                        this._partialBytes = s,
                        !0;
                    t.putBytes(this._partialOutput.getBytes(i - this._partialBytes)),
                    this._partialBytes = 0
                }
            }
            ,
            n.cfb.prototype.decrypt = function(e, t, r) {
                var i = e.length();
                if (0 === i)
                    return !0;
                if (this.cipher.encrypt(this._inBlock, this._outBlock),
                0 === this._partialBytes && i >= this.blockSize)
                    for (var n = 0; n < this._ints; ++n)
                        this._inBlock[n] = e.getInt32(),
                        t.putInt32(this._inBlock[n] ^ this._outBlock[n]);
                else {
                    var s = (this.blockSize - i) % this.blockSize;
                    s > 0 && (s = this.blockSize - s),
                    this._partialOutput.clear();
                    for (n = 0; n < this._ints; ++n)
                        this._partialBlock[n] = e.getInt32(),
                        this._partialOutput.putInt32(this._partialBlock[n] ^ this._outBlock[n]);
                    if (s > 0)
                        e.read -= this.blockSize;
                    else
                        for (n = 0; n < this._ints; ++n)
                            this._inBlock[n] = this._partialBlock[n];
                    if (this._partialBytes > 0 && this._partialOutput.getBytes(this._partialBytes),
                    s > 0 && !r)
                        return t.putBytes(this._partialOutput.getBytes(s - this._partialBytes)),
                        this._partialBytes = s,
                        !0;
                    t.putBytes(this._partialOutput.getBytes(i - this._partialBytes)),
                    this._partialBytes = 0
                }
            }
            ,
            n.ofb = function(e) {
                e = e || {},
                this.name = "OFB",
                this.cipher = e.cipher,
                this.blockSize = e.blockSize || 16,
                this._ints = this.blockSize / 4,
                this._inBlock = null,
                this._outBlock = new Array(this._ints),
                this._partialOutput = i.util.createBuffer(),
                this._partialBytes = 0
            }
            ,
            n.ofb.prototype.start = function(e) {
                if (!("iv"in e))
                    throw new Error("Invalid IV parameter.");
                this._iv = s(e.iv, this.blockSize),
                this._inBlock = this._iv.slice(0),
                this._partialBytes = 0
            }
            ,
            n.ofb.prototype.encrypt = function(e, t, r) {
                var i = e.length();
                if (0 === e.length())
                    return !0;
                if (this.cipher.encrypt(this._inBlock, this._outBlock),
                0 === this._partialBytes && i >= this.blockSize)
                    for (var n = 0; n < this._ints; ++n)
                        t.putInt32(e.getInt32() ^ this._outBlock[n]),
                        this._inBlock[n] = this._outBlock[n];
                else {
                    var s = (this.blockSize - i) % this.blockSize;
                    s > 0 && (s = this.blockSize - s),
                    this._partialOutput.clear();
                    for (n = 0; n < this._ints; ++n)
                        this._partialOutput.putInt32(e.getInt32() ^ this._outBlock[n]);
                    if (s > 0)
                        e.read -= this.blockSize;
                    else
                        for (n = 0; n < this._ints; ++n)
                            this._inBlock[n] = this._outBlock[n];
                    if (this._partialBytes > 0 && this._partialOutput.getBytes(this._partialBytes),
                    s > 0 && !r)
                        return t.putBytes(this._partialOutput.getBytes(s - this._partialBytes)),
                        this._partialBytes = s,
                        !0;
                    t.putBytes(this._partialOutput.getBytes(i - this._partialBytes)),
                    this._partialBytes = 0
                }
            }
            ,
            n.ofb.prototype.decrypt = n.ofb.prototype.encrypt,
            n.ctr = function(e) {
                e = e || {},
                this.name = "CTR",
                this.cipher = e.cipher,
                this.blockSize = e.blockSize || 16,
                this._ints = this.blockSize / 4,
                this._inBlock = null,
                this._outBlock = new Array(this._ints),
                this._partialOutput = i.util.createBuffer(),
                this._partialBytes = 0
            }
            ,
            n.ctr.prototype.start = function(e) {
                if (!("iv"in e))
                    throw new Error("Invalid IV parameter.");
                this._iv = s(e.iv, this.blockSize),
                this._inBlock = this._iv.slice(0),
                this._partialBytes = 0
            }
            ,
            n.ctr.prototype.encrypt = function(e, t, r) {
                var i = e.length();
                if (0 === i)
                    return !0;
                if (this.cipher.encrypt(this._inBlock, this._outBlock),
                0 === this._partialBytes && i >= this.blockSize)
                    for (var n = 0; n < this._ints; ++n)
                        t.putInt32(e.getInt32() ^ this._outBlock[n]);
                else {
                    var s = (this.blockSize - i) % this.blockSize;
                    s > 0 && (s = this.blockSize - s),
                    this._partialOutput.clear();
                    for (n = 0; n < this._ints; ++n)
                        this._partialOutput.putInt32(e.getInt32() ^ this._outBlock[n]);
                    if (s > 0 && (e.read -= this.blockSize),
                    this._partialBytes > 0 && this._partialOutput.getBytes(this._partialBytes),
                    s > 0 && !r)
                        return t.putBytes(this._partialOutput.getBytes(s - this._partialBytes)),
                        this._partialBytes = s,
                        !0;
                    t.putBytes(this._partialOutput.getBytes(i - this._partialBytes)),
                    this._partialBytes = 0
                }
                o(this._inBlock)
            }
            ,
            n.ctr.prototype.decrypt = n.ctr.prototype.encrypt,
            n.gcm = function(e) {
                e = e || {},
                this.name = "GCM",
                this.cipher = e.cipher,
                this.blockSize = e.blockSize || 16,
                this._ints = this.blockSize / 4,
                this._inBlock = new Array(this._ints),
                this._outBlock = new Array(this._ints),
                this._partialOutput = i.util.createBuffer(),
                this._partialBytes = 0,
                this._R = 3774873600
            }
            ,
            n.gcm.prototype.start = function(e) {
                if (!("iv"in e))
                    throw new Error("Invalid IV parameter.");
                var t, r = i.util.createBuffer(e.iv);
                if (this._cipherLength = 0,
                t = "additionalData"in e ? i.util.createBuffer(e.additionalData) : i.util.createBuffer(),
                this._tagLength = "tagLength"in e ? e.tagLength : 128,
                this._tag = null,
                e.decrypt && (this._tag = i.util.createBuffer(e.tag).getBytes(),
                this._tag.length !== this._tagLength / 8))
                    throw new Error("Authentication tag does not match tag length.");
                this._hashBlock = new Array(this._ints),
                this.tag = null,
                this._hashSubkey = new Array(this._ints),
                this.cipher.encrypt([0, 0, 0, 0], this._hashSubkey),
                this.componentBits = 4,
                this._m = this.generateHashTable(this._hashSubkey, this.componentBits);
                var n = r.length();
                if (12 === n)
                    this._j0 = [r.getInt32(), r.getInt32(), r.getInt32(), 1];
                else {
                    for (this._j0 = [0, 0, 0, 0]; r.length() > 0; )
                        this._j0 = this.ghash(this._hashSubkey, this._j0, [r.getInt32(), r.getInt32(), r.getInt32(), r.getInt32()]);
                    this._j0 = this.ghash(this._hashSubkey, this._j0, [0, 0].concat(a(8 * n)))
                }
                this._inBlock = this._j0.slice(0),
                o(this._inBlock),
                this._partialBytes = 0,
                t = i.util.createBuffer(t),
                this._aDataLength = a(8 * t.length());
                var s = t.length() % this.blockSize;
                for (s && t.fillWithByte(0, this.blockSize - s),
                this._s = [0, 0, 0, 0]; t.length() > 0; )
                    this._s = this.ghash(this._hashSubkey, this._s, [t.getInt32(), t.getInt32(), t.getInt32(), t.getInt32()])
            }
            ,
            n.gcm.prototype.encrypt = function(e, t, r) {
                var i = e.length();
                if (0 === i)
                    return !0;
                if (this.cipher.encrypt(this._inBlock, this._outBlock),
                0 === this._partialBytes && i >= this.blockSize) {
                    for (var n = 0; n < this._ints; ++n)
                        t.putInt32(this._outBlock[n] ^= e.getInt32());
                    this._cipherLength += this.blockSize
                } else {
                    var s = (this.blockSize - i) % this.blockSize;
                    s > 0 && (s = this.blockSize - s),
                    this._partialOutput.clear();
                    for (n = 0; n < this._ints; ++n)
                        this._partialOutput.putInt32(e.getInt32() ^ this._outBlock[n]);
                    if (s <= 0 || r) {
                        if (r) {
                            var a = i % this.blockSize;
                            this._cipherLength += a,
                            this._partialOutput.truncate(this.blockSize - a)
                        } else
                            this._cipherLength += this.blockSize;
                        for (n = 0; n < this._ints; ++n)
                            this._outBlock[n] = this._partialOutput.getInt32();
                        this._partialOutput.read -= this.blockSize
                    }
                    if (this._partialBytes > 0 && this._partialOutput.getBytes(this._partialBytes),
                    s > 0 && !r)
                        return e.read -= this.blockSize,
                        t.putBytes(this._partialOutput.getBytes(s - this._partialBytes)),
                        this._partialBytes = s,
                        !0;
                    t.putBytes(this._partialOutput.getBytes(i - this._partialBytes)),
                    this._partialBytes = 0
                }
                this._s = this.ghash(this._hashSubkey, this._s, this._outBlock),
                o(this._inBlock)
            }
            ,
            n.gcm.prototype.decrypt = function(e, t, r) {
                var i = e.length();
                if (i < this.blockSize && !(r && i > 0))
                    return !0;
                this.cipher.encrypt(this._inBlock, this._outBlock),
                o(this._inBlock),
                this._hashBlock[0] = e.getInt32(),
                this._hashBlock[1] = e.getInt32(),
                this._hashBlock[2] = e.getInt32(),
                this._hashBlock[3] = e.getInt32(),
                this._s = this.ghash(this._hashSubkey, this._s, this._hashBlock);
                for (var n = 0; n < this._ints; ++n)
                    t.putInt32(this._outBlock[n] ^ this._hashBlock[n]);
                i < this.blockSize ? this._cipherLength += i % this.blockSize : this._cipherLength += this.blockSize
            }
            ,
            n.gcm.prototype.afterFinish = function(e, t) {
                var r = !0;
                t.decrypt && t.overflow && e.truncate(this.blockSize - t.overflow),
                this.tag = i.util.createBuffer();
                var n = this._aDataLength.concat(a(8 * this._cipherLength));
                this._s = this.ghash(this._hashSubkey, this._s, n);
                var s = [];
                this.cipher.encrypt(this._j0, s);
                for (var o = 0; o < this._ints; ++o)
                    this.tag.putInt32(this._s[o] ^ s[o]);
                return this.tag.truncate(this.tag.length() % (this._tagLength / 8)),
                t.decrypt && this.tag.bytes() !== this._tag && (r = !1),
                r
            }
            ,
            n.gcm.prototype.multiply = function(e, t) {
                for (var r = [0, 0, 0, 0], i = t.slice(0), n = 0; n < 128; ++n) {
                    e[n / 32 | 0] & 1 << 31 - n % 32 && (r[0] ^= i[0],
                    r[1] ^= i[1],
                    r[2] ^= i[2],
                    r[3] ^= i[3]),
                    this.pow(i, i)
                }
                return r
            }
            ,
            n.gcm.prototype.pow = function(e, t) {
                for (var r = 1 & e[3], i = 3; i > 0; --i)
                    t[i] = e[i] >>> 1 | (1 & e[i - 1]) << 31;
                t[0] = e[0] >>> 1,
                r && (t[0] ^= this._R)
            }
            ,
            n.gcm.prototype.tableMultiply = function(e) {
                for (var t = [0, 0, 0, 0], r = 0; r < 32; ++r) {
                    var i = e[r / 8 | 0] >>> 4 * (7 - r % 8) & 15
                      , n = this._m[r][i];
                    t[0] ^= n[0],
                    t[1] ^= n[1],
                    t[2] ^= n[2],
                    t[3] ^= n[3]
                }
                return t
            }
            ,
            n.gcm.prototype.ghash = function(e, t, r) {
                return t[0] ^= r[0],
                t[1] ^= r[1],
                t[2] ^= r[2],
                t[3] ^= r[3],
                this.tableMultiply(t)
            }
            ,
            n.gcm.prototype.generateHashTable = function(e, t) {
                for (var r = 8 / t, i = 4 * r, n = 16 * r, s = new Array(n), o = 0; o < n; ++o) {
                    var a = [0, 0, 0, 0]
                      , c = (i - 1 - o % i) * t;
                    a[o / i | 0] = 1 << t - 1 << c,
                    s[o] = this.generateSubHashTable(this.multiply(a, e), t)
                }
                return s
            }
            ,
            n.gcm.prototype.generateSubHashTable = function(e, t) {
                var r = 1 << t
                  , i = r >>> 1
                  , n = new Array(r);
                n[i] = e.slice(0);
                for (var s = i >>> 1; s > 0; )
                    this.pow(n[2 * s], n[s] = []),
                    s >>= 1;
                for (s = 2; s < i; ) {
                    for (var o = 1; o < s; ++o) {
                        var a = n[s]
                          , c = n[o];
                        n[s + o] = [a[0] ^ c[0], a[1] ^ c[1], a[2] ^ c[2], a[3] ^ c[3]]
                    }
                    s *= 2
                }
                for (n[0] = [0, 0, 0, 0],
                s = i + 1; s < r; ++s) {
                    var u = n[s ^ i];
                    n[s] = [e[0] ^ u[0], e[1] ^ u[1], e[2] ^ u[2], e[3] ^ u[3]]
                }
                return n
            }
        }
        , {
            "./forge": 336,
            "./util": 358
        }],
        334: [function(e, t, r) {
            var i = e("./forge");
            function n(e, t) {
                i.cipher.registerAlgorithm(e, (function() {
                    return new i.des.Algorithm(e,t)
                }
                ))
            }
            e("./cipher"),
            e("./cipherModes"),
            e("./util"),
            t.exports = i.des = i.des || {},
            i.des.startEncrypting = function(e, t, r, i) {
                var n = p({
                    key: e,
                    output: r,
                    decrypt: !1,
                    mode: i || (null === t ? "ECB" : "CBC")
                });
                return n.start(t),
                n
            }
            ,
            i.des.createEncryptionCipher = function(e, t) {
                return p({
                    key: e,
                    output: null,
                    decrypt: !1,
                    mode: t
                })
            }
            ,
            i.des.startDecrypting = function(e, t, r, i) {
                var n = p({
                    key: e,
                    output: r,
                    decrypt: !0,
                    mode: i || (null === t ? "ECB" : "CBC")
                });
                return n.start(t),
                n
            }
            ,
            i.des.createDecryptionCipher = function(e, t) {
                return p({
                    key: e,
                    output: null,
                    decrypt: !0,
                    mode: t
                })
            }
            ,
            i.des.Algorithm = function(e, t) {
                var r = this;
                r.name = e,
                r.mode = new t({
                    blockSize: 8,
                    cipher: {
                        encrypt: function(e, t) {
                            return d(r._keys, e, t, !1)
                        },
                        decrypt: function(e, t) {
                            return d(r._keys, e, t, !0)
                        }
                    }
                }),
                r._init = !1
            }
            ,
            i.des.Algorithm.prototype.initialize = function(e) {
                if (!this._init) {
                    var t = i.util.createBuffer(e.key);
                    if (0 === this.name.indexOf("3DES") && 24 !== t.length())
                        throw new Error("Invalid Triple-DES key size: " + 8 * t.length());
                    this._keys = function(e) {
                        for (var t, r = [0, 4, 536870912, 536870916, 65536, 65540, 536936448, 536936452, 512, 516, 536871424, 536871428, 66048, 66052, 536936960, 536936964], i = [0, 1, 1048576, 1048577, 67108864, 67108865, 68157440, 68157441, 256, 257, 1048832, 1048833, 67109120, 67109121, 68157696, 68157697], n = [0, 8, 2048, 2056, 16777216, 16777224, 16779264, 16779272, 0, 8, 2048, 2056, 16777216, 16777224, 16779264, 16779272], s = [0, 2097152, 134217728, 136314880, 8192, 2105344, 134225920, 136323072, 131072, 2228224, 134348800, 136445952, 139264, 2236416, 134356992, 136454144], o = [0, 262144, 16, 262160, 0, 262144, 16, 262160, 4096, 266240, 4112, 266256, 4096, 266240, 4112, 266256], a = [0, 1024, 32, 1056, 0, 1024, 32, 1056, 33554432, 33555456, 33554464, 33555488, 33554432, 33555456, 33554464, 33555488], c = [0, 268435456, 524288, 268959744, 2, 268435458, 524290, 268959746, 0, 268435456, 524288, 268959744, 2, 268435458, 524290, 268959746], u = [0, 65536, 2048, 67584, 536870912, 536936448, 536872960, 536938496, 131072, 196608, 133120, 198656, 537001984, 537067520, 537004032, 537069568], f = [0, 262144, 0, 262144, 2, 262146, 2, 262146, 33554432, 33816576, 33554432, 33816576, 33554434, 33816578, 33554434, 33816578], h = [0, 268435456, 8, 268435464, 0, 268435456, 8, 268435464, 1024, 268436480, 1032, 268436488, 1024, 268436480, 1032, 268436488], l = [0, 32, 0, 32, 1048576, 1048608, 1048576, 1048608, 8192, 8224, 8192, 8224, 1056768, 1056800, 1056768, 1056800], d = [0, 16777216, 512, 16777728, 2097152, 18874368, 2097664, 18874880, 67108864, 83886080, 67109376, 83886592, 69206016, 85983232, 69206528, 85983744], p = [0, 4096, 134217728, 134221824, 524288, 528384, 134742016, 134746112, 16, 4112, 134217744, 134221840, 524304, 528400, 134742032, 134746128], b = [0, 4, 256, 260, 0, 4, 256, 260, 1, 5, 257, 261, 1, 5, 257, 261], g = e.length() > 8 ? 3 : 1, m = [], y = [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0], v = 0, w = 0; w < g; w++) {
                            var E = e.getInt32()
                              , _ = e.getInt32();
                            E ^= (t = 252645135 & (E >>> 4 ^ _)) << 4,
                            E ^= t = 65535 & ((_ ^= t) >>> -16 ^ E),
                            E ^= (t = 858993459 & (E >>> 2 ^ (_ ^= t << -16))) << 2,
                            E ^= t = 65535 & ((_ ^= t) >>> -16 ^ E),
                            E ^= (t = 1431655765 & (E >>> 1 ^ (_ ^= t << -16))) << 1,
                            E ^= t = 16711935 & ((_ ^= t) >>> 8 ^ E),
                            t = (E ^= (t = 1431655765 & (E >>> 1 ^ (_ ^= t << 8))) << 1) << 8 | (_ ^= t) >>> 20 & 240,
                            E = _ << 24 | _ << 8 & 16711680 | _ >>> 8 & 65280 | _ >>> 24 & 240,
                            _ = t;
                            for (var S = 0; S < y.length; ++S) {
                                y[S] ? (E = E << 2 | E >>> 26,
                                _ = _ << 2 | _ >>> 26) : (E = E << 1 | E >>> 27,
                                _ = _ << 1 | _ >>> 27);
                                var k = r[(E &= -15) >>> 28] | i[E >>> 24 & 15] | n[E >>> 20 & 15] | s[E >>> 16 & 15] | o[E >>> 12 & 15] | a[E >>> 8 & 15] | c[E >>> 4 & 15]
                                  , A = u[(_ &= -15) >>> 28] | f[_ >>> 24 & 15] | h[_ >>> 20 & 15] | l[_ >>> 16 & 15] | d[_ >>> 12 & 15] | p[_ >>> 8 & 15] | b[_ >>> 4 & 15];
                                t = 65535 & (A >>> 16 ^ k),
                                m[v++] = k ^ t,
                                m[v++] = A ^ t << 16
                            }
                        }
                        return m
                    }(t),
                    this._init = !0
                }
            }
            ,
            n("DES-ECB", i.cipher.modes.ecb),
            n("DES-CBC", i.cipher.modes.cbc),
            n("DES-CFB", i.cipher.modes.cfb),
            n("DES-OFB", i.cipher.modes.ofb),
            n("DES-CTR", i.cipher.modes.ctr),
            n("3DES-ECB", i.cipher.modes.ecb),
            n("3DES-CBC", i.cipher.modes.cbc),
            n("3DES-CFB", i.cipher.modes.cfb),
            n("3DES-OFB", i.cipher.modes.ofb),
            n("3DES-CTR", i.cipher.modes.ctr);
            var s = [16843776, 0, 65536, 16843780, 16842756, 66564, 4, 65536, 1024, 16843776, 16843780, 1024, 16778244, 16842756, 16777216, 4, 1028, 16778240, 16778240, 66560, 66560, 16842752, 16842752, 16778244, 65540, 16777220, 16777220, 65540, 0, 1028, 66564, 16777216, 65536, 16843780, 4, 16842752, 16843776, 16777216, 16777216, 1024, 16842756, 65536, 66560, 16777220, 1024, 4, 16778244, 66564, 16843780, 65540, 16842752, 16778244, 16777220, 1028, 66564, 16843776, 1028, 16778240, 16778240, 0, 65540, 66560, 0, 16842756]
              , o = [-2146402272, -2147450880, 32768, 1081376, 1048576, 32, -2146435040, -2147450848, -2147483616, -2146402272, -2146402304, -2147483648, -2147450880, 1048576, 32, -2146435040, 1081344, 1048608, -2147450848, 0, -2147483648, 32768, 1081376, -2146435072, 1048608, -2147483616, 0, 1081344, 32800, -2146402304, -2146435072, 32800, 0, 1081376, -2146435040, 1048576, -2147450848, -2146435072, -2146402304, 32768, -2146435072, -2147450880, 32, -2146402272, 1081376, 32, 32768, -2147483648, 32800, -2146402304, 1048576, -2147483616, 1048608, -2147450848, -2147483616, 1048608, 1081344, 0, -2147450880, 32800, -2147483648, -2146435040, -2146402272, 1081344]
              , a = [520, 134349312, 0, 134348808, 134218240, 0, 131592, 134218240, 131080, 134217736, 134217736, 131072, 134349320, 131080, 134348800, 520, 134217728, 8, 134349312, 512, 131584, 134348800, 134348808, 131592, 134218248, 131584, 131072, 134218248, 8, 134349320, 512, 134217728, 134349312, 134217728, 131080, 520, 131072, 134349312, 134218240, 0, 512, 131080, 134349320, 134218240, 134217736, 512, 0, 134348808, 134218248, 131072, 134217728, 134349320, 8, 131592, 131584, 134217736, 134348800, 134218248, 520, 134348800, 131592, 8, 134348808, 131584]
              , c = [8396801, 8321, 8321, 128, 8396928, 8388737, 8388609, 8193, 0, 8396800, 8396800, 8396929, 129, 0, 8388736, 8388609, 1, 8192, 8388608, 8396801, 128, 8388608, 8193, 8320, 8388737, 1, 8320, 8388736, 8192, 8396928, 8396929, 129, 8388736, 8388609, 8396800, 8396929, 129, 0, 0, 8396800, 8320, 8388736, 8388737, 1, 8396801, 8321, 8321, 128, 8396929, 129, 1, 8192, 8388609, 8193, 8396928, 8388737, 8193, 8320, 8388608, 8396801, 128, 8388608, 8192, 8396928]
              , u = [256, 34078976, 34078720, 1107296512, 524288, 256, 1073741824, 34078720, 1074266368, 524288, 33554688, 1074266368, 1107296512, 1107820544, 524544, 1073741824, 33554432, 1074266112, 1074266112, 0, 1073742080, 1107820800, 1107820800, 33554688, 1107820544, 1073742080, 0, 1107296256, 34078976, 33554432, 1107296256, 524544, 524288, 1107296512, 256, 33554432, 1073741824, 34078720, 1107296512, 1074266368, 33554688, 1073741824, 1107820544, 34078976, 1074266368, 256, 33554432, 1107820544, 1107820800, 524544, 1107296256, 1107820800, 34078720, 0, 1074266112, 1107296256, 524544, 33554688, 1073742080, 524288, 0, 1074266112, 34078976, 1073742080]
              , f = [536870928, 541065216, 16384, 541081616, 541065216, 16, 541081616, 4194304, 536887296, 4210704, 4194304, 536870928, 4194320, 536887296, 536870912, 16400, 0, 4194320, 536887312, 16384, 4210688, 536887312, 16, 541065232, 541065232, 0, 4210704, 541081600, 16400, 4210688, 541081600, 536870912, 536887296, 16, 541065232, 4210688, 541081616, 4194304, 16400, 536870928, 4194304, 536887296, 536870912, 16400, 536870928, 541081616, 4210688, 541065216, 4210704, 541081600, 0, 541065232, 16, 16384, 541065216, 4210704, 16384, 4194320, 536887312, 0, 541081600, 536870912, 4194320, 536887312]
              , h = [2097152, 69206018, 67110914, 0, 2048, 67110914, 2099202, 69208064, 69208066, 2097152, 0, 67108866, 2, 67108864, 69206018, 2050, 67110912, 2099202, 2097154, 67110912, 67108866, 69206016, 69208064, 2097154, 69206016, 2048, 2050, 69208066, 2099200, 2, 67108864, 2099200, 67108864, 2099200, 2097152, 67110914, 67110914, 69206018, 69206018, 2, 2097154, 67108864, 67110912, 2097152, 69208064, 2050, 2099202, 69208064, 2050, 67108866, 69208066, 69206016, 2099200, 0, 2, 69208066, 0, 2099202, 69206016, 2048, 67108866, 67110912, 2048, 2097154]
              , l = [268439616, 4096, 262144, 268701760, 268435456, 268439616, 64, 268435456, 262208, 268697600, 268701760, 266240, 268701696, 266304, 4096, 64, 268697600, 268435520, 268439552, 4160, 266240, 262208, 268697664, 268701696, 4160, 0, 0, 268697664, 268435520, 268439552, 266304, 262144, 266304, 262144, 268701696, 4096, 64, 268697664, 4096, 266304, 268439552, 64, 268435520, 268697600, 268697664, 268435456, 262144, 268439616, 0, 268701760, 262208, 268435520, 268697600, 268439552, 268439616, 0, 268701760, 266240, 266240, 4160, 4160, 262208, 268435456, 268701696];
            function d(e, t, r, i) {
                var n, d, p = 32 === e.length ? 3 : 9;
                n = 3 === p ? i ? [30, -2, -2] : [0, 32, 2] : i ? [94, 62, -2, 32, 64, 2, 30, -2, -2] : [0, 32, 2, 62, 30, -2, 64, 96, 2];
                var b = t[0]
                  , g = t[1];
                b ^= (d = 252645135 & (b >>> 4 ^ g)) << 4,
                b ^= (d = 65535 & (b >>> 16 ^ (g ^= d))) << 16,
                b ^= d = 858993459 & ((g ^= d) >>> 2 ^ b),
                b ^= d = 16711935 & ((g ^= d << 2) >>> 8 ^ b),
                b = (b ^= (d = 1431655765 & (b >>> 1 ^ (g ^= d << 8))) << 1) << 1 | b >>> 31,
                g = (g ^= d) << 1 | g >>> 31;
                for (var m = 0; m < p; m += 3) {
                    for (var y = n[m + 1], v = n[m + 2], w = n[m]; w != y; w += v) {
                        var E = g ^ e[w]
                          , _ = (g >>> 4 | g << 28) ^ e[w + 1];
                        d = b,
                        b = g,
                        g = d ^ (o[E >>> 24 & 63] | c[E >>> 16 & 63] | f[E >>> 8 & 63] | l[63 & E] | s[_ >>> 24 & 63] | a[_ >>> 16 & 63] | u[_ >>> 8 & 63] | h[63 & _])
                    }
                    d = b,
                    b = g,
                    g = d
                }
                g = g >>> 1 | g << 31,
                g ^= d = 1431655765 & ((b = b >>> 1 | b << 31) >>> 1 ^ g),
                g ^= (d = 16711935 & (g >>> 8 ^ (b ^= d << 1))) << 8,
                g ^= (d = 858993459 & (g >>> 2 ^ (b ^= d))) << 2,
                g ^= d = 65535 & ((b ^= d) >>> 16 ^ g),
                g ^= d = 252645135 & ((b ^= d << 16) >>> 4 ^ g),
                b ^= d << 4,
                r[0] = b,
                r[1] = g
            }
            function p(e) {
                var t, r = "DES-" + ((e = e || {}).mode || "CBC").toUpperCase(), n = (t = e.decrypt ? i.cipher.createDecipher(r, e.key) : i.cipher.createCipher(r, e.key)).start;
                return t.start = function(e, r) {
                    var s = null;
                    r instanceof i.util.ByteBuffer && (s = r,
                    r = {}),
                    (r = r || {}).output = s,
                    r.iv = e,
                    n.call(t, r)
                }
                ,
                t
            }
        }
        , {
            "./cipher": 332,
            "./cipherModes": 333,
            "./forge": 336,
            "./util": 358
        }],
        335: [function(e, t, r) {
            (function(r) {
                var i = e("./forge");
                e("./jsbn"),
                e("./random"),
                e("./sha512"),
                e("./util");
                var n = e("./asn1-validator")
                  , s = n.publicKeyValidator
                  , o = n.privateKeyValidator;
                if (void 0 === a)
                    var a = i.jsbn.BigInteger;
                var c = i.util.ByteBuffer
                  , u = void 0 === r ? Uint8Array : r;
                i.pki = i.pki || {},
                t.exports = i.pki.ed25519 = i.ed25519 = i.ed25519 || {};
                var f = i.ed25519;
                function h(e) {
                    var t = e.message;
                    if (t instanceof Uint8Array || t instanceof u)
                        return t;
                    var i = e.encoding;
                    if (void 0 === t) {
                        if (!e.md)
                            throw new TypeError('"options.message" or "options.md" not specified.');
                        t = e.md.digest().getBytes(),
                        i = "binary"
                    }
                    if ("string" == typeof t && !i)
                        throw new TypeError('"options.encoding" must be "binary" or "utf8".');
                    if ("string" == typeof t) {
                        if (void 0 !== r)
                            return r.from(t, i);
                        t = new c(t,i)
                    } else if (!(t instanceof c))
                        throw new TypeError('"options.message" must be a node.js Buffer, a Uint8Array, a forge ByteBuffer, or a string with "options.encoding" specifying its encoding.');
                    for (var n = new u(t.length()), s = 0; s < n.length; ++s)
                        n[s] = t.at(s);
                    return n
                }
                f.constants = {},
                f.constants.PUBLIC_KEY_BYTE_LENGTH = 32,
                f.constants.PRIVATE_KEY_BYTE_LENGTH = 64,
                f.constants.SEED_BYTE_LENGTH = 32,
                f.constants.SIGN_BYTE_LENGTH = 64,
                f.constants.HASH_BYTE_LENGTH = 64,
                f.generateKeyPair = function(e) {
                    var t = (e = e || {}).seed;
                    if (void 0 === t)
                        t = i.random.getBytesSync(f.constants.SEED_BYTE_LENGTH);
                    else if ("string" == typeof t) {
                        if (t.length !== f.constants.SEED_BYTE_LENGTH)
                            throw new TypeError('"seed" must be ' + f.constants.SEED_BYTE_LENGTH + " bytes in length.")
                    } else if (!(t instanceof Uint8Array))
                        throw new TypeError('"seed" must be a node.js Buffer, Uint8Array, or a binary string.');
                    t = h({
                        message: t,
                        encoding: "binary"
                    });
                    for (var r = new u(f.constants.PUBLIC_KEY_BYTE_LENGTH), n = new u(f.constants.PRIVATE_KEY_BYTE_LENGTH), s = 0; s < 32; ++s)
                        n[s] = t[s];
                    return function(e, t) {
                        var r, i = [D(), D(), D(), D()], n = w(t, 32);
                        for (n[0] &= 248,
                        n[31] &= 127,
                        n[31] |= 64,
                        R(i, n),
                        A(e, i),
                        r = 0; r < 32; ++r)
                            t[r + 32] = e[r]
                    }(r, n),
                    {
                        publicKey: r,
                        privateKey: n
                    }
                }
                ,
                f.privateKeyFromAsn1 = function(e) {
                    var t = {}
                      , r = [];
                    if (!i.asn1.validate(e, o, t, r)) {
                        var n = new Error("Invalid Key.");
                        throw n.errors = r,
                        n
                    }
                    var s = i.asn1.derToOid(t.privateKeyOid)
                      , a = i.oids.EdDSA25519;
                    if (s !== a)
                        throw new Error('Invalid OID "' + s + '"; OID must be "' + a + '".');
                    var c = t.privateKey;
                    return {
                        privateKeyBytes: h({
                            message: i.asn1.fromDer(c).value,
                            encoding: "binary"
                        })
                    }
                }
                ,
                f.publicKeyFromAsn1 = function(e) {
                    var t = {}
                      , r = [];
                    if (!i.asn1.validate(e, s, t, r)) {
                        var n = new Error("Invalid Key.");
                        throw n.errors = r,
                        n
                    }
                    var o = i.asn1.derToOid(t.publicKeyOid)
                      , a = i.oids.EdDSA25519;
                    if (o !== a)
                        throw new Error('Invalid OID "' + o + '"; OID must be "' + a + '".');
                    var c = t.ed25519PublicKey;
                    if (c.length !== f.constants.PUBLIC_KEY_BYTE_LENGTH)
                        throw new Error("Key length is invalid.");
                    return h({
                        message: c,
                        encoding: "binary"
                    })
                }
                ,
                f.publicKeyFromPrivateKey = function(e) {
                    var t = h({
                        message: (e = e || {}).privateKey,
                        encoding: "binary"
                    });
                    if (t.length !== f.constants.PRIVATE_KEY_BYTE_LENGTH)
                        throw new TypeError('"options.privateKey" must have a byte length of ' + f.constants.PRIVATE_KEY_BYTE_LENGTH);
                    for (var r = new u(f.constants.PUBLIC_KEY_BYTE_LENGTH), i = 0; i < r.length; ++i)
                        r[i] = t[32 + i];
                    return r
                }
                ,
                f.sign = function(e) {
                    var t = h(e = e || {})
                      , r = h({
                        message: e.privateKey,
                        encoding: "binary"
                    });
                    if (r.length === f.constants.SEED_BYTE_LENGTH)
                        r = f.generateKeyPair({
                            seed: r
                        }).privateKey;
                    else if (r.length !== f.constants.PRIVATE_KEY_BYTE_LENGTH)
                        throw new TypeError('"options.privateKey" must have a byte length of ' + f.constants.SEED_BYTE_LENGTH + " or " + f.constants.PRIVATE_KEY_BYTE_LENGTH);
                    var i = new u(f.constants.SIGN_BYTE_LENGTH + t.length);
                    !function(e, t, r, i) {
                        var n, s, o = new Float64Array(64), a = [D(), D(), D(), D()], c = w(i, 32);
                        c[0] &= 248,
                        c[31] &= 127,
                        c[31] |= 64;
                        var u = r + 64;
                        for (n = 0; n < r; ++n)
                            e[64 + n] = t[n];
                        for (n = 0; n < 32; ++n)
                            e[32 + n] = c[32 + n];
                        var f = w(e.subarray(32), r + 32);
                        for (_(f),
                        R(a, f),
                        A(e, a),
                        n = 32; n < 64; ++n)
                            e[n] = i[n];
                        var h = w(e, r + 64);
                        for (_(h),
                        n = 32; n < 64; ++n)
                            o[n] = 0;
                        for (n = 0; n < 32; ++n)
                            o[n] = f[n];
                        for (n = 0; n < 32; ++n)
                            for (s = 0; s < 32; s++)
                                o[n + s] += h[n] * c[s];
                        E(e.subarray(32), o)
                    }(i, t, t.length, r);
                    for (var n = new u(f.constants.SIGN_BYTE_LENGTH), s = 0; s < n.length; ++s)
                        n[s] = i[s];
                    return n
                }
                ,
                f.verify = function(e) {
                    var t = h(e = e || {});
                    if (void 0 === e.signature)
                        throw new TypeError('"options.signature" must be a node.js Buffer, a Uint8Array, a forge ByteBuffer, or a binary string.');
                    var r = h({
                        message: e.signature,
                        encoding: "binary"
                    });
                    if (r.length !== f.constants.SIGN_BYTE_LENGTH)
                        throw new TypeError('"options.signature" must have a byte length of ' + f.constants.SIGN_BYTE_LENGTH);
                    var i = h({
                        message: e.publicKey,
                        encoding: "binary"
                    });
                    if (i.length !== f.constants.PUBLIC_KEY_BYTE_LENGTH)
                        throw new TypeError('"options.publicKey" must have a byte length of ' + f.constants.PUBLIC_KEY_BYTE_LENGTH);
                    var n, s = new u(f.constants.SIGN_BYTE_LENGTH + t.length), o = new u(f.constants.SIGN_BYTE_LENGTH + t.length);
                    for (n = 0; n < f.constants.SIGN_BYTE_LENGTH; ++n)
                        s[n] = r[n];
                    for (n = 0; n < t.length; ++n)
                        s[n + f.constants.SIGN_BYTE_LENGTH] = t[n];
                    return function(e, t, r, i) {
                        var n, s = new u(32), o = [D(), D(), D(), D()], a = [D(), D(), D(), D()];
                        if (-1,
                        r < 64)
                            return -1;
                        if (function(e, t) {
                            var r = D()
                              , i = D()
                              , n = D()
                              , s = D()
                              , o = D()
                              , a = D()
                              , c = D();
                            x(e[2], d),
                            function(e, t) {
                                var r;
                                for (r = 0; r < 16; ++r)
                                    e[r] = t[2 * r] + (t[2 * r + 1] << 8);
                                e[15] &= 32767
                            }(e[1], t),
                            j(n, e[1]),
                            U(s, n, p),
                            O(n, n, e[2]),
                            L(s, e[2], s),
                            j(o, s),
                            j(a, o),
                            U(c, a, o),
                            U(r, c, n),
                            U(r, r, s),
                            function(e, t) {
                                var r, i = D();
                                for (r = 0; r < 16; ++r)
                                    i[r] = t[r];
                                for (r = 250; r >= 0; --r)
                                    j(i, i),
                                    1 !== r && U(i, i, t);
                                for (r = 0; r < 16; ++r)
                                    e[r] = i[r]
                            }(r, r),
                            U(r, r, n),
                            U(r, r, s),
                            U(r, r, s),
                            U(e[0], r, s),
                            j(i, e[0]),
                            U(i, i, s),
                            I(i, n) && U(e[0], e[0], v);
                            if (j(i, e[0]),
                            U(i, i, s),
                            I(i, n))
                                return -1;
                            B(e[0]) === t[31] >> 7 && O(e[0], l, e[0]);
                            return U(e[3], e[0], e[1]),
                            0
                        }(a, i))
                            return -1;
                        for (n = 0; n < r; ++n)
                            e[n] = t[n];
                        for (n = 0; n < 32; ++n)
                            e[n + 32] = i[n];
                        var c = w(e, r);
                        if (_(c),
                        M(o, a, c),
                        R(a, t.subarray(32)),
                        S(o, a),
                        A(s, o),
                        r -= 64,
                        T(t, 0, s, 0)) {
                            for (n = 0; n < r; ++n)
                                e[n] = 0;
                            return -1
                        }
                        for (n = 0; n < r; ++n)
                            e[n] = t[n + 64];
                        return r
                    }(o, s, s.length, i) >= 0
                }
                ;
                var l = D()
                  , d = D([1])
                  , p = D([30883, 4953, 19914, 30187, 55467, 16705, 2637, 112, 59544, 30585, 16505, 36039, 65139, 11119, 27886, 20995])
                  , b = D([61785, 9906, 39828, 60374, 45398, 33411, 5274, 224, 53552, 61171, 33010, 6542, 64743, 22239, 55772, 9222])
                  , g = D([54554, 36645, 11616, 51542, 42930, 38181, 51040, 26924, 56412, 64982, 57905, 49316, 21502, 52590, 14035, 8553])
                  , m = D([26200, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214])
                  , y = new Float64Array([237, 211, 245, 92, 26, 99, 18, 88, 214, 156, 247, 162, 222, 249, 222, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16])
                  , v = D([41136, 18958, 6951, 50414, 58488, 44335, 6150, 12099, 55207, 15867, 153, 11085, 57099, 20417, 9344, 11139]);
                function w(e, t) {
                    var n = i.md.sha512.create()
                      , s = new c(e);
                    n.update(s.getBytes(t), "binary");
                    var o = n.digest().getBytes();
                    if (void 0 !== r)
                        return r.from(o, "binary");
                    for (var a = new u(f.constants.HASH_BYTE_LENGTH), h = 0; h < 64; ++h)
                        a[h] = o.charCodeAt(h);
                    return a
                }
                function E(e, t) {
                    var r, i, n, s;
                    for (i = 63; i >= 32; --i) {
                        for (r = 0,
                        n = i - 32,
                        s = i - 12; n < s; ++n)
                            t[n] += r - 16 * t[i] * y[n - (i - 32)],
                            r = t[n] + 128 >> 8,
                            t[n] -= 256 * r;
                        t[n] += r,
                        t[i] = 0
                    }
                    for (r = 0,
                    n = 0; n < 32; ++n)
                        t[n] += r - (t[31] >> 4) * y[n],
                        r = t[n] >> 8,
                        t[n] &= 255;
                    for (n = 0; n < 32; ++n)
                        t[n] -= r * y[n];
                    for (i = 0; i < 32; ++i)
                        t[i + 1] += t[i] >> 8,
                        e[i] = 255 & t[i]
                }
                function _(e) {
                    for (var t = new Float64Array(64), r = 0; r < 64; ++r)
                        t[r] = e[r],
                        e[r] = 0;
                    E(e, t)
                }
                function S(e, t) {
                    var r = D()
                      , i = D()
                      , n = D()
                      , s = D()
                      , o = D()
                      , a = D()
                      , c = D()
                      , u = D()
                      , f = D();
                    O(r, e[1], e[0]),
                    O(f, t[1], t[0]),
                    U(r, r, f),
                    L(i, e[0], e[1]),
                    L(f, t[0], t[1]),
                    U(i, i, f),
                    U(n, e[3], t[3]),
                    U(n, n, b),
                    U(s, e[2], t[2]),
                    L(s, s, s),
                    O(o, i, r),
                    O(a, s, n),
                    L(c, s, n),
                    L(u, i, r),
                    U(e[0], o, a),
                    U(e[1], u, c),
                    U(e[2], c, a),
                    U(e[3], o, u)
                }
                function k(e, t, r) {
                    for (var i = 0; i < 4; ++i)
                        P(e[i], t[i], r)
                }
                function A(e, t) {
                    var r = D()
                      , i = D()
                      , n = D();
                    !function(e, t) {
                        var r, i = D();
                        for (r = 0; r < 16; ++r)
                            i[r] = t[r];
                        for (r = 253; r >= 0; --r)
                            j(i, i),
                            2 !== r && 4 !== r && U(i, i, t);
                        for (r = 0; r < 16; ++r)
                            e[r] = i[r]
                    }(n, t[2]),
                    U(r, t[0], n),
                    U(i, t[1], n),
                    C(e, i),
                    e[31] ^= B(r) << 7
                }
                function C(e, t) {
                    var r, i, n, s = D(), o = D();
                    for (r = 0; r < 16; ++r)
                        o[r] = t[r];
                    for (N(o),
                    N(o),
                    N(o),
                    i = 0; i < 2; ++i) {
                        for (s[0] = o[0] - 65517,
                        r = 1; r < 15; ++r)
                            s[r] = o[r] - 65535 - (s[r - 1] >> 16 & 1),
                            s[r - 1] &= 65535;
                        s[15] = o[15] - 32767 - (s[14] >> 16 & 1),
                        n = s[15] >> 16 & 1,
                        s[14] &= 65535,
                        P(o, s, 1 - n)
                    }
                    for (r = 0; r < 16; r++)
                        e[2 * r] = 255 & o[r],
                        e[2 * r + 1] = o[r] >> 8
                }
                function I(e, t) {
                    var r = new u(32)
                      , i = new u(32);
                    return C(r, e),
                    C(i, t),
                    T(r, 0, i, 0)
                }
                function T(e, t, r, i) {
                    return function(e, t, r, i, n) {
                        var s, o = 0;
                        for (s = 0; s < n; ++s)
                            o |= e[t + s] ^ r[i + s];
                        return (1 & o - 1 >>> 8) - 1
                    }(e, t, r, i, 32)
                }
                function B(e) {
                    var t = new u(32);
                    return C(t, e),
                    1 & t[0]
                }
                function M(e, t, r) {
                    var i, n;
                    for (x(e[0], l),
                    x(e[1], d),
                    x(e[2], d),
                    x(e[3], l),
                    n = 255; n >= 0; --n)
                        k(e, t, i = r[n / 8 | 0] >> (7 & n) & 1),
                        S(t, e),
                        S(e, e),
                        k(e, t, i)
                }
                function R(e, t) {
                    var r = [D(), D(), D(), D()];
                    x(r[0], g),
                    x(r[1], m),
                    x(r[2], d),
                    U(r[3], g, m),
                    M(e, r, t)
                }
                function x(e, t) {
                    var r;
                    for (r = 0; r < 16; r++)
                        e[r] = 0 | t[r]
                }
                function N(e) {
                    var t, r, i = 1;
                    for (t = 0; t < 16; ++t)
                        r = e[t] + i + 65535,
                        i = Math.floor(r / 65536),
                        e[t] = r - 65536 * i;
                    e[0] += i - 1 + 37 * (i - 1)
                }
                function P(e, t, r) {
                    for (var i, n = ~(r - 1), s = 0; s < 16; ++s)
                        i = n & (e[s] ^ t[s]),
                        e[s] ^= i,
                        t[s] ^= i
                }
                function D(e) {
                    var t, r = new Float64Array(16);
                    if (e)
                        for (t = 0; t < e.length; ++t)
                            r[t] = e[t];
                    return r
                }
                function L(e, t, r) {
                    for (var i = 0; i < 16; ++i)
                        e[i] = t[i] + r[i]
                }
                function O(e, t, r) {
                    for (var i = 0; i < 16; ++i)
                        e[i] = t[i] - r[i]
                }
                function j(e, t) {
                    U(e, t, t)
                }
                function U(e, t, r) {
                    var i, n, s = 0, o = 0, a = 0, c = 0, u = 0, f = 0, h = 0, l = 0, d = 0, p = 0, b = 0, g = 0, m = 0, y = 0, v = 0, w = 0, E = 0, _ = 0, S = 0, k = 0, A = 0, C = 0, I = 0, T = 0, B = 0, M = 0, R = 0, x = 0, N = 0, P = 0, D = 0, L = r[0], O = r[1], j = r[2], U = r[3], K = r[4], q = r[5], V = r[6], F = r[7], z = r[8], H = r[9], G = r[10], $ = r[11], Y = r[12], W = r[13], Q = r[14], X = r[15];
                    s += (i = t[0]) * L,
                    o += i * O,
                    a += i * j,
                    c += i * U,
                    u += i * K,
                    f += i * q,
                    h += i * V,
                    l += i * F,
                    d += i * z,
                    p += i * H,
                    b += i * G,
                    g += i * $,
                    m += i * Y,
                    y += i * W,
                    v += i * Q,
                    w += i * X,
                    o += (i = t[1]) * L,
                    a += i * O,
                    c += i * j,
                    u += i * U,
                    f += i * K,
                    h += i * q,
                    l += i * V,
                    d += i * F,
                    p += i * z,
                    b += i * H,
                    g += i * G,
                    m += i * $,
                    y += i * Y,
                    v += i * W,
                    w += i * Q,
                    E += i * X,
                    a += (i = t[2]) * L,
                    c += i * O,
                    u += i * j,
                    f += i * U,
                    h += i * K,
                    l += i * q,
                    d += i * V,
                    p += i * F,
                    b += i * z,
                    g += i * H,
                    m += i * G,
                    y += i * $,
                    v += i * Y,
                    w += i * W,
                    E += i * Q,
                    _ += i * X,
                    c += (i = t[3]) * L,
                    u += i * O,
                    f += i * j,
                    h += i * U,
                    l += i * K,
                    d += i * q,
                    p += i * V,
                    b += i * F,
                    g += i * z,
                    m += i * H,
                    y += i * G,
                    v += i * $,
                    w += i * Y,
                    E += i * W,
                    _ += i * Q,
                    S += i * X,
                    u += (i = t[4]) * L,
                    f += i * O,
                    h += i * j,
                    l += i * U,
                    d += i * K,
                    p += i * q,
                    b += i * V,
                    g += i * F,
                    m += i * z,
                    y += i * H,
                    v += i * G,
                    w += i * $,
                    E += i * Y,
                    _ += i * W,
                    S += i * Q,
                    k += i * X,
                    f += (i = t[5]) * L,
                    h += i * O,
                    l += i * j,
                    d += i * U,
                    p += i * K,
                    b += i * q,
                    g += i * V,
                    m += i * F,
                    y += i * z,
                    v += i * H,
                    w += i * G,
                    E += i * $,
                    _ += i * Y,
                    S += i * W,
                    k += i * Q,
                    A += i * X,
                    h += (i = t[6]) * L,
                    l += i * O,
                    d += i * j,
                    p += i * U,
                    b += i * K,
                    g += i * q,
                    m += i * V,
                    y += i * F,
                    v += i * z,
                    w += i * H,
                    E += i * G,
                    _ += i * $,
                    S += i * Y,
                    k += i * W,
                    A += i * Q,
                    C += i * X,
                    l += (i = t[7]) * L,
                    d += i * O,
                    p += i * j,
                    b += i * U,
                    g += i * K,
                    m += i * q,
                    y += i * V,
                    v += i * F,
                    w += i * z,
                    E += i * H,
                    _ += i * G,
                    S += i * $,
                    k += i * Y,
                    A += i * W,
                    C += i * Q,
                    I += i * X,
                    d += (i = t[8]) * L,
                    p += i * O,
                    b += i * j,
                    g += i * U,
                    m += i * K,
                    y += i * q,
                    v += i * V,
                    w += i * F,
                    E += i * z,
                    _ += i * H,
                    S += i * G,
                    k += i * $,
                    A += i * Y,
                    C += i * W,
                    I += i * Q,
                    T += i * X,
                    p += (i = t[9]) * L,
                    b += i * O,
                    g += i * j,
                    m += i * U,
                    y += i * K,
                    v += i * q,
                    w += i * V,
                    E += i * F,
                    _ += i * z,
                    S += i * H,
                    k += i * G,
                    A += i * $,
                    C += i * Y,
                    I += i * W,
                    T += i * Q,
                    B += i * X,
                    b += (i = t[10]) * L,
                    g += i * O,
                    m += i * j,
                    y += i * U,
                    v += i * K,
                    w += i * q,
                    E += i * V,
                    _ += i * F,
                    S += i * z,
                    k += i * H,
                    A += i * G,
                    C += i * $,
                    I += i * Y,
                    T += i * W,
                    B += i * Q,
                    M += i * X,
                    g += (i = t[11]) * L,
                    m += i * O,
                    y += i * j,
                    v += i * U,
                    w += i * K,
                    E += i * q,
                    _ += i * V,
                    S += i * F,
                    k += i * z,
                    A += i * H,
                    C += i * G,
                    I += i * $,
                    T += i * Y,
                    B += i * W,
                    M += i * Q,
                    R += i * X,
                    m += (i = t[12]) * L,
                    y += i * O,
                    v += i * j,
                    w += i * U,
                    E += i * K,
                    _ += i * q,
                    S += i * V,
                    k += i * F,
                    A += i * z,
                    C += i * H,
                    I += i * G,
                    T += i * $,
                    B += i * Y,
                    M += i * W,
                    R += i * Q,
                    x += i * X,
                    y += (i = t[13]) * L,
                    v += i * O,
                    w += i * j,
                    E += i * U,
                    _ += i * K,
                    S += i * q,
                    k += i * V,
                    A += i * F,
                    C += i * z,
                    I += i * H,
                    T += i * G,
                    B += i * $,
                    M += i * Y,
                    R += i * W,
                    x += i * Q,
                    N += i * X,
                    v += (i = t[14]) * L,
                    w += i * O,
                    E += i * j,
                    _ += i * U,
                    S += i * K,
                    k += i * q,
                    A += i * V,
                    C += i * F,
                    I += i * z,
                    T += i * H,
                    B += i * G,
                    M += i * $,
                    R += i * Y,
                    x += i * W,
                    N += i * Q,
                    P += i * X,
                    w += (i = t[15]) * L,
                    o += 38 * (_ += i * j),
                    a += 38 * (S += i * U),
                    c += 38 * (k += i * K),
                    u += 38 * (A += i * q),
                    f += 38 * (C += i * V),
                    h += 38 * (I += i * F),
                    l += 38 * (T += i * z),
                    d += 38 * (B += i * H),
                    p += 38 * (M += i * G),
                    b += 38 * (R += i * $),
                    g += 38 * (x += i * Y),
                    m += 38 * (N += i * W),
                    y += 38 * (P += i * Q),
                    v += 38 * (D += i * X),
                    s = (i = (s += 38 * (E += i * O)) + (n = 1) + 65535) - 65536 * (n = Math.floor(i / 65536)),
                    o = (i = o + n + 65535) - 65536 * (n = Math.floor(i / 65536)),
                    a = (i = a + n + 65535) - 65536 * (n = Math.floor(i / 65536)),
                    c = (i = c + n + 65535) - 65536 * (n = Math.floor(i / 65536)),
                    u = (i = u + n + 65535) - 65536 * (n = Math.floor(i / 65536)),
                    f = (i = f + n + 65535) - 65536 * (n = Math.floor(i / 65536)),
                    h = (i = h + n + 65535) - 65536 * (n = Math.floor(i / 65536)),
                    l = (i = l + n + 65535) - 65536 * (n = Math.floor(i / 65536)),
                    d = (i = d + n + 65535) - 65536 * (n = Math.floor(i / 65536)),
                    p = (i = p + n + 65535) - 65536 * (n = Math.floor(i / 65536)),
                    b = (i = b + n + 65535) - 65536 * (n = Math.floor(i / 65536)),
                    g = (i = g + n + 65535) - 65536 * (n = Math.floor(i / 65536)),
                    m = (i = m + n + 65535) - 65536 * (n = Math.floor(i / 65536)),
                    y = (i = y + n + 65535) - 65536 * (n = Math.floor(i / 65536)),
                    v = (i = v + n + 65535) - 65536 * (n = Math.floor(i / 65536)),
                    w = (i = w + n + 65535) - 65536 * (n = Math.floor(i / 65536)),
                    s = (i = (s += n - 1 + 37 * (n - 1)) + (n = 1) + 65535) - 65536 * (n = Math.floor(i / 65536)),
                    o = (i = o + n + 65535) - 65536 * (n = Math.floor(i / 65536)),
                    a = (i = a + n + 65535) - 65536 * (n = Math.floor(i / 65536)),
                    c = (i = c + n + 65535) - 65536 * (n = Math.floor(i / 65536)),
                    u = (i = u + n + 65535) - 65536 * (n = Math.floor(i / 65536)),
                    f = (i = f + n + 65535) - 65536 * (n = Math.floor(i / 65536)),
                    h = (i = h + n + 65535) - 65536 * (n = Math.floor(i / 65536)),
                    l = (i = l + n + 65535) - 65536 * (n = Math.floor(i / 65536)),
                    d = (i = d + n + 65535) - 65536 * (n = Math.floor(i / 65536)),
                    p = (i = p + n + 65535) - 65536 * (n = Math.floor(i / 65536)),
                    b = (i = b + n + 65535) - 65536 * (n = Math.floor(i / 65536)),
                    g = (i = g + n + 65535) - 65536 * (n = Math.floor(i / 65536)),
                    m = (i = m + n + 65535) - 65536 * (n = Math.floor(i / 65536)),
                    y = (i = y + n + 65535) - 65536 * (n = Math.floor(i / 65536)),
                    v = (i = v + n + 65535) - 65536 * (n = Math.floor(i / 65536)),
                    w = (i = w + n + 65535) - 65536 * (n = Math.floor(i / 65536)),
                    s += n - 1 + 37 * (n - 1),
                    e[0] = s,
                    e[1] = o,
                    e[2] = a,
                    e[3] = c,
                    e[4] = u,
                    e[5] = f,
                    e[6] = h,
                    e[7] = l,
                    e[8] = d,
                    e[9] = p,
                    e[10] = b,
                    e[11] = g,
                    e[12] = m,
                    e[13] = y,
                    e[14] = v,
                    e[15] = w
                }
            }
            ).call(this, e("buffer").Buffer)
        }
        , {
            "./asn1-validator": 329,
            "./forge": 336,
            "./jsbn": 338,
            "./random": 352,
            "./sha512": 357,
            "./util": 358,
            buffer: 18
        }],
        336: [function(e, t, r) {
            t.exports = {
                options: {
                    usePureJavaScript: !1
                }
            }
        }
        , {}],
        337: [function(e, t, r) {
            var i = e("./forge");
            e("./md"),
            e("./util"),
            (t.exports = i.hmac = i.hmac || {}).create = function() {
                var e = null
                  , t = null
                  , r = null
                  , n = null
                  , s = {
                    start: function(s, o) {
                        if (null !== s)
                            if ("string" == typeof s) {
                                if (!((s = s.toLowerCase())in i.md.algorithms))
                                    throw new Error('Unknown hash algorithm "' + s + '"');
                                t = i.md.algorithms[s].create()
                            } else
                                t = s;
                        if (null === o)
                            o = e;
                        else {
                            if ("string" == typeof o)
                                o = i.util.createBuffer(o);
                            else if (i.util.isArray(o)) {
                                var a = o;
                                o = i.util.createBuffer();
                                for (var c = 0; c < a.length; ++c)
                                    o.putByte(a[c])
                            }
                            var u = o.length();
                            u > t.blockLength && (t.start(),
                            t.update(o.bytes()),
                            o = t.digest()),
                            r = i.util.createBuffer(),
                            n = i.util.createBuffer(),
                            u = o.length();
                            for (c = 0; c < u; ++c) {
                                a = o.at(c);
                                r.putByte(54 ^ a),
                                n.putByte(92 ^ a)
                            }
                            if (u < t.blockLength)
                                for (a = t.blockLength - u,
                                c = 0; c < a; ++c)
                                    r.putByte(54),
                                    n.putByte(92);
                            e = o,
                            r = r.bytes(),
                            n = n.bytes()
                        }
                        t.start(),
                        t.update(r)
                    },
                    update: function(e) {
                        t.update(e)
                    },
                    getMac: function() {
                        var e = t.digest().bytes();
                        return t.start(),
                        t.update(n),
                        t.update(e),
                        t.digest()
                    }
                };
                return s.digest = s.getMac,
                s
            }
        }
        , {
            "./forge": 336,
            "./md": 339,
            "./util": 358
        }],
        338: [function(e, t, r) {
            var i, n = e("./forge");
            t.exports = n.jsbn = n.jsbn || {};
            function s(e, t, r) {
                this.data = [],
                null != e && ("number" == typeof e ? this.fromNumber(e, t, r) : null == t && "string" != typeof e ? this.fromString(e, 256) : this.fromString(e, t))
            }
            function o() {
                return new s(null)
            }
            function a(e, t, r, i, n, s) {
                for (var o = 16383 & t, a = t >> 14; --s >= 0; ) {
                    var c = 16383 & this.data[e]
                      , u = this.data[e++] >> 14
                      , f = a * c + u * o;
                    n = ((c = o * c + ((16383 & f) << 14) + r.data[i] + n) >> 28) + (f >> 14) + a * u,
                    r.data[i++] = 268435455 & c
                }
                return n
            }
            n.jsbn.BigInteger = s,
            "undefined" == typeof navigator ? (s.prototype.am = a,
            i = 28) : "Microsoft Internet Explorer" == navigator.appName ? (s.prototype.am = function(e, t, r, i, n, s) {
                for (var o = 32767 & t, a = t >> 15; --s >= 0; ) {
                    var c = 32767 & this.data[e]
                      , u = this.data[e++] >> 15
                      , f = a * c + u * o;
                    n = ((c = o * c + ((32767 & f) << 15) + r.data[i] + (1073741823 & n)) >>> 30) + (f >>> 15) + a * u + (n >>> 30),
                    r.data[i++] = 1073741823 & c
                }
                return n
            }
            ,
            i = 30) : "Netscape" != navigator.appName ? (s.prototype.am = function(e, t, r, i, n, s) {
                for (; --s >= 0; ) {
                    var o = t * this.data[e++] + r.data[i] + n;
                    n = Math.floor(o / 67108864),
                    r.data[i++] = 67108863 & o
                }
                return n
            }
            ,
            i = 26) : (s.prototype.am = a,
            i = 28),
            s.prototype.DB = i,
            s.prototype.DM = (1 << i) - 1,
            s.prototype.DV = 1 << i;
            s.prototype.FV = Math.pow(2, 52),
            s.prototype.F1 = 52 - i,
            s.prototype.F2 = 2 * i - 52;
            var c, u, f = "0123456789abcdefghijklmnopqrstuvwxyz", h = new Array;
            for (c = "0".charCodeAt(0),
            u = 0; u <= 9; ++u)
                h[c++] = u;
            for (c = "a".charCodeAt(0),
            u = 10; u < 36; ++u)
                h[c++] = u;
            for (c = "A".charCodeAt(0),
            u = 10; u < 36; ++u)
                h[c++] = u;
            function l(e) {
                return f.charAt(e)
            }
            function d(e, t) {
                var r = h[e.charCodeAt(t)];
                return null == r ? -1 : r
            }
            function p(e) {
                var t = o();
                return t.fromInt(e),
                t
            }
            function b(e) {
                var t, r = 1;
                return 0 != (t = e >>> 16) && (e = t,
                r += 16),
                0 != (t = e >> 8) && (e = t,
                r += 8),
                0 != (t = e >> 4) && (e = t,
                r += 4),
                0 != (t = e >> 2) && (e = t,
                r += 2),
                0 != (t = e >> 1) && (e = t,
                r += 1),
                r
            }
            function g(e) {
                this.m = e
            }
            function m(e) {
                this.m = e,
                this.mp = e.invDigit(),
                this.mpl = 32767 & this.mp,
                this.mph = this.mp >> 15,
                this.um = (1 << e.DB - 15) - 1,
                this.mt2 = 2 * e.t
            }
            function y(e, t) {
                return e & t
            }
            function v(e, t) {
                return e | t
            }
            function w(e, t) {
                return e ^ t
            }
            function E(e, t) {
                return e & ~t
            }
            function _(e) {
                if (0 == e)
                    return -1;
                var t = 0;
                return 0 == (65535 & e) && (e >>= 16,
                t += 16),
                0 == (255 & e) && (e >>= 8,
                t += 8),
                0 == (15 & e) && (e >>= 4,
                t += 4),
                0 == (3 & e) && (e >>= 2,
                t += 2),
                0 == (1 & e) && ++t,
                t
            }
            function S(e) {
                for (var t = 0; 0 != e; )
                    e &= e - 1,
                    ++t;
                return t
            }
            function k() {}
            function A(e) {
                return e
            }
            function C(e) {
                this.r2 = o(),
                this.q3 = o(),
                s.ONE.dlShiftTo(2 * e.t, this.r2),
                this.mu = this.r2.divide(e),
                this.m = e
            }
            g.prototype.convert = function(e) {
                return e.s < 0 || e.compareTo(this.m) >= 0 ? e.mod(this.m) : e
            }
            ,
            g.prototype.revert = function(e) {
                return e
            }
            ,
            g.prototype.reduce = function(e) {
                e.divRemTo(this.m, null, e)
            }
            ,
            g.prototype.mulTo = function(e, t, r) {
                e.multiplyTo(t, r),
                this.reduce(r)
            }
            ,
            g.prototype.sqrTo = function(e, t) {
                e.squareTo(t),
                this.reduce(t)
            }
            ,
            m.prototype.convert = function(e) {
                var t = o();
                return e.abs().dlShiftTo(this.m.t, t),
                t.divRemTo(this.m, null, t),
                e.s < 0 && t.compareTo(s.ZERO) > 0 && this.m.subTo(t, t),
                t
            }
            ,
            m.prototype.revert = function(e) {
                var t = o();
                return e.copyTo(t),
                this.reduce(t),
                t
            }
            ,
            m.prototype.reduce = function(e) {
                for (; e.t <= this.mt2; )
                    e.data[e.t++] = 0;
                for (var t = 0; t < this.m.t; ++t) {
                    var r = 32767 & e.data[t]
                      , i = r * this.mpl + ((r * this.mph + (e.data[t] >> 15) * this.mpl & this.um) << 15) & e.DM;
                    for (r = t + this.m.t,
                    e.data[r] += this.m.am(0, i, e, t, 0, this.m.t); e.data[r] >= e.DV; )
                        e.data[r] -= e.DV,
                        e.data[++r]++
                }
                e.clamp(),
                e.drShiftTo(this.m.t, e),
                e.compareTo(this.m) >= 0 && e.subTo(this.m, e)
            }
            ,
            m.prototype.mulTo = function(e, t, r) {
                e.multiplyTo(t, r),
                this.reduce(r)
            }
            ,
            m.prototype.sqrTo = function(e, t) {
                e.squareTo(t),
                this.reduce(t)
            }
            ,
            s.prototype.copyTo = function(e) {
                for (var t = this.t - 1; t >= 0; --t)
                    e.data[t] = this.data[t];
                e.t = this.t,
                e.s = this.s
            }
            ,
            s.prototype.fromInt = function(e) {
                this.t = 1,
                this.s = e < 0 ? -1 : 0,
                e > 0 ? this.data[0] = e : e < -1 ? this.data[0] = e + this.DV : this.t = 0
            }
            ,
            s.prototype.fromString = function(e, t) {
                var r;
                if (16 == t)
                    r = 4;
                else if (8 == t)
                    r = 3;
                else if (256 == t)
                    r = 8;
                else if (2 == t)
                    r = 1;
                else if (32 == t)
                    r = 5;
                else {
                    if (4 != t)
                        return void this.fromRadix(e, t);
                    r = 2
                }
                this.t = 0,
                this.s = 0;
                for (var i = e.length, n = !1, o = 0; --i >= 0; ) {
                    var a = 8 == r ? 255 & e[i] : d(e, i);
                    a < 0 ? "-" == e.charAt(i) && (n = !0) : (n = !1,
                    0 == o ? this.data[this.t++] = a : o + r > this.DB ? (this.data[this.t - 1] |= (a & (1 << this.DB - o) - 1) << o,
                    this.data[this.t++] = a >> this.DB - o) : this.data[this.t - 1] |= a << o,
                    (o += r) >= this.DB && (o -= this.DB))
                }
                8 == r && 0 != (128 & e[0]) && (this.s = -1,
                o > 0 && (this.data[this.t - 1] |= (1 << this.DB - o) - 1 << o)),
                this.clamp(),
                n && s.ZERO.subTo(this, this)
            }
            ,
            s.prototype.clamp = function() {
                for (var e = this.s & this.DM; this.t > 0 && this.data[this.t - 1] == e; )
                    --this.t
            }
            ,
            s.prototype.dlShiftTo = function(e, t) {
                var r;
                for (r = this.t - 1; r >= 0; --r)
                    t.data[r + e] = this.data[r];
                for (r = e - 1; r >= 0; --r)
                    t.data[r] = 0;
                t.t = this.t + e,
                t.s = this.s
            }
            ,
            s.prototype.drShiftTo = function(e, t) {
                for (var r = e; r < this.t; ++r)
                    t.data[r - e] = this.data[r];
                t.t = Math.max(this.t - e, 0),
                t.s = this.s
            }
            ,
            s.prototype.lShiftTo = function(e, t) {
                var r, i = e % this.DB, n = this.DB - i, s = (1 << n) - 1, o = Math.floor(e / this.DB), a = this.s << i & this.DM;
                for (r = this.t - 1; r >= 0; --r)
                    t.data[r + o + 1] = this.data[r] >> n | a,
                    a = (this.data[r] & s) << i;
                for (r = o - 1; r >= 0; --r)
                    t.data[r] = 0;
                t.data[o] = a,
                t.t = this.t + o + 1,
                t.s = this.s,
                t.clamp()
            }
            ,
            s.prototype.rShiftTo = function(e, t) {
                t.s = this.s;
                var r = Math.floor(e / this.DB);
                if (r >= this.t)
                    t.t = 0;
                else {
                    var i = e % this.DB
                      , n = this.DB - i
                      , s = (1 << i) - 1;
                    t.data[0] = this.data[r] >> i;
                    for (var o = r + 1; o < this.t; ++o)
                        t.data[o - r - 1] |= (this.data[o] & s) << n,
                        t.data[o - r] = this.data[o] >> i;
                    i > 0 && (t.data[this.t - r - 1] |= (this.s & s) << n),
                    t.t = this.t - r,
                    t.clamp()
                }
            }
            ,
            s.prototype.subTo = function(e, t) {
                for (var r = 0, i = 0, n = Math.min(e.t, this.t); r < n; )
                    i += this.data[r] - e.data[r],
                    t.data[r++] = i & this.DM,
                    i >>= this.DB;
                if (e.t < this.t) {
                    for (i -= e.s; r < this.t; )
                        i += this.data[r],
                        t.data[r++] = i & this.DM,
                        i >>= this.DB;
                    i += this.s
                } else {
                    for (i += this.s; r < e.t; )
                        i -= e.data[r],
                        t.data[r++] = i & this.DM,
                        i >>= this.DB;
                    i -= e.s
                }
                t.s = i < 0 ? -1 : 0,
                i < -1 ? t.data[r++] = this.DV + i : i > 0 && (t.data[r++] = i),
                t.t = r,
                t.clamp()
            }
            ,
            s.prototype.multiplyTo = function(e, t) {
                var r = this.abs()
                  , i = e.abs()
                  , n = r.t;
                for (t.t = n + i.t; --n >= 0; )
                    t.data[n] = 0;
                for (n = 0; n < i.t; ++n)
                    t.data[n + r.t] = r.am(0, i.data[n], t, n, 0, r.t);
                t.s = 0,
                t.clamp(),
                this.s != e.s && s.ZERO.subTo(t, t)
            }
            ,
            s.prototype.squareTo = function(e) {
                for (var t = this.abs(), r = e.t = 2 * t.t; --r >= 0; )
                    e.data[r] = 0;
                for (r = 0; r < t.t - 1; ++r) {
                    var i = t.am(r, t.data[r], e, 2 * r, 0, 1);
                    (e.data[r + t.t] += t.am(r + 1, 2 * t.data[r], e, 2 * r + 1, i, t.t - r - 1)) >= t.DV && (e.data[r + t.t] -= t.DV,
                    e.data[r + t.t + 1] = 1)
                }
                e.t > 0 && (e.data[e.t - 1] += t.am(r, t.data[r], e, 2 * r, 0, 1)),
                e.s = 0,
                e.clamp()
            }
            ,
            s.prototype.divRemTo = function(e, t, r) {
                var i = e.abs();
                if (!(i.t <= 0)) {
                    var n = this.abs();
                    if (n.t < i.t)
                        return null != t && t.fromInt(0),
                        void (null != r && this.copyTo(r));
                    null == r && (r = o());
                    var a = o()
                      , c = this.s
                      , u = e.s
                      , f = this.DB - b(i.data[i.t - 1]);
                    f > 0 ? (i.lShiftTo(f, a),
                    n.lShiftTo(f, r)) : (i.copyTo(a),
                    n.copyTo(r));
                    var h = a.t
                      , l = a.data[h - 1];
                    if (0 != l) {
                        var d = l * (1 << this.F1) + (h > 1 ? a.data[h - 2] >> this.F2 : 0)
                          , p = this.FV / d
                          , g = (1 << this.F1) / d
                          , m = 1 << this.F2
                          , y = r.t
                          , v = y - h
                          , w = null == t ? o() : t;
                        for (a.dlShiftTo(v, w),
                        r.compareTo(w) >= 0 && (r.data[r.t++] = 1,
                        r.subTo(w, r)),
                        s.ONE.dlShiftTo(h, w),
                        w.subTo(a, a); a.t < h; )
                            a.data[a.t++] = 0;
                        for (; --v >= 0; ) {
                            var E = r.data[--y] == l ? this.DM : Math.floor(r.data[y] * p + (r.data[y - 1] + m) * g);
                            if ((r.data[y] += a.am(0, E, r, v, 0, h)) < E)
                                for (a.dlShiftTo(v, w),
                                r.subTo(w, r); r.data[y] < --E; )
                                    r.subTo(w, r)
                        }
                        null != t && (r.drShiftTo(h, t),
                        c != u && s.ZERO.subTo(t, t)),
                        r.t = h,
                        r.clamp(),
                        f > 0 && r.rShiftTo(f, r),
                        c < 0 && s.ZERO.subTo(r, r)
                    }
                }
            }
            ,
            s.prototype.invDigit = function() {
                if (this.t < 1)
                    return 0;
                var e = this.data[0];
                if (0 == (1 & e))
                    return 0;
                var t = 3 & e;
                return (t = (t = (t = (t = t * (2 - (15 & e) * t) & 15) * (2 - (255 & e) * t) & 255) * (2 - ((65535 & e) * t & 65535)) & 65535) * (2 - e * t % this.DV) % this.DV) > 0 ? this.DV - t : -t
            }
            ,
            s.prototype.isEven = function() {
                return 0 == (this.t > 0 ? 1 & this.data[0] : this.s)
            }
            ,
            s.prototype.exp = function(e, t) {
                if (e > 4294967295 || e < 1)
                    return s.ONE;
                var r = o()
                  , i = o()
                  , n = t.convert(this)
                  , a = b(e) - 1;
                for (n.copyTo(r); --a >= 0; )
                    if (t.sqrTo(r, i),
                    (e & 1 << a) > 0)
                        t.mulTo(i, n, r);
                    else {
                        var c = r;
                        r = i,
                        i = c
                    }
                return t.revert(r)
            }
            ,
            s.prototype.toString = function(e) {
                if (this.s < 0)
                    return "-" + this.negate().toString(e);
                var t;
                if (16 == e)
                    t = 4;
                else if (8 == e)
                    t = 3;
                else if (2 == e)
                    t = 1;
                else if (32 == e)
                    t = 5;
                else {
                    if (4 != e)
                        return this.toRadix(e);
                    t = 2
                }
                var r, i = (1 << t) - 1, n = !1, s = "", o = this.t, a = this.DB - o * this.DB % t;
                if (o-- > 0)
                    for (a < this.DB && (r = this.data[o] >> a) > 0 && (n = !0,
                    s = l(r)); o >= 0; )
                        a < t ? (r = (this.data[o] & (1 << a) - 1) << t - a,
                        r |= this.data[--o] >> (a += this.DB - t)) : (r = this.data[o] >> (a -= t) & i,
                        a <= 0 && (a += this.DB,
                        --o)),
                        r > 0 && (n = !0),
                        n && (s += l(r));
                return n ? s : "0"
            }
            ,
            s.prototype.negate = function() {
                var e = o();
                return s.ZERO.subTo(this, e),
                e
            }
            ,
            s.prototype.abs = function() {
                return this.s < 0 ? this.negate() : this
            }
            ,
            s.prototype.compareTo = function(e) {
                var t = this.s - e.s;
                if (0 != t)
                    return t;
                var r = this.t;
                if (0 != (t = r - e.t))
                    return this.s < 0 ? -t : t;
                for (; --r >= 0; )
                    if (0 != (t = this.data[r] - e.data[r]))
                        return t;
                return 0
            }
            ,
            s.prototype.bitLength = function() {
                return this.t <= 0 ? 0 : this.DB * (this.t - 1) + b(this.data[this.t - 1] ^ this.s & this.DM)
            }
            ,
            s.prototype.mod = function(e) {
                var t = o();
                return this.abs().divRemTo(e, null, t),
                this.s < 0 && t.compareTo(s.ZERO) > 0 && e.subTo(t, t),
                t
            }
            ,
            s.prototype.modPowInt = function(e, t) {
                var r;
                return r = e < 256 || t.isEven() ? new g(t) : new m(t),
                this.exp(e, r)
            }
            ,
            s.ZERO = p(0),
            s.ONE = p(1),
            k.prototype.convert = A,
            k.prototype.revert = A,
            k.prototype.mulTo = function(e, t, r) {
                e.multiplyTo(t, r)
            }
            ,
            k.prototype.sqrTo = function(e, t) {
                e.squareTo(t)
            }
            ,
            C.prototype.convert = function(e) {
                if (e.s < 0 || e.t > 2 * this.m.t)
                    return e.mod(this.m);
                if (e.compareTo(this.m) < 0)
                    return e;
                var t = o();
                return e.copyTo(t),
                this.reduce(t),
                t
            }
            ,
            C.prototype.revert = function(e) {
                return e
            }
            ,
            C.prototype.reduce = function(e) {
                for (e.drShiftTo(this.m.t - 1, this.r2),
                e.t > this.m.t + 1 && (e.t = this.m.t + 1,
                e.clamp()),
                this.mu.multiplyUpperTo(this.r2, this.m.t + 1, this.q3),
                this.m.multiplyLowerTo(this.q3, this.m.t + 1, this.r2); e.compareTo(this.r2) < 0; )
                    e.dAddOffset(1, this.m.t + 1);
                for (e.subTo(this.r2, e); e.compareTo(this.m) >= 0; )
                    e.subTo(this.m, e)
            }
            ,
            C.prototype.mulTo = function(e, t, r) {
                e.multiplyTo(t, r),
                this.reduce(r)
            }
            ,
            C.prototype.sqrTo = function(e, t) {
                e.squareTo(t),
                this.reduce(t)
            }
            ;
            var I = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509]
              , T = (1 << 26) / I[I.length - 1];
            s.prototype.chunkSize = function(e) {
                return Math.floor(Math.LN2 * this.DB / Math.log(e))
            }
            ,
            s.prototype.toRadix = function(e) {
                if (null == e && (e = 10),
                0 == this.signum() || e < 2 || e > 36)
                    return "0";
                var t = this.chunkSize(e)
                  , r = Math.pow(e, t)
                  , i = p(r)
                  , n = o()
                  , s = o()
                  , a = "";
                for (this.divRemTo(i, n, s); n.signum() > 0; )
                    a = (r + s.intValue()).toString(e).substr(1) + a,
                    n.divRemTo(i, n, s);
                return s.intValue().toString(e) + a
            }
            ,
            s.prototype.fromRadix = function(e, t) {
                this.fromInt(0),
                null == t && (t = 10);
                for (var r = this.chunkSize(t), i = Math.pow(t, r), n = !1, o = 0, a = 0, c = 0; c < e.length; ++c) {
                    var u = d(e, c);
                    u < 0 ? "-" == e.charAt(c) && 0 == this.signum() && (n = !0) : (a = t * a + u,
                    ++o >= r && (this.dMultiply(i),
                    this.dAddOffset(a, 0),
                    o = 0,
                    a = 0))
                }
                o > 0 && (this.dMultiply(Math.pow(t, o)),
                this.dAddOffset(a, 0)),
                n && s.ZERO.subTo(this, this)
            }
            ,
            s.prototype.fromNumber = function(e, t, r) {
                if ("number" == typeof t)
                    if (e < 2)
                        this.fromInt(1);
                    else
                        for (this.fromNumber(e, r),
                        this.testBit(e - 1) || this.bitwiseTo(s.ONE.shiftLeft(e - 1), v, this),
                        this.isEven() && this.dAddOffset(1, 0); !this.isProbablePrime(t); )
                            this.dAddOffset(2, 0),
                            this.bitLength() > e && this.subTo(s.ONE.shiftLeft(e - 1), this);
                else {
                    var i = new Array
                      , n = 7 & e;
                    i.length = 1 + (e >> 3),
                    t.nextBytes(i),
                    n > 0 ? i[0] &= (1 << n) - 1 : i[0] = 0,
                    this.fromString(i, 256)
                }
            }
            ,
            s.prototype.bitwiseTo = function(e, t, r) {
                var i, n, s = Math.min(e.t, this.t);
                for (i = 0; i < s; ++i)
                    r.data[i] = t(this.data[i], e.data[i]);
                if (e.t < this.t) {
                    for (n = e.s & this.DM,
                    i = s; i < this.t; ++i)
                        r.data[i] = t(this.data[i], n);
                    r.t = this.t
                } else {
                    for (n = this.s & this.DM,
                    i = s; i < e.t; ++i)
                        r.data[i] = t(n, e.data[i]);
                    r.t = e.t
                }
                r.s = t(this.s, e.s),
                r.clamp()
            }
            ,
            s.prototype.changeBit = function(e, t) {
                var r = s.ONE.shiftLeft(e);
                return this.bitwiseTo(r, t, r),
                r
            }
            ,
            s.prototype.addTo = function(e, t) {
                for (var r = 0, i = 0, n = Math.min(e.t, this.t); r < n; )
                    i += this.data[r] + e.data[r],
                    t.data[r++] = i & this.DM,
                    i >>= this.DB;
                if (e.t < this.t) {
                    for (i += e.s; r < this.t; )
                        i += this.data[r],
                        t.data[r++] = i & this.DM,
                        i >>= this.DB;
                    i += this.s
                } else {
                    for (i += this.s; r < e.t; )
                        i += e.data[r],
                        t.data[r++] = i & this.DM,
                        i >>= this.DB;
                    i += e.s
                }
                t.s = i < 0 ? -1 : 0,
                i > 0 ? t.data[r++] = i : i < -1 && (t.data[r++] = this.DV + i),
                t.t = r,
                t.clamp()
            }
            ,
            s.prototype.dMultiply = function(e) {
                this.data[this.t] = this.am(0, e - 1, this, 0, 0, this.t),
                ++this.t,
                this.clamp()
            }
            ,
            s.prototype.dAddOffset = function(e, t) {
                if (0 != e) {
                    for (; this.t <= t; )
                        this.data[this.t++] = 0;
                    for (this.data[t] += e; this.data[t] >= this.DV; )
                        this.data[t] -= this.DV,
                        ++t >= this.t && (this.data[this.t++] = 0),
                        ++this.data[t]
                }
            }
            ,
            s.prototype.multiplyLowerTo = function(e, t, r) {
                var i, n = Math.min(this.t + e.t, t);
                for (r.s = 0,
                r.t = n; n > 0; )
                    r.data[--n] = 0;
                for (i = r.t - this.t; n < i; ++n)
                    r.data[n + this.t] = this.am(0, e.data[n], r, n, 0, this.t);
                for (i = Math.min(e.t, t); n < i; ++n)
                    this.am(0, e.data[n], r, n, 0, t - n);
                r.clamp()
            }
            ,
            s.prototype.multiplyUpperTo = function(e, t, r) {
                --t;
                var i = r.t = this.t + e.t - t;
                for (r.s = 0; --i >= 0; )
                    r.data[i] = 0;
                for (i = Math.max(t - this.t, 0); i < e.t; ++i)
                    r.data[this.t + i - t] = this.am(t - i, e.data[i], r, 0, 0, this.t + i - t);
                r.clamp(),
                r.drShiftTo(1, r)
            }
            ,
            s.prototype.modInt = function(e) {
                if (e <= 0)
                    return 0;
                var t = this.DV % e
                  , r = this.s < 0 ? e - 1 : 0;
                if (this.t > 0)
                    if (0 == t)
                        r = this.data[0] % e;
                    else
                        for (var i = this.t - 1; i >= 0; --i)
                            r = (t * r + this.data[i]) % e;
                return r
            }
            ,
            s.prototype.millerRabin = function(e) {
                var t = this.subtract(s.ONE)
                  , r = t.getLowestSetBit();
                if (r <= 0)
                    return !1;
                for (var i, n = t.shiftRight(r), o = {
                    nextBytes: function(e) {
                        for (var t = 0; t < e.length; ++t)
                            e[t] = Math.floor(256 * Math.random())
                    }
                }, a = 0; a < e; ++a) {
                    do {
                        i = new s(this.bitLength(),o)
                    } while (i.compareTo(s.ONE) <= 0 || i.compareTo(t) >= 0);var c = i.modPow(n, this);
                    if (0 != c.compareTo(s.ONE) && 0 != c.compareTo(t)) {
                        for (var u = 1; u++ < r && 0 != c.compareTo(t); )
                            if (0 == (c = c.modPowInt(2, this)).compareTo(s.ONE))
                                return !1;
                        if (0 != c.compareTo(t))
                            return !1
                    }
                }
                return !0
            }
            ,
            s.prototype.clone = function() {
                var e = o();
                return this.copyTo(e),
                e
            }
            ,
            s.prototype.intValue = function() {
                if (this.s < 0) {
                    if (1 == this.t)
                        return this.data[0] - this.DV;
                    if (0 == this.t)
                        return -1
                } else {
                    if (1 == this.t)
                        return this.data[0];
                    if (0 == this.t)
                        return 0
                }
                return (this.data[1] & (1 << 32 - this.DB) - 1) << this.DB | this.data[0]
            }
            ,
            s.prototype.byteValue = function() {
                return 0 == this.t ? this.s : this.data[0] << 24 >> 24
            }
            ,
            s.prototype.shortValue = function() {
                return 0 == this.t ? this.s : this.data[0] << 16 >> 16
            }
            ,
            s.prototype.signum = function() {
                return this.s < 0 ? -1 : this.t <= 0 || 1 == this.t && this.data[0] <= 0 ? 0 : 1
            }
            ,
            s.prototype.toByteArray = function() {
                var e = this.t
                  , t = new Array;
                t[0] = this.s;
                var r, i = this.DB - e * this.DB % 8, n = 0;
                if (e-- > 0)
                    for (i < this.DB && (r = this.data[e] >> i) != (this.s & this.DM) >> i && (t[n++] = r | this.s << this.DB - i); e >= 0; )
                        i < 8 ? (r = (this.data[e] & (1 << i) - 1) << 8 - i,
                        r |= this.data[--e] >> (i += this.DB - 8)) : (r = this.data[e] >> (i -= 8) & 255,
                        i <= 0 && (i += this.DB,
                        --e)),
                        0 != (128 & r) && (r |= -256),
                        0 == n && (128 & this.s) != (128 & r) && ++n,
                        (n > 0 || r != this.s) && (t[n++] = r);
                return t
            }
            ,
            s.prototype.equals = function(e) {
                return 0 == this.compareTo(e)
            }
            ,
            s.prototype.min = function(e) {
                return this.compareTo(e) < 0 ? this : e
            }
            ,
            s.prototype.max = function(e) {
                return this.compareTo(e) > 0 ? this : e
            }
            ,
            s.prototype.and = function(e) {
                var t = o();
                return this.bitwiseTo(e, y, t),
                t
            }
            ,
            s.prototype.or = function(e) {
                var t = o();
                return this.bitwiseTo(e, v, t),
                t
            }
            ,
            s.prototype.xor = function(e) {
                var t = o();
                return this.bitwiseTo(e, w, t),
                t
            }
            ,
            s.prototype.andNot = function(e) {
                var t = o();
                return this.bitwiseTo(e, E, t),
                t
            }
            ,
            s.prototype.not = function() {
                for (var e = o(), t = 0; t < this.t; ++t)
                    e.data[t] = this.DM & ~this.data[t];
                return e.t = this.t,
                e.s = ~this.s,
                e
            }
            ,
            s.prototype.shiftLeft = function(e) {
                var t = o();
                return e < 0 ? this.rShiftTo(-e, t) : this.lShiftTo(e, t),
                t
            }
            ,
            s.prototype.shiftRight = function(e) {
                var t = o();
                return e < 0 ? this.lShiftTo(-e, t) : this.rShiftTo(e, t),
                t
            }
            ,
            s.prototype.getLowestSetBit = function() {
                for (var e = 0; e < this.t; ++e)
                    if (0 != this.data[e])
                        return e * this.DB + _(this.data[e]);
                return this.s < 0 ? this.t * this.DB : -1
            }
            ,
            s.prototype.bitCount = function() {
                for (var e = 0, t = this.s & this.DM, r = 0; r < this.t; ++r)
                    e += S(this.data[r] ^ t);
                return e
            }
            ,
            s.prototype.testBit = function(e) {
                var t = Math.floor(e / this.DB);
                return t >= this.t ? 0 != this.s : 0 != (this.data[t] & 1 << e % this.DB)
            }
            ,
            s.prototype.setBit = function(e) {
                return this.changeBit(e, v)
            }
            ,
            s.prototype.clearBit = function(e) {
                return this.changeBit(e, E)
            }
            ,
            s.prototype.flipBit = function(e) {
                return this.changeBit(e, w)
            }
            ,
            s.prototype.add = function(e) {
                var t = o();
                return this.addTo(e, t),
                t
            }
            ,
            s.prototype.subtract = function(e) {
                var t = o();
                return this.subTo(e, t),
                t
            }
            ,
            s.prototype.multiply = function(e) {
                var t = o();
                return this.multiplyTo(e, t),
                t
            }
            ,
            s.prototype.divide = function(e) {
                var t = o();
                return this.divRemTo(e, t, null),
                t
            }
            ,
            s.prototype.remainder = function(e) {
                var t = o();
                return this.divRemTo(e, null, t),
                t
            }
            ,
            s.prototype.divideAndRemainder = function(e) {
                var t = o()
                  , r = o();
                return this.divRemTo(e, t, r),
                new Array(t,r)
            }
            ,
            s.prototype.modPow = function(e, t) {
                var r, i, n = e.bitLength(), s = p(1);
                if (n <= 0)
                    return s;
                r = n < 18 ? 1 : n < 48 ? 3 : n < 144 ? 4 : n < 768 ? 5 : 6,
                i = n < 8 ? new g(t) : t.isEven() ? new C(t) : new m(t);
                var a = new Array
                  , c = 3
                  , u = r - 1
                  , f = (1 << r) - 1;
                if (a[1] = i.convert(this),
                r > 1) {
                    var h = o();
                    for (i.sqrTo(a[1], h); c <= f; )
                        a[c] = o(),
                        i.mulTo(h, a[c - 2], a[c]),
                        c += 2
                }
                var l, d, y = e.t - 1, v = !0, w = o();
                for (n = b(e.data[y]) - 1; y >= 0; ) {
                    for (n >= u ? l = e.data[y] >> n - u & f : (l = (e.data[y] & (1 << n + 1) - 1) << u - n,
                    y > 0 && (l |= e.data[y - 1] >> this.DB + n - u)),
                    c = r; 0 == (1 & l); )
                        l >>= 1,
                        --c;
                    if ((n -= c) < 0 && (n += this.DB,
                    --y),
                    v)
                        a[l].copyTo(s),
                        v = !1;
                    else {
                        for (; c > 1; )
                            i.sqrTo(s, w),
                            i.sqrTo(w, s),
                            c -= 2;
                        c > 0 ? i.sqrTo(s, w) : (d = s,
                        s = w,
                        w = d),
                        i.mulTo(w, a[l], s)
                    }
                    for (; y >= 0 && 0 == (e.data[y] & 1 << n); )
                        i.sqrTo(s, w),
                        d = s,
                        s = w,
                        w = d,
                        --n < 0 && (n = this.DB - 1,
                        --y)
                }
                return i.revert(s)
            }
            ,
            s.prototype.modInverse = function(e) {
                var t = e.isEven();
                if (this.isEven() && t || 0 == e.signum())
                    return s.ZERO;
                for (var r = e.clone(), i = this.clone(), n = p(1), o = p(0), a = p(0), c = p(1); 0 != r.signum(); ) {
                    for (; r.isEven(); )
                        r.rShiftTo(1, r),
                        t ? (n.isEven() && o.isEven() || (n.addTo(this, n),
                        o.subTo(e, o)),
                        n.rShiftTo(1, n)) : o.isEven() || o.subTo(e, o),
                        o.rShiftTo(1, o);
                    for (; i.isEven(); )
                        i.rShiftTo(1, i),
                        t ? (a.isEven() && c.isEven() || (a.addTo(this, a),
                        c.subTo(e, c)),
                        a.rShiftTo(1, a)) : c.isEven() || c.subTo(e, c),
                        c.rShiftTo(1, c);
                    r.compareTo(i) >= 0 ? (r.subTo(i, r),
                    t && n.subTo(a, n),
                    o.subTo(c, o)) : (i.subTo(r, i),
                    t && a.subTo(n, a),
                    c.subTo(o, c))
                }
                return 0 != i.compareTo(s.ONE) ? s.ZERO : c.compareTo(e) >= 0 ? c.subtract(e) : c.signum() < 0 ? (c.addTo(e, c),
                c.signum() < 0 ? c.add(e) : c) : c
            }
            ,
            s.prototype.pow = function(e) {
                return this.exp(e, new k)
            }
            ,
            s.prototype.gcd = function(e) {
                var t = this.s < 0 ? this.negate() : this.clone()
                  , r = e.s < 0 ? e.negate() : e.clone();
                if (t.compareTo(r) < 0) {
                    var i = t;
                    t = r,
                    r = i
                }
                var n = t.getLowestSetBit()
                  , s = r.getLowestSetBit();
                if (s < 0)
                    return t;
                for (n < s && (s = n),
                s > 0 && (t.rShiftTo(s, t),
                r.rShiftTo(s, r)); t.signum() > 0; )
                    (n = t.getLowestSetBit()) > 0 && t.rShiftTo(n, t),
                    (n = r.getLowestSetBit()) > 0 && r.rShiftTo(n, r),
                    t.compareTo(r) >= 0 ? (t.subTo(r, t),
                    t.rShiftTo(1, t)) : (r.subTo(t, r),
                    r.rShiftTo(1, r));
                return s > 0 && r.lShiftTo(s, r),
                r
            }
            ,
            s.prototype.isProbablePrime = function(e) {
                var t, r = this.abs();
                if (1 == r.t && r.data[0] <= I[I.length - 1]) {
                    for (t = 0; t < I.length; ++t)
                        if (r.data[0] == I[t])
                            return !0;
                    return !1
                }
                if (r.isEven())
                    return !1;
                for (t = 1; t < I.length; ) {
                    for (var i = I[t], n = t + 1; n < I.length && i < T; )
                        i *= I[n++];
                    for (i = r.modInt(i); t < n; )
                        if (i % I[t++] == 0)
                            return !1
                }
                return r.millerRabin(e)
            }
        }
        , {
            "./forge": 336
        }],
        339: [function(e, t, r) {
            var i = e("./forge");
            t.exports = i.md = i.md || {},
            i.md.algorithms = i.md.algorithms || {}
        }
        , {
            "./forge": 336
        }],
        340: [function(e, t, r) {
            var i = e("./forge");
            e("./mgf1"),
            t.exports = i.mgf = i.mgf || {},
            i.mgf.mgf1 = i.mgf1
        }
        , {
            "./forge": 336,
            "./mgf1": 341
        }],
        341: [function(e, t, r) {
            var i = e("./forge");
            e("./util"),
            i.mgf = i.mgf || {},
            (t.exports = i.mgf.mgf1 = i.mgf1 = i.mgf1 || {}).create = function(e) {
                return {
                    generate: function(t, r) {
                        for (var n = new i.util.ByteBuffer, s = Math.ceil(r / e.digestLength), o = 0; o < s; o++) {
                            var a = new i.util.ByteBuffer;
                            a.putInt32(o),
                            e.start(),
                            e.update(t + a.getBytes()),
                            n.putBuffer(e.digest())
                        }
                        return n.truncate(n.length() - r),
                        n.getBytes()
                    }
                }
            }
        }
        , {
            "./forge": 336,
            "./util": 358
        }],
        342: [function(e, t, r) {
            var i = e("./forge");
            i.pki = i.pki || {};
            var n = t.exports = i.pki.oids = i.oids = i.oids || {};
            function s(e, t) {
                n[e] = t,
                n[t] = e
            }
            function o(e, t) {
                n[e] = t
            }
            s("1.2.840.113549.1.1.1", "rsaEncryption"),
            s("1.2.840.113549.1.1.4", "md5WithRSAEncryption"),
            s("1.2.840.113549.1.1.5", "sha1WithRSAEncryption"),
            s("1.2.840.113549.1.1.7", "RSAES-OAEP"),
            s("1.2.840.113549.1.1.8", "mgf1"),
            s("1.2.840.113549.1.1.9", "pSpecified"),
            s("1.2.840.113549.1.1.10", "RSASSA-PSS"),
            s("1.2.840.113549.1.1.11", "sha256WithRSAEncryption"),
            s("1.2.840.113549.1.1.12", "sha384WithRSAEncryption"),
            s("1.2.840.113549.1.1.13", "sha512WithRSAEncryption"),
            s("1.3.101.112", "EdDSA25519"),
            s("1.2.840.10040.4.3", "dsa-with-sha1"),
            s("1.3.14.3.2.7", "desCBC"),
            s("1.3.14.3.2.26", "sha1"),
            s("2.16.840.1.101.3.4.2.1", "sha256"),
            s("2.16.840.1.101.3.4.2.2", "sha384"),
            s("2.16.840.1.101.3.4.2.3", "sha512"),
            s("1.2.840.113549.2.5", "md5"),
            s("1.2.840.113549.1.7.1", "data"),
            s("1.2.840.113549.1.7.2", "signedData"),
            s("1.2.840.113549.1.7.3", "envelopedData"),
            s("1.2.840.113549.1.7.4", "signedAndEnvelopedData"),
            s("1.2.840.113549.1.7.5", "digestedData"),
            s("1.2.840.113549.1.7.6", "encryptedData"),
            s("1.2.840.113549.1.9.1", "emailAddress"),
            s("1.2.840.113549.1.9.2", "unstructuredName"),
            s("1.2.840.113549.1.9.3", "contentType"),
            s("1.2.840.113549.1.9.4", "messageDigest"),
            s("1.2.840.113549.1.9.5", "signingTime"),
            s("1.2.840.113549.1.9.6", "counterSignature"),
            s("1.2.840.113549.1.9.7", "challengePassword"),
            s("1.2.840.113549.1.9.8", "unstructuredAddress"),
            s("1.2.840.113549.1.9.14", "extensionRequest"),
            s("1.2.840.113549.1.9.20", "friendlyName"),
            s("1.2.840.113549.1.9.21", "localKeyId"),
            s("1.2.840.113549.1.9.22.1", "x509Certificate"),
            s("1.2.840.113549.1.12.10.1.1", "keyBag"),
            s("1.2.840.113549.1.12.10.1.2", "pkcs8ShroudedKeyBag"),
            s("1.2.840.113549.1.12.10.1.3", "certBag"),
            s("1.2.840.113549.1.12.10.1.4", "crlBag"),
            s("1.2.840.113549.1.12.10.1.5", "secretBag"),
            s("1.2.840.113549.1.12.10.1.6", "safeContentsBag"),
            s("1.2.840.113549.1.5.13", "pkcs5PBES2"),
            s("1.2.840.113549.1.5.12", "pkcs5PBKDF2"),
            s("1.2.840.113549.1.12.1.1", "pbeWithSHAAnd128BitRC4"),
            s("1.2.840.113549.1.12.1.2", "pbeWithSHAAnd40BitRC4"),
            s("1.2.840.113549.1.12.1.3", "pbeWithSHAAnd3-KeyTripleDES-CBC"),
            s("1.2.840.113549.1.12.1.4", "pbeWithSHAAnd2-KeyTripleDES-CBC"),
            s("1.2.840.113549.1.12.1.5", "pbeWithSHAAnd128BitRC2-CBC"),
            s("1.2.840.113549.1.12.1.6", "pbewithSHAAnd40BitRC2-CBC"),
            s("1.2.840.113549.2.7", "hmacWithSHA1"),
            s("1.2.840.113549.2.8", "hmacWithSHA224"),
            s("1.2.840.113549.2.9", "hmacWithSHA256"),
            s("1.2.840.113549.2.10", "hmacWithSHA384"),
            s("1.2.840.113549.2.11", "hmacWithSHA512"),
            s("1.2.840.113549.3.7", "des-EDE3-CBC"),
            s("2.16.840.1.101.3.4.1.2", "aes128-CBC"),
            s("2.16.840.1.101.3.4.1.22", "aes192-CBC"),
            s("2.16.840.1.101.3.4.1.42", "aes256-CBC"),
            s("2.5.4.3", "commonName"),
            s("2.5.4.5", "serialName"),
            s("2.5.4.6", "countryName"),
            s("2.5.4.7", "localityName"),
            s("2.5.4.8", "stateOrProvinceName"),
            s("2.5.4.9", "streetAddress"),
            s("2.5.4.10", "organizationName"),
            s("2.5.4.11", "organizationalUnitName"),
            s("2.5.4.13", "description"),
            s("2.5.4.15", "businessCategory"),
            s("2.5.4.17", "postalCode"),
            s("1.3.6.1.4.1.311.60.2.1.2", "jurisdictionOfIncorporationStateOrProvinceName"),
            s("1.3.6.1.4.1.311.60.2.1.3", "jurisdictionOfIncorporationCountryName"),
            s("2.16.840.1.113730.1.1", "nsCertType"),
            s("2.16.840.1.113730.1.13", "nsComment"),
            o("2.5.29.1", "authorityKeyIdentifier"),
            o("2.5.29.2", "keyAttributes"),
            o("2.5.29.3", "certificatePolicies"),
            o("2.5.29.4", "keyUsageRestriction"),
            o("2.5.29.5", "policyMapping"),
            o("2.5.29.6", "subtreesConstraint"),
            o("2.5.29.7", "subjectAltName"),
            o("2.5.29.8", "issuerAltName"),
            o("2.5.29.9", "subjectDirectoryAttributes"),
            o("2.5.29.10", "basicConstraints"),
            o("2.5.29.11", "nameConstraints"),
            o("2.5.29.12", "policyConstraints"),
            o("2.5.29.13", "basicConstraints"),
            s("2.5.29.14", "subjectKeyIdentifier"),
            s("2.5.29.15", "keyUsage"),
            o("2.5.29.16", "privateKeyUsagePeriod"),
            s("2.5.29.17", "subjectAltName"),
            s("2.5.29.18", "issuerAltName"),
            s("2.5.29.19", "basicConstraints"),
            o("2.5.29.20", "cRLNumber"),
            o("2.5.29.21", "cRLReason"),
            o("2.5.29.22", "expirationDate"),
            o("2.5.29.23", "instructionCode"),
            o("2.5.29.24", "invalidityDate"),
            o("2.5.29.25", "cRLDistributionPoints"),
            o("2.5.29.26", "issuingDistributionPoint"),
            o("2.5.29.27", "deltaCRLIndicator"),
            o("2.5.29.28", "issuingDistributionPoint"),
            o("2.5.29.29", "certificateIssuer"),
            o("2.5.29.30", "nameConstraints"),
            s("2.5.29.31", "cRLDistributionPoints"),
            s("2.5.29.32", "certificatePolicies"),
            o("2.5.29.33", "policyMappings"),
            o("2.5.29.34", "policyConstraints"),
            s("2.5.29.35", "authorityKeyIdentifier"),
            o("2.5.29.36", "policyConstraints"),
            s("2.5.29.37", "extKeyUsage"),
            o("2.5.29.46", "freshestCRL"),
            o("2.5.29.54", "inhibitAnyPolicy"),
            s("1.3.6.1.4.1.11129.2.4.2", "timestampList"),
            s("1.3.6.1.5.5.7.1.1", "authorityInfoAccess"),
            s("1.3.6.1.5.5.7.3.1", "serverAuth"),
            s("1.3.6.1.5.5.7.3.2", "clientAuth"),
            s("1.3.6.1.5.5.7.3.3", "codeSigning"),
            s("1.3.6.1.5.5.7.3.4", "emailProtection"),
            s("1.3.6.1.5.5.7.3.8", "timeStamping")
        }
        , {
            "./forge": 336
        }],
        343: [function(e, t, r) {
            var i = e("./forge");
            if (e("./aes"),
            e("./asn1"),
            e("./des"),
            e("./md"),
            e("./oids"),
            e("./pbkdf2"),
            e("./pem"),
            e("./random"),
            e("./rc2"),
            e("./rsa"),
            e("./util"),
            void 0 === n)
                var n = i.jsbn.BigInteger;
            var s = i.asn1
              , o = i.pki = i.pki || {};
            t.exports = o.pbe = i.pbe = i.pbe || {};
            var a = o.oids
              , c = {
                name: "EncryptedPrivateKeyInfo",
                tagClass: s.Class.UNIVERSAL,
                type: s.Type.SEQUENCE,
                constructed: !0,
                value: [{
                    name: "EncryptedPrivateKeyInfo.encryptionAlgorithm",
                    tagClass: s.Class.UNIVERSAL,
                    type: s.Type.SEQUENCE,
                    constructed: !0,
                    value: [{
                        name: "AlgorithmIdentifier.algorithm",
                        tagClass: s.Class.UNIVERSAL,
                        type: s.Type.OID,
                        constructed: !1,
                        capture: "encryptionOid"
                    }, {
                        name: "AlgorithmIdentifier.parameters",
                        tagClass: s.Class.UNIVERSAL,
                        type: s.Type.SEQUENCE,
                        constructed: !0,
                        captureAsn1: "encryptionParams"
                    }]
                }, {
                    name: "EncryptedPrivateKeyInfo.encryptedData",
                    tagClass: s.Class.UNIVERSAL,
                    type: s.Type.OCTETSTRING,
                    constructed: !1,
                    capture: "encryptedData"
                }]
            }
              , u = {
                name: "PBES2Algorithms",
                tagClass: s.Class.UNIVERSAL,
                type: s.Type.SEQUENCE,
                constructed: !0,
                value: [{
                    name: "PBES2Algorithms.keyDerivationFunc",
                    tagClass: s.Class.UNIVERSAL,
                    type: s.Type.SEQUENCE,
                    constructed: !0,
                    value: [{
                        name: "PBES2Algorithms.keyDerivationFunc.oid",
                        tagClass: s.Class.UNIVERSAL,
                        type: s.Type.OID,
                        constructed: !1,
                        capture: "kdfOid"
                    }, {
                        name: "PBES2Algorithms.params",
                        tagClass: s.Class.UNIVERSAL,
                        type: s.Type.SEQUENCE,
                        constructed: !0,
                        value: [{
                            name: "PBES2Algorithms.params.salt",
                            tagClass: s.Class.UNIVERSAL,
                            type: s.Type.OCTETSTRING,
                            constructed: !1,
                            capture: "kdfSalt"
                        }, {
                            name: "PBES2Algorithms.params.iterationCount",
                            tagClass: s.Class.UNIVERSAL,
                            type: s.Type.INTEGER,
                            constructed: !1,
                            capture: "kdfIterationCount"
                        }, {
                            name: "PBES2Algorithms.params.keyLength",
                            tagClass: s.Class.UNIVERSAL,
                            type: s.Type.INTEGER,
                            constructed: !1,
                            optional: !0,
                            capture: "keyLength"
                        }, {
                            name: "PBES2Algorithms.params.prf",
                            tagClass: s.Class.UNIVERSAL,
                            type: s.Type.SEQUENCE,
                            constructed: !0,
                            optional: !0,
                            value: [{
                                name: "PBES2Algorithms.params.prf.algorithm",
                                tagClass: s.Class.UNIVERSAL,
                                type: s.Type.OID,
                                constructed: !1,
                                capture: "prfOid"
                            }]
                        }]
                    }]
                }, {
                    name: "PBES2Algorithms.encryptionScheme",
                    tagClass: s.Class.UNIVERSAL,
                    type: s.Type.SEQUENCE,
                    constructed: !0,
                    value: [{
                        name: "PBES2Algorithms.encryptionScheme.oid",
                        tagClass: s.Class.UNIVERSAL,
                        type: s.Type.OID,
                        constructed: !1,
                        capture: "encOid"
                    }, {
                        name: "PBES2Algorithms.encryptionScheme.iv",
                        tagClass: s.Class.UNIVERSAL,
                        type: s.Type.OCTETSTRING,
                        constructed: !1,
                        capture: "encIv"
                    }]
                }]
            }
              , f = {
                name: "pkcs-12PbeParams",
                tagClass: s.Class.UNIVERSAL,
                type: s.Type.SEQUENCE,
                constructed: !0,
                value: [{
                    name: "pkcs-12PbeParams.salt",
                    tagClass: s.Class.UNIVERSAL,
                    type: s.Type.OCTETSTRING,
                    constructed: !1,
                    capture: "salt"
                }, {
                    name: "pkcs-12PbeParams.iterations",
                    tagClass: s.Class.UNIVERSAL,
                    type: s.Type.INTEGER,
                    constructed: !1,
                    capture: "iterations"
                }]
            };
            function h(e, t) {
                return e.start().update(t).digest().getBytes()
            }
            function l(e) {
                var t;
                if (e) {
                    if (!(t = o.oids[s.derToOid(e)])) {
                        var r = new Error("Unsupported PRF OID.");
                        throw r.oid = e,
                        r.supported = ["hmacWithSHA1", "hmacWithSHA224", "hmacWithSHA256", "hmacWithSHA384", "hmacWithSHA512"],
                        r
                    }
                } else
                    t = "hmacWithSHA1";
                return d(t)
            }
            function d(e) {
                var t = i.md;
                switch (e) {
                case "hmacWithSHA224":
                    t = i.md.sha512;
                case "hmacWithSHA1":
                case "hmacWithSHA256":
                case "hmacWithSHA384":
                case "hmacWithSHA512":
                    e = e.substr(8).toLowerCase();
                    break;
                default:
                    var r = new Error("Unsupported PRF algorithm.");
                    throw r.algorithm = e,
                    r.supported = ["hmacWithSHA1", "hmacWithSHA224", "hmacWithSHA256", "hmacWithSHA384", "hmacWithSHA512"],
                    r
                }
                if (!(t && e in t))
                    throw new Error("Unknown hash algorithm: " + e);
                return t[e].create()
            }
            o.encryptPrivateKeyInfo = function(e, t, r) {
                (r = r || {}).saltSize = r.saltSize || 8,
                r.count = r.count || 2048,
                r.algorithm = r.algorithm || "aes128",
                r.prfAlgorithm = r.prfAlgorithm || "sha1";
                var n, c, u, f = i.random.getBytesSync(r.saltSize), h = r.count, l = s.integerToDer(h);
                if (0 === r.algorithm.indexOf("aes") || "des" === r.algorithm) {
                    var p, b, g;
                    switch (r.algorithm) {
                    case "aes128":
                        n = 16,
                        p = 16,
                        b = a["aes128-CBC"],
                        g = i.aes.createEncryptionCipher;
                        break;
                    case "aes192":
                        n = 24,
                        p = 16,
                        b = a["aes192-CBC"],
                        g = i.aes.createEncryptionCipher;
                        break;
                    case "aes256":
                        n = 32,
                        p = 16,
                        b = a["aes256-CBC"],
                        g = i.aes.createEncryptionCipher;
                        break;
                    case "des":
                        n = 8,
                        p = 8,
                        b = a.desCBC,
                        g = i.des.createEncryptionCipher;
                        break;
                    default:
                        throw (_ = new Error("Cannot encrypt private key. Unknown encryption algorithm.")).algorithm = r.algorithm,
                        _
                    }
                    var m = "hmacWith" + r.prfAlgorithm.toUpperCase()
                      , y = d(m)
                      , v = i.pkcs5.pbkdf2(t, f, h, n, y)
                      , w = i.random.getBytesSync(p);
                    (S = g(v)).start(w),
                    S.update(s.toDer(e)),
                    S.finish(),
                    u = S.output.getBytes();
                    var E = function(e, t, r, n) {
                        var a = s.create(s.Class.UNIVERSAL, s.Type.SEQUENCE, !0, [s.create(s.Class.UNIVERSAL, s.Type.OCTETSTRING, !1, e), s.create(s.Class.UNIVERSAL, s.Type.INTEGER, !1, t.getBytes())]);
                        "hmacWithSHA1" !== n && a.value.push(s.create(s.Class.UNIVERSAL, s.Type.INTEGER, !1, i.util.hexToBytes(r.toString(16))), s.create(s.Class.UNIVERSAL, s.Type.SEQUENCE, !0, [s.create(s.Class.UNIVERSAL, s.Type.OID, !1, s.oidToDer(o.oids[n]).getBytes()), s.create(s.Class.UNIVERSAL, s.Type.NULL, !1, "")]));
                        return a
                    }(f, l, n, m);
                    c = s.create(s.Class.UNIVERSAL, s.Type.SEQUENCE, !0, [s.create(s.Class.UNIVERSAL, s.Type.OID, !1, s.oidToDer(a.pkcs5PBES2).getBytes()), s.create(s.Class.UNIVERSAL, s.Type.SEQUENCE, !0, [s.create(s.Class.UNIVERSAL, s.Type.SEQUENCE, !0, [s.create(s.Class.UNIVERSAL, s.Type.OID, !1, s.oidToDer(a.pkcs5PBKDF2).getBytes()), E]), s.create(s.Class.UNIVERSAL, s.Type.SEQUENCE, !0, [s.create(s.Class.UNIVERSAL, s.Type.OID, !1, s.oidToDer(b).getBytes()), s.create(s.Class.UNIVERSAL, s.Type.OCTETSTRING, !1, w)])])])
                } else {
                    var _;
                    if ("3des" !== r.algorithm)
                        throw (_ = new Error("Cannot encrypt private key. Unknown encryption algorithm.")).algorithm = r.algorithm,
                        _;
                    n = 24;
                    var S, k = new i.util.ByteBuffer(f);
                    v = o.pbe.generatePkcs12Key(t, k, 1, h, n),
                    w = o.pbe.generatePkcs12Key(t, k, 2, h, n);
                    (S = i.des.createEncryptionCipher(v)).start(w),
                    S.update(s.toDer(e)),
                    S.finish(),
                    u = S.output.getBytes(),
                    c = s.create(s.Class.UNIVERSAL, s.Type.SEQUENCE, !0, [s.create(s.Class.UNIVERSAL, s.Type.OID, !1, s.oidToDer(a["pbeWithSHAAnd3-KeyTripleDES-CBC"]).getBytes()), s.create(s.Class.UNIVERSAL, s.Type.SEQUENCE, !0, [s.create(s.Class.UNIVERSAL, s.Type.OCTETSTRING, !1, f), s.create(s.Class.UNIVERSAL, s.Type.INTEGER, !1, l.getBytes())])])
                }
                return s.create(s.Class.UNIVERSAL, s.Type.SEQUENCE, !0, [c, s.create(s.Class.UNIVERSAL, s.Type.OCTETSTRING, !1, u)])
            }
            ,
            o.decryptPrivateKeyInfo = function(e, t) {
                var r = null
                  , n = {}
                  , a = [];
                if (!s.validate(e, c, n, a)) {
                    var u = new Error("Cannot read encrypted private key. ASN.1 object is not a supported EncryptedPrivateKeyInfo.");
                    throw u.errors = a,
                    u
                }
                var f = s.derToOid(n.encryptionOid)
                  , h = o.pbe.getCipher(f, n.encryptionParams, t)
                  , l = i.util.createBuffer(n.encryptedData);
                return h.update(l),
                h.finish() && (r = s.fromDer(h.output)),
                r
            }
            ,
            o.encryptedPrivateKeyToPem = function(e, t) {
                var r = {
                    type: "ENCRYPTED PRIVATE KEY",
                    body: s.toDer(e).getBytes()
                };
                return i.pem.encode(r, {
                    maxline: t
                })
            }
            ,
            o.encryptedPrivateKeyFromPem = function(e) {
                var t = i.pem.decode(e)[0];
                if ("ENCRYPTED PRIVATE KEY" !== t.type) {
                    var r = new Error('Could not convert encrypted private key from PEM; PEM header type is "ENCRYPTED PRIVATE KEY".');
                    throw r.headerType = t.type,
                    r
                }
                if (t.procType && "ENCRYPTED" === t.procType.type)
                    throw new Error("Could not convert encrypted private key from PEM; PEM is encrypted.");
                return s.fromDer(t.body)
            }
            ,
            o.encryptRsaPrivateKey = function(e, t, r) {
                if (!(r = r || {}).legacy) {
                    var n = o.wrapRsaPrivateKey(o.privateKeyToAsn1(e));
                    return n = o.encryptPrivateKeyInfo(n, t, r),
                    o.encryptedPrivateKeyToPem(n)
                }
                var a, c, u, f;
                switch (r.algorithm) {
                case "aes128":
                    a = "AES-128-CBC",
                    u = 16,
                    c = i.random.getBytesSync(16),
                    f = i.aes.createEncryptionCipher;
                    break;
                case "aes192":
                    a = "AES-192-CBC",
                    u = 24,
                    c = i.random.getBytesSync(16),
                    f = i.aes.createEncryptionCipher;
                    break;
                case "aes256":
                    a = "AES-256-CBC",
                    u = 32,
                    c = i.random.getBytesSync(16),
                    f = i.aes.createEncryptionCipher;
                    break;
                case "3des":
                    a = "DES-EDE3-CBC",
                    u = 24,
                    c = i.random.getBytesSync(8),
                    f = i.des.createEncryptionCipher;
                    break;
                case "des":
                    a = "DES-CBC",
                    u = 8,
                    c = i.random.getBytesSync(8),
                    f = i.des.createEncryptionCipher;
                    break;
                default:
                    var h = new Error('Could not encrypt RSA private key; unsupported encryption algorithm "' + r.algorithm + '".');
                    throw h.algorithm = r.algorithm,
                    h
                }
                var l = f(i.pbe.opensslDeriveBytes(t, c.substr(0, 8), u));
                l.start(c),
                l.update(s.toDer(o.privateKeyToAsn1(e))),
                l.finish();
                var d = {
                    type: "RSA PRIVATE KEY",
                    procType: {
                        version: "4",
                        type: "ENCRYPTED"
                    },
                    dekInfo: {
                        algorithm: a,
                        parameters: i.util.bytesToHex(c).toUpperCase()
                    },
                    body: l.output.getBytes()
                };
                return i.pem.encode(d)
            }
            ,
            o.decryptRsaPrivateKey = function(e, t) {
                var r = null
                  , n = i.pem.decode(e)[0];
                if ("ENCRYPTED PRIVATE KEY" !== n.type && "PRIVATE KEY" !== n.type && "RSA PRIVATE KEY" !== n.type)
                    throw (u = new Error('Could not convert private key from PEM; PEM header type is not "ENCRYPTED PRIVATE KEY", "PRIVATE KEY", or "RSA PRIVATE KEY".')).headerType = u,
                    u;
                if (n.procType && "ENCRYPTED" === n.procType.type) {
                    var a, c;
                    switch (n.dekInfo.algorithm) {
                    case "DES-CBC":
                        a = 8,
                        c = i.des.createDecryptionCipher;
                        break;
                    case "DES-EDE3-CBC":
                        a = 24,
                        c = i.des.createDecryptionCipher;
                        break;
                    case "AES-128-CBC":
                        a = 16,
                        c = i.aes.createDecryptionCipher;
                        break;
                    case "AES-192-CBC":
                        a = 24,
                        c = i.aes.createDecryptionCipher;
                        break;
                    case "AES-256-CBC":
                        a = 32,
                        c = i.aes.createDecryptionCipher;
                        break;
                    case "RC2-40-CBC":
                        a = 5,
                        c = function(e) {
                            return i.rc2.createDecryptionCipher(e, 40)
                        }
                        ;
                        break;
                    case "RC2-64-CBC":
                        a = 8,
                        c = function(e) {
                            return i.rc2.createDecryptionCipher(e, 64)
                        }
                        ;
                        break;
                    case "RC2-128-CBC":
                        a = 16,
                        c = function(e) {
                            return i.rc2.createDecryptionCipher(e, 128)
                        }
                        ;
                        break;
                    default:
                        var u;
                        throw (u = new Error('Could not decrypt private key; unsupported encryption algorithm "' + n.dekInfo.algorithm + '".')).algorithm = n.dekInfo.algorithm,
                        u
                    }
                    var f = i.util.hexToBytes(n.dekInfo.parameters)
                      , h = c(i.pbe.opensslDeriveBytes(t, f.substr(0, 8), a));
                    if (h.start(f),
                    h.update(i.util.createBuffer(n.body)),
                    !h.finish())
                        return r;
                    r = h.output.getBytes()
                } else
                    r = n.body;
                return null !== (r = "ENCRYPTED PRIVATE KEY" === n.type ? o.decryptPrivateKeyInfo(s.fromDer(r), t) : s.fromDer(r)) && (r = o.privateKeyFromAsn1(r)),
                r
            }
            ,
            o.pbe.generatePkcs12Key = function(e, t, r, n, s, o) {
                var a, c;
                if (null == o) {
                    if (!("sha1"in i.md))
                        throw new Error('"sha1" hash algorithm unavailable.');
                    o = i.md.sha1.create()
                }
                var u = o.digestLength
                  , f = o.blockLength
                  , h = new i.util.ByteBuffer
                  , l = new i.util.ByteBuffer;
                if (null != e) {
                    for (c = 0; c < e.length; c++)
                        l.putInt16(e.charCodeAt(c));
                    l.putInt16(0)
                }
                var d = l.length()
                  , p = t.length()
                  , b = new i.util.ByteBuffer;
                b.fillWithByte(r, f);
                var g = f * Math.ceil(p / f)
                  , m = new i.util.ByteBuffer;
                for (c = 0; c < g; c++)
                    m.putByte(t.at(c % p));
                var y = f * Math.ceil(d / f)
                  , v = new i.util.ByteBuffer;
                for (c = 0; c < y; c++)
                    v.putByte(l.at(c % d));
                var w = m;
                w.putBuffer(v);
                for (var E = Math.ceil(s / u), _ = 1; _ <= E; _++) {
                    var S = new i.util.ByteBuffer;
                    S.putBytes(b.bytes()),
                    S.putBytes(w.bytes());
                    for (var k = 0; k < n; k++)
                        o.start(),
                        o.update(S.getBytes()),
                        S = o.digest();
                    var A = new i.util.ByteBuffer;
                    for (c = 0; c < f; c++)
                        A.putByte(S.at(c % u));
                    var C = Math.ceil(p / f) + Math.ceil(d / f)
                      , I = new i.util.ByteBuffer;
                    for (a = 0; a < C; a++) {
                        var T = new i.util.ByteBuffer(w.getBytes(f))
                          , B = 511;
                        for (c = A.length() - 1; c >= 0; c--)
                            B >>= 8,
                            B += A.at(c) + T.at(c),
                            T.setAt(c, 255 & B);
                        I.putBuffer(T)
                    }
                    w = I,
                    h.putBuffer(S)
                }
                return h.truncate(h.length() - s),
                h
            }
            ,
            o.pbe.getCipher = function(e, t, r) {
                switch (e) {
                case o.oids.pkcs5PBES2:
                    return o.pbe.getCipherForPBES2(e, t, r);
                case o.oids["pbeWithSHAAnd3-KeyTripleDES-CBC"]:
                case o.oids["pbewithSHAAnd40BitRC2-CBC"]:
                    return o.pbe.getCipherForPKCS12PBE(e, t, r);
                default:
                    var i = new Error("Cannot read encrypted PBE data block. Unsupported OID.");
                    throw i.oid = e,
                    i.supportedOids = ["pkcs5PBES2", "pbeWithSHAAnd3-KeyTripleDES-CBC", "pbewithSHAAnd40BitRC2-CBC"],
                    i
                }
            }
            ,
            o.pbe.getCipherForPBES2 = function(e, t, r) {
                var n, a = {}, c = [];
                if (!s.validate(t, u, a, c))
                    throw (n = new Error("Cannot read password-based-encryption algorithm parameters. ASN.1 object is not a supported EncryptedPrivateKeyInfo.")).errors = c,
                    n;
                if ((e = s.derToOid(a.kdfOid)) !== o.oids.pkcs5PBKDF2)
                    throw (n = new Error("Cannot read encrypted private key. Unsupported key derivation function OID.")).oid = e,
                    n.supportedOids = ["pkcs5PBKDF2"],
                    n;
                if ((e = s.derToOid(a.encOid)) !== o.oids["aes128-CBC"] && e !== o.oids["aes192-CBC"] && e !== o.oids["aes256-CBC"] && e !== o.oids["des-EDE3-CBC"] && e !== o.oids.desCBC)
                    throw (n = new Error("Cannot read encrypted private key. Unsupported encryption scheme OID.")).oid = e,
                    n.supportedOids = ["aes128-CBC", "aes192-CBC", "aes256-CBC", "des-EDE3-CBC", "desCBC"],
                    n;
                var f, h, d = a.kdfSalt, p = i.util.createBuffer(a.kdfIterationCount);
                switch (p = p.getInt(p.length() << 3),
                o.oids[e]) {
                case "aes128-CBC":
                    f = 16,
                    h = i.aes.createDecryptionCipher;
                    break;
                case "aes192-CBC":
                    f = 24,
                    h = i.aes.createDecryptionCipher;
                    break;
                case "aes256-CBC":
                    f = 32,
                    h = i.aes.createDecryptionCipher;
                    break;
                case "des-EDE3-CBC":
                    f = 24,
                    h = i.des.createDecryptionCipher;
                    break;
                case "desCBC":
                    f = 8,
                    h = i.des.createDecryptionCipher
                }
                var b = l(a.prfOid)
                  , g = i.pkcs5.pbkdf2(r, d, p, f, b)
                  , m = a.encIv
                  , y = h(g);
                return y.start(m),
                y
            }
            ,
            o.pbe.getCipherForPKCS12PBE = function(e, t, r) {
                var n = {}
                  , a = [];
                if (!s.validate(t, f, n, a))
                    throw (b = new Error("Cannot read password-based-encryption algorithm parameters. ASN.1 object is not a supported EncryptedPrivateKeyInfo.")).errors = a,
                    b;
                var c, u, h, d = i.util.createBuffer(n.salt), p = i.util.createBuffer(n.iterations);
                switch (p = p.getInt(p.length() << 3),
                e) {
                case o.oids["pbeWithSHAAnd3-KeyTripleDES-CBC"]:
                    c = 24,
                    u = 8,
                    h = i.des.startDecrypting;
                    break;
                case o.oids["pbewithSHAAnd40BitRC2-CBC"]:
                    c = 5,
                    u = 8,
                    h = function(e, t) {
                        var r = i.rc2.createDecryptionCipher(e, 40);
                        return r.start(t, null),
                        r
                    }
                    ;
                    break;
                default:
                    var b;
                    throw (b = new Error("Cannot read PKCS #12 PBE data block. Unsupported OID.")).oid = e,
                    b
                }
                var g = l(n.prfOid)
                  , m = o.pbe.generatePkcs12Key(r, d, 1, p, c, g);
                return g.start(),
                h(m, o.pbe.generatePkcs12Key(r, d, 2, p, u, g))
            }
            ,
            o.pbe.opensslDeriveBytes = function(e, t, r, n) {
                if (null == n) {
                    if (!("md5"in i.md))
                        throw new Error('"md5" hash algorithm unavailable.');
                    n = i.md.md5.create()
                }
                null === t && (t = "");
                for (var s = [h(n, e + t)], o = 16, a = 1; o < r; ++a,
                o += 16)
                    s.push(h(n, s[a - 1] + e + t));
                return s.join("").substr(0, r)
            }
        }
        , {
            "./aes": 328,
            "./asn1": 330,
            "./des": 334,
            "./forge": 336,
            "./md": 339,
            "./oids": 342,
            "./pbkdf2": 344,
            "./pem": 345,
            "./random": 352,
            "./rc2": 353,
            "./rsa": 354,
            "./util": 358
        }],
        344: [function(e, t, r) {
            (function(r) {
                var i = e("./forge");
                e("./hmac"),
                e("./md"),
                e("./util");
                var n, s = i.pkcs5 = i.pkcs5 || {};
                i.util.isNodejs && !i.options.usePureJavaScript && (n = e("crypto")),
                t.exports = i.pbkdf2 = s.pbkdf2 = function(e, t, s, o, a, c) {
                    if ("function" == typeof a && (c = a,
                    a = null),
                    i.util.isNodejs && !i.options.usePureJavaScript && n.pbkdf2 && (null === a || "object" != typeof a) && (n.pbkdf2Sync.length > 4 || !a || "sha1" === a))
                        return "string" != typeof a && (a = "sha1"),
                        e = r.from(e, "binary"),
                        t = r.from(t, "binary"),
                        c ? 4 === n.pbkdf2Sync.length ? n.pbkdf2(e, t, s, o, (function(e, t) {
                            if (e)
                                return c(e);
                            c(null, t.toString("binary"))
                        }
                        )) : n.pbkdf2(e, t, s, o, a, (function(e, t) {
                            if (e)
                                return c(e);
                            c(null, t.toString("binary"))
                        }
                        )) : 4 === n.pbkdf2Sync.length ? n.pbkdf2Sync(e, t, s, o).toString("binary") : n.pbkdf2Sync(e, t, s, o, a).toString("binary");
                    if (null == a && (a = "sha1"),
                    "string" == typeof a) {
                        if (!(a in i.md.algorithms))
                            throw new Error("Unknown hash algorithm: " + a);
                        a = i.md[a].create()
                    }
                    var u = a.digestLength;
                    if (o > 4294967295 * u) {
                        var f = new Error("Derived key is too long.");
                        if (c)
                            return c(f);
                        throw f
                    }
                    var h = Math.ceil(o / u)
                      , l = o - (h - 1) * u
                      , d = i.hmac.create();
                    d.start(a, e);
                    var p, b, g, m = "";
                    if (!c) {
                        for (var y = 1; y <= h; ++y) {
                            d.start(null, null),
                            d.update(t),
                            d.update(i.util.int32ToBytes(y)),
                            p = g = d.digest().getBytes();
                            for (var v = 2; v <= s; ++v)
                                d.start(null, null),
                                d.update(g),
                                b = d.digest().getBytes(),
                                p = i.util.xorBytes(p, b, u),
                                g = b;
                            m += y < h ? p : p.substr(0, l)
                        }
                        return m
                    }
                    y = 1;
                    function w() {
                        if (y > h)
                            return c(null, m);
                        d.start(null, null),
                        d.update(t),
                        d.update(i.util.int32ToBytes(y)),
                        p = g = d.digest().getBytes(),
                        v = 2,
                        E()
                    }
                    function E() {
                        if (v <= s)
                            return d.start(null, null),
                            d.update(g),
                            b = d.digest().getBytes(),
                            p = i.util.xorBytes(p, b, u),
                            g = b,
                            ++v,
                            i.util.setImmediate(E);
                        m += y < h ? p : p.substr(0, l),
                        ++y,
                        w()
                    }
                    w()
                }
            }
            ).call(this, e("buffer").Buffer)
        }
        , {
            "./forge": 336,
            "./hmac": 337,
            "./md": 339,
            "./util": 358,
            buffer: 18,
            crypto: 18
        }],
        345: [function(e, t, r) {
            var i = e("./forge");
            e("./util");
            var n = t.exports = i.pem = i.pem || {};
            function s(e) {
                for (var t = e.name + ": ", r = [], i = function(e, t) {
                    return " " + t
                }, n = 0; n < e.values.length; ++n)
                    r.push(e.values[n].replace(/^(\S+\r\n)/, i));
                t += r.join(",") + "\r\n";
                var s = 0
                  , o = -1;
                for (n = 0; n < t.length; ++n,
                ++s)
                    if (s > 65 && -1 !== o) {
                        var a = t[o];
                        "," === a ? (++o,
                        t = t.substr(0, o) + "\r\n " + t.substr(o)) : t = t.substr(0, o) + "\r\n" + a + t.substr(o + 1),
                        s = n - o - 1,
                        o = -1,
                        ++n
                    } else
                        " " !== t[n] && "\t" !== t[n] && "," !== t[n] || (o = n);
                return t
            }
            function o(e) {
                return e.replace(/^\s+/, "")
            }
            n.encode = function(e, t) {
                t = t || {};
                var r, n = "-----BEGIN " + e.type + "-----\r\n";
                if (e.procType && (n += s(r = {
                    name: "Proc-Type",
                    values: [String(e.procType.version), e.procType.type]
                })),
                e.contentDomain && (n += s(r = {
                    name: "Content-Domain",
                    values: [e.contentDomain]
                })),
                e.dekInfo && (r = {
                    name: "DEK-Info",
                    values: [e.dekInfo.algorithm]
                },
                e.dekInfo.parameters && r.values.push(e.dekInfo.parameters),
                n += s(r)),
                e.headers)
                    for (var o = 0; o < e.headers.length; ++o)
                        n += s(e.headers[o]);
                return e.procType && (n += "\r\n"),
                n += i.util.encode64(e.body, t.maxline || 64) + "\r\n",
                n += "-----END " + e.type + "-----\r\n"
            }
            ,
            n.decode = function(e) {
                for (var t, r = [], n = /\s*-----BEGIN ([A-Z0-9- ]+)-----\r?\n?([\x21-\x7e\s]+?(?:\r?\n\r?\n))?([:A-Za-z0-9+\/=\s]+?)-----END \1-----/g, s = /([\x21-\x7e]+):\s*([\x21-\x7e\s^:]+)/, a = /\r?\n/; t = n.exec(e); ) {
                    var c = {
                        type: t[1],
                        procType: null,
                        contentDomain: null,
                        dekInfo: null,
                        headers: [],
                        body: i.util.decode64(t[3])
                    };
                    if (r.push(c),
                    t[2]) {
                        for (var u = t[2].split(a), f = 0; t && f < u.length; ) {
                            for (var h = u[f].replace(/\s+$/, ""), l = f + 1; l < u.length; ++l) {
                                var d = u[l];
                                if (!/\s/.test(d[0]))
                                    break;
                                h += d,
                                f = l
                            }
                            if (t = h.match(s)) {
                                for (var p = {
                                    name: t[1],
                                    values: []
                                }, b = t[2].split(","), g = 0; g < b.length; ++g)
                                    p.values.push(o(b[g]));
                                if (c.procType)
                                    if (c.contentDomain || "Content-Domain" !== p.name)
                                        if (c.dekInfo || "DEK-Info" !== p.name)
                                            c.headers.push(p);
                                        else {
                                            if (0 === p.values.length)
                                                throw new Error('Invalid PEM formatted message. The "DEK-Info" header must have at least one subfield.');
                                            c.dekInfo = {
                                                algorithm: b[0],
                                                parameters: b[1] || null
                                            }
                                        }
                                    else
                                        c.contentDomain = b[0] || "";
                                else {
                                    if ("Proc-Type" !== p.name)
                                        throw new Error('Invalid PEM formatted message. The first encapsulated header must be "Proc-Type".');
                                    if (2 !== p.values.length)
                                        throw new Error('Invalid PEM formatted message. The "Proc-Type" header must have two subfields.');
                                    c.procType = {
                                        version: b[0],
                                        type: b[1]
                                    }
                                }
                            }
                            ++f
                        }
                        if ("ENCRYPTED" === c.procType && !c.dekInfo)
                            throw new Error('Invalid PEM formatted message. The "DEK-Info" header must be present if "Proc-Type" is "ENCRYPTED".')
                    }
                }
                if (0 === r.length)
                    throw new Error("Invalid PEM formatted message.");
                return r
            }
        }
        , {
            "./forge": 336,
            "./util": 358
        }],
        346: [function(e, t, r) {
            var i = e("./forge");
            e("./util"),
            e("./random"),
            e("./sha1");
            var n = t.exports = i.pkcs1 = i.pkcs1 || {};
            function s(e, t, r) {
                r || (r = i.md.sha1.create());
                for (var n = "", s = Math.ceil(t / r.digestLength), o = 0; o < s; ++o) {
                    var a = String.fromCharCode(o >> 24 & 255, o >> 16 & 255, o >> 8 & 255, 255 & o);
                    r.start(),
                    r.update(e + a),
                    n += r.digest().getBytes()
                }
                return n.substring(0, t)
            }
            n.encode_rsa_oaep = function(e, t, r) {
                var n, o, a, c;
                "string" == typeof r ? (n = r,
                o = arguments[3] || void 0,
                a = arguments[4] || void 0) : r && (n = r.label || void 0,
                o = r.seed || void 0,
                a = r.md || void 0,
                r.mgf1 && r.mgf1.md && (c = r.mgf1.md)),
                a ? a.start() : a = i.md.sha1.create(),
                c || (c = a);
                var u = Math.ceil(e.n.bitLength() / 8)
                  , f = u - 2 * a.digestLength - 2;
                if (t.length > f)
                    throw (g = new Error("RSAES-OAEP input message length is too long.")).length = t.length,
                    g.maxLength = f,
                    g;
                n || (n = ""),
                a.update(n, "raw");
                for (var h = a.digest(), l = "", d = f - t.length, p = 0; p < d; p++)
                    l += "\0";
                var b = h.getBytes() + l + "" + t;
                if (o) {
                    if (o.length !== a.digestLength) {
                        var g;
                        throw (g = new Error("Invalid RSAES-OAEP seed. The seed length must match the digest length.")).seedLength = o.length,
                        g.digestLength = a.digestLength,
                        g
                    }
                } else
                    o = i.random.getBytes(a.digestLength);
                var m = s(o, u - a.digestLength - 1, c)
                  , y = i.util.xorBytes(b, m, b.length)
                  , v = s(y, a.digestLength, c)
                  , w = i.util.xorBytes(o, v, o.length);
                return "\0" + w + y
            }
            ,
            n.decode_rsa_oaep = function(e, t, r) {
                var n, o, a;
                "string" == typeof r ? (n = r,
                o = arguments[3] || void 0) : r && (n = r.label || void 0,
                o = r.md || void 0,
                r.mgf1 && r.mgf1.md && (a = r.mgf1.md));
                var c = Math.ceil(e.n.bitLength() / 8);
                if (t.length !== c)
                    throw (y = new Error("RSAES-OAEP encoded message length is invalid.")).length = t.length,
                    y.expectedLength = c,
                    y;
                if (void 0 === o ? o = i.md.sha1.create() : o.start(),
                a || (a = o),
                c < 2 * o.digestLength + 2)
                    throw new Error("RSAES-OAEP key is too short for the hash function.");
                n || (n = ""),
                o.update(n, "raw");
                for (var u = o.digest().getBytes(), f = t.charAt(0), h = t.substring(1, o.digestLength + 1), l = t.substring(1 + o.digestLength), d = s(l, o.digestLength, a), p = i.util.xorBytes(h, d, h.length), b = s(p, c - o.digestLength - 1, a), g = i.util.xorBytes(l, b, l.length), m = g.substring(0, o.digestLength), y = "\0" !== f, v = 0; v < o.digestLength; ++v)
                    y |= u.charAt(v) !== m.charAt(v);
                for (var w = 1, E = o.digestLength, _ = o.digestLength; _ < g.length; _++) {
                    var S = g.charCodeAt(_)
                      , k = 1 & S ^ 1
                      , A = w ? 65534 : 0;
                    y |= S & A,
                    E += w &= k
                }
                if (y || 1 !== g.charCodeAt(E))
                    throw new Error("Invalid RSAES-OAEP padding.");
                return g.substring(E + 1)
            }
        }
        , {
            "./forge": 336,
            "./random": 352,
            "./sha1": 355,
            "./util": 358
        }],
        347: [function(e, t, r) {
            var i = e("./forge");
            e("./aes"),
            e("./asn1"),
            e("./des"),
            e("./oids"),
            e("./pem"),
            e("./pkcs7asn1"),
            e("./random"),
            e("./util"),
            e("./x509");
            var n = i.asn1
              , s = t.exports = i.pkcs7 = i.pkcs7 || {};
            function o(e) {
                var t = {}
                  , r = [];
                if (!n.validate(e, s.asn1.recipientInfoValidator, t, r)) {
                    var o = new Error("Cannot read PKCS#7 RecipientInfo. ASN.1 object is not an PKCS#7 RecipientInfo.");
                    throw o.errors = r,
                    o
                }
                return {
                    version: t.version.charCodeAt(0),
                    issuer: i.pki.RDNAttributesAsArray(t.issuer),
                    serialNumber: i.util.createBuffer(t.serial).toHex(),
                    encryptedContent: {
                        algorithm: n.derToOid(t.encAlgorithm),
                        parameter: t.encParameter.value,
                        content: t.encKey
                    }
                }
            }
            function a(e) {
                for (var t, r = [], s = 0; s < e.length; ++s)
                    r.push((t = e[s],
                    n.create(n.Class.UNIVERSAL, n.Type.SEQUENCE, !0, [n.create(n.Class.UNIVERSAL, n.Type.INTEGER, !1, n.integerToDer(t.version).getBytes()), n.create(n.Class.UNIVERSAL, n.Type.SEQUENCE, !0, [i.pki.distinguishedNameToAsn1({
                        attributes: t.issuer
                    }), n.create(n.Class.UNIVERSAL, n.Type.INTEGER, !1, i.util.hexToBytes(t.serialNumber))]), n.create(n.Class.UNIVERSAL, n.Type.SEQUENCE, !0, [n.create(n.Class.UNIVERSAL, n.Type.OID, !1, n.oidToDer(t.encryptedContent.algorithm).getBytes()), n.create(n.Class.UNIVERSAL, n.Type.NULL, !1, "")]), n.create(n.Class.UNIVERSAL, n.Type.OCTETSTRING, !1, t.encryptedContent.content)])));
                return r
            }
            function c(e) {
                var t = n.create(n.Class.UNIVERSAL, n.Type.SEQUENCE, !0, [n.create(n.Class.UNIVERSAL, n.Type.INTEGER, !1, n.integerToDer(e.version).getBytes()), n.create(n.Class.UNIVERSAL, n.Type.SEQUENCE, !0, [i.pki.distinguishedNameToAsn1({
                    attributes: e.issuer
                }), n.create(n.Class.UNIVERSAL, n.Type.INTEGER, !1, i.util.hexToBytes(e.serialNumber))]), n.create(n.Class.UNIVERSAL, n.Type.SEQUENCE, !0, [n.create(n.Class.UNIVERSAL, n.Type.OID, !1, n.oidToDer(e.digestAlgorithm).getBytes()), n.create(n.Class.UNIVERSAL, n.Type.NULL, !1, "")])]);
                if (e.authenticatedAttributesAsn1 && t.value.push(e.authenticatedAttributesAsn1),
                t.value.push(n.create(n.Class.UNIVERSAL, n.Type.SEQUENCE, !0, [n.create(n.Class.UNIVERSAL, n.Type.OID, !1, n.oidToDer(e.signatureAlgorithm).getBytes()), n.create(n.Class.UNIVERSAL, n.Type.NULL, !1, "")])),
                t.value.push(n.create(n.Class.UNIVERSAL, n.Type.OCTETSTRING, !1, e.signature)),
                e.unauthenticatedAttributes.length > 0) {
                    for (var r = n.create(n.Class.CONTEXT_SPECIFIC, 1, !0, []), s = 0; s < e.unauthenticatedAttributes.length; ++s) {
                        var o = e.unauthenticatedAttributes[s];
                        r.values.push(u(o))
                    }
                    t.value.push(r)
                }
                return t
            }
            function u(e) {
                var t;
                if (e.type === i.pki.oids.contentType)
                    t = n.create(n.Class.UNIVERSAL, n.Type.OID, !1, n.oidToDer(e.value).getBytes());
                else if (e.type === i.pki.oids.messageDigest)
                    t = n.create(n.Class.UNIVERSAL, n.Type.OCTETSTRING, !1, e.value.bytes());
                else if (e.type === i.pki.oids.signingTime) {
                    var r = new Date("1950-01-01T00:00:00Z")
                      , s = new Date("2050-01-01T00:00:00Z")
                      , o = e.value;
                    if ("string" == typeof o) {
                        var a = Date.parse(o);
                        o = isNaN(a) ? 13 === o.length ? n.utcTimeToDate(o) : n.generalizedTimeToDate(o) : new Date(a)
                    }
                    t = o >= r && o < s ? n.create(n.Class.UNIVERSAL, n.Type.UTCTIME, !1, n.dateToUtcTime(o)) : n.create(n.Class.UNIVERSAL, n.Type.GENERALIZEDTIME, !1, n.dateToGeneralizedTime(o))
                }
                return n.create(n.Class.UNIVERSAL, n.Type.SEQUENCE, !0, [n.create(n.Class.UNIVERSAL, n.Type.OID, !1, n.oidToDer(e.type).getBytes()), n.create(n.Class.UNIVERSAL, n.Type.SET, !0, [t])])
            }
            function f(e, t, r) {
                var s = {};
                if (!n.validate(t, r, s, [])) {
                    var o = new Error("Cannot read PKCS#7 message. ASN.1 object is not a supported PKCS#7 message.");
                    throw o.errors = o,
                    o
                }
                if (n.derToOid(s.contentType) !== i.pki.oids.data)
                    throw new Error("Unsupported PKCS#7 message. Only wrapped ContentType Data supported.");
                if (s.encryptedContent) {
                    var a = "";
                    if (i.util.isArray(s.encryptedContent))
                        for (var c = 0; c < s.encryptedContent.length; ++c) {
                            if (s.encryptedContent[c].type !== n.Type.OCTETSTRING)
                                throw new Error("Malformed PKCS#7 message, expecting encrypted content constructed of only OCTET STRING objects.");
                            a += s.encryptedContent[c].value
                        }
                    else
                        a = s.encryptedContent;
                    e.encryptedContent = {
                        algorithm: n.derToOid(s.encAlgorithm),
                        parameter: i.util.createBuffer(s.encParameter.value),
                        content: i.util.createBuffer(a)
                    }
                }
                if (s.content) {
                    a = "";
                    if (i.util.isArray(s.content))
                        for (c = 0; c < s.content.length; ++c) {
                            if (s.content[c].type !== n.Type.OCTETSTRING)
                                throw new Error("Malformed PKCS#7 message, expecting content constructed of only OCTET STRING objects.");
                            a += s.content[c].value
                        }
                    else
                        a = s.content;
                    e.content = i.util.createBuffer(a)
                }
                return e.version = s.version.charCodeAt(0),
                e.rawCapture = s,
                s
            }
            function h(e) {
                if (void 0 === e.encryptedContent.key)
                    throw new Error("Symmetric key not available.");
                if (void 0 === e.content) {
                    var t;
                    switch (e.encryptedContent.algorithm) {
                    case i.pki.oids["aes128-CBC"]:
                    case i.pki.oids["aes192-CBC"]:
                    case i.pki.oids["aes256-CBC"]:
                        t = i.aes.createDecryptionCipher(e.encryptedContent.key);
                        break;
                    case i.pki.oids.desCBC:
                    case i.pki.oids["des-EDE3-CBC"]:
                        t = i.des.createDecryptionCipher(e.encryptedContent.key);
                        break;
                    default:
                        throw new Error("Unsupported symmetric cipher, OID " + e.encryptedContent.algorithm)
                    }
                    if (t.start(e.encryptedContent.parameter),
                    t.update(e.encryptedContent.content),
                    !t.finish())
                        throw new Error("Symmetric decryption failed.");
                    e.content = t.output
                }
            }
            s.messageFromPem = function(e) {
                var t = i.pem.decode(e)[0];
                if ("PKCS7" !== t.type) {
                    var r = new Error('Could not convert PKCS#7 message from PEM; PEM header type is not "PKCS#7".');
                    throw r.headerType = t.type,
                    r
                }
                if (t.procType && "ENCRYPTED" === t.procType.type)
                    throw new Error("Could not convert PKCS#7 message from PEM; PEM is encrypted.");
                var o = n.fromDer(t.body);
                return s.messageFromAsn1(o)
            }
            ,
            s.messageToPem = function(e, t) {
                var r = {
                    type: "PKCS7",
                    body: n.toDer(e.toAsn1()).getBytes()
                };
                return i.pem.encode(r, {
                    maxline: t
                })
            }
            ,
            s.messageFromAsn1 = function(e) {
                var t = {}
                  , r = [];
                if (!n.validate(e, s.asn1.contentInfoValidator, t, r)) {
                    var o = new Error("Cannot read PKCS#7 message. ASN.1 object is not an PKCS#7 ContentInfo.");
                    throw o.errors = r,
                    o
                }
                var a, c = n.derToOid(t.contentType);
                switch (c) {
                case i.pki.oids.envelopedData:
                    a = s.createEnvelopedData();
                    break;
                case i.pki.oids.encryptedData:
                    a = s.createEncryptedData();
                    break;
                case i.pki.oids.signedData:
                    a = s.createSignedData();
                    break;
                default:
                    throw new Error("Cannot read PKCS#7 message. ContentType with OID " + c + " is not (yet) supported.")
                }
                return a.fromAsn1(t.content.value[0]),
                a
            }
            ,
            s.createSignedData = function() {
                var e = null;
                return e = {
                    type: i.pki.oids.signedData,
                    version: 1,
                    certificates: [],
                    crls: [],
                    signers: [],
                    digestAlgorithmIdentifiers: [],
                    contentInfo: null,
                    signerInfos: [],
                    fromAsn1: function(t) {
                        if (f(e, t, s.asn1.signedDataValidator),
                        e.certificates = [],
                        e.crls = [],
                        e.digestAlgorithmIdentifiers = [],
                        e.contentInfo = null,
                        e.signerInfos = [],
                        e.rawCapture.certificates)
                            for (var r = e.rawCapture.certificates.value, n = 0; n < r.length; ++n)
                                e.certificates.push(i.pki.certificateFromAsn1(r[n]))
                    },
                    toAsn1: function() {
                        e.contentInfo || e.sign();
                        for (var t = [], r = 0; r < e.certificates.length; ++r)
                            t.push(i.pki.certificateToAsn1(e.certificates[r]));
                        var s = []
                          , o = n.create(n.Class.CONTEXT_SPECIFIC, 0, !0, [n.create(n.Class.UNIVERSAL, n.Type.SEQUENCE, !0, [n.create(n.Class.UNIVERSAL, n.Type.INTEGER, !1, n.integerToDer(e.version).getBytes()), n.create(n.Class.UNIVERSAL, n.Type.SET, !0, e.digestAlgorithmIdentifiers), e.contentInfo])]);
                        return t.length > 0 && o.value[0].value.push(n.create(n.Class.CONTEXT_SPECIFIC, 0, !0, t)),
                        s.length > 0 && o.value[0].value.push(n.create(n.Class.CONTEXT_SPECIFIC, 1, !0, s)),
                        o.value[0].value.push(n.create(n.Class.UNIVERSAL, n.Type.SET, !0, e.signerInfos)),
                        n.create(n.Class.UNIVERSAL, n.Type.SEQUENCE, !0, [n.create(n.Class.UNIVERSAL, n.Type.OID, !1, n.oidToDer(e.type).getBytes()), o])
                    },
                    addSigner: function(t) {
                        var r = t.issuer
                          , n = t.serialNumber;
                        if (t.certificate) {
                            var s = t.certificate;
                            "string" == typeof s && (s = i.pki.certificateFromPem(s)),
                            r = s.issuer.attributes,
                            n = s.serialNumber
                        }
                        var o = t.key;
                        if (!o)
                            throw new Error("Could not add PKCS#7 signer; no private key specified.");
                        "string" == typeof o && (o = i.pki.privateKeyFromPem(o));
                        var a = t.digestAlgorithm || i.pki.oids.sha1;
                        switch (a) {
                        case i.pki.oids.sha1:
                        case i.pki.oids.sha256:
                        case i.pki.oids.sha384:
                        case i.pki.oids.sha512:
                        case i.pki.oids.md5:
                            break;
                        default:
                            throw new Error("Could not add PKCS#7 signer; unknown message digest algorithm: " + a)
                        }
                        var c = t.authenticatedAttributes || [];
                        if (c.length > 0) {
                            for (var u = !1, f = !1, h = 0; h < c.length; ++h) {
                                var l = c[h];
                                if (u || l.type !== i.pki.oids.contentType) {
                                    if (f || l.type !== i.pki.oids.messageDigest)
                                        ;
                                    else if (f = !0,
                                    u)
                                        break
                                } else if (u = !0,
                                f)
                                    break
                            }
                            if (!u || !f)
                                throw new Error("Invalid signer.authenticatedAttributes. If signer.authenticatedAttributes is specified, then it must contain at least two attributes, PKCS #9 content-type and PKCS #9 message-digest.")
                        }
                        e.signers.push({
                            key: o,
                            version: 1,
                            issuer: r,
                            serialNumber: n,
                            digestAlgorithm: a,
                            signatureAlgorithm: i.pki.oids.rsaEncryption,
                            signature: null,
                            authenticatedAttributes: c,
                            unauthenticatedAttributes: []
                        })
                    },
                    sign: function(t) {
                        var r;
                        (t = t || {},
                        "object" != typeof e.content || null === e.contentInfo) && (e.contentInfo = n.create(n.Class.UNIVERSAL, n.Type.SEQUENCE, !0, [n.create(n.Class.UNIVERSAL, n.Type.OID, !1, n.oidToDer(i.pki.oids.data).getBytes())]),
                        "content"in e && (e.content instanceof i.util.ByteBuffer ? r = e.content.bytes() : "string" == typeof e.content && (r = i.util.encodeUtf8(e.content)),
                        t.detached ? e.detachedContent = n.create(n.Class.UNIVERSAL, n.Type.OCTETSTRING, !1, r) : e.contentInfo.value.push(n.create(n.Class.CONTEXT_SPECIFIC, 0, !0, [n.create(n.Class.UNIVERSAL, n.Type.OCTETSTRING, !1, r)]))));
                        0 !== e.signers.length && function(t) {
                            var r;
                            r = e.detachedContent ? e.detachedContent : (r = e.contentInfo.value[1]).value[0];
                            if (!r)
                                throw new Error("Could not sign PKCS#7 message; there is no content to sign.");
                            var s = n.derToOid(e.contentInfo.value[0].value)
                              , o = n.toDer(r);
                            for (var a in o.getByte(),
                            n.getBerValueLength(o),
                            o = o.getBytes(),
                            t)
                                t[a].start().update(o);
                            for (var f = new Date, h = 0; h < e.signers.length; ++h) {
                                var l = e.signers[h];
                                if (0 === l.authenticatedAttributes.length) {
                                    if (s !== i.pki.oids.data)
                                        throw new Error("Invalid signer; authenticatedAttributes must be present when the ContentInfo content type is not PKCS#7 Data.")
                                } else {
                                    l.authenticatedAttributesAsn1 = n.create(n.Class.CONTEXT_SPECIFIC, 0, !0, []);
                                    for (var d = n.create(n.Class.UNIVERSAL, n.Type.SET, !0, []), p = 0; p < l.authenticatedAttributes.length; ++p) {
                                        var b = l.authenticatedAttributes[p];
                                        b.type === i.pki.oids.messageDigest ? b.value = t[l.digestAlgorithm].digest() : b.type === i.pki.oids.signingTime && (b.value || (b.value = f)),
                                        d.value.push(u(b)),
                                        l.authenticatedAttributesAsn1.value.push(u(b))
                                    }
                                    o = n.toDer(d).getBytes(),
                                    l.md.start().update(o)
                                }
                                l.signature = l.key.sign(l.md, "RSASSA-PKCS1-V1_5")
                            }
                            e.signerInfos = function(e) {
                                for (var t = [], r = 0; r < e.length; ++r)
                                    t.push(c(e[r]));
                                return t
                            }(e.signers)
                        }(function() {
                            for (var t = {}, r = 0; r < e.signers.length; ++r) {
                                var s = e.signers[r];
                                (o = s.digestAlgorithm)in t || (t[o] = i.md[i.pki.oids[o]].create()),
                                0 === s.authenticatedAttributes.length ? s.md = t[o] : s.md = i.md[i.pki.oids[o]].create()
                            }
                            for (var o in e.digestAlgorithmIdentifiers = [],
                            t)
                                e.digestAlgorithmIdentifiers.push(n.create(n.Class.UNIVERSAL, n.Type.SEQUENCE, !0, [n.create(n.Class.UNIVERSAL, n.Type.OID, !1, n.oidToDer(o).getBytes()), n.create(n.Class.UNIVERSAL, n.Type.NULL, !1, "")]));
                            return t
                        }())
                    },
                    verify: function() {
                        throw new Error("PKCS#7 signature verification not yet implemented.")
                    },
                    addCertificate: function(t) {
                        "string" == typeof t && (t = i.pki.certificateFromPem(t)),
                        e.certificates.push(t)
                    },
                    addCertificateRevokationList: function(e) {
                        throw new Error("PKCS#7 CRL support not yet implemented.")
                    }
                }
            }
            ,
            s.createEncryptedData = function() {
                var e = null;
                return e = {
                    type: i.pki.oids.encryptedData,
                    version: 0,
                    encryptedContent: {
                        algorithm: i.pki.oids["aes256-CBC"]
                    },
                    fromAsn1: function(t) {
                        f(e, t, s.asn1.encryptedDataValidator)
                    },
                    decrypt: function(t) {
                        void 0 !== t && (e.encryptedContent.key = t),
                        h(e)
                    }
                }
            }
            ,
            s.createEnvelopedData = function() {
                var e = null;
                return e = {
                    type: i.pki.oids.envelopedData,
                    version: 0,
                    recipients: [],
                    encryptedContent: {
                        algorithm: i.pki.oids["aes256-CBC"]
                    },
                    fromAsn1: function(t) {
                        var r = f(e, t, s.asn1.envelopedDataValidator);
                        e.recipients = function(e) {
                            for (var t = [], r = 0; r < e.length; ++r)
                                t.push(o(e[r]));
                            return t
                        }(r.recipientInfos.value)
                    },
                    toAsn1: function() {
                        return n.create(n.Class.UNIVERSAL, n.Type.SEQUENCE, !0, [n.create(n.Class.UNIVERSAL, n.Type.OID, !1, n.oidToDer(e.type).getBytes()), n.create(n.Class.CONTEXT_SPECIFIC, 0, !0, [n.create(n.Class.UNIVERSAL, n.Type.SEQUENCE, !0, [n.create(n.Class.UNIVERSAL, n.Type.INTEGER, !1, n.integerToDer(e.version).getBytes()), n.create(n.Class.UNIVERSAL, n.Type.SET, !0, a(e.recipients)), n.create(n.Class.UNIVERSAL, n.Type.SEQUENCE, !0, (t = e.encryptedContent,
                        [n.create(n.Class.UNIVERSAL, n.Type.OID, !1, n.oidToDer(i.pki.oids.data).getBytes()), n.create(n.Class.UNIVERSAL, n.Type.SEQUENCE, !0, [n.create(n.Class.UNIVERSAL, n.Type.OID, !1, n.oidToDer(t.algorithm).getBytes()), n.create(n.Class.UNIVERSAL, n.Type.OCTETSTRING, !1, t.parameter.getBytes())]), n.create(n.Class.CONTEXT_SPECIFIC, 0, !0, [n.create(n.Class.UNIVERSAL, n.Type.OCTETSTRING, !1, t.content.getBytes())])]))])])]);
                        var t
                    },
                    findRecipient: function(t) {
                        for (var r = t.issuer.attributes, i = 0; i < e.recipients.length; ++i) {
                            var n = e.recipients[i]
                              , s = n.issuer;
                            if (n.serialNumber === t.serialNumber && s.length === r.length) {
                                for (var o = !0, a = 0; a < r.length; ++a)
                                    if (s[a].type !== r[a].type || s[a].value !== r[a].value) {
                                        o = !1;
                                        break
                                    }
                                if (o)
                                    return n
                            }
                        }
                        return null
                    },
                    decrypt: function(t, r) {
                        if (void 0 === e.encryptedContent.key && void 0 !== t && void 0 !== r)
                            switch (t.encryptedContent.algorithm) {
                            case i.pki.oids.rsaEncryption:
                            case i.pki.oids.desCBC:
                                var n = r.decrypt(t.encryptedContent.content);
                                e.encryptedContent.key = i.util.createBuffer(n);
                                break;
                            default:
                                throw new Error("Unsupported asymmetric cipher, OID " + t.encryptedContent.algorithm)
                            }
                        h(e)
                    },
                    addRecipient: function(t) {
                        e.recipients.push({
                            version: 0,
                            issuer: t.issuer.attributes,
                            serialNumber: t.serialNumber,
                            encryptedContent: {
                                algorithm: i.pki.oids.rsaEncryption,
                                key: t.publicKey
                            }
                        })
                    },
                    encrypt: function(t, r) {
                        if (void 0 === e.encryptedContent.content) {
                            var n, s, o;
                            switch (r = r || e.encryptedContent.algorithm,
                            t = t || e.encryptedContent.key,
                            r) {
                            case i.pki.oids["aes128-CBC"]:
                                n = 16,
                                s = 16,
                                o = i.aes.createEncryptionCipher;
                                break;
                            case i.pki.oids["aes192-CBC"]:
                                n = 24,
                                s = 16,
                                o = i.aes.createEncryptionCipher;
                                break;
                            case i.pki.oids["aes256-CBC"]:
                                n = 32,
                                s = 16,
                                o = i.aes.createEncryptionCipher;
                                break;
                            case i.pki.oids["des-EDE3-CBC"]:
                                n = 24,
                                s = 8,
                                o = i.des.createEncryptionCipher;
                                break;
                            default:
                                throw new Error("Unsupported symmetric cipher, OID " + r)
                            }
                            if (void 0 === t)
                                t = i.util.createBuffer(i.random.getBytes(n));
                            else if (t.length() != n)
                                throw new Error("Symmetric key has wrong length; got " + t.length() + " bytes, expected " + n + ".");
                            e.encryptedContent.algorithm = r,
                            e.encryptedContent.key = t,
                            e.encryptedContent.parameter = i.util.createBuffer(i.random.getBytes(s));
                            var a = o(t);
                            if (a.start(e.encryptedContent.parameter.copy()),
                            a.update(e.content),
                            !a.finish())
                                throw new Error("Symmetric encryption failed.");
                            e.encryptedContent.content = a.output
                        }
                        for (var c = 0; c < e.recipients.length; ++c) {
                            var u = e.recipients[c];
                            if (void 0 === u.encryptedContent.content)
                                switch (u.encryptedContent.algorithm) {
                                case i.pki.oids.rsaEncryption:
                                    u.encryptedContent.content = u.encryptedContent.key.encrypt(e.encryptedContent.key.data);
                                    break;
                                default:
                                    throw new Error("Unsupported asymmetric cipher, OID " + u.encryptedContent.algorithm)
                                }
                        }
                    }
                }
            }
        }
        , {
            "./aes": 328,
            "./asn1": 330,
            "./des": 334,
            "./forge": 336,
            "./oids": 342,
            "./pem": 345,
            "./pkcs7asn1": 348,
            "./random": 352,
            "./util": 358,
            "./x509": 359
        }],
        348: [function(e, t, r) {
            var i = e("./forge");
            e("./asn1"),
            e("./util");
            var n = i.asn1
              , s = t.exports = i.pkcs7asn1 = i.pkcs7asn1 || {};
            i.pkcs7 = i.pkcs7 || {},
            i.pkcs7.asn1 = s;
            var o = {
                name: "ContentInfo",
                tagClass: n.Class.UNIVERSAL,
                type: n.Type.SEQUENCE,
                constructed: !0,
                value: [{
                    name: "ContentInfo.ContentType",
                    tagClass: n.Class.UNIVERSAL,
                    type: n.Type.OID,
                    constructed: !1,
                    capture: "contentType"
                }, {
                    name: "ContentInfo.content",
                    tagClass: n.Class.CONTEXT_SPECIFIC,
                    type: 0,
                    constructed: !0,
                    optional: !0,
                    captureAsn1: "content"
                }]
            };
            s.contentInfoValidator = o;
            var a = {
                name: "EncryptedContentInfo",
                tagClass: n.Class.UNIVERSAL,
                type: n.Type.SEQUENCE,
                constructed: !0,
                value: [{
                    name: "EncryptedContentInfo.contentType",
                    tagClass: n.Class.UNIVERSAL,
                    type: n.Type.OID,
                    constructed: !1,
                    capture: "contentType"
                }, {
                    name: "EncryptedContentInfo.contentEncryptionAlgorithm",
                    tagClass: n.Class.UNIVERSAL,
                    type: n.Type.SEQUENCE,
                    constructed: !0,
                    value: [{
                        name: "EncryptedContentInfo.contentEncryptionAlgorithm.algorithm",
                        tagClass: n.Class.UNIVERSAL,
                        type: n.Type.OID,
                        constructed: !1,
                        capture: "encAlgorithm"
                    }, {
                        name: "EncryptedContentInfo.contentEncryptionAlgorithm.parameter",
                        tagClass: n.Class.UNIVERSAL,
                        captureAsn1: "encParameter"
                    }]
                }, {
                    name: "EncryptedContentInfo.encryptedContent",
                    tagClass: n.Class.CONTEXT_SPECIFIC,
                    type: 0,
                    capture: "encryptedContent",
                    captureAsn1: "encryptedContentAsn1"
                }]
            };
            s.envelopedDataValidator = {
                name: "EnvelopedData",
                tagClass: n.Class.UNIVERSAL,
                type: n.Type.SEQUENCE,
                constructed: !0,
                value: [{
                    name: "EnvelopedData.Version",
                    tagClass: n.Class.UNIVERSAL,
                    type: n.Type.INTEGER,
                    constructed: !1,
                    capture: "version"
                }, {
                    name: "EnvelopedData.RecipientInfos",
                    tagClass: n.Class.UNIVERSAL,
                    type: n.Type.SET,
                    constructed: !0,
                    captureAsn1: "recipientInfos"
                }].concat(a)
            },
            s.encryptedDataValidator = {
                name: "EncryptedData",
                tagClass: n.Class.UNIVERSAL,
                type: n.Type.SEQUENCE,
                constructed: !0,
                value: [{
                    name: "EncryptedData.Version",
                    tagClass: n.Class.UNIVERSAL,
                    type: n.Type.INTEGER,
                    constructed: !1,
                    capture: "version"
                }].concat(a)
            };
            var c = {
                name: "SignerInfo",
                tagClass: n.Class.UNIVERSAL,
                type: n.Type.SEQUENCE,
                constructed: !0,
                value: [{
                    name: "SignerInfo.version",
                    tagClass: n.Class.UNIVERSAL,
                    type: n.Type.INTEGER,
                    constructed: !1
                }, {
                    name: "SignerInfo.issuerAndSerialNumber",
                    tagClass: n.Class.UNIVERSAL,
                    type: n.Type.SEQUENCE,
                    constructed: !0,
                    value: [{
                        name: "SignerInfo.issuerAndSerialNumber.issuer",
                        tagClass: n.Class.UNIVERSAL,
                        type: n.Type.SEQUENCE,
                        constructed: !0,
                        captureAsn1: "issuer"
                    }, {
                        name: "SignerInfo.issuerAndSerialNumber.serialNumber",
                        tagClass: n.Class.UNIVERSAL,
                        type: n.Type.INTEGER,
                        constructed: !1,
                        capture: "serial"
                    }]
                }, {
                    name: "SignerInfo.digestAlgorithm",
                    tagClass: n.Class.UNIVERSAL,
                    type: n.Type.SEQUENCE,
                    constructed: !0,
                    value: [{
                        name: "SignerInfo.digestAlgorithm.algorithm",
                        tagClass: n.Class.UNIVERSAL,
                        type: n.Type.OID,
                        constructed: !1,
                        capture: "digestAlgorithm"
                    }, {
                        name: "SignerInfo.digestAlgorithm.parameter",
                        tagClass: n.Class.UNIVERSAL,
                        constructed: !1,
                        captureAsn1: "digestParameter",
                        optional: !0
                    }]
                }, {
                    name: "SignerInfo.authenticatedAttributes",
                    tagClass: n.Class.CONTEXT_SPECIFIC,
                    type: 0,
                    constructed: !0,
                    optional: !0,
                    capture: "authenticatedAttributes"
                }, {
                    name: "SignerInfo.digestEncryptionAlgorithm",
                    tagClass: n.Class.UNIVERSAL,
                    type: n.Type.SEQUENCE,
                    constructed: !0,
                    capture: "signatureAlgorithm"
                }, {
                    name: "SignerInfo.encryptedDigest",
                    tagClass: n.Class.UNIVERSAL,
                    type: n.Type.OCTETSTRING,
                    constructed: !1,
                    capture: "signature"
                }, {
                    name: "SignerInfo.unauthenticatedAttributes",
                    tagClass: n.Class.CONTEXT_SPECIFIC,
                    type: 1,
                    constructed: !0,
                    optional: !0,
                    capture: "unauthenticatedAttributes"
                }]
            };
            s.signedDataValidator = {
                name: "SignedData",
                tagClass: n.Class.UNIVERSAL,
                type: n.Type.SEQUENCE,
                constructed: !0,
                value: [{
                    name: "SignedData.Version",
                    tagClass: n.Class.UNIVERSAL,
                    type: n.Type.INTEGER,
                    constructed: !1,
                    capture: "version"
                }, {
                    name: "SignedData.DigestAlgorithms",
                    tagClass: n.Class.UNIVERSAL,
                    type: n.Type.SET,
                    constructed: !0,
                    captureAsn1: "digestAlgorithms"
                }, o, {
                    name: "SignedData.Certificates",
                    tagClass: n.Class.CONTEXT_SPECIFIC,
                    type: 0,
                    optional: !0,
                    captureAsn1: "certificates"
                }, {
                    name: "SignedData.CertificateRevocationLists",
                    tagClass: n.Class.CONTEXT_SPECIFIC,
                    type: 1,
                    optional: !0,
                    captureAsn1: "crls"
                }, {
                    name: "SignedData.SignerInfos",
                    tagClass: n.Class.UNIVERSAL,
                    type: n.Type.SET,
                    capture: "signerInfos",
                    optional: !0,
                    value: [c]
                }]
            },
            s.recipientInfoValidator = {
                name: "RecipientInfo",
                tagClass: n.Class.UNIVERSAL,
                type: n.Type.SEQUENCE,
                constructed: !0,
                value: [{
                    name: "RecipientInfo.version",
                    tagClass: n.Class.UNIVERSAL,
                    type: n.Type.INTEGER,
                    constructed: !1,
                    capture: "version"
                }, {
                    name: "RecipientInfo.issuerAndSerial",
                    tagClass: n.Class.UNIVERSAL,
                    type: n.Type.SEQUENCE,
                    constructed: !0,
                    value: [{
                        name: "RecipientInfo.issuerAndSerial.issuer",
                        tagClass: n.Class.UNIVERSAL,
                        type: n.Type.SEQUENCE,
                        constructed: !0,
                        captureAsn1: "issuer"
                    }, {
                        name: "RecipientInfo.issuerAndSerial.serialNumber",
                        tagClass: n.Class.UNIVERSAL,
                        type: n.Type.INTEGER,
                        constructed: !1,
                        capture: "serial"
                    }]
                }, {
                    name: "RecipientInfo.keyEncryptionAlgorithm",
                    tagClass: n.Class.UNIVERSAL,
                    type: n.Type.SEQUENCE,
                    constructed: !0,
                    value: [{
                        name: "RecipientInfo.keyEncryptionAlgorithm.algorithm",
                        tagClass: n.Class.UNIVERSAL,
                        type: n.Type.OID,
                        constructed: !1,
                        capture: "encAlgorithm"
                    }, {
                        name: "RecipientInfo.keyEncryptionAlgorithm.parameter",
                        tagClass: n.Class.UNIVERSAL,
                        constructed: !1,
                        captureAsn1: "encParameter"
                    }]
                }, {
                    name: "RecipientInfo.encryptedKey",
                    tagClass: n.Class.UNIVERSAL,
                    type: n.Type.OCTETSTRING,
                    constructed: !1,
                    capture: "encKey"
                }]
            }
        }
        , {
            "./asn1": 330,
            "./forge": 336,
            "./util": 358
        }],
        349: [function(e, t, r) {
            var i = e("./forge");
            e("./util"),
            e("./jsbn"),
            e("./random"),
            function() {
                if (i.prime)
                    t.exports = i.prime;
                else {
                    var e = t.exports = i.prime = i.prime || {}
                      , r = i.jsbn.BigInteger
                      , n = [6, 4, 2, 4, 2, 4, 6, 2]
                      , s = new r(null);
                    s.fromInt(30);
                    var o = function(e, t) {
                        return e | t
                    };
                    e.generateProbablePrime = function(e, t, n) {
                        "function" == typeof t && (n = t,
                        t = {});
                        var s = (t = t || {}).algorithm || "PRIMEINC";
                        "string" == typeof s && (s = {
                            name: s
                        }),
                        s.options = s.options || {};
                        var o = t.prng || i.random
                          , u = {
                            nextBytes: function(e) {
                                for (var t = o.getBytesSync(e.length), r = 0; r < e.length; ++r)
                                    e[r] = t.charCodeAt(r)
                            }
                        };
                        if ("PRIMEINC" === s.name)
                            return function(e, t, n, s) {
                                if ("workers"in n)
                                    return function(e, t, n, s) {
                                        if ("undefined" == typeof Worker)
                                            return a(e, t, n, s);
                                        var o = c(e, t)
                                          , u = n.workers
                                          , f = n.workLoad || 100
                                          , h = 30 * f / 8
                                          , l = n.workerScript || "forge/prime.worker.js";
                                        if (-1 === u)
                                            return i.util.estimateCores((function(e, t) {
                                                e && (t = 2),
                                                u = t - 1,
                                                d()
                                            }
                                            ));
                                        function d() {
                                            u = Math.max(1, u);
                                            for (var i = [], n = 0; n < u; ++n)
                                                i[n] = new Worker(l);
                                            for (n = 0; n < u; ++n)
                                                i[n].addEventListener("message", d);
                                            var a = !1;
                                            function d(n) {
                                                if (!a) {
                                                    0;
                                                    var u = n.data;
                                                    if (u.found) {
                                                        for (var l = 0; l < i.length; ++l)
                                                            i[l].terminate();
                                                        return a = !0,
                                                        s(null, new r(u.prime,16))
                                                    }
                                                    o.bitLength() > e && (o = c(e, t));
                                                    var d = o.toString(16);
                                                    n.target.postMessage({
                                                        hex: d,
                                                        workLoad: f
                                                    }),
                                                    o.dAddOffset(h, 0)
                                                }
                                            }
                                        }
                                        d()
                                    }(e, t, n, s);
                                return a(e, t, n, s)
                            }(e, u, s.options, n);
                        throw new Error("Invalid prime generation algorithm: " + s.name)
                    }
                }
                function a(e, t, r, s) {
                    var o = c(e, t)
                      , a = function(e) {
                        return e <= 100 ? 27 : e <= 150 ? 18 : e <= 200 ? 15 : e <= 250 ? 12 : e <= 300 ? 9 : e <= 350 ? 8 : e <= 400 ? 7 : e <= 500 ? 6 : e <= 600 ? 5 : e <= 800 ? 4 : e <= 1250 ? 3 : 2
                    }(o.bitLength());
                    "millerRabinTests"in r && (a = r.millerRabinTests);
                    var u = 10;
                    "maxBlockTime"in r && (u = r.maxBlockTime),
                    function e(t, r, s, o, a, u, f) {
                        var h = +new Date;
                        do {
                            if (t.bitLength() > r && (t = c(r, s)),
                            t.isProbablePrime(a))
                                return f(null, t);
                            t.dAddOffset(n[o++ % 8], 0)
                        } while (u < 0 || +new Date - h < u);i.util.setImmediate((function() {
                            e(t, r, s, o, a, u, f)
                        }
                        ))
                    }(o, e, t, 0, a, u, s)
                }
                function c(e, t) {
                    var i = new r(e,t)
                      , n = e - 1;
                    return i.testBit(n) || i.bitwiseTo(r.ONE.shiftLeft(n), o, i),
                    i.dAddOffset(31 - i.mod(s).byteValue(), 0),
                    i
                }
            }()
        }
        , {
            "./forge": 336,
            "./jsbn": 338,
            "./random": 352,
            "./util": 358
        }],
        350: [function(e, t, r) {
            (function(r) {
                var i = e("./forge");
                e("./util");
                var n = null;
                !i.util.isNodejs || i.options.usePureJavaScript || r.versions["node-webkit"] || (n = e("crypto")),
                (t.exports = i.prng = i.prng || {}).create = function(e) {
                    for (var t = {
                        plugin: e,
                        key: null,
                        seed: null,
                        time: null,
                        reseeds: 0,
                        generated: 0,
                        keyBytes: ""
                    }, r = e.md, s = new Array(32), o = 0; o < 32; ++o)
                        s[o] = r.create();
                    function a() {
                        if (t.pools[0].messageLength >= 32)
                            return c();
                        var e = 32 - t.pools[0].messageLength << 5;
                        t.collect(t.seedFileSync(e)),
                        c()
                    }
                    function c() {
                        t.reseeds = 4294967295 === t.reseeds ? 0 : t.reseeds + 1;
                        var e = t.plugin.md.create();
                        e.update(t.keyBytes);
                        for (var r = 1, i = 0; i < 32; ++i)
                            t.reseeds % r == 0 && (e.update(t.pools[i].digest().getBytes()),
                            t.pools[i].start()),
                            r <<= 1;
                        t.keyBytes = e.digest().getBytes(),
                        e.start(),
                        e.update(t.keyBytes);
                        var n = e.digest().getBytes();
                        t.key = t.plugin.formatKey(t.keyBytes),
                        t.seed = t.plugin.formatSeed(n),
                        t.generated = 0
                    }
                    function u(e) {
                        var t = null
                          , r = i.util.globalScope
                          , n = r.crypto || r.msCrypto;
                        n && n.getRandomValues && (t = function(e) {
                            return n.getRandomValues(e)
                        }
                        );
                        var s = i.util.createBuffer();
                        if (t)
                            for (; s.length() < e; ) {
                                var o = Math.max(1, Math.min(e - s.length(), 65536) / 4)
                                  , a = new Uint32Array(Math.floor(o));
                                try {
                                    t(a);
                                    for (var c = 0; c < a.length; ++c)
                                        s.putInt32(a[c])
                                } catch (e) {
                                    if (!("undefined" != typeof QuotaExceededError && e instanceof QuotaExceededError))
                                        throw e
                                }
                            }
                        if (s.length() < e)
                            for (var u, f, h, l = Math.floor(65536 * Math.random()); s.length() < e; ) {
                                f = 16807 * (65535 & l),
                                f += (32767 & (u = 16807 * (l >> 16))) << 16,
                                l = 4294967295 & (f = (2147483647 & (f += u >> 15)) + (f >> 31));
                                for (c = 0; c < 3; ++c)
                                    h = l >>> (c << 3),
                                    h ^= Math.floor(256 * Math.random()),
                                    s.putByte(String.fromCharCode(255 & h))
                            }
                        return s.getBytes(e)
                    }
                    return t.pools = s,
                    t.pool = 0,
                    t.generate = function(e, r) {
                        if (!r)
                            return t.generateSync(e);
                        var n = t.plugin.cipher
                          , s = t.plugin.increment
                          , o = t.plugin.formatKey
                          , a = t.plugin.formatSeed
                          , u = i.util.createBuffer();
                        t.key = null,
                        function f(h) {
                            if (h)
                                return r(h);
                            if (u.length() >= e)
                                return r(null, u.getBytes(e));
                            t.generated > 1048575 && (t.key = null);
                            if (null === t.key)
                                return i.util.nextTick((function() {
                                    !function(e) {
                                        if (t.pools[0].messageLength >= 32)
                                            return c(),
                                            e();
                                        var r = 32 - t.pools[0].messageLength << 5;
                                        t.seedFile(r, (function(r, i) {
                                            if (r)
                                                return e(r);
                                            t.collect(i),
                                            c(),
                                            e()
                                        }
                                        ))
                                    }(f)
                                }
                                ));
                            var l = n(t.key, t.seed);
                            t.generated += l.length;
                            u.putBytes(l);
                            t.key = o(n(t.key, s(t.seed)));
                            t.seed = a(n(t.key, t.seed));
                            i.util.setImmediate(f)
                        }()
                    }
                    ,
                    t.generateSync = function(e) {
                        var r = t.plugin.cipher
                          , n = t.plugin.increment
                          , s = t.plugin.formatKey
                          , o = t.plugin.formatSeed;
                        t.key = null;
                        for (var c = i.util.createBuffer(); c.length() < e; ) {
                            t.generated > 1048575 && (t.key = null),
                            null === t.key && a();
                            var u = r(t.key, t.seed);
                            t.generated += u.length,
                            c.putBytes(u),
                            t.key = s(r(t.key, n(t.seed))),
                            t.seed = o(r(t.key, t.seed))
                        }
                        return c.getBytes(e)
                    }
                    ,
                    n ? (t.seedFile = function(e, t) {
                        n.randomBytes(e, (function(e, r) {
                            if (e)
                                return t(e);
                            t(null, r.toString())
                        }
                        ))
                    }
                    ,
                    t.seedFileSync = function(e) {
                        return n.randomBytes(e).toString()
                    }
                    ) : (t.seedFile = function(e, t) {
                        try {
                            t(null, u(e))
                        } catch (e) {
                            t(e)
                        }
                    }
                    ,
                    t.seedFileSync = u),
                    t.collect = function(e) {
                        for (var r = e.length, i = 0; i < r; ++i)
                            t.pools[t.pool].update(e.substr(i, 1)),
                            t.pool = 31 === t.pool ? 0 : t.pool + 1
                    }
                    ,
                    t.collectInt = function(e, r) {
                        for (var i = "", n = 0; n < r; n += 8)
                            i += String.fromCharCode(e >> n & 255);
                        t.collect(i)
                    }
                    ,
                    t.registerWorker = function(e) {
                        if (e === self)
                            t.seedFile = function(e, t) {
                                self.addEventListener("message", (function e(r) {
                                    var i = r.data;
                                    i.forge && i.forge.prng && (self.removeEventListener("message", e),
                                    t(i.forge.prng.err, i.forge.prng.bytes))
                                }
                                )),
                                self.postMessage({
                                    forge: {
                                        prng: {
                                            needed: e
                                        }
                                    }
                                })
                            }
                            ;
                        else {
                            e.addEventListener("message", (function(r) {
                                var i = r.data;
                                i.forge && i.forge.prng && t.seedFile(i.forge.prng.needed, (function(t, r) {
                                    e.postMessage({
                                        forge: {
                                            prng: {
                                                err: t,
                                                bytes: r
                                            }
                                        }
                                    })
                                }
                                ))
                            }
                            ))
                        }
                    }
                    ,
                    t
                }
            }
            ).call(this, e("_process"))
        }
        , {
            "./forge": 336,
            "./util": 358,
            _process: 118,
            crypto: 18
        }],
        351: [function(e, t, r) {
            var i = e("./forge");
            e("./random"),
            e("./util"),
            (t.exports = i.pss = i.pss || {}).create = function(e) {
                3 === arguments.length && (e = {
                    md: arguments[0],
                    mgf: arguments[1],
                    saltLength: arguments[2]
                });
                var t, r = e.md, n = e.mgf, s = r.digestLength, o = e.salt || null;
                if ("string" == typeof o && (o = i.util.createBuffer(o)),
                "saltLength"in e)
                    t = e.saltLength;
                else {
                    if (null === o)
                        throw new Error("Salt length not specified or specific salt not given.");
                    t = o.length()
                }
                if (null !== o && o.length() !== t)
                    throw new Error("Given salt length does not match length of given salt.");
                var a = e.prng || i.random
                  , c = {
                    encode: function(e, c) {
                        var u, f, h = c - 1, l = Math.ceil(h / 8), d = e.digest().getBytes();
                        if (l < s + t + 2)
                            throw new Error("Message is too long to encrypt.");
                        f = null === o ? a.getBytesSync(t) : o.bytes();
                        var p = new i.util.ByteBuffer;
                        p.fillWithByte(0, 8),
                        p.putBytes(d),
                        p.putBytes(f),
                        r.start(),
                        r.update(p.getBytes());
                        var b = r.digest().getBytes()
                          , g = new i.util.ByteBuffer;
                        g.fillWithByte(0, l - t - s - 2),
                        g.putByte(1),
                        g.putBytes(f);
                        var m = g.getBytes()
                          , y = l - s - 1
                          , v = n.generate(b, y)
                          , w = "";
                        for (u = 0; u < y; u++)
                            w += String.fromCharCode(m.charCodeAt(u) ^ v.charCodeAt(u));
                        var E = 65280 >> 8 * l - h & 255;
                        return (w = String.fromCharCode(w.charCodeAt(0) & ~E) + w.substr(1)) + b + String.fromCharCode(188)
                    },
                    verify: function(e, o, a) {
                        var c, u = a - 1, f = Math.ceil(u / 8);
                        if (o = o.substr(-f),
                        f < s + t + 2)
                            throw new Error("Inconsistent parameters to PSS signature verification.");
                        if (188 !== o.charCodeAt(f - 1))
                            throw new Error("Encoded message does not end in 0xBC.");
                        var h = f - s - 1
                          , l = o.substr(0, h)
                          , d = o.substr(h, s)
                          , p = 65280 >> 8 * f - u & 255;
                        if (0 != (l.charCodeAt(0) & p))
                            throw new Error("Bits beyond keysize not zero as expected.");
                        var b = n.generate(d, h)
                          , g = "";
                        for (c = 0; c < h; c++)
                            g += String.fromCharCode(l.charCodeAt(c) ^ b.charCodeAt(c));
                        g = String.fromCharCode(g.charCodeAt(0) & ~p) + g.substr(1);
                        var m = f - s - t - 2;
                        for (c = 0; c < m; c++)
                            if (0 !== g.charCodeAt(c))
                                throw new Error("Leftmost octets not zero as expected");
                        if (1 !== g.charCodeAt(m))
                            throw new Error("Inconsistent PSS signature, 0x01 marker not found");
                        var y = g.substr(-t)
                          , v = new i.util.ByteBuffer;
                        return v.fillWithByte(0, 8),
                        v.putBytes(e),
                        v.putBytes(y),
                        r.start(),
                        r.update(v.getBytes()),
                        d === r.digest().getBytes()
                    }
                };
                return c
            }
        }
        , {
            "./forge": 336,
            "./random": 352,
            "./util": 358
        }],
        352: [function(e, t, r) {
            var i = e("./forge");
            e("./aes"),
            e("./sha256"),
            e("./prng"),
            e("./util"),
            i.random && i.random.getBytes ? t.exports = i.random : function(e) {
                var r = {}
                  , n = new Array(4)
                  , s = i.util.createBuffer();
                function o() {
                    var e = i.prng.create(r);
                    return e.getBytes = function(t, r) {
                        return e.generate(t, r)
                    }
                    ,
                    e.getBytesSync = function(t) {
                        return e.generate(t)
                    }
                    ,
                    e
                }
                r.formatKey = function(e) {
                    var t = i.util.createBuffer(e);
                    return (e = new Array(4))[0] = t.getInt32(),
                    e[1] = t.getInt32(),
                    e[2] = t.getInt32(),
                    e[3] = t.getInt32(),
                    i.aes._expandKey(e, !1)
                }
                ,
                r.formatSeed = function(e) {
                    var t = i.util.createBuffer(e);
                    return (e = new Array(4))[0] = t.getInt32(),
                    e[1] = t.getInt32(),
                    e[2] = t.getInt32(),
                    e[3] = t.getInt32(),
                    e
                }
                ,
                r.cipher = function(e, t) {
                    return i.aes._updateBlock(e, t, n, !1),
                    s.putInt32(n[0]),
                    s.putInt32(n[1]),
                    s.putInt32(n[2]),
                    s.putInt32(n[3]),
                    s.getBytes()
                }
                ,
                r.increment = function(e) {
                    return ++e[3],
                    e
                }
                ,
                r.md = i.md.sha256;
                var a = o()
                  , c = null
                  , u = i.util.globalScope
                  , f = u.crypto || u.msCrypto;
                if (f && f.getRandomValues && (c = function(e) {
                    return f.getRandomValues(e)
                }
                ),
                i.options.usePureJavaScript || !i.util.isNodejs && !c) {
                    if ("undefined" == typeof window || window.document,
                    a.collectInt(+new Date, 32),
                    "undefined" != typeof navigator) {
                        var h = "";
                        for (var l in navigator)
                            try {
                                "string" == typeof navigator[l] && (h += navigator[l])
                            } catch (e) {}
                        a.collect(h),
                        h = null
                    }
                    e && (e().mousemove((function(e) {
                        a.collectInt(e.clientX, 16),
                        a.collectInt(e.clientY, 16)
                    }
                    )),
                    e().keypress((function(e) {
                        a.collectInt(e.charCode, 8)
                    }
                    )))
                }
                if (i.random)
                    for (var l in a)
                        i.random[l] = a[l];
                else
                    i.random = a;
                i.random.createInstance = o,
                t.exports = i.random
            }("undefined" != typeof jQuery ? jQuery : null)
        }
        , {
            "./aes": 328,
            "./forge": 336,
            "./prng": 350,
            "./sha256": 356,
            "./util": 358
        }],
        353: [function(e, t, r) {
            var i = e("./forge");
            e("./util");
            var n = [217, 120, 249, 196, 25, 221, 181, 237, 40, 233, 253, 121, 74, 160, 216, 157, 198, 126, 55, 131, 43, 118, 83, 142, 98, 76, 100, 136, 68, 139, 251, 162, 23, 154, 89, 245, 135, 179, 79, 19, 97, 69, 109, 141, 9, 129, 125, 50, 189, 143, 64, 235, 134, 183, 123, 11, 240, 149, 33, 34, 92, 107, 78, 130, 84, 214, 101, 147, 206, 96, 178, 28, 115, 86, 192, 20, 167, 140, 241, 220, 18, 117, 202, 31, 59, 190, 228, 209, 66, 61, 212, 48, 163, 60, 182, 38, 111, 191, 14, 218, 70, 105, 7, 87, 39, 242, 29, 155, 188, 148, 67, 3, 248, 17, 199, 246, 144, 239, 62, 231, 6, 195, 213, 47, 200, 102, 30, 215, 8, 232, 234, 222, 128, 82, 238, 247, 132, 170, 114, 172, 53, 77, 106, 42, 150, 26, 210, 113, 90, 21, 73, 116, 75, 159, 208, 94, 4, 24, 164, 236, 194, 224, 65, 110, 15, 81, 203, 204, 36, 145, 175, 80, 161, 244, 112, 57, 153, 124, 58, 133, 35, 184, 180, 122, 252, 2, 54, 91, 37, 85, 151, 49, 45, 93, 250, 152, 227, 138, 146, 174, 5, 223, 41, 16, 103, 108, 186, 201, 211, 0, 230, 207, 225, 158, 168, 44, 99, 22, 1, 63, 88, 226, 137, 169, 13, 56, 52, 27, 171, 51, 255, 176, 187, 72, 12, 95, 185, 177, 205, 46, 197, 243, 219, 71, 229, 165, 156, 119, 10, 166, 32, 104, 254, 127, 193, 173]
              , s = [1, 2, 3, 5]
              , o = function(e, t) {
                return e << t & 65535 | (65535 & e) >> 16 - t
            }
              , a = function(e, t) {
                return (65535 & e) >> t | e << 16 - t & 65535
            };
            t.exports = i.rc2 = i.rc2 || {},
            i.rc2.expandKey = function(e, t) {
                "string" == typeof e && (e = i.util.createBuffer(e)),
                t = t || 128;
                var r, s = e, o = e.length(), a = t, c = Math.ceil(a / 8), u = 255 >> (7 & a);
                for (r = o; r < 128; r++)
                    s.putByte(n[s.at(r - 1) + s.at(r - o) & 255]);
                for (s.setAt(128 - c, n[s.at(128 - c) & u]),
                r = 127 - c; r >= 0; r--)
                    s.setAt(r, n[s.at(r + 1) ^ s.at(r + c)]);
                return s
            }
            ;
            var c = function(e, t, r) {
                var n, c, u, f, h = !1, l = null, d = null, p = null, b = [];
                for (e = i.rc2.expandKey(e, t),
                u = 0; u < 64; u++)
                    b.push(e.getInt16Le());
                r ? (n = function(e) {
                    for (u = 0; u < 4; u++)
                        e[u] += b[f] + (e[(u + 3) % 4] & e[(u + 2) % 4]) + (~e[(u + 3) % 4] & e[(u + 1) % 4]),
                        e[u] = o(e[u], s[u]),
                        f++
                }
                ,
                c = function(e) {
                    for (u = 0; u < 4; u++)
                        e[u] += b[63 & e[(u + 3) % 4]]
                }
                ) : (n = function(e) {
                    for (u = 3; u >= 0; u--)
                        e[u] = a(e[u], s[u]),
                        e[u] -= b[f] + (e[(u + 3) % 4] & e[(u + 2) % 4]) + (~e[(u + 3) % 4] & e[(u + 1) % 4]),
                        f--
                }
                ,
                c = function(e) {
                    for (u = 3; u >= 0; u--)
                        e[u] -= b[63 & e[(u + 3) % 4]]
                }
                );
                var g = function(e) {
                    var t = [];
                    for (u = 0; u < 4; u++) {
                        var i = l.getInt16Le();
                        null !== p && (r ? i ^= p.getInt16Le() : p.putInt16Le(i)),
                        t.push(65535 & i)
                    }
                    f = r ? 0 : 63;
                    for (var n = 0; n < e.length; n++)
                        for (var s = 0; s < e[n][0]; s++)
                            e[n][1](t);
                    for (u = 0; u < 4; u++)
                        null !== p && (r ? p.putInt16Le(t[u]) : t[u] ^= p.getInt16Le()),
                        d.putInt16Le(t[u])
                }
                  , m = null;
                return m = {
                    start: function(e, t) {
                        e && "string" == typeof e && (e = i.util.createBuffer(e)),
                        h = !1,
                        l = i.util.createBuffer(),
                        d = t || new i.util.createBuffer,
                        p = e,
                        m.output = d
                    },
                    update: function(e) {
                        for (h || l.putBuffer(e); l.length() >= 8; )
                            g([[5, n], [1, c], [6, n], [1, c], [5, n]])
                    },
                    finish: function(e) {
                        var t = !0;
                        if (r)
                            if (e)
                                t = e(8, l, !r);
                            else {
                                var i = 8 === l.length() ? 8 : 8 - l.length();
                                l.fillWithByte(i, i)
                            }
                        if (t && (h = !0,
                        m.update()),
                        !r && (t = 0 === l.length()))
                            if (e)
                                t = e(8, d, !r);
                            else {
                                var n = d.length()
                                  , s = d.at(n - 1);
                                s > n ? t = !1 : d.truncate(s)
                            }
                        return t
                    }
                }
            };
            i.rc2.startEncrypting = function(e, t, r) {
                var n = i.rc2.createEncryptionCipher(e, 128);
                return n.start(t, r),
                n
            }
            ,
            i.rc2.createEncryptionCipher = function(e, t) {
                return c(e, t, !0)
            }
            ,
            i.rc2.startDecrypting = function(e, t, r) {
                var n = i.rc2.createDecryptionCipher(e, 128);
                return n.start(t, r),
                n
            }
            ,
            i.rc2.createDecryptionCipher = function(e, t) {
                return c(e, t, !1)
            }
        }
        , {
            "./forge": 336,
            "./util": 358
        }],
        354: [function(e, t, r) {
            var i = e("./forge");
            if (e("./asn1"),
            e("./jsbn"),
            e("./oids"),
            e("./pkcs1"),
            e("./prime"),
            e("./random"),
            e("./util"),
            void 0 === n)
                var n = i.jsbn.BigInteger;
            var s = i.util.isNodejs ? e("crypto") : null
              , o = i.asn1
              , a = i.util;
            i.pki = i.pki || {},
            t.exports = i.pki.rsa = i.rsa = i.rsa || {};
            var c = i.pki
              , u = [6, 4, 2, 4, 2, 4, 6, 2]
              , f = {
                name: "PrivateKeyInfo",
                tagClass: o.Class.UNIVERSAL,
                type: o.Type.SEQUENCE,
                constructed: !0,
                value: [{
                    name: "PrivateKeyInfo.version",
                    tagClass: o.Class.UNIVERSAL,
                    type: o.Type.INTEGER,
                    constructed: !1,
                    capture: "privateKeyVersion"
                }, {
                    name: "PrivateKeyInfo.privateKeyAlgorithm",
                    tagClass: o.Class.UNIVERSAL,
                    type: o.Type.SEQUENCE,
                    constructed: !0,
                    value: [{
                        name: "AlgorithmIdentifier.algorithm",
                        tagClass: o.Class.UNIVERSAL,
                        type: o.Type.OID,
                        constructed: !1,
                        capture: "privateKeyOid"
                    }]
                }, {
                    name: "PrivateKeyInfo",
                    tagClass: o.Class.UNIVERSAL,
                    type: o.Type.OCTETSTRING,
                    constructed: !1,
                    capture: "privateKey"
                }]
            }
              , h = {
                name: "RSAPrivateKey",
                tagClass: o.Class.UNIVERSAL,
                type: o.Type.SEQUENCE,
                constructed: !0,
                value: [{
                    name: "RSAPrivateKey.version",
                    tagClass: o.Class.UNIVERSAL,
                    type: o.Type.INTEGER,
                    constructed: !1,
                    capture: "privateKeyVersion"
                }, {
                    name: "RSAPrivateKey.modulus",
                    tagClass: o.Class.UNIVERSAL,
                    type: o.Type.INTEGER,
                    constructed: !1,
                    capture: "privateKeyModulus"
                }, {
                    name: "RSAPrivateKey.publicExponent",
                    tagClass: o.Class.UNIVERSAL,
                    type: o.Type.INTEGER,
                    constructed: !1,
                    capture: "privateKeyPublicExponent"
                }, {
                    name: "RSAPrivateKey.privateExponent",
                    tagClass: o.Class.UNIVERSAL,
                    type: o.Type.INTEGER,
                    constructed: !1,
                    capture: "privateKeyPrivateExponent"
                }, {
                    name: "RSAPrivateKey.prime1",
                    tagClass: o.Class.UNIVERSAL,
                    type: o.Type.INTEGER,
                    constructed: !1,
                    capture: "privateKeyPrime1"
                }, {
                    name: "RSAPrivateKey.prime2",
                    tagClass: o.Class.UNIVERSAL,
                    type: o.Type.INTEGER,
                    constructed: !1,
                    capture: "privateKeyPrime2"
                }, {
                    name: "RSAPrivateKey.exponent1",
                    tagClass: o.Class.UNIVERSAL,
                    type: o.Type.INTEGER,
                    constructed: !1,
                    capture: "privateKeyExponent1"
                }, {
                    name: "RSAPrivateKey.exponent2",
                    tagClass: o.Class.UNIVERSAL,
                    type: o.Type.INTEGER,
                    constructed: !1,
                    capture: "privateKeyExponent2"
                }, {
                    name: "RSAPrivateKey.coefficient",
                    tagClass: o.Class.UNIVERSAL,
                    type: o.Type.INTEGER,
                    constructed: !1,
                    capture: "privateKeyCoefficient"
                }]
            }
              , l = {
                name: "RSAPublicKey",
                tagClass: o.Class.UNIVERSAL,
                type: o.Type.SEQUENCE,
                constructed: !0,
                value: [{
                    name: "RSAPublicKey.modulus",
                    tagClass: o.Class.UNIVERSAL,
                    type: o.Type.INTEGER,
                    constructed: !1,
                    capture: "publicKeyModulus"
                }, {
                    name: "RSAPublicKey.exponent",
                    tagClass: o.Class.UNIVERSAL,
                    type: o.Type.INTEGER,
                    constructed: !1,
                    capture: "publicKeyExponent"
                }]
            }
              , d = i.pki.rsa.publicKeyValidator = {
                name: "SubjectPublicKeyInfo",
                tagClass: o.Class.UNIVERSAL,
                type: o.Type.SEQUENCE,
                constructed: !0,
                captureAsn1: "subjectPublicKeyInfo",
                value: [{
                    name: "SubjectPublicKeyInfo.AlgorithmIdentifier",
                    tagClass: o.Class.UNIVERSAL,
                    type: o.Type.SEQUENCE,
                    constructed: !0,
                    value: [{
                        name: "AlgorithmIdentifier.algorithm",
                        tagClass: o.Class.UNIVERSAL,
                        type: o.Type.OID,
                        constructed: !1,
                        capture: "publicKeyOid"
                    }]
                }, {
                    name: "SubjectPublicKeyInfo.subjectPublicKey",
                    tagClass: o.Class.UNIVERSAL,
                    type: o.Type.BITSTRING,
                    constructed: !1,
                    value: [{
                        name: "SubjectPublicKeyInfo.subjectPublicKey.RSAPublicKey",
                        tagClass: o.Class.UNIVERSAL,
                        type: o.Type.SEQUENCE,
                        constructed: !0,
                        optional: !0,
                        captureAsn1: "rsaPublicKey"
                    }]
                }]
            }
              , p = function(e) {
                var t;
                if (!(e.algorithm in c.oids)) {
                    var r = new Error("Unknown message digest algorithm.");
                    throw r.algorithm = e.algorithm,
                    r
                }
                t = c.oids[e.algorithm];
                var i = o.oidToDer(t).getBytes()
                  , n = o.create(o.Class.UNIVERSAL, o.Type.SEQUENCE, !0, [])
                  , s = o.create(o.Class.UNIVERSAL, o.Type.SEQUENCE, !0, []);
                s.value.push(o.create(o.Class.UNIVERSAL, o.Type.OID, !1, i)),
                s.value.push(o.create(o.Class.UNIVERSAL, o.Type.NULL, !1, ""));
                var a = o.create(o.Class.UNIVERSAL, o.Type.OCTETSTRING, !1, e.digest().getBytes());
                return n.value.push(s),
                n.value.push(a),
                o.toDer(n).getBytes()
            }
              , b = function(e, t, r) {
                if (r)
                    return e.modPow(t.e, t.n);
                if (!t.p || !t.q)
                    return e.modPow(t.d, t.n);
                var s;
                t.dP || (t.dP = t.d.mod(t.p.subtract(n.ONE))),
                t.dQ || (t.dQ = t.d.mod(t.q.subtract(n.ONE))),
                t.qInv || (t.qInv = t.q.modInverse(t.p));
                do {
                    s = new n(i.util.bytesToHex(i.random.getBytes(t.n.bitLength() / 8)),16)
                } while (s.compareTo(t.n) >= 0 || !s.gcd(t.n).equals(n.ONE));for (var o = (e = e.multiply(s.modPow(t.e, t.n)).mod(t.n)).mod(t.p).modPow(t.dP, t.p), a = e.mod(t.q).modPow(t.dQ, t.q); o.compareTo(a) < 0; )
                    o = o.add(t.p);
                var c = o.subtract(a).multiply(t.qInv).mod(t.p).multiply(t.q).add(a);
                return c = c.multiply(s.modInverse(t.n)).mod(t.n)
            };
            function g(e, t, r) {
                var n = i.util.createBuffer()
                  , s = Math.ceil(t.n.bitLength() / 8);
                if (e.length > s - 11) {
                    var o = new Error("Message is too long for PKCS#1 v1.5 padding.");
                    throw o.length = e.length,
                    o.max = s - 11,
                    o
                }
                n.putByte(0),
                n.putByte(r);
                var a, c = s - 3 - e.length;
                if (0 === r || 1 === r) {
                    a = 0 === r ? 0 : 255;
                    for (var u = 0; u < c; ++u)
                        n.putByte(a)
                } else
                    for (; c > 0; ) {
                        var f = 0
                          , h = i.random.getBytes(c);
                        for (u = 0; u < c; ++u)
                            0 === (a = h.charCodeAt(u)) ? ++f : n.putByte(a);
                        c = f
                    }
                return n.putByte(0),
                n.putBytes(e),
                n
            }
            function m(e, t, r, n) {
                var s = Math.ceil(t.n.bitLength() / 8)
                  , o = i.util.createBuffer(e)
                  , a = o.getByte()
                  , c = o.getByte();
                if (0 !== a || r && 0 !== c && 1 !== c || !r && 2 != c || r && 0 === c && void 0 === n)
                    throw new Error("Encryption block is invalid.");
                var u = 0;
                if (0 === c) {
                    u = s - 3 - n;
                    for (var f = 0; f < u; ++f)
                        if (0 !== o.getByte())
                            throw new Error("Encryption block is invalid.")
                } else if (1 === c)
                    for (u = 0; o.length() > 1; ) {
                        if (255 !== o.getByte()) {
                            --o.read;
                            break
                        }
                        ++u
                    }
                else if (2 === c)
                    for (u = 0; o.length() > 1; ) {
                        if (0 === o.getByte()) {
                            --o.read;
                            break
                        }
                        ++u
                    }
                if (0 !== o.getByte() || u !== s - 3 - o.length())
                    throw new Error("Encryption block is invalid.");
                return o.getBytes()
            }
            function y(e, t, r) {
                "function" == typeof t && (r = t,
                t = {});
                var s = {
                    algorithm: {
                        name: (t = t || {}).algorithm || "PRIMEINC",
                        options: {
                            workers: t.workers || 2,
                            workLoad: t.workLoad || 100,
                            workerScript: t.workerScript
                        }
                    }
                };
                function o() {
                    a(e.pBits, (function(t, i) {
                        return t ? r(t) : (e.p = i,
                        null !== e.q ? u(t, e.q) : void a(e.qBits, u))
                    }
                    ))
                }
                function a(e, t) {
                    i.prime.generateProbablePrime(e, s, t)
                }
                function u(t, i) {
                    if (t)
                        return r(t);
                    if (e.q = i,
                    e.p.compareTo(e.q) < 0) {
                        var s = e.p;
                        e.p = e.q,
                        e.q = s
                    }
                    if (0 !== e.p.subtract(n.ONE).gcd(e.e).compareTo(n.ONE))
                        return e.p = null,
                        void o();
                    if (0 !== e.q.subtract(n.ONE).gcd(e.e).compareTo(n.ONE))
                        return e.q = null,
                        void a(e.qBits, u);
                    if (e.p1 = e.p.subtract(n.ONE),
                    e.q1 = e.q.subtract(n.ONE),
                    e.phi = e.p1.multiply(e.q1),
                    0 !== e.phi.gcd(e.e).compareTo(n.ONE))
                        return e.p = e.q = null,
                        void o();
                    if (e.n = e.p.multiply(e.q),
                    e.n.bitLength() !== e.bits)
                        return e.q = null,
                        void a(e.qBits, u);
                    var f = e.e.modInverse(e.phi);
                    e.keys = {
                        privateKey: c.rsa.setPrivateKey(e.n, e.e, f, e.p, e.q, f.mod(e.p1), f.mod(e.q1), e.q.modInverse(e.p)),
                        publicKey: c.rsa.setPublicKey(e.n, e.e)
                    },
                    r(null, e.keys)
                }
                "prng"in t && (s.prng = t.prng),
                o()
            }
            function v(e) {
                var t = e.toString(16);
                t[0] >= "8" && (t = "00" + t);
                var r = i.util.hexToBytes(t);
                return r.length > 1 && (0 === r.charCodeAt(0) && 0 == (128 & r.charCodeAt(1)) || 255 === r.charCodeAt(0) && 128 == (128 & r.charCodeAt(1))) ? r.substr(1) : r
            }
            function w(e) {
                return e <= 100 ? 27 : e <= 150 ? 18 : e <= 200 ? 15 : e <= 250 ? 12 : e <= 300 ? 9 : e <= 350 ? 8 : e <= 400 ? 7 : e <= 500 ? 6 : e <= 600 ? 5 : e <= 800 ? 4 : e <= 1250 ? 3 : 2
            }
            function E(e) {
                return i.util.isNodejs && "function" == typeof s[e]
            }
            function _(e) {
                return void 0 !== a.globalScope && "object" == typeof a.globalScope.crypto && "object" == typeof a.globalScope.crypto.subtle && "function" == typeof a.globalScope.crypto.subtle[e]
            }
            function S(e) {
                return void 0 !== a.globalScope && "object" == typeof a.globalScope.msCrypto && "object" == typeof a.globalScope.msCrypto.subtle && "function" == typeof a.globalScope.msCrypto.subtle[e]
            }
            function k(e) {
                for (var t = i.util.hexToBytes(e.toString(16)), r = new Uint8Array(t.length), n = 0; n < t.length; ++n)
                    r[n] = t.charCodeAt(n);
                return r
            }
            c.rsa.encrypt = function(e, t, r) {
                var s, o = r, a = Math.ceil(t.n.bitLength() / 8);
                !1 !== r && !0 !== r ? (o = 2 === r,
                s = g(e, t, r)) : (s = i.util.createBuffer()).putBytes(e);
                for (var c = new n(s.toHex(),16), u = b(c, t, o).toString(16), f = i.util.createBuffer(), h = a - Math.ceil(u.length / 2); h > 0; )
                    f.putByte(0),
                    --h;
                return f.putBytes(i.util.hexToBytes(u)),
                f.getBytes()
            }
            ,
            c.rsa.decrypt = function(e, t, r, s) {
                var o = Math.ceil(t.n.bitLength() / 8);
                if (e.length !== o) {
                    var a = new Error("Encrypted message length is invalid.");
                    throw a.length = e.length,
                    a.expected = o,
                    a
                }
                var c = new n(i.util.createBuffer(e).toHex(),16);
                if (c.compareTo(t.n) >= 0)
                    throw new Error("Encrypted message is invalid.");
                for (var u = b(c, t, r).toString(16), f = i.util.createBuffer(), h = o - Math.ceil(u.length / 2); h > 0; )
                    f.putByte(0),
                    --h;
                return f.putBytes(i.util.hexToBytes(u)),
                !1 !== s ? m(f.getBytes(), t, r) : f.getBytes()
            }
            ,
            c.rsa.createKeyPairGenerationState = function(e, t, r) {
                "string" == typeof e && (e = parseInt(e, 10)),
                e = e || 2048;
                var s, o = (r = r || {}).prng || i.random, a = {
                    nextBytes: function(e) {
                        for (var t = o.getBytesSync(e.length), r = 0; r < e.length; ++r)
                            e[r] = t.charCodeAt(r)
                    }
                }, c = r.algorithm || "PRIMEINC";
                if ("PRIMEINC" !== c)
                    throw new Error("Invalid key generation algorithm: " + c);
                return (s = {
                    algorithm: c,
                    state: 0,
                    bits: e,
                    rng: a,
                    eInt: t || 65537,
                    e: new n(null),
                    p: null,
                    q: null,
                    qBits: e >> 1,
                    pBits: e - (e >> 1),
                    pqState: 0,
                    num: null,
                    keys: null
                }).e.fromInt(s.eInt),
                s
            }
            ,
            c.rsa.stepKeyPairGenerationState = function(e, t) {
                "algorithm"in e || (e.algorithm = "PRIMEINC");
                var r = new n(null);
                r.fromInt(30);
                for (var i, s = 0, o = function(e, t) {
                    return e | t
                }, a = +new Date, f = 0; null === e.keys && (t <= 0 || f < t); ) {
                    if (0 === e.state) {
                        var h = null === e.p ? e.pBits : e.qBits
                          , l = h - 1;
                        0 === e.pqState ? (e.num = new n(h,e.rng),
                        e.num.testBit(l) || e.num.bitwiseTo(n.ONE.shiftLeft(l), o, e.num),
                        e.num.dAddOffset(31 - e.num.mod(r).byteValue(), 0),
                        s = 0,
                        ++e.pqState) : 1 === e.pqState ? e.num.bitLength() > h ? e.pqState = 0 : e.num.isProbablePrime(w(e.num.bitLength())) ? ++e.pqState : e.num.dAddOffset(u[s++ % 8], 0) : 2 === e.pqState ? e.pqState = 0 === e.num.subtract(n.ONE).gcd(e.e).compareTo(n.ONE) ? 3 : 0 : 3 === e.pqState && (e.pqState = 0,
                        null === e.p ? e.p = e.num : e.q = e.num,
                        null !== e.p && null !== e.q && ++e.state,
                        e.num = null)
                    } else if (1 === e.state)
                        e.p.compareTo(e.q) < 0 && (e.num = e.p,
                        e.p = e.q,
                        e.q = e.num),
                        ++e.state;
                    else if (2 === e.state)
                        e.p1 = e.p.subtract(n.ONE),
                        e.q1 = e.q.subtract(n.ONE),
                        e.phi = e.p1.multiply(e.q1),
                        ++e.state;
                    else if (3 === e.state)
                        0 === e.phi.gcd(e.e).compareTo(n.ONE) ? ++e.state : (e.p = null,
                        e.q = null,
                        e.state = 0);
                    else if (4 === e.state)
                        e.n = e.p.multiply(e.q),
                        e.n.bitLength() === e.bits ? ++e.state : (e.q = null,
                        e.state = 0);
                    else if (5 === e.state) {
                        var d = e.e.modInverse(e.phi);
                        e.keys = {
                            privateKey: c.rsa.setPrivateKey(e.n, e.e, d, e.p, e.q, d.mod(e.p1), d.mod(e.q1), e.q.modInverse(e.p)),
                            publicKey: c.rsa.setPublicKey(e.n, e.e)
                        }
                    }
                    f += (i = +new Date) - a,
                    a = i
                }
                return null !== e.keys
            }
            ,
            c.rsa.generateKeyPair = function(e, t, r, n) {
                if (1 === arguments.length ? "object" == typeof e ? (r = e,
                e = void 0) : "function" == typeof e && (n = e,
                e = void 0) : 2 === arguments.length ? "number" == typeof e ? "function" == typeof t ? (n = t,
                t = void 0) : "number" != typeof t && (r = t,
                t = void 0) : (r = e,
                n = t,
                e = void 0,
                t = void 0) : 3 === arguments.length && ("number" == typeof t ? "function" == typeof r && (n = r,
                r = void 0) : (n = r,
                r = t,
                t = void 0)),
                r = r || {},
                void 0 === e && (e = r.bits || 2048),
                void 0 === t && (t = r.e || 65537),
                !i.options.usePureJavaScript && !r.prng && e >= 256 && e <= 16384 && (65537 === t || 3 === t))
                    if (n) {
                        if (E("generateKeyPair"))
                            return s.generateKeyPair("rsa", {
                                modulusLength: e,
                                publicExponent: t,
                                publicKeyEncoding: {
                                    type: "spki",
                                    format: "pem"
                                },
                                privateKeyEncoding: {
                                    type: "pkcs8",
                                    format: "pem"
                                }
                            }, (function(e, t, r) {
                                if (e)
                                    return n(e);
                                n(null, {
                                    privateKey: c.privateKeyFromPem(r),
                                    publicKey: c.publicKeyFromPem(t)
                                })
                            }
                            ));
                        if (_("generateKey") && _("exportKey"))
                            return a.globalScope.crypto.subtle.generateKey({
                                name: "RSASSA-PKCS1-v1_5",
                                modulusLength: e,
                                publicExponent: k(t),
                                hash: {
                                    name: "SHA-256"
                                }
                            }, !0, ["sign", "verify"]).then((function(e) {
                                return a.globalScope.crypto.subtle.exportKey("pkcs8", e.privateKey)
                            }
                            )).then(void 0, (function(e) {
                                n(e)
                            }
                            )).then((function(e) {
                                if (e) {
                                    var t = c.privateKeyFromAsn1(o.fromDer(i.util.createBuffer(e)));
                                    n(null, {
                                        privateKey: t,
                                        publicKey: c.setRsaPublicKey(t.n, t.e)
                                    })
                                }
                            }
                            ));
                        if (S("generateKey") && S("exportKey")) {
                            var u = a.globalScope.msCrypto.subtle.generateKey({
                                name: "RSASSA-PKCS1-v1_5",
                                modulusLength: e,
                                publicExponent: k(t),
                                hash: {
                                    name: "SHA-256"
                                }
                            }, !0, ["sign", "verify"]);
                            return u.oncomplete = function(e) {
                                var t = e.target.result
                                  , r = a.globalScope.msCrypto.subtle.exportKey("pkcs8", t.privateKey);
                                r.oncomplete = function(e) {
                                    var t = e.target.result
                                      , r = c.privateKeyFromAsn1(o.fromDer(i.util.createBuffer(t)));
                                    n(null, {
                                        privateKey: r,
                                        publicKey: c.setRsaPublicKey(r.n, r.e)
                                    })
                                }
                                ,
                                r.onerror = function(e) {
                                    n(e)
                                }
                            }
                            ,
                            void (u.onerror = function(e) {
                                n(e)
                            }
                            )
                        }
                    } else if (E("generateKeyPairSync")) {
                        var f = s.generateKeyPairSync("rsa", {
                            modulusLength: e,
                            publicExponent: t,
                            publicKeyEncoding: {
                                type: "spki",
                                format: "pem"
                            },
                            privateKeyEncoding: {
                                type: "pkcs8",
                                format: "pem"
                            }
                        });
                        return {
                            privateKey: c.privateKeyFromPem(f.privateKey),
                            publicKey: c.publicKeyFromPem(f.publicKey)
                        }
                    }
                var h = c.rsa.createKeyPairGenerationState(e, t, r);
                if (!n)
                    return c.rsa.stepKeyPairGenerationState(h, 0),
                    h.keys;
                y(h, r, n)
            }
            ,
            c.setRsaPublicKey = c.rsa.setPublicKey = function(e, t) {
                var r = {
                    n: e,
                    e: t,
                    encrypt: function(e, t, n) {
                        if ("string" == typeof t ? t = t.toUpperCase() : void 0 === t && (t = "RSAES-PKCS1-V1_5"),
                        "RSAES-PKCS1-V1_5" === t)
                            t = {
                                encode: function(e, t, r) {
                                    return g(e, t, 2).getBytes()
                                }
                            };
                        else if ("RSA-OAEP" === t || "RSAES-OAEP" === t)
                            t = {
                                encode: function(e, t) {
                                    return i.pkcs1.encode_rsa_oaep(t, e, n)
                                }
                            };
                        else if (-1 !== ["RAW", "NONE", "NULL", null].indexOf(t))
                            t = {
                                encode: function(e) {
                                    return e
                                }
                            };
                        else if ("string" == typeof t)
                            throw new Error('Unsupported encryption scheme: "' + t + '".');
                        var s = t.encode(e, r, !0);
                        return c.rsa.encrypt(s, r, !0)
                    },
                    verify: function(e, t, i) {
                        "string" == typeof i ? i = i.toUpperCase() : void 0 === i && (i = "RSASSA-PKCS1-V1_5"),
                        "RSASSA-PKCS1-V1_5" === i ? i = {
                            verify: function(e, t) {
                                return t = m(t, r, !0),
                                e === o.fromDer(t).value[1].value
                            }
                        } : "NONE" !== i && "NULL" !== i && null !== i || (i = {
                            verify: function(e, t) {
                                return e === (t = m(t, r, !0))
                            }
                        });
                        var n = c.rsa.decrypt(t, r, !0, !1);
                        return i.verify(e, n, r.n.bitLength())
                    }
                };
                return r
            }
            ,
            c.setRsaPrivateKey = c.rsa.setPrivateKey = function(e, t, r, n, s, o, a, u) {
                var f = {
                    n: e,
                    e: t,
                    d: r,
                    p: n,
                    q: s,
                    dP: o,
                    dQ: a,
                    qInv: u,
                    decrypt: function(e, t, r) {
                        "string" == typeof t ? t = t.toUpperCase() : void 0 === t && (t = "RSAES-PKCS1-V1_5");
                        var n = c.rsa.decrypt(e, f, !1, !1);
                        if ("RSAES-PKCS1-V1_5" === t)
                            t = {
                                decode: m
                            };
                        else if ("RSA-OAEP" === t || "RSAES-OAEP" === t)
                            t = {
                                decode: function(e, t) {
                                    return i.pkcs1.decode_rsa_oaep(t, e, r)
                                }
                            };
                        else {
                            if (-1 === ["RAW", "NONE", "NULL", null].indexOf(t))
                                throw new Error('Unsupported encryption scheme: "' + t + '".');
                            t = {
                                decode: function(e) {
                                    return e
                                }
                            }
                        }
                        return t.decode(n, f, !1)
                    },
                    sign: function(e, t) {
                        var r = !1;
                        "string" == typeof t && (t = t.toUpperCase()),
                        void 0 === t || "RSASSA-PKCS1-V1_5" === t ? (t = {
                            encode: p
                        },
                        r = 1) : "NONE" !== t && "NULL" !== t && null !== t || (t = {
                            encode: function() {
                                return e
                            }
                        },
                        r = 1);
                        var i = t.encode(e, f.n.bitLength());
                        return c.rsa.encrypt(i, f, r)
                    }
                };
                return f
            }
            ,
            c.wrapRsaPrivateKey = function(e) {
                return o.create(o.Class.UNIVERSAL, o.Type.SEQUENCE, !0, [o.create(o.Class.UNIVERSAL, o.Type.INTEGER, !1, o.integerToDer(0).getBytes()), o.create(o.Class.UNIVERSAL, o.Type.SEQUENCE, !0, [o.create(o.Class.UNIVERSAL, o.Type.OID, !1, o.oidToDer(c.oids.rsaEncryption).getBytes()), o.create(o.Class.UNIVERSAL, o.Type.NULL, !1, "")]), o.create(o.Class.UNIVERSAL, o.Type.OCTETSTRING, !1, o.toDer(e).getBytes())])
            }
            ,
            c.privateKeyFromAsn1 = function(e) {
                var t, r, s, a, u, l, d, p, b = {}, g = [];
                if (o.validate(e, f, b, g) && (e = o.fromDer(i.util.createBuffer(b.privateKey))),
                b = {},
                g = [],
                !o.validate(e, h, b, g)) {
                    var m = new Error("Cannot read private key. ASN.1 object does not contain an RSAPrivateKey.");
                    throw m.errors = g,
                    m
                }
                return t = i.util.createBuffer(b.privateKeyModulus).toHex(),
                r = i.util.createBuffer(b.privateKeyPublicExponent).toHex(),
                s = i.util.createBuffer(b.privateKeyPrivateExponent).toHex(),
                a = i.util.createBuffer(b.privateKeyPrime1).toHex(),
                u = i.util.createBuffer(b.privateKeyPrime2).toHex(),
                l = i.util.createBuffer(b.privateKeyExponent1).toHex(),
                d = i.util.createBuffer(b.privateKeyExponent2).toHex(),
                p = i.util.createBuffer(b.privateKeyCoefficient).toHex(),
                c.setRsaPrivateKey(new n(t,16), new n(r,16), new n(s,16), new n(a,16), new n(u,16), new n(l,16), new n(d,16), new n(p,16))
            }
            ,
            c.privateKeyToAsn1 = c.privateKeyToRSAPrivateKey = function(e) {
                return o.create(o.Class.UNIVERSAL, o.Type.SEQUENCE, !0, [o.create(o.Class.UNIVERSAL, o.Type.INTEGER, !1, o.integerToDer(0).getBytes()), o.create(o.Class.UNIVERSAL, o.Type.INTEGER, !1, v(e.n)), o.create(o.Class.UNIVERSAL, o.Type.INTEGER, !1, v(e.e)), o.create(o.Class.UNIVERSAL, o.Type.INTEGER, !1, v(e.d)), o.create(o.Class.UNIVERSAL, o.Type.INTEGER, !1, v(e.p)), o.create(o.Class.UNIVERSAL, o.Type.INTEGER, !1, v(e.q)), o.create(o.Class.UNIVERSAL, o.Type.INTEGER, !1, v(e.dP)), o.create(o.Class.UNIVERSAL, o.Type.INTEGER, !1, v(e.dQ)), o.create(o.Class.UNIVERSAL, o.Type.INTEGER, !1, v(e.qInv))])
            }
            ,
            c.publicKeyFromAsn1 = function(e) {
                var t = {}
                  , r = [];
                if (o.validate(e, d, t, r)) {
                    var s, a = o.derToOid(t.publicKeyOid);
                    if (a !== c.oids.rsaEncryption)
                        throw (s = new Error("Cannot read public key. Unknown OID.")).oid = a,
                        s;
                    e = t.rsaPublicKey
                }
                if (r = [],
                !o.validate(e, l, t, r))
                    throw (s = new Error("Cannot read public key. ASN.1 object does not contain an RSAPublicKey.")).errors = r,
                    s;
                var u = i.util.createBuffer(t.publicKeyModulus).toHex()
                  , f = i.util.createBuffer(t.publicKeyExponent).toHex();
                return c.setRsaPublicKey(new n(u,16), new n(f,16))
            }
            ,
            c.publicKeyToAsn1 = c.publicKeyToSubjectPublicKeyInfo = function(e) {
                return o.create(o.Class.UNIVERSAL, o.Type.SEQUENCE, !0, [o.create(o.Class.UNIVERSAL, o.Type.SEQUENCE, !0, [o.create(o.Class.UNIVERSAL, o.Type.OID, !1, o.oidToDer(c.oids.rsaEncryption).getBytes()), o.create(o.Class.UNIVERSAL, o.Type.NULL, !1, "")]), o.create(o.Class.UNIVERSAL, o.Type.BITSTRING, !1, [c.publicKeyToRSAPublicKey(e)])])
            }
            ,
            c.publicKeyToRSAPublicKey = function(e) {
                return o.create(o.Class.UNIVERSAL, o.Type.SEQUENCE, !0, [o.create(o.Class.UNIVERSAL, o.Type.INTEGER, !1, v(e.n)), o.create(o.Class.UNIVERSAL, o.Type.INTEGER, !1, v(e.e))])
            }
        }
        , {
            "./asn1": 330,
            "./forge": 336,
            "./jsbn": 338,
            "./oids": 342,
            "./pkcs1": 346,
            "./prime": 349,
            "./random": 352,
            "./util": 358,
            crypto: 18
        }],
        355: [function(e, t, r) {
            var i = e("./forge");
            e("./md"),
            e("./util");
            var n = t.exports = i.sha1 = i.sha1 || {};
            i.md.sha1 = i.md.algorithms.sha1 = n,
            n.create = function() {
                o || (s = String.fromCharCode(128),
                s += i.util.fillString(String.fromCharCode(0), 64),
                o = !0);
                var e = null
                  , t = i.util.createBuffer()
                  , r = new Array(80)
                  , n = {
                    algorithm: "sha1",
                    blockLength: 64,
                    digestLength: 20,
                    messageLength: 0,
                    fullMessageLength: null,
                    messageLengthSize: 8,
                    start: function() {
                        n.messageLength = 0,
                        n.fullMessageLength = n.messageLength64 = [];
                        for (var r = n.messageLengthSize / 4, s = 0; s < r; ++s)
                            n.fullMessageLength.push(0);
                        return t = i.util.createBuffer(),
                        e = {
                            h0: 1732584193,
                            h1: 4023233417,
                            h2: 2562383102,
                            h3: 271733878,
                            h4: 3285377520
                        },
                        n
                    }
                };
                return n.start(),
                n.update = function(s, o) {
                    "utf8" === o && (s = i.util.encodeUtf8(s));
                    var c = s.length;
                    n.messageLength += c,
                    c = [c / 4294967296 >>> 0, c >>> 0];
                    for (var u = n.fullMessageLength.length - 1; u >= 0; --u)
                        n.fullMessageLength[u] += c[1],
                        c[1] = c[0] + (n.fullMessageLength[u] / 4294967296 >>> 0),
                        n.fullMessageLength[u] = n.fullMessageLength[u] >>> 0,
                        c[0] = c[1] / 4294967296 >>> 0;
                    return t.putBytes(s),
                    a(e, r, t),
                    (t.read > 2048 || 0 === t.length()) && t.compact(),
                    n
                }
                ,
                n.digest = function() {
                    var o = i.util.createBuffer();
                    o.putBytes(t.bytes());
                    var c, u = n.fullMessageLength[n.fullMessageLength.length - 1] + n.messageLengthSize & n.blockLength - 1;
                    o.putBytes(s.substr(0, n.blockLength - u));
                    for (var f = 8 * n.fullMessageLength[0], h = 0; h < n.fullMessageLength.length - 1; ++h)
                        f += (c = 8 * n.fullMessageLength[h + 1]) / 4294967296 >>> 0,
                        o.putInt32(f >>> 0),
                        f = c >>> 0;
                    o.putInt32(f);
                    var l = {
                        h0: e.h0,
                        h1: e.h1,
                        h2: e.h2,
                        h3: e.h3,
                        h4: e.h4
                    };
                    a(l, r, o);
                    var d = i.util.createBuffer();
                    return d.putInt32(l.h0),
                    d.putInt32(l.h1),
                    d.putInt32(l.h2),
                    d.putInt32(l.h3),
                    d.putInt32(l.h4),
                    d
                }
                ,
                n
            }
            ;
            var s = null
              , o = !1;
            function a(e, t, r) {
                for (var i, n, s, o, a, c, u, f = r.length(); f >= 64; ) {
                    for (n = e.h0,
                    s = e.h1,
                    o = e.h2,
                    a = e.h3,
                    c = e.h4,
                    u = 0; u < 16; ++u)
                        i = r.getInt32(),
                        t[u] = i,
                        i = (n << 5 | n >>> 27) + (a ^ s & (o ^ a)) + c + 1518500249 + i,
                        c = a,
                        a = o,
                        o = (s << 30 | s >>> 2) >>> 0,
                        s = n,
                        n = i;
                    for (; u < 20; ++u)
                        i = (i = t[u - 3] ^ t[u - 8] ^ t[u - 14] ^ t[u - 16]) << 1 | i >>> 31,
                        t[u] = i,
                        i = (n << 5 | n >>> 27) + (a ^ s & (o ^ a)) + c + 1518500249 + i,
                        c = a,
                        a = o,
                        o = (s << 30 | s >>> 2) >>> 0,
                        s = n,
                        n = i;
                    for (; u < 32; ++u)
                        i = (i = t[u - 3] ^ t[u - 8] ^ t[u - 14] ^ t[u - 16]) << 1 | i >>> 31,
                        t[u] = i,
                        i = (n << 5 | n >>> 27) + (s ^ o ^ a) + c + 1859775393 + i,
                        c = a,
                        a = o,
                        o = (s << 30 | s >>> 2) >>> 0,
                        s = n,
                        n = i;
                    for (; u < 40; ++u)
                        i = (i = t[u - 6] ^ t[u - 16] ^ t[u - 28] ^ t[u - 32]) << 2 | i >>> 30,
                        t[u] = i,
                        i = (n << 5 | n >>> 27) + (s ^ o ^ a) + c + 1859775393 + i,
                        c = a,
                        a = o,
                        o = (s << 30 | s >>> 2) >>> 0,
                        s = n,
                        n = i;
                    for (; u < 60; ++u)
                        i = (i = t[u - 6] ^ t[u - 16] ^ t[u - 28] ^ t[u - 32]) << 2 | i >>> 30,
                        t[u] = i,
                        i = (n << 5 | n >>> 27) + (s & o | a & (s ^ o)) + c + 2400959708 + i,
                        c = a,
                        a = o,
                        o = (s << 30 | s >>> 2) >>> 0,
                        s = n,
                        n = i;
                    for (; u < 80; ++u)
                        i = (i = t[u - 6] ^ t[u - 16] ^ t[u - 28] ^ t[u - 32]) << 2 | i >>> 30,
                        t[u] = i,
                        i = (n << 5 | n >>> 27) + (s ^ o ^ a) + c + 3395469782 + i,
                        c = a,
                        a = o,
                        o = (s << 30 | s >>> 2) >>> 0,
                        s = n,
                        n = i;
                    e.h0 = e.h0 + n | 0,
                    e.h1 = e.h1 + s | 0,
                    e.h2 = e.h2 + o | 0,
                    e.h3 = e.h3 + a | 0,
                    e.h4 = e.h4 + c | 0,
                    f -= 64
                }
            }
        }
        , {
            "./forge": 336,
            "./md": 339,
            "./util": 358
        }],
        356: [function(e, t, r) {
            var i = e("./forge");
            e("./md"),
            e("./util");
            var n = t.exports = i.sha256 = i.sha256 || {};
            i.md.sha256 = i.md.algorithms.sha256 = n,
            n.create = function() {
                o || (s = String.fromCharCode(128),
                s += i.util.fillString(String.fromCharCode(0), 64),
                a = [1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298],
                o = !0);
                var e = null
                  , t = i.util.createBuffer()
                  , r = new Array(64)
                  , n = {
                    algorithm: "sha256",
                    blockLength: 64,
                    digestLength: 32,
                    messageLength: 0,
                    fullMessageLength: null,
                    messageLengthSize: 8,
                    start: function() {
                        n.messageLength = 0,
                        n.fullMessageLength = n.messageLength64 = [];
                        for (var r = n.messageLengthSize / 4, s = 0; s < r; ++s)
                            n.fullMessageLength.push(0);
                        return t = i.util.createBuffer(),
                        e = {
                            h0: 1779033703,
                            h1: 3144134277,
                            h2: 1013904242,
                            h3: 2773480762,
                            h4: 1359893119,
                            h5: 2600822924,
                            h6: 528734635,
                            h7: 1541459225
                        },
                        n
                    }
                };
                return n.start(),
                n.update = function(s, o) {
                    "utf8" === o && (s = i.util.encodeUtf8(s));
                    var a = s.length;
                    n.messageLength += a,
                    a = [a / 4294967296 >>> 0, a >>> 0];
                    for (var u = n.fullMessageLength.length - 1; u >= 0; --u)
                        n.fullMessageLength[u] += a[1],
                        a[1] = a[0] + (n.fullMessageLength[u] / 4294967296 >>> 0),
                        n.fullMessageLength[u] = n.fullMessageLength[u] >>> 0,
                        a[0] = a[1] / 4294967296 >>> 0;
                    return t.putBytes(s),
                    c(e, r, t),
                    (t.read > 2048 || 0 === t.length()) && t.compact(),
                    n
                }
                ,
                n.digest = function() {
                    var o = i.util.createBuffer();
                    o.putBytes(t.bytes());
                    var a, u = n.fullMessageLength[n.fullMessageLength.length - 1] + n.messageLengthSize & n.blockLength - 1;
                    o.putBytes(s.substr(0, n.blockLength - u));
                    for (var f = 8 * n.fullMessageLength[0], h = 0; h < n.fullMessageLength.length - 1; ++h)
                        f += (a = 8 * n.fullMessageLength[h + 1]) / 4294967296 >>> 0,
                        o.putInt32(f >>> 0),
                        f = a >>> 0;
                    o.putInt32(f);
                    var l = {
                        h0: e.h0,
                        h1: e.h1,
                        h2: e.h2,
                        h3: e.h3,
                        h4: e.h4,
                        h5: e.h5,
                        h6: e.h6,
                        h7: e.h7
                    };
                    c(l, r, o);
                    var d = i.util.createBuffer();
                    return d.putInt32(l.h0),
                    d.putInt32(l.h1),
                    d.putInt32(l.h2),
                    d.putInt32(l.h3),
                    d.putInt32(l.h4),
                    d.putInt32(l.h5),
                    d.putInt32(l.h6),
                    d.putInt32(l.h7),
                    d
                }
                ,
                n
            }
            ;
            var s = null
              , o = !1
              , a = null;
            function c(e, t, r) {
                for (var i, n, s, o, c, u, f, h, l, d, p, b, g, m = r.length(); m >= 64; ) {
                    for (c = 0; c < 16; ++c)
                        t[c] = r.getInt32();
                    for (; c < 64; ++c)
                        i = ((i = t[c - 2]) >>> 17 | i << 15) ^ (i >>> 19 | i << 13) ^ i >>> 10,
                        n = ((n = t[c - 15]) >>> 7 | n << 25) ^ (n >>> 18 | n << 14) ^ n >>> 3,
                        t[c] = i + t[c - 7] + n + t[c - 16] | 0;
                    for (u = e.h0,
                    f = e.h1,
                    h = e.h2,
                    l = e.h3,
                    d = e.h4,
                    p = e.h5,
                    b = e.h6,
                    g = e.h7,
                    c = 0; c < 64; ++c)
                        s = (u >>> 2 | u << 30) ^ (u >>> 13 | u << 19) ^ (u >>> 22 | u << 10),
                        o = u & f | h & (u ^ f),
                        i = g + ((d >>> 6 | d << 26) ^ (d >>> 11 | d << 21) ^ (d >>> 25 | d << 7)) + (b ^ d & (p ^ b)) + a[c] + t[c],
                        g = b,
                        b = p,
                        p = d,
                        d = l + i >>> 0,
                        l = h,
                        h = f,
                        f = u,
                        u = i + (n = s + o) >>> 0;
                    e.h0 = e.h0 + u | 0,
                    e.h1 = e.h1 + f | 0,
                    e.h2 = e.h2 + h | 0,
                    e.h3 = e.h3 + l | 0,
                    e.h4 = e.h4 + d | 0,
                    e.h5 = e.h5 + p | 0,
                    e.h6 = e.h6 + b | 0,
                    e.h7 = e.h7 + g | 0,
                    m -= 64
                }
            }
        }
        , {
            "./forge": 336,
            "./md": 339,
            "./util": 358
        }],
        357: [function(e, t, r) {
            var i = e("./forge");
            e("./md"),
            e("./util");
            var n = t.exports = i.sha512 = i.sha512 || {};
            i.md.sha512 = i.md.algorithms.sha512 = n;
            var s = i.sha384 = i.sha512.sha384 = i.sha512.sha384 || {};
            s.create = function() {
                return n.create("SHA-384")
            }
            ,
            i.md.sha384 = i.md.algorithms.sha384 = s,
            i.sha512.sha256 = i.sha512.sha256 || {
                create: function() {
                    return n.create("SHA-512/256")
                }
            },
            i.md["sha512/256"] = i.md.algorithms["sha512/256"] = i.sha512.sha256,
            i.sha512.sha224 = i.sha512.sha224 || {
                create: function() {
                    return n.create("SHA-512/224")
                }
            },
            i.md["sha512/224"] = i.md.algorithms["sha512/224"] = i.sha512.sha224,
            n.create = function(e) {
                if (a || (o = String.fromCharCode(128),
                o += i.util.fillString(String.fromCharCode(0), 128),
                c = [[1116352408, 3609767458], [1899447441, 602891725], [3049323471, 3964484399], [3921009573, 2173295548], [961987163, 4081628472], [1508970993, 3053834265], [2453635748, 2937671579], [2870763221, 3664609560], [3624381080, 2734883394], [310598401, 1164996542], [607225278, 1323610764], [1426881987, 3590304994], [1925078388, 4068182383], [2162078206, 991336113], [2614888103, 633803317], [3248222580, 3479774868], [3835390401, 2666613458], [4022224774, 944711139], [264347078, 2341262773], [604807628, 2007800933], [770255983, 1495990901], [1249150122, 1856431235], [1555081692, 3175218132], [1996064986, 2198950837], [2554220882, 3999719339], [2821834349, 766784016], [2952996808, 2566594879], [3210313671, 3203337956], [3336571891, 1034457026], [3584528711, 2466948901], [113926993, 3758326383], [338241895, 168717936], [666307205, 1188179964], [773529912, 1546045734], [1294757372, 1522805485], [1396182291, 2643833823], [1695183700, 2343527390], [1986661051, 1014477480], [2177026350, 1206759142], [2456956037, 344077627], [2730485921, 1290863460], [2820302411, 3158454273], [3259730800, 3505952657], [3345764771, 106217008], [3516065817, 3606008344], [3600352804, 1432725776], [4094571909, 1467031594], [275423344, 851169720], [430227734, 3100823752], [506948616, 1363258195], [659060556, 3750685593], [883997877, 3785050280], [958139571, 3318307427], [1322822218, 3812723403], [1537002063, 2003034995], [1747873779, 3602036899], [1955562222, 1575990012], [2024104815, 1125592928], [2227730452, 2716904306], [2361852424, 442776044], [2428436474, 593698344], [2756734187, 3733110249], [3204031479, 2999351573], [3329325298, 3815920427], [3391569614, 3928383900], [3515267271, 566280711], [3940187606, 3454069534], [4118630271, 4000239992], [116418474, 1914138554], [174292421, 2731055270], [289380356, 3203993006], [460393269, 320620315], [685471733, 587496836], [852142971, 1086792851], [1017036298, 365543100], [1126000580, 2618297676], [1288033470, 3409855158], [1501505948, 4234509866], [1607167915, 987167468], [1816402316, 1246189591]],
                (u = {})["SHA-512"] = [[1779033703, 4089235720], [3144134277, 2227873595], [1013904242, 4271175723], [2773480762, 1595750129], [1359893119, 2917565137], [2600822924, 725511199], [528734635, 4215389547], [1541459225, 327033209]],
                u["SHA-384"] = [[3418070365, 3238371032], [1654270250, 914150663], [2438529370, 812702999], [355462360, 4144912697], [1731405415, 4290775857], [2394180231, 1750603025], [3675008525, 1694076839], [1203062813, 3204075428]],
                u["SHA-512/256"] = [[573645204, 4230739756], [2673172387, 3360449730], [596883563, 1867755857], [2520282905, 1497426621], [2519219938, 2827943907], [3193839141, 1401305490], [721525244, 746961066], [246885852, 2177182882]],
                u["SHA-512/224"] = [[2352822216, 424955298], [1944164710, 2312950998], [502970286, 855612546], [1738396948, 1479516111], [258812777, 2077511080], [2011393907, 79989058], [1067287976, 1780299464], [286451373, 2446758561]],
                a = !0),
                void 0 === e && (e = "SHA-512"),
                !(e in u))
                    throw new Error("Invalid SHA-512 algorithm: " + e);
                for (var t = u[e], r = null, n = i.util.createBuffer(), s = new Array(80), h = 0; h < 80; ++h)
                    s[h] = new Array(2);
                var l = 64;
                switch (e) {
                case "SHA-384":
                    l = 48;
                    break;
                case "SHA-512/256":
                    l = 32;
                    break;
                case "SHA-512/224":
                    l = 28
                }
                var d = {
                    algorithm: e.replace("-", "").toLowerCase(),
                    blockLength: 128,
                    digestLength: l,
                    messageLength: 0,
                    fullMessageLength: null,
                    messageLengthSize: 16,
                    start: function() {
                        d.messageLength = 0,
                        d.fullMessageLength = d.messageLength128 = [];
                        for (var e = d.messageLengthSize / 4, s = 0; s < e; ++s)
                            d.fullMessageLength.push(0);
                        n = i.util.createBuffer(),
                        r = new Array(t.length);
                        for (s = 0; s < t.length; ++s)
                            r[s] = t[s].slice(0);
                        return d
                    }
                };
                return d.start(),
                d.update = function(e, t) {
                    "utf8" === t && (e = i.util.encodeUtf8(e));
                    var o = e.length;
                    d.messageLength += o,
                    o = [o / 4294967296 >>> 0, o >>> 0];
                    for (var a = d.fullMessageLength.length - 1; a >= 0; --a)
                        d.fullMessageLength[a] += o[1],
                        o[1] = o[0] + (d.fullMessageLength[a] / 4294967296 >>> 0),
                        d.fullMessageLength[a] = d.fullMessageLength[a] >>> 0,
                        o[0] = o[1] / 4294967296 >>> 0;
                    return n.putBytes(e),
                    f(r, s, n),
                    (n.read > 2048 || 0 === n.length()) && n.compact(),
                    d
                }
                ,
                d.digest = function() {
                    var t = i.util.createBuffer();
                    t.putBytes(n.bytes());
                    var a, c = d.fullMessageLength[d.fullMessageLength.length - 1] + d.messageLengthSize & d.blockLength - 1;
                    t.putBytes(o.substr(0, d.blockLength - c));
                    for (var u = 8 * d.fullMessageLength[0], h = 0; h < d.fullMessageLength.length - 1; ++h)
                        u += (a = 8 * d.fullMessageLength[h + 1]) / 4294967296 >>> 0,
                        t.putInt32(u >>> 0),
                        u = a >>> 0;
                    t.putInt32(u);
                    var l = new Array(r.length);
                    for (h = 0; h < r.length; ++h)
                        l[h] = r[h].slice(0);
                    f(l, s, t);
                    var p, b = i.util.createBuffer();
                    p = "SHA-512" === e ? l.length : "SHA-384" === e ? l.length - 2 : l.length - 4;
                    for (h = 0; h < p; ++h)
                        b.putInt32(l[h][0]),
                        h === p - 1 && "SHA-512/224" === e || b.putInt32(l[h][1]);
                    return b
                }
                ,
                d
            }
            ;
            var o = null
              , a = !1
              , c = null
              , u = null;
            function f(e, t, r) {
                for (var i, n, s, o, a, u, f, h, l, d, p, b, g, m, y, v, w, E, _, S, k, A, C, I, T, B, M, R, x, N, P, D, L, O = r.length(); O >= 128; ) {
                    for (M = 0; M < 16; ++M)
                        t[M][0] = r.getInt32() >>> 0,
                        t[M][1] = r.getInt32() >>> 0;
                    for (; M < 80; ++M)
                        i = (((R = (N = t[M - 2])[0]) >>> 19 | (x = N[1]) << 13) ^ (x >>> 29 | R << 3) ^ R >>> 6) >>> 0,
                        n = ((R << 13 | x >>> 19) ^ (x << 3 | R >>> 29) ^ (R << 26 | x >>> 6)) >>> 0,
                        s = (((R = (D = t[M - 15])[0]) >>> 1 | (x = D[1]) << 31) ^ (R >>> 8 | x << 24) ^ R >>> 7) >>> 0,
                        o = ((R << 31 | x >>> 1) ^ (R << 24 | x >>> 8) ^ (R << 25 | x >>> 7)) >>> 0,
                        P = t[M - 7],
                        L = t[M - 16],
                        x = n + P[1] + o + L[1],
                        t[M][0] = i + P[0] + s + L[0] + (x / 4294967296 >>> 0) >>> 0,
                        t[M][1] = x >>> 0;
                    for (p = e[0][0],
                    b = e[0][1],
                    g = e[1][0],
                    m = e[1][1],
                    y = e[2][0],
                    v = e[2][1],
                    w = e[3][0],
                    E = e[3][1],
                    _ = e[4][0],
                    S = e[4][1],
                    k = e[5][0],
                    A = e[5][1],
                    C = e[6][0],
                    I = e[6][1],
                    T = e[7][0],
                    B = e[7][1],
                    M = 0; M < 80; ++M)
                        f = ((_ >>> 14 | S << 18) ^ (_ >>> 18 | S << 14) ^ (S >>> 9 | _ << 23)) >>> 0,
                        h = (C ^ _ & (k ^ C)) >>> 0,
                        a = ((p >>> 28 | b << 4) ^ (b >>> 2 | p << 30) ^ (b >>> 7 | p << 25)) >>> 0,
                        u = ((p << 4 | b >>> 28) ^ (b << 30 | p >>> 2) ^ (b << 25 | p >>> 7)) >>> 0,
                        l = (p & g | y & (p ^ g)) >>> 0,
                        d = (b & m | v & (b ^ m)) >>> 0,
                        x = B + (((_ << 18 | S >>> 14) ^ (_ << 14 | S >>> 18) ^ (S << 23 | _ >>> 9)) >>> 0) + ((I ^ S & (A ^ I)) >>> 0) + c[M][1] + t[M][1],
                        i = T + f + h + c[M][0] + t[M][0] + (x / 4294967296 >>> 0) >>> 0,
                        n = x >>> 0,
                        s = a + l + ((x = u + d) / 4294967296 >>> 0) >>> 0,
                        o = x >>> 0,
                        T = C,
                        B = I,
                        C = k,
                        I = A,
                        k = _,
                        A = S,
                        _ = w + i + ((x = E + n) / 4294967296 >>> 0) >>> 0,
                        S = x >>> 0,
                        w = y,
                        E = v,
                        y = g,
                        v = m,
                        g = p,
                        m = b,
                        p = i + s + ((x = n + o) / 4294967296 >>> 0) >>> 0,
                        b = x >>> 0;
                    x = e[0][1] + b,
                    e[0][0] = e[0][0] + p + (x / 4294967296 >>> 0) >>> 0,
                    e[0][1] = x >>> 0,
                    x = e[1][1] + m,
                    e[1][0] = e[1][0] + g + (x / 4294967296 >>> 0) >>> 0,
                    e[1][1] = x >>> 0,
                    x = e[2][1] + v,
                    e[2][0] = e[2][0] + y + (x / 4294967296 >>> 0) >>> 0,
                    e[2][1] = x >>> 0,
                    x = e[3][1] + E,
                    e[3][0] = e[3][0] + w + (x / 4294967296 >>> 0) >>> 0,
                    e[3][1] = x >>> 0,
                    x = e[4][1] + S,
                    e[4][0] = e[4][0] + _ + (x / 4294967296 >>> 0) >>> 0,
                    e[4][1] = x >>> 0,
                    x = e[5][1] + A,
                    e[5][0] = e[5][0] + k + (x / 4294967296 >>> 0) >>> 0,
                    e[5][1] = x >>> 0,
                    x = e[6][1] + I,
                    e[6][0] = e[6][0] + C + (x / 4294967296 >>> 0) >>> 0,
                    e[6][1] = x >>> 0,
                    x = e[7][1] + B,
                    e[7][0] = e[7][0] + T + (x / 4294967296 >>> 0) >>> 0,
                    e[7][1] = x >>> 0,
                    O -= 128
                }
            }
        }
        , {
            "./forge": 336,
            "./md": 339,
            "./util": 358
        }],
        358: [function(e, t, r) {
            (function(r, i, n, s, o, a, c, u) {
                var f = e("./forge")
                  , h = e("./baseN")
                  , l = t.exports = f.util = f.util || {};
                function d(e) {
                    if (8 !== e && 16 !== e && 24 !== e && 32 !== e)
                        throw new Error("Only 8, 16, 24, or 32 bits supported: " + e)
                }
                function p(e) {
                    if (this.data = "",
                    this.read = 0,
                    "string" == typeof e)
                        this.data = e;
                    else if (l.isArrayBuffer(e) || l.isArrayBufferView(e))
                        if (void 0 !== n && e instanceof n)
                            this.data = e.toString("binary");
                        else {
                            var t = new Uint8Array(e);
                            try {
                                this.data = String.fromCharCode.apply(null, t)
                            } catch (e) {
                                for (var r = 0; r < t.length; ++r)
                                    this.putByte(t[r])
                            }
                        }
                    else
                        (e instanceof p || "object" == typeof e && "string" == typeof e.data && "number" == typeof e.read) && (this.data = e.data,
                        this.read = e.read);
                    this._constructedStringLength = 0
                }
                !function() {
                    if (void 0 !== r && r.nextTick && !r.browser)
                        return l.nextTick = r.nextTick,
                        void (l.setImmediate = "function" == typeof u ? u : l.nextTick);
                    if ("function" == typeof u)
                        return l.setImmediate = function() {
                            return u.apply(void 0, arguments)
                        }
                        ,
                        void (l.nextTick = function(e) {
                            return u(e)
                        }
                        );
                    if (l.setImmediate = function(e) {
                        setTimeout(e, 0)
                    }
                    ,
                    "undefined" != typeof window && "function" == typeof window.postMessage) {
                        var e = "forge.setImmediate"
                          , t = [];
                        l.setImmediate = function(r) {
                            t.push(r),
                            1 === t.length && window.postMessage(e, "*")
                        }
                        ,
                        window.addEventListener("message", (function(r) {
                            if (r.source === window && r.data === e) {
                                r.stopPropagation();
                                var i = t.slice();
                                t.length = 0,
                                i.forEach((function(e) {
                                    e()
                                }
                                ))
                            }
                        }
                        ), !0)
                    }
                    if ("undefined" != typeof MutationObserver) {
                        var i = Date.now()
                          , n = !0
                          , s = document.createElement("div");
                        t = [];
                        new MutationObserver((function() {
                            var e = t.slice();
                            t.length = 0,
                            e.forEach((function(e) {
                                e()
                            }
                            ))
                        }
                        )).observe(s, {
                            attributes: !0
                        });
                        var o = l.setImmediate;
                        l.setImmediate = function(e) {
                            Date.now() - i > 15 ? (i = Date.now(),
                            o(e)) : (t.push(e),
                            1 === t.length && s.setAttribute("a", n = !n))
                        }
                    }
                    l.nextTick = l.setImmediate
                }(),
                l.isNodejs = void 0 !== r && r.versions && r.versions.node,
                l.globalScope = l.isNodejs ? i : "undefined" == typeof self ? window : self,
                l.isArray = Array.isArray || function(e) {
                    return "[object Array]" === Object.prototype.toString.call(e)
                }
                ,
                l.isArrayBuffer = function(e) {
                    return "undefined" != typeof ArrayBuffer && e instanceof ArrayBuffer
                }
                ,
                l.isArrayBufferView = function(e) {
                    return e && l.isArrayBuffer(e.buffer) && void 0 !== e.byteLength
                }
                ,
                l.ByteBuffer = p,
                l.ByteStringBuffer = p;
                l.ByteStringBuffer.prototype._optimizeConstructedString = function(e) {
                    this._constructedStringLength += e,
                    this._constructedStringLength > 4096 && (this.data.substr(0, 1),
                    this._constructedStringLength = 0)
                }
                ,
                l.ByteStringBuffer.prototype.length = function() {
                    return this.data.length - this.read
                }
                ,
                l.ByteStringBuffer.prototype.isEmpty = function() {
                    return this.length() <= 0
                }
                ,
                l.ByteStringBuffer.prototype.putByte = function(e) {
                    return this.putBytes(String.fromCharCode(e))
                }
                ,
                l.ByteStringBuffer.prototype.fillWithByte = function(e, t) {
                    e = String.fromCharCode(e);
                    for (var r = this.data; t > 0; )
                        1 & t && (r += e),
                        (t >>>= 1) > 0 && (e += e);
                    return this.data = r,
                    this._optimizeConstructedString(t),
                    this
                }
                ,
                l.ByteStringBuffer.prototype.putBytes = function(e) {
                    return this.data += e,
                    this._optimizeConstructedString(e.length),
                    this
                }
                ,
                l.ByteStringBuffer.prototype.putString = function(e) {
                    return this.putBytes(l.encodeUtf8(e))
                }
                ,
                l.ByteStringBuffer.prototype.putInt16 = function(e) {
                    return this.putBytes(String.fromCharCode(e >> 8 & 255) + String.fromCharCode(255 & e))
                }
                ,
                l.ByteStringBuffer.prototype.putInt24 = function(e) {
                    return this.putBytes(String.fromCharCode(e >> 16 & 255) + String.fromCharCode(e >> 8 & 255) + String.fromCharCode(255 & e))
                }
                ,
                l.ByteStringBuffer.prototype.putInt32 = function(e) {
                    return this.putBytes(String.fromCharCode(e >> 24 & 255) + String.fromCharCode(e >> 16 & 255) + String.fromCharCode(e >> 8 & 255) + String.fromCharCode(255 & e))
                }
                ,
                l.ByteStringBuffer.prototype.putInt16Le = function(e) {
                    return this.putBytes(String.fromCharCode(255 & e) + String.fromCharCode(e >> 8 & 255))
                }
                ,
                l.ByteStringBuffer.prototype.putInt24Le = function(e) {
                    return this.putBytes(String.fromCharCode(255 & e) + String.fromCharCode(e >> 8 & 255) + String.fromCharCode(e >> 16 & 255))
                }
                ,
                l.ByteStringBuffer.prototype.putInt32Le = function(e) {
                    return this.putBytes(String.fromCharCode(255 & e) + String.fromCharCode(e >> 8 & 255) + String.fromCharCode(e >> 16 & 255) + String.fromCharCode(e >> 24 & 255))
                }
                ,
                l.ByteStringBuffer.prototype.putInt = function(e, t) {
                    d(t);
                    var r = "";
                    do {
                        t -= 8,
                        r += String.fromCharCode(e >> t & 255)
                    } while (t > 0);return this.putBytes(r)
                }
                ,
                l.ByteStringBuffer.prototype.putSignedInt = function(e, t) {
                    return e < 0 && (e += 2 << t - 1),
                    this.putInt(e, t)
                }
                ,
                l.ByteStringBuffer.prototype.putBuffer = function(e) {
                    return this.putBytes(e.getBytes())
                }
                ,
                l.ByteStringBuffer.prototype.getByte = function() {
                    return this.data.charCodeAt(this.read++)
                }
                ,
                l.ByteStringBuffer.prototype.getInt16 = function() {
                    var e = this.data.charCodeAt(this.read) << 8 ^ this.data.charCodeAt(this.read + 1);
                    return this.read += 2,
                    e
                }
                ,
                l.ByteStringBuffer.prototype.getInt24 = function() {
                    var e = this.data.charCodeAt(this.read) << 16 ^ this.data.charCodeAt(this.read + 1) << 8 ^ this.data.charCodeAt(this.read + 2);
                    return this.read += 3,
                    e
                }
                ,
                l.ByteStringBuffer.prototype.getInt32 = function() {
                    var e = this.data.charCodeAt(this.read) << 24 ^ this.data.charCodeAt(this.read + 1) << 16 ^ this.data.charCodeAt(this.read + 2) << 8 ^ this.data.charCodeAt(this.read + 3);
                    return this.read += 4,
                    e
                }
                ,
                l.ByteStringBuffer.prototype.getInt16Le = function() {
                    var e = this.data.charCodeAt(this.read) ^ this.data.charCodeAt(this.read + 1) << 8;
                    return this.read += 2,
                    e
                }
                ,
                l.ByteStringBuffer.prototype.getInt24Le = function() {
                    var e = this.data.charCodeAt(this.read) ^ this.data.charCodeAt(this.read + 1) << 8 ^ this.data.charCodeAt(this.read + 2) << 16;
                    return this.read += 3,
                    e
                }
                ,
                l.ByteStringBuffer.prototype.getInt32Le = function() {
                    var e = this.data.charCodeAt(this.read) ^ this.data.charCodeAt(this.read + 1) << 8 ^ this.data.charCodeAt(this.read + 2) << 16 ^ this.data.charCodeAt(this.read + 3) << 24;
                    return this.read += 4,
                    e
                }
                ,
                l.ByteStringBuffer.prototype.getInt = function(e) {
                    d(e);
                    var t = 0;
                    do {
                        t = (t << 8) + this.data.charCodeAt(this.read++),
                        e -= 8
                    } while (e > 0);return t
                }
                ,
                l.ByteStringBuffer.prototype.getSignedInt = function(e) {
                    var t = this.getInt(e)
                      , r = 2 << e - 2;
                    return t >= r && (t -= r << 1),
                    t
                }
                ,
                l.ByteStringBuffer.prototype.getBytes = function(e) {
                    var t;
                    return e ? (e = Math.min(this.length(), e),
                    t = this.data.slice(this.read, this.read + e),
                    this.read += e) : 0 === e ? t = "" : (t = 0 === this.read ? this.data : this.data.slice(this.read),
                    this.clear()),
                    t
                }
                ,
                l.ByteStringBuffer.prototype.bytes = function(e) {
                    return void 0 === e ? this.data.slice(this.read) : this.data.slice(this.read, this.read + e)
                }
                ,
                l.ByteStringBuffer.prototype.at = function(e) {
                    return this.data.charCodeAt(this.read + e)
                }
                ,
                l.ByteStringBuffer.prototype.setAt = function(e, t) {
                    return this.data = this.data.substr(0, this.read + e) + String.fromCharCode(t) + this.data.substr(this.read + e + 1),
                    this
                }
                ,
                l.ByteStringBuffer.prototype.last = function() {
                    return this.data.charCodeAt(this.data.length - 1)
                }
                ,
                l.ByteStringBuffer.prototype.copy = function() {
                    var e = l.createBuffer(this.data);
                    return e.read = this.read,
                    e
                }
                ,
                l.ByteStringBuffer.prototype.compact = function() {
                    return this.read > 0 && (this.data = this.data.slice(this.read),
                    this.read = 0),
                    this
                }
                ,
                l.ByteStringBuffer.prototype.clear = function() {
                    return this.data = "",
                    this.read = 0,
                    this
                }
                ,
                l.ByteStringBuffer.prototype.truncate = function(e) {
                    var t = Math.max(0, this.length() - e);
                    return this.data = this.data.substr(this.read, t),
                    this.read = 0,
                    this
                }
                ,
                l.ByteStringBuffer.prototype.toHex = function() {
                    for (var e = "", t = this.read; t < this.data.length; ++t) {
                        var r = this.data.charCodeAt(t);
                        r < 16 && (e += "0"),
                        e += r.toString(16)
                    }
                    return e
                }
                ,
                l.ByteStringBuffer.prototype.toString = function() {
                    return l.decodeUtf8(this.bytes())
                }
                ,
                l.DataBuffer = function(e, t) {
                    t = t || {},
                    this.read = t.readOffset || 0,
                    this.growSize = t.growSize || 1024;
                    var r = l.isArrayBuffer(e)
                      , i = l.isArrayBufferView(e);
                    if (r || i)
                        return this.data = r ? new DataView(e) : new DataView(e.buffer,e.byteOffset,e.byteLength),
                        void (this.write = "writeOffset"in t ? t.writeOffset : this.data.byteLength);
                    this.data = new DataView(new ArrayBuffer(0)),
                    this.write = 0,
                    null != e && this.putBytes(e),
                    "writeOffset"in t && (this.write = t.writeOffset)
                }
                ,
                l.DataBuffer.prototype.length = function() {
                    return this.write - this.read
                }
                ,
                l.DataBuffer.prototype.isEmpty = function() {
                    return this.length() <= 0
                }
                ,
                l.DataBuffer.prototype.accommodate = function(e, t) {
                    if (this.length() >= e)
                        return this;
                    t = Math.max(t || this.growSize, e);
                    var r = new Uint8Array(this.data.buffer,this.data.byteOffset,this.data.byteLength)
                      , i = new Uint8Array(this.length() + t);
                    return i.set(r),
                    this.data = new DataView(i.buffer),
                    this
                }
                ,
                l.DataBuffer.prototype.putByte = function(e) {
                    return this.accommodate(1),
                    this.data.setUint8(this.write++, e),
                    this
                }
                ,
                l.DataBuffer.prototype.fillWithByte = function(e, t) {
                    this.accommodate(t);
                    for (var r = 0; r < t; ++r)
                        this.data.setUint8(e);
                    return this
                }
                ,
                l.DataBuffer.prototype.putBytes = function(e, t) {
                    if (l.isArrayBufferView(e)) {
                        var r = (i = new Uint8Array(e.buffer,e.byteOffset,e.byteLength)).byteLength - i.byteOffset;
                        return this.accommodate(r),
                        new Uint8Array(this.data.buffer,this.write).set(i),
                        this.write += r,
                        this
                    }
                    if (l.isArrayBuffer(e)) {
                        var i = new Uint8Array(e);
                        return this.accommodate(i.byteLength),
                        new Uint8Array(this.data.buffer).set(i, this.write),
                        this.write += i.byteLength,
                        this
                    }
                    if (e instanceof l.DataBuffer || "object" == typeof e && "number" == typeof e.read && "number" == typeof e.write && l.isArrayBufferView(e.data)) {
                        i = new Uint8Array(e.data.byteLength,e.read,e.length());
                        return this.accommodate(i.byteLength),
                        new Uint8Array(e.data.byteLength,this.write).set(i),
                        this.write += i.byteLength,
                        this
                    }
                    if (e instanceof l.ByteStringBuffer && (e = e.data,
                    t = "binary"),
                    t = t || "binary",
                    "string" == typeof e) {
                        var n;
                        if ("hex" === t)
                            return this.accommodate(Math.ceil(e.length / 2)),
                            n = new Uint8Array(this.data.buffer,this.write),
                            this.write += l.binary.hex.decode(e, n, this.write),
                            this;
                        if ("base64" === t)
                            return this.accommodate(3 * Math.ceil(e.length / 4)),
                            n = new Uint8Array(this.data.buffer,this.write),
                            this.write += l.binary.base64.decode(e, n, this.write),
                            this;
                        if ("utf8" === t && (e = l.encodeUtf8(e),
                        t = "binary"),
                        "binary" === t || "raw" === t)
                            return this.accommodate(e.length),
                            n = new Uint8Array(this.data.buffer,this.write),
                            this.write += l.binary.raw.decode(n),
                            this;
                        if ("utf16" === t)
                            return this.accommodate(2 * e.length),
                            n = new Uint16Array(this.data.buffer,this.write),
                            this.write += l.text.utf16.encode(n),
                            this;
                        throw new Error("Invalid encoding: " + t)
                    }
                    throw Error("Invalid parameter: " + e)
                }
                ,
                l.DataBuffer.prototype.putBuffer = function(e) {
                    return this.putBytes(e),
                    e.clear(),
                    this
                }
                ,
                l.DataBuffer.prototype.putString = function(e) {
                    return this.putBytes(e, "utf16")
                }
                ,
                l.DataBuffer.prototype.putInt16 = function(e) {
                    return this.accommodate(2),
                    this.data.setInt16(this.write, e),
                    this.write += 2,
                    this
                }
                ,
                l.DataBuffer.prototype.putInt24 = function(e) {
                    return this.accommodate(3),
                    this.data.setInt16(this.write, e >> 8 & 65535),
                    this.data.setInt8(this.write, e >> 16 & 255),
                    this.write += 3,
                    this
                }
                ,
                l.DataBuffer.prototype.putInt32 = function(e) {
                    return this.accommodate(4),
                    this.data.setInt32(this.write, e),
                    this.write += 4,
                    this
                }
                ,
                l.DataBuffer.prototype.putInt16Le = function(e) {
                    return this.accommodate(2),
                    this.data.setInt16(this.write, e, !0),
                    this.write += 2,
                    this
                }
                ,
                l.DataBuffer.prototype.putInt24Le = function(e) {
                    return this.accommodate(3),
                    this.data.setInt8(this.write, e >> 16 & 255),
                    this.data.setInt16(this.write, e >> 8 & 65535, !0),
                    this.write += 3,
                    this
                }
                ,
                l.DataBuffer.prototype.putInt32Le = function(e) {
                    return this.accommodate(4),
                    this.data.setInt32(this.write, e, !0),
                    this.write += 4,
                    this
                }
                ,
                l.DataBuffer.prototype.putInt = function(e, t) {
                    d(t),
                    this.accommodate(t / 8);
                    do {
                        t -= 8,
                        this.data.setInt8(this.write++, e >> t & 255)
                    } while (t > 0);return this
                }
                ,
                l.DataBuffer.prototype.putSignedInt = function(e, t) {
                    return d(t),
                    this.accommodate(t / 8),
                    e < 0 && (e += 2 << t - 1),
                    this.putInt(e, t)
                }
                ,
                l.DataBuffer.prototype.getByte = function() {
                    return this.data.getInt8(this.read++)
                }
                ,
                l.DataBuffer.prototype.getInt16 = function() {
                    var e = this.data.getInt16(this.read);
                    return this.read += 2,
                    e
                }
                ,
                l.DataBuffer.prototype.getInt24 = function() {
                    var e = this.data.getInt16(this.read) << 8 ^ this.data.getInt8(this.read + 2);
                    return this.read += 3,
                    e
                }
                ,
                l.DataBuffer.prototype.getInt32 = function() {
                    var e = this.data.getInt32(this.read);
                    return this.read += 4,
                    e
                }
                ,
                l.DataBuffer.prototype.getInt16Le = function() {
                    var e = this.data.getInt16(this.read, !0);
                    return this.read += 2,
                    e
                }
                ,
                l.DataBuffer.prototype.getInt24Le = function() {
                    var e = this.data.getInt8(this.read) ^ this.data.getInt16(this.read + 1, !0) << 8;
                    return this.read += 3,
                    e
                }
                ,
                l.DataBuffer.prototype.getInt32Le = function() {
                    var e = this.data.getInt32(this.read, !0);
                    return this.read += 4,
                    e
                }
                ,
                l.DataBuffer.prototype.getInt = function(e) {
                    d(e);
                    var t = 0;
                    do {
                        t = (t << 8) + this.data.getInt8(this.read++),
                        e -= 8
                    } while (e > 0);return t
                }
                ,
                l.DataBuffer.prototype.getSignedInt = function(e) {
                    var t = this.getInt(e)
                      , r = 2 << e - 2;
                    return t >= r && (t -= r << 1),
                    t
                }
                ,
                l.DataBuffer.prototype.getBytes = function(e) {
                    var t;
                    return e ? (e = Math.min(this.length(), e),
                    t = this.data.slice(this.read, this.read + e),
                    this.read += e) : 0 === e ? t = "" : (t = 0 === this.read ? this.data : this.data.slice(this.read),
                    this.clear()),
                    t
                }
                ,
                l.DataBuffer.prototype.bytes = function(e) {
                    return void 0 === e ? this.data.slice(this.read) : this.data.slice(this.read, this.read + e)
                }
                ,
                l.DataBuffer.prototype.at = function(e) {
                    return this.data.getUint8(this.read + e)
                }
                ,
                l.DataBuffer.prototype.setAt = function(e, t) {
                    return this.data.setUint8(e, t),
                    this
                }
                ,
                l.DataBuffer.prototype.last = function() {
                    return this.data.getUint8(this.write - 1)
                }
                ,
                l.DataBuffer.prototype.copy = function() {
                    return new l.DataBuffer(this)
                }
                ,
                l.DataBuffer.prototype.compact = function() {
                    if (this.read > 0) {
                        var e = new Uint8Array(this.data.buffer,this.read)
                          , t = new Uint8Array(e.byteLength);
                        t.set(e),
                        this.data = new DataView(t),
                        this.write -= this.read,
                        this.read = 0
                    }
                    return this
                }
                ,
                l.DataBuffer.prototype.clear = function() {
                    return this.data = new DataView(new ArrayBuffer(0)),
                    this.read = this.write = 0,
                    this
                }
                ,
                l.DataBuffer.prototype.truncate = function(e) {
                    return this.write = Math.max(0, this.length() - e),
                    this.read = Math.min(this.read, this.write),
                    this
                }
                ,
                l.DataBuffer.prototype.toHex = function() {
                    for (var e = "", t = this.read; t < this.data.byteLength; ++t) {
                        var r = this.data.getUint8(t);
                        r < 16 && (e += "0"),
                        e += r.toString(16)
                    }
                    return e
                }
                ,
                l.DataBuffer.prototype.toString = function(e) {
                    var t = new Uint8Array(this.data,this.read,this.length());
                    if ("binary" === (e = e || "utf8") || "raw" === e)
                        return l.binary.raw.encode(t);
                    if ("hex" === e)
                        return l.binary.hex.encode(t);
                    if ("base64" === e)
                        return l.binary.base64.encode(t);
                    if ("utf8" === e)
                        return l.text.utf8.decode(t);
                    if ("utf16" === e)
                        return l.text.utf16.decode(t);
                    throw new Error("Invalid encoding: " + e)
                }
                ,
                l.createBuffer = function(e, t) {
                    return t = t || "raw",
                    void 0 !== e && "utf8" === t && (e = l.encodeUtf8(e)),
                    new l.ByteBuffer(e)
                }
                ,
                l.fillString = function(e, t) {
                    for (var r = ""; t > 0; )
                        1 & t && (r += e),
                        (t >>>= 1) > 0 && (e += e);
                    return r
                }
                ,
                l.xorBytes = function(e, t, r) {
                    for (var i = "", n = "", s = "", o = 0, a = 0; r > 0; --r,
                    ++o)
                        n = e.charCodeAt(o) ^ t.charCodeAt(o),
                        a >= 10 && (i += s,
                        s = "",
                        a = 0),
                        s += String.fromCharCode(n),
                        ++a;
                    return i += s
                }
                ,
                l.hexToBytes = function(e) {
                    var t = ""
                      , r = 0;
                    for (!0 & e.length && (r = 1,
                    t += String.fromCharCode(parseInt(e[0], 16))); r < e.length; r += 2)
                        t += String.fromCharCode(parseInt(e.substr(r, 2), 16));
                    return t
                }
                ,
                l.bytesToHex = function(e) {
                    return l.createBuffer(e).toHex()
                }
                ,
                l.int32ToBytes = function(e) {
                    return String.fromCharCode(e >> 24 & 255) + String.fromCharCode(e >> 16 & 255) + String.fromCharCode(e >> 8 & 255) + String.fromCharCode(255 & e)
                }
                ;
                var b = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="
                  , g = [62, -1, -1, -1, 63, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, -1, -1, -1, 64, -1, -1, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, -1, -1, -1, -1, -1, -1, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51]
                  , m = "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz";
                l.encode64 = function(e, t) {
                    for (var r, i, n, s = "", o = "", a = 0; a < e.length; )
                        r = e.charCodeAt(a++),
                        i = e.charCodeAt(a++),
                        n = e.charCodeAt(a++),
                        s += b.charAt(r >> 2),
                        s += b.charAt((3 & r) << 4 | i >> 4),
                        isNaN(i) ? s += "==" : (s += b.charAt((15 & i) << 2 | n >> 6),
                        s += isNaN(n) ? "=" : b.charAt(63 & n)),
                        t && s.length > t && (o += s.substr(0, t) + "\r\n",
                        s = s.substr(t));
                    return o += s
                }
                ,
                l.decode64 = function(e) {
                    e = e.replace(/[^A-Za-z0-9\+\/\=]/g, "");
                    for (var t, r, i, n, s = "", o = 0; o < e.length; )
                        t = g[e.charCodeAt(o++) - 43],
                        r = g[e.charCodeAt(o++) - 43],
                        i = g[e.charCodeAt(o++) - 43],
                        n = g[e.charCodeAt(o++) - 43],
                        s += String.fromCharCode(t << 2 | r >> 4),
                        64 !== i && (s += String.fromCharCode((15 & r) << 4 | i >> 2),
                        64 !== n && (s += String.fromCharCode((3 & i) << 6 | n)));
                    return s
                }
                ,
                l.encodeUtf8 = function(e) {
                    return unescape(encodeURIComponent(e))
                }
                ,
                l.decodeUtf8 = function(e) {
                    return decodeURIComponent(escape(e))
                }
                ,
                l.binary = {
                    raw: {},
                    hex: {},
                    base64: {},
                    base58: {},
                    baseN: {
                        encode: h.encode,
                        decode: h.decode
                    }
                },
                l.binary.raw.encode = function(e) {
                    return String.fromCharCode.apply(null, e)
                }
                ,
                l.binary.raw.decode = function(e, t, r) {
                    var i = t;
                    i || (i = new Uint8Array(e.length));
                    for (var n = r = r || 0, s = 0; s < e.length; ++s)
                        i[n++] = e.charCodeAt(s);
                    return t ? n - r : i
                }
                ,
                l.binary.hex.encode = l.bytesToHex,
                l.binary.hex.decode = function(e, t, r) {
                    var i = t;
                    i || (i = new Uint8Array(Math.ceil(e.length / 2)));
                    var n = 0
                      , s = r = r || 0;
                    for (1 & e.length && (n = 1,
                    i[s++] = parseInt(e[0], 16)); n < e.length; n += 2)
                        i[s++] = parseInt(e.substr(n, 2), 16);
                    return t ? s - r : i
                }
                ,
                l.binary.base64.encode = function(e, t) {
                    for (var r, i, n, s = "", o = "", a = 0; a < e.byteLength; )
                        r = e[a++],
                        i = e[a++],
                        n = e[a++],
                        s += b.charAt(r >> 2),
                        s += b.charAt((3 & r) << 4 | i >> 4),
                        isNaN(i) ? s += "==" : (s += b.charAt((15 & i) << 2 | n >> 6),
                        s += isNaN(n) ? "=" : b.charAt(63 & n)),
                        t && s.length > t && (o += s.substr(0, t) + "\r\n",
                        s = s.substr(t));
                    return o += s
                }
                ,
                l.binary.base64.decode = function(e, t, r) {
                    var i, n, s, o, a = t;
                    a || (a = new Uint8Array(3 * Math.ceil(e.length / 4))),
                    e = e.replace(/[^A-Za-z0-9\+\/\=]/g, "");
                    for (var c = 0, u = r = r || 0; c < e.length; )
                        i = g[e.charCodeAt(c++) - 43],
                        n = g[e.charCodeAt(c++) - 43],
                        s = g[e.charCodeAt(c++) - 43],
                        o = g[e.charCodeAt(c++) - 43],
                        a[u++] = i << 2 | n >> 4,
                        64 !== s && (a[u++] = (15 & n) << 4 | s >> 2,
                        64 !== o && (a[u++] = (3 & s) << 6 | o));
                    return t ? u - r : a.subarray(0, u)
                }
                ,
                l.binary.base58.encode = function(e, t) {
                    return l.binary.baseN.encode(e, m, t)
                }
                ,
                l.binary.base58.decode = function(e, t) {
                    return l.binary.baseN.decode(e, m, t)
                }
                ,
                l.text = {
                    utf8: {},
                    utf16: {}
                },
                l.text.utf8.encode = function(e, t, r) {
                    e = l.encodeUtf8(e);
                    var i = t;
                    i || (i = new Uint8Array(e.length));
                    for (var n = r = r || 0, s = 0; s < e.length; ++s)
                        i[n++] = e.charCodeAt(s);
                    return t ? n - r : i
                }
                ,
                l.text.utf8.decode = function(e) {
                    return l.decodeUtf8(String.fromCharCode.apply(null, e))
                }
                ,
                l.text.utf16.encode = function(e, t, r) {
                    var i = t;
                    i || (i = new Uint8Array(2 * e.length));
                    for (var n = new Uint16Array(i.buffer), s = r = r || 0, o = r, a = 0; a < e.length; ++a)
                        n[o++] = e.charCodeAt(a),
                        s += 2;
                    return t ? s - r : i
                }
                ,
                l.text.utf16.decode = function(e) {
                    return String.fromCharCode.apply(null, new Uint16Array(e.buffer))
                }
                ,
                l.deflate = function(e, t, r) {
                    if (t = l.decode64(e.deflate(l.encode64(t)).rval),
                    r) {
                        var i = 2;
                        32 & t.charCodeAt(1) && (i = 6),
                        t = t.substring(i, t.length - 4)
                    }
                    return t
                }
                ,
                l.inflate = function(e, t, r) {
                    var i = e.inflate(l.encode64(t)).rval;
                    return null === i ? null : l.decode64(i)
                }
                ;
                var y = function(e, t, r) {
                    if (!e)
                        throw new Error("WebStorage not available.");
                    var i;
                    if (null === r ? i = e.removeItem(t) : (r = l.encode64(JSON.stringify(r)),
                    i = e.setItem(t, r)),
                    void 0 !== i && !0 !== i.rval) {
                        var n = new Error(i.error.message);
                        throw n.id = i.error.id,
                        n.name = i.error.name,
                        n
                    }
                }
                  , v = function(e, t) {
                    if (!e)
                        throw new Error("WebStorage not available.");
                    var r = e.getItem(t);
                    if (e.init)
                        if (null === r.rval) {
                            if (r.error) {
                                var i = new Error(r.error.message);
                                throw i.id = r.error.id,
                                i.name = r.error.name,
                                i
                            }
                            r = null
                        } else
                            r = r.rval;
                    return null !== r && (r = JSON.parse(l.decode64(r))),
                    r
                }
                  , w = function(e, t, r, i) {
                    var n = v(e, t);
                    null === n && (n = {}),
                    n[r] = i,
                    y(e, t, n)
                }
                  , E = function(e, t, r) {
                    var i = v(e, t);
                    return null !== i && (i = r in i ? i[r] : null),
                    i
                }
                  , _ = function(e, t, r) {
                    var i = v(e, t);
                    if (null !== i && r in i) {
                        delete i[r];
                        var n = !0;
                        for (var s in i) {
                            n = !1;
                            break
                        }
                        n && (i = null),
                        y(e, t, i)
                    }
                }
                  , S = function(e, t) {
                    y(e, t, null)
                }
                  , k = function(e, t, r) {
                    var i, n = null;
                    void 0 === r && (r = ["web", "flash"]);
                    var s = !1
                      , o = null;
                    for (var a in r) {
                        i = r[a];
                        try {
                            if ("flash" === i || "both" === i) {
                                if (null === t[0])
                                    throw new Error("Flash local storage not available.");
                                n = e.apply(this, t),
                                s = "flash" === i
                            }
                            "web" !== i && "both" !== i || (t[0] = localStorage,
                            n = e.apply(this, t),
                            s = !0)
                        } catch (e) {
                            o = e
                        }
                        if (s)
                            break
                    }
                    if (!s)
                        throw o;
                    return n
                };
                l.setItem = function(e, t, r, i, n) {
                    k(w, arguments, n)
                }
                ,
                l.getItem = function(e, t, r, i) {
                    return k(E, arguments, i)
                }
                ,
                l.removeItem = function(e, t, r, i) {
                    k(_, arguments, i)
                }
                ,
                l.clearItems = function(e, t, r) {
                    k(S, arguments, r)
                }
                ,
                l.parseUrl = function(e) {
                    var t = /^(https?):\/\/([^:&^\/]*):?(\d*)(.*)$/g;
                    t.lastIndex = 0;
                    var r = t.exec(e)
                      , i = null === r ? null : {
                        full: e,
                        scheme: r[1],
                        host: r[2],
                        port: r[3],
                        path: r[4]
                    };
                    return i && (i.fullHost = i.host,
                    i.port ? 80 !== i.port && "http" === i.scheme ? i.fullHost += ":" + i.port : 443 !== i.port && "https" === i.scheme && (i.fullHost += ":" + i.port) : "http" === i.scheme ? i.port = 80 : "https" === i.scheme && (i.port = 443),
                    i.full = i.scheme + "://" + i.fullHost),
                    i
                }
                ;
                var A = null;
                l.getQueryVariables = function(e) {
                    var t, r = function(e) {
                        for (var t = {}, r = e.split("&"), i = 0; i < r.length; i++) {
                            var n, s, o = r[i].indexOf("=");
                            o > 0 ? (n = r[i].substring(0, o),
                            s = r[i].substring(o + 1)) : (n = r[i],
                            s = null),
                            n in t || (t[n] = []),
                            n in Object.prototype || null === s || t[n].push(unescape(s))
                        }
                        return t
                    };
                    return void 0 === e ? (null === A && (A = "undefined" != typeof window && window.location && window.location.search ? r(window.location.search.substring(1)) : {}),
                    t = A) : t = r(e),
                    t
                }
                ,
                l.parseFragment = function(e) {
                    var t = e
                      , r = ""
                      , i = e.indexOf("?");
                    i > 0 && (t = e.substring(0, i),
                    r = e.substring(i + 1));
                    var n = t.split("/");
                    return n.length > 0 && "" === n[0] && n.shift(),
                    {
                        pathString: t,
                        queryString: r,
                        path: n,
                        query: "" === r ? {} : l.getQueryVariables(r)
                    }
                }
                ,
                l.makeRequest = function(e) {
                    var t = l.parseFragment(e)
                      , r = {
                        path: t.pathString,
                        query: t.queryString,
                        getPath: function(e) {
                            return void 0 === e ? t.path : t.path[e]
                        },
                        getQuery: function(e, r) {
                            var i;
                            return void 0 === e ? i = t.query : (i = t.query[e]) && void 0 !== r && (i = i[r]),
                            i
                        },
                        getQueryLast: function(e, t) {
                            var i = r.getQuery(e);
                            return i ? i[i.length - 1] : t
                        }
                    };
                    return r
                }
                ,
                l.makeLink = function(e, t, r) {
                    e = jQuery.isArray(e) ? e.join("/") : e;
                    var i = jQuery.param(t || {});
                    return r = r || "",
                    e + (i.length > 0 ? "?" + i : "") + (r.length > 0 ? "#" + r : "")
                }
                ,
                l.setPath = function(e, t, r) {
                    if ("object" == typeof e && null !== e)
                        for (var i = 0, n = t.length; i < n; ) {
                            var s = t[i++];
                            if (i == n)
                                e[s] = r;
                            else {
                                var o = s in e;
                                (!o || o && "object" != typeof e[s] || o && null === e[s]) && (e[s] = {}),
                                e = e[s]
                            }
                        }
                }
                ,
                l.getPath = function(e, t, r) {
                    for (var i = 0, n = t.length, s = !0; s && i < n && "object" == typeof e && null !== e; ) {
                        var o = t[i++];
                        (s = o in e) && (e = e[o])
                    }
                    return s ? e : r
                }
                ,
                l.deletePath = function(e, t) {
                    if ("object" == typeof e && null !== e)
                        for (var r = 0, i = t.length; r < i; ) {
                            var n = t[r++];
                            if (r == i)
                                delete e[n];
                            else {
                                if (!(n in e) || "object" != typeof e[n] || null === e[n])
                                    break;
                                e = e[n]
                            }
                        }
                }
                ,
                l.isEmpty = function(e) {
                    for (var t in e)
                        if (e.hasOwnProperty(t))
                            return !1;
                    return !0
                }
                ,
                l.format = function(e) {
                    for (var t, r, i = /%./g, n = 0, s = [], o = 0; t = i.exec(e); ) {
                        (r = e.substring(o, i.lastIndex - 2)).length > 0 && s.push(r),
                        o = i.lastIndex;
                        var a = t[0][1];
                        switch (a) {
                        case "s":
                        case "o":
                            n < arguments.length ? s.push(arguments[1 + n++]) : s.push("<?>");
                            break;
                        case "%":
                            s.push("%");
                            break;
                        default:
                            s.push("<%" + a + "?>")
                        }
                    }
                    return s.push(e.substring(o)),
                    s.join("")
                }
                ,
                l.formatNumber = function(e, t, r, i) {
                    var n = e
                      , s = isNaN(t = Math.abs(t)) ? 2 : t
                      , o = void 0 === r ? "," : r
                      , a = void 0 === i ? "." : i
                      , c = n < 0 ? "-" : ""
                      , u = parseInt(n = Math.abs(+n || 0).toFixed(s), 10) + ""
                      , f = u.length > 3 ? u.length % 3 : 0;
                    return c + (f ? u.substr(0, f) + a : "") + u.substr(f).replace(/(\d{3})(?=\d)/g, "$1" + a) + (s ? o + Math.abs(n - u).toFixed(s).slice(2) : "")
                }
                ,
                l.formatSize = function(e) {
                    return e = e >= 1073741824 ? l.formatNumber(e / 1073741824, 2, ".", "") + " GiB" : e >= 1048576 ? l.formatNumber(e / 1048576, 2, ".", "") + " MiB" : e >= 1024 ? l.formatNumber(e / 1024, 0) + " KiB" : l.formatNumber(e, 0) + " bytes"
                }
                ,
                l.bytesFromIP = function(e) {
                    return -1 !== e.indexOf(".") ? l.bytesFromIPv4(e) : -1 !== e.indexOf(":") ? l.bytesFromIPv6(e) : null
                }
                ,
                l.bytesFromIPv4 = function(e) {
                    if (4 !== (e = e.split(".")).length)
                        return null;
                    for (var t = l.createBuffer(), r = 0; r < e.length; ++r) {
                        var i = parseInt(e[r], 10);
                        if (isNaN(i))
                            return null;
                        t.putByte(i)
                    }
                    return t.getBytes()
                }
                ,
                l.bytesFromIPv6 = function(e) {
                    for (var t = 0, r = 2 * (8 - (e = e.split(":").filter((function(e) {
                        return 0 === e.length && ++t,
                        !0
                    }
                    ))).length + t), i = l.createBuffer(), n = 0; n < 8; ++n)
                        if (e[n] && 0 !== e[n].length) {
                            var s = l.hexToBytes(e[n]);
                            s.length < 2 && i.putByte(0),
                            i.putBytes(s)
                        } else
                            i.fillWithByte(0, r),
                            r = 0;
                    return i.getBytes()
                }
                ,
                l.bytesToIP = function(e) {
                    return 4 === e.length ? l.bytesToIPv4(e) : 16 === e.length ? l.bytesToIPv6(e) : null
                }
                ,
                l.bytesToIPv4 = function(e) {
                    if (4 !== e.length)
                        return null;
                    for (var t = [], r = 0; r < e.length; ++r)
                        t.push(e.charCodeAt(r));
                    return t.join(".")
                }
                ,
                l.bytesToIPv6 = function(e) {
                    if (16 !== e.length)
                        return null;
                    for (var t = [], r = [], i = 0, n = 0; n < e.length; n += 2) {
                        for (var s = l.bytesToHex(e[n] + e[n + 1]); "0" === s[0] && "0" !== s; )
                            s = s.substr(1);
                        if ("0" === s) {
                            var o = r[r.length - 1]
                              , a = t.length;
                            o && a === o.end + 1 ? (o.end = a,
                            o.end - o.start > r[i].end - r[i].start && (i = r.length - 1)) : r.push({
                                start: a,
                                end: a
                            })
                        }
                        t.push(s)
                    }
                    if (r.length > 0) {
                        var c = r[i];
                        c.end - c.start > 0 && (t.splice(c.start, c.end - c.start + 1, ""),
                        0 === c.start && t.unshift(""),
                        7 === c.end && t.push(""))
                    }
                    return t.join(":")
                }
                ,
                l.estimateCores = function(e, t) {
                    if ("function" == typeof e && (t = e,
                    e = {}),
                    e = e || {},
                    "cores"in l && !e.update)
                        return t(null, l.cores);
                    if ("undefined" != typeof navigator && "hardwareConcurrency"in navigator && navigator.hardwareConcurrency > 0)
                        return l.cores = navigator.hardwareConcurrency,
                        t(null, l.cores);
                    if ("undefined" == typeof Worker)
                        return l.cores = 1,
                        t(null, l.cores);
                    if ("undefined" == typeof Blob)
                        return l.cores = 2,
                        t(null, l.cores);
                    var r = URL.createObjectURL(new Blob(["(", function() {
                        self.addEventListener("message", (function(e) {
                            for (var t = Date.now(), r = t + 4; Date.now() < r; )
                                ;
                            self.postMessage({
                                st: t,
                                et: r
                            })
                        }
                        ))
                    }
                    .toString(), ")()"],{
                        type: "application/javascript"
                    }));
                    !function e(i, n, s) {
                        if (0 === n) {
                            var o = Math.floor(i.reduce((function(e, t) {
                                return e + t
                            }
                            ), 0) / i.length);
                            return l.cores = Math.max(1, o),
                            URL.revokeObjectURL(r),
                            t(null, l.cores)
                        }
                        !function(e, t) {
                            for (var i = [], n = [], s = 0; s < e; ++s) {
                                var o = new Worker(r);
                                o.addEventListener("message", (function(r) {
                                    if (n.push(r.data),
                                    n.length === e) {
                                        for (var s = 0; s < e; ++s)
                                            i[s].terminate();
                                        t(null, n)
                                    }
                                }
                                )),
                                i.push(o)
                            }
                            for (s = 0; s < e; ++s)
                                i[s].postMessage(s)
                        }(s, (function(t, r) {
                            i.push(function(e, t) {
                                for (var r = [], i = 0; i < e; ++i)
                                    for (var n = t[i], s = r[i] = [], o = 0; o < e; ++o)
                                        if (i !== o) {
                                            var a = t[o];
                                            (n.st > a.st && n.st < a.et || a.st > n.st && a.st < n.et) && s.push(o)
                                        }
                                return r.reduce((function(e, t) {
                                    return Math.max(e, t.length)
                                }
                                ), 0)
                            }(s, r)),
                            e(i, n - 1, s)
                        }
                        ))
                    }([], 5, 16)
                }
            }
            ).call(this, e("_process"), "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {}, e("buffer").Buffer, arguments[3], arguments[4], arguments[5], arguments[6], e("timers").setImmediate)
        }
        , {
            "./baseN": 331,
            "./forge": 336,
            _process: 118,
            buffer: 18,
            timers: 154
        }],
        359: [function(e, t, r) {
            var i = e("./forge");
            e("./aes"),
            e("./asn1"),
            e("./des"),
            e("./md"),
            e("./mgf"),
            e("./oids"),
            e("./pem"),
            e("./pss"),
            e("./rsa"),
            e("./util");
            var n = i.asn1
              , s = t.exports = i.pki = i.pki || {}
              , o = s.oids
              , a = {};
            a.CN = o.commonName,
            a.commonName = "CN",
            a.C = o.countryName,
            a.countryName = "C",
            a.L = o.localityName,
            a.localityName = "L",
            a.ST = o.stateOrProvinceName,
            a.stateOrProvinceName = "ST",
            a.O = o.organizationName,
            a.organizationName = "O",
            a.OU = o.organizationalUnitName,
            a.organizationalUnitName = "OU",
            a.E = o.emailAddress,
            a.emailAddress = "E";
            var c = i.pki.rsa.publicKeyValidator
              , u = {
                name: "Certificate",
                tagClass: n.Class.UNIVERSAL,
                type: n.Type.SEQUENCE,
                constructed: !0,
                value: [{
                    name: "Certificate.TBSCertificate",
                    tagClass: n.Class.UNIVERSAL,
                    type: n.Type.SEQUENCE,
                    constructed: !0,
                    captureAsn1: "tbsCertificate",
                    value: [{
                        name: "Certificate.TBSCertificate.version",
                        tagClass: n.Class.CONTEXT_SPECIFIC,
                        type: 0,
                        constructed: !0,
                        optional: !0,
                        value: [{
                            name: "Certificate.TBSCertificate.version.integer",
                            tagClass: n.Class.UNIVERSAL,
                            type: n.Type.INTEGER,
                            constructed: !1,
                            capture: "certVersion"
                        }]
                    }, {
                        name: "Certificate.TBSCertificate.serialNumber",
                        tagClass: n.Class.UNIVERSAL,
                        type: n.Type.INTEGER,
                        constructed: !1,
                        capture: "certSerialNumber"
                    }, {
                        name: "Certificate.TBSCertificate.signature",
                        tagClass: n.Class.UNIVERSAL,
                        type: n.Type.SEQUENCE,
                        constructed: !0,
                        value: [{
                            name: "Certificate.TBSCertificate.signature.algorithm",
                            tagClass: n.Class.UNIVERSAL,
                            type: n.Type.OID,
                            constructed: !1,
                            capture: "certinfoSignatureOid"
                        }, {
                            name: "Certificate.TBSCertificate.signature.parameters",
                            tagClass: n.Class.UNIVERSAL,
                            optional: !0,
                            captureAsn1: "certinfoSignatureParams"
                        }]
                    }, {
                        name: "Certificate.TBSCertificate.issuer",
                        tagClass: n.Class.UNIVERSAL,
                        type: n.Type.SEQUENCE,
                        constructed: !0,
                        captureAsn1: "certIssuer"
                    }, {
                        name: "Certificate.TBSCertificate.validity",
                        tagClass: n.Class.UNIVERSAL,
                        type: n.Type.SEQUENCE,
                        constructed: !0,
                        value: [{
                            name: "Certificate.TBSCertificate.validity.notBefore (utc)",
                            tagClass: n.Class.UNIVERSAL,
                            type: n.Type.UTCTIME,
                            constructed: !1,
                            optional: !0,
                            capture: "certValidity1UTCTime"
                        }, {
                            name: "Certificate.TBSCertificate.validity.notBefore (generalized)",
                            tagClass: n.Class.UNIVERSAL,
                            type: n.Type.GENERALIZEDTIME,
                            constructed: !1,
                            optional: !0,
                            capture: "certValidity2GeneralizedTime"
                        }, {
                            name: "Certificate.TBSCertificate.validity.notAfter (utc)",
                            tagClass: n.Class.UNIVERSAL,
                            type: n.Type.UTCTIME,
                            constructed: !1,
                            optional: !0,
                            capture: "certValidity3UTCTime"
                        }, {
                            name: "Certificate.TBSCertificate.validity.notAfter (generalized)",
                            tagClass: n.Class.UNIVERSAL,
                            type: n.Type.GENERALIZEDTIME,
                            constructed: !1,
                            optional: !0,
                            capture: "certValidity4GeneralizedTime"
                        }]
                    }, {
                        name: "Certificate.TBSCertificate.subject",
                        tagClass: n.Class.UNIVERSAL,
                        type: n.Type.SEQUENCE,
                        constructed: !0,
                        captureAsn1: "certSubject"
                    }, c, {
                        name: "Certificate.TBSCertificate.issuerUniqueID",
                        tagClass: n.Class.CONTEXT_SPECIFIC,
                        type: 1,
                        constructed: !0,
                        optional: !0,
                        value: [{
                            name: "Certificate.TBSCertificate.issuerUniqueID.id",
                            tagClass: n.Class.UNIVERSAL,
                            type: n.Type.BITSTRING,
                            constructed: !1,
                            captureBitStringValue: "certIssuerUniqueId"
                        }]
                    }, {
                        name: "Certificate.TBSCertificate.subjectUniqueID",
                        tagClass: n.Class.CONTEXT_SPECIFIC,
                        type: 2,
                        constructed: !0,
                        optional: !0,
                        value: [{
                            name: "Certificate.TBSCertificate.subjectUniqueID.id",
                            tagClass: n.Class.UNIVERSAL,
                            type: n.Type.BITSTRING,
                            constructed: !1,
                            captureBitStringValue: "certSubjectUniqueId"
                        }]
                    }, {
                        name: "Certificate.TBSCertificate.extensions",
                        tagClass: n.Class.CONTEXT_SPECIFIC,
                        type: 3,
                        constructed: !0,
                        captureAsn1: "certExtensions",
                        optional: !0
                    }]
                }, {
                    name: "Certificate.signatureAlgorithm",
                    tagClass: n.Class.UNIVERSAL,
                    type: n.Type.SEQUENCE,
                    constructed: !0,
                    value: [{
                        name: "Certificate.signatureAlgorithm.algorithm",
                        tagClass: n.Class.UNIVERSAL,
                        type: n.Type.OID,
                        constructed: !1,
                        capture: "certSignatureOid"
                    }, {
                        name: "Certificate.TBSCertificate.signature.parameters",
                        tagClass: n.Class.UNIVERSAL,
                        optional: !0,
                        captureAsn1: "certSignatureParams"
                    }]
                }, {
                    name: "Certificate.signatureValue",
                    tagClass: n.Class.UNIVERSAL,
                    type: n.Type.BITSTRING,
                    constructed: !1,
                    captureBitStringValue: "certSignature"
                }]
            }
              , f = {
                name: "rsapss",
                tagClass: n.Class.UNIVERSAL,
                type: n.Type.SEQUENCE,
                constructed: !0,
                value: [{
                    name: "rsapss.hashAlgorithm",
                    tagClass: n.Class.CONTEXT_SPECIFIC,
                    type: 0,
                    constructed: !0,
                    value: [{
                        name: "rsapss.hashAlgorithm.AlgorithmIdentifier",
                        tagClass: n.Class.UNIVERSAL,
                        type: n.Class.SEQUENCE,
                        constructed: !0,
                        optional: !0,
                        value: [{
                            name: "rsapss.hashAlgorithm.AlgorithmIdentifier.algorithm",
                            tagClass: n.Class.UNIVERSAL,
                            type: n.Type.OID,
                            constructed: !1,
                            capture: "hashOid"
                        }]
                    }]
                }, {
                    name: "rsapss.maskGenAlgorithm",
                    tagClass: n.Class.CONTEXT_SPECIFIC,
                    type: 1,
                    constructed: !0,
                    value: [{
                        name: "rsapss.maskGenAlgorithm.AlgorithmIdentifier",
                        tagClass: n.Class.UNIVERSAL,
                        type: n.Class.SEQUENCE,
                        constructed: !0,
                        optional: !0,
                        value: [{
                            name: "rsapss.maskGenAlgorithm.AlgorithmIdentifier.algorithm",
                            tagClass: n.Class.UNIVERSAL,
                            type: n.Type.OID,
                            constructed: !1,
                            capture: "maskGenOid"
                        }, {
                            name: "rsapss.maskGenAlgorithm.AlgorithmIdentifier.params",
                            tagClass: n.Class.UNIVERSAL,
                            type: n.Type.SEQUENCE,
                            constructed: !0,
                            value: [{
                                name: "rsapss.maskGenAlgorithm.AlgorithmIdentifier.params.algorithm",
                                tagClass: n.Class.UNIVERSAL,
                                type: n.Type.OID,
                                constructed: !1,
                                capture: "maskGenHashOid"
                            }]
                        }]
                    }]
                }, {
                    name: "rsapss.saltLength",
                    tagClass: n.Class.CONTEXT_SPECIFIC,
                    type: 2,
                    optional: !0,
                    value: [{
                        name: "rsapss.saltLength.saltLength",
                        tagClass: n.Class.UNIVERSAL,
                        type: n.Class.INTEGER,
                        constructed: !1,
                        capture: "saltLength"
                    }]
                }, {
                    name: "rsapss.trailerField",
                    tagClass: n.Class.CONTEXT_SPECIFIC,
                    type: 3,
                    optional: !0,
                    value: [{
                        name: "rsapss.trailer.trailer",
                        tagClass: n.Class.UNIVERSAL,
                        type: n.Class.INTEGER,
                        constructed: !1,
                        capture: "trailer"
                    }]
                }]
            }
              , h = {
                name: "CertificationRequestInfo",
                tagClass: n.Class.UNIVERSAL,
                type: n.Type.SEQUENCE,
                constructed: !0,
                captureAsn1: "certificationRequestInfo",
                value: [{
                    name: "CertificationRequestInfo.integer",
                    tagClass: n.Class.UNIVERSAL,
                    type: n.Type.INTEGER,
                    constructed: !1,
                    capture: "certificationRequestInfoVersion"
                }, {
                    name: "CertificationRequestInfo.subject",
                    tagClass: n.Class.UNIVERSAL,
                    type: n.Type.SEQUENCE,
                    constructed: !0,
                    captureAsn1: "certificationRequestInfoSubject"
                }, c, {
                    name: "CertificationRequestInfo.attributes",
                    tagClass: n.Class.CONTEXT_SPECIFIC,
                    type: 0,
                    constructed: !0,
                    optional: !0,
                    capture: "certificationRequestInfoAttributes",
                    value: [{
                        name: "CertificationRequestInfo.attributes",
                        tagClass: n.Class.UNIVERSAL,
                        type: n.Type.SEQUENCE,
                        constructed: !0,
                        value: [{
                            name: "CertificationRequestInfo.attributes.type",
                            tagClass: n.Class.UNIVERSAL,
                            type: n.Type.OID,
                            constructed: !1
                        }, {
                            name: "CertificationRequestInfo.attributes.value",
                            tagClass: n.Class.UNIVERSAL,
                            type: n.Type.SET,
                            constructed: !0
                        }]
                    }]
                }]
            }
              , l = {
                name: "CertificationRequest",
                tagClass: n.Class.UNIVERSAL,
                type: n.Type.SEQUENCE,
                constructed: !0,
                captureAsn1: "csr",
                value: [h, {
                    name: "CertificationRequest.signatureAlgorithm",
                    tagClass: n.Class.UNIVERSAL,
                    type: n.Type.SEQUENCE,
                    constructed: !0,
                    value: [{
                        name: "CertificationRequest.signatureAlgorithm.algorithm",
                        tagClass: n.Class.UNIVERSAL,
                        type: n.Type.OID,
                        constructed: !1,
                        capture: "csrSignatureOid"
                    }, {
                        name: "CertificationRequest.signatureAlgorithm.parameters",
                        tagClass: n.Class.UNIVERSAL,
                        optional: !0,
                        captureAsn1: "csrSignatureParams"
                    }]
                }, {
                    name: "CertificationRequest.signature",
                    tagClass: n.Class.UNIVERSAL,
                    type: n.Type.BITSTRING,
                    constructed: !1,
                    captureBitStringValue: "csrSignature"
                }]
            };
            function d(e, t) {
                "string" == typeof t && (t = {
                    shortName: t
                });
                for (var r, i = null, n = 0; null === i && n < e.attributes.length; ++n)
                    r = e.attributes[n],
                    t.type && t.type === r.type ? i = r : t.name && t.name === r.name ? i = r : t.shortName && t.shortName === r.shortName && (i = r);
                return i
            }
            s.RDNAttributesAsArray = function(e, t) {
                for (var r, i, s, c = [], u = 0; u < e.value.length; ++u) {
                    r = e.value[u];
                    for (var f = 0; f < r.value.length; ++f)
                        s = {},
                        i = r.value[f],
                        s.type = n.derToOid(i.value[0].value),
                        s.value = i.value[1].value,
                        s.valueTagClass = i.value[1].type,
                        s.type in o && (s.name = o[s.type],
                        s.name in a && (s.shortName = a[s.name])),
                        t && (t.update(s.type),
                        t.update(s.value)),
                        c.push(s)
                }
                return c
            }
            ,
            s.CRIAttributesAsArray = function(e) {
                for (var t = [], r = 0; r < e.length; ++r)
                    for (var i = e[r], c = n.derToOid(i.value[0].value), u = i.value[1].value, f = 0; f < u.length; ++f) {
                        var h = {};
                        if (h.type = c,
                        h.value = u[f].value,
                        h.valueTagClass = u[f].type,
                        h.type in o && (h.name = o[h.type],
                        h.name in a && (h.shortName = a[h.name])),
                        h.type === o.extensionRequest) {
                            h.extensions = [];
                            for (var l = 0; l < h.value.length; ++l)
                                h.extensions.push(s.certificateExtensionFromAsn1(h.value[l]))
                        }
                        t.push(h)
                    }
                return t
            }
            ;
            var p = function(e, t, r) {
                var i = {};
                if (e !== o["RSASSA-PSS"])
                    return i;
                r && (i = {
                    hash: {
                        algorithmOid: o.sha1
                    },
                    mgf: {
                        algorithmOid: o.mgf1,
                        hash: {
                            algorithmOid: o.sha1
                        }
                    },
                    saltLength: 20
                });
                var s = {}
                  , a = [];
                if (!n.validate(t, f, s, a)) {
                    var c = new Error("Cannot read RSASSA-PSS parameter block.");
                    throw c.errors = a,
                    c
                }
                return void 0 !== s.hashOid && (i.hash = i.hash || {},
                i.hash.algorithmOid = n.derToOid(s.hashOid)),
                void 0 !== s.maskGenOid && (i.mgf = i.mgf || {},
                i.mgf.algorithmOid = n.derToOid(s.maskGenOid),
                i.mgf.hash = i.mgf.hash || {},
                i.mgf.hash.algorithmOid = n.derToOid(s.maskGenHashOid)),
                void 0 !== s.saltLength && (i.saltLength = s.saltLength.charCodeAt(0)),
                i
            };
            function b(e) {
                for (var t, r, s = n.create(n.Class.UNIVERSAL, n.Type.SEQUENCE, !0, []), o = e.attributes, a = 0; a < o.length; ++a) {
                    var c = (t = o[a]).value
                      , u = n.Type.PRINTABLESTRING;
                    "valueTagClass"in t && (u = t.valueTagClass) === n.Type.UTF8 && (c = i.util.encodeUtf8(c)),
                    r = n.create(n.Class.UNIVERSAL, n.Type.SET, !0, [n.create(n.Class.UNIVERSAL, n.Type.SEQUENCE, !0, [n.create(n.Class.UNIVERSAL, n.Type.OID, !1, n.oidToDer(t.type).getBytes()), n.create(n.Class.UNIVERSAL, u, !1, c)])]),
                    s.value.push(r)
                }
                return s
            }
            function g(e) {
                for (var t, r = 0; r < e.length; ++r) {
                    if (void 0 === (t = e[r]).name && (t.type && t.type in s.oids ? t.name = s.oids[t.type] : t.shortName && t.shortName in a && (t.name = s.oids[a[t.shortName]])),
                    void 0 === t.type) {
                        if (!(t.name && t.name in s.oids))
                            throw (c = new Error("Attribute type not specified.")).attribute = t,
                            c;
                        t.type = s.oids[t.name]
                    }
                    if (void 0 === t.shortName && t.name && t.name in a && (t.shortName = a[t.name]),
                    t.type === o.extensionRequest && (t.valueConstructed = !0,
                    t.valueTagClass = n.Type.SEQUENCE,
                    !t.value && t.extensions)) {
                        t.value = [];
                        for (var i = 0; i < t.extensions.length; ++i)
                            t.value.push(s.certificateExtensionToAsn1(m(t.extensions[i])))
                    }
                    var c;
                    if (void 0 === t.value)
                        throw (c = new Error("Attribute value not specified.")).attribute = t,
                        c
                }
            }
            function m(e, t) {
                if (t = t || {},
                void 0 === e.name && e.id && e.id in s.oids && (e.name = s.oids[e.id]),
                void 0 === e.id) {
                    if (!(e.name && e.name in s.oids))
                        throw (E = new Error("Extension ID not specified.")).extension = e,
                        E;
                    e.id = s.oids[e.name]
                }
                if (void 0 !== e.value)
                    return e;
                if ("keyUsage" === e.name) {
                    var r = 0
                      , a = 0
                      , c = 0;
                    e.digitalSignature && (a |= 128,
                    r = 7),
                    e.nonRepudiation && (a |= 64,
                    r = 6),
                    e.keyEncipherment && (a |= 32,
                    r = 5),
                    e.dataEncipherment && (a |= 16,
                    r = 4),
                    e.keyAgreement && (a |= 8,
                    r = 3),
                    e.keyCertSign && (a |= 4,
                    r = 2),
                    e.cRLSign && (a |= 2,
                    r = 1),
                    e.encipherOnly && (a |= 1,
                    r = 0),
                    e.decipherOnly && (c |= 128,
                    r = 7);
                    var u = String.fromCharCode(r);
                    0 !== c ? u += String.fromCharCode(a) + String.fromCharCode(c) : 0 !== a && (u += String.fromCharCode(a)),
                    e.value = n.create(n.Class.UNIVERSAL, n.Type.BITSTRING, !1, u)
                } else if ("basicConstraints" === e.name)
                    e.value = n.create(n.Class.UNIVERSAL, n.Type.SEQUENCE, !0, []),
                    e.cA && e.value.value.push(n.create(n.Class.UNIVERSAL, n.Type.BOOLEAN, !1, String.fromCharCode(255))),
                    "pathLenConstraint"in e && e.value.value.push(n.create(n.Class.UNIVERSAL, n.Type.INTEGER, !1, n.integerToDer(e.pathLenConstraint).getBytes()));
                else if ("extKeyUsage" === e.name) {
                    e.value = n.create(n.Class.UNIVERSAL, n.Type.SEQUENCE, !0, []);
                    var f = e.value.value;
                    for (var h in e)
                        !0 === e[h] && (h in o ? f.push(n.create(n.Class.UNIVERSAL, n.Type.OID, !1, n.oidToDer(o[h]).getBytes())) : -1 !== h.indexOf(".") && f.push(n.create(n.Class.UNIVERSAL, n.Type.OID, !1, n.oidToDer(h).getBytes())))
                } else if ("nsCertType" === e.name) {
                    r = 0,
                    a = 0;
                    e.client && (a |= 128,
                    r = 7),
                    e.server && (a |= 64,
                    r = 6),
                    e.email && (a |= 32,
                    r = 5),
                    e.objsign && (a |= 16,
                    r = 4),
                    e.reserved && (a |= 8,
                    r = 3),
                    e.sslCA && (a |= 4,
                    r = 2),
                    e.emailCA && (a |= 2,
                    r = 1),
                    e.objCA && (a |= 1,
                    r = 0);
                    u = String.fromCharCode(r);
                    0 !== a && (u += String.fromCharCode(a)),
                    e.value = n.create(n.Class.UNIVERSAL, n.Type.BITSTRING, !1, u)
                } else if ("subjectAltName" === e.name || "issuerAltName" === e.name) {
                    e.value = n.create(n.Class.UNIVERSAL, n.Type.SEQUENCE, !0, []);
                    for (var l = 0; l < e.altNames.length; ++l) {
                        u = (y = e.altNames[l]).value;
                        if (7 === y.type && y.ip) {
                            if (null === (u = i.util.bytesFromIP(y.ip)))
                                throw (E = new Error('Extension "ip" value is not a valid IPv4 or IPv6 address.')).extension = e,
                                E
                        } else
                            8 === y.type && (u = y.oid ? n.oidToDer(n.oidToDer(y.oid)) : n.oidToDer(u));
                        e.value.value.push(n.create(n.Class.CONTEXT_SPECIFIC, y.type, !1, u))
                    }
                } else if ("nsComment" === e.name && t.cert) {
                    if (!/^[\x00-\x7F]*$/.test(e.comment) || e.comment.length < 1 || e.comment.length > 128)
                        throw new Error('Invalid "nsComment" content.');
                    e.value = n.create(n.Class.UNIVERSAL, n.Type.IA5STRING, !1, e.comment)
                } else if ("subjectKeyIdentifier" === e.name && t.cert) {
                    var d = t.cert.generateSubjectKeyIdentifier();
                    e.subjectKeyIdentifier = d.toHex(),
                    e.value = n.create(n.Class.UNIVERSAL, n.Type.OCTETSTRING, !1, d.getBytes())
                } else if ("authorityKeyIdentifier" === e.name && t.cert) {
                    e.value = n.create(n.Class.UNIVERSAL, n.Type.SEQUENCE, !0, []);
                    f = e.value.value;
                    if (e.keyIdentifier) {
                        var p = !0 === e.keyIdentifier ? t.cert.generateSubjectKeyIdentifier().getBytes() : e.keyIdentifier;
                        f.push(n.create(n.Class.CONTEXT_SPECIFIC, 0, !1, p))
                    }
                    if (e.authorityCertIssuer) {
                        var g = [n.create(n.Class.CONTEXT_SPECIFIC, 4, !0, [b(!0 === e.authorityCertIssuer ? t.cert.issuer : e.authorityCertIssuer)])];
                        f.push(n.create(n.Class.CONTEXT_SPECIFIC, 1, !0, g))
                    }
                    if (e.serialNumber) {
                        var m = i.util.hexToBytes(!0 === e.serialNumber ? t.cert.serialNumber : e.serialNumber);
                        f.push(n.create(n.Class.CONTEXT_SPECIFIC, 2, !1, m))
                    }
                } else if ("cRLDistributionPoints" === e.name) {
                    e.value = n.create(n.Class.UNIVERSAL, n.Type.SEQUENCE, !0, []);
                    f = e.value.value;
                    var y, v = n.create(n.Class.UNIVERSAL, n.Type.SEQUENCE, !0, []), w = n.create(n.Class.CONTEXT_SPECIFIC, 0, !0, []);
                    for (l = 0; l < e.altNames.length; ++l) {
                        u = (y = e.altNames[l]).value;
                        if (7 === y.type && y.ip) {
                            if (null === (u = i.util.bytesFromIP(y.ip)))
                                throw (E = new Error('Extension "ip" value is not a valid IPv4 or IPv6 address.')).extension = e,
                                E
                        } else
                            8 === y.type && (u = y.oid ? n.oidToDer(n.oidToDer(y.oid)) : n.oidToDer(u));
                        w.value.push(n.create(n.Class.CONTEXT_SPECIFIC, y.type, !1, u))
                    }
                    v.value.push(n.create(n.Class.CONTEXT_SPECIFIC, 0, !0, [w])),
                    f.push(v)
                }
                var E;
                if (void 0 === e.value)
                    throw (E = new Error("Extension value not specified.")).extension = e,
                    E;
                return e
            }
            function y(e, t) {
                switch (e) {
                case o["RSASSA-PSS"]:
                    var r = [];
                    return void 0 !== t.hash.algorithmOid && r.push(n.create(n.Class.CONTEXT_SPECIFIC, 0, !0, [n.create(n.Class.UNIVERSAL, n.Type.SEQUENCE, !0, [n.create(n.Class.UNIVERSAL, n.Type.OID, !1, n.oidToDer(t.hash.algorithmOid).getBytes()), n.create(n.Class.UNIVERSAL, n.Type.NULL, !1, "")])])),
                    void 0 !== t.mgf.algorithmOid && r.push(n.create(n.Class.CONTEXT_SPECIFIC, 1, !0, [n.create(n.Class.UNIVERSAL, n.Type.SEQUENCE, !0, [n.create(n.Class.UNIVERSAL, n.Type.OID, !1, n.oidToDer(t.mgf.algorithmOid).getBytes()), n.create(n.Class.UNIVERSAL, n.Type.SEQUENCE, !0, [n.create(n.Class.UNIVERSAL, n.Type.OID, !1, n.oidToDer(t.mgf.hash.algorithmOid).getBytes()), n.create(n.Class.UNIVERSAL, n.Type.NULL, !1, "")])])])),
                    void 0 !== t.saltLength && r.push(n.create(n.Class.CONTEXT_SPECIFIC, 2, !0, [n.create(n.Class.UNIVERSAL, n.Type.INTEGER, !1, n.integerToDer(t.saltLength).getBytes())])),
                    n.create(n.Class.UNIVERSAL, n.Type.SEQUENCE, !0, r);
                default:
                    return n.create(n.Class.UNIVERSAL, n.Type.NULL, !1, "")
                }
            }
            function v(e) {
                var t = n.create(n.Class.CONTEXT_SPECIFIC, 0, !0, []);
                if (0 === e.attributes.length)
                    return t;
                for (var r = e.attributes, s = 0; s < r.length; ++s) {
                    var o = r[s]
                      , a = o.value
                      , c = n.Type.UTF8;
                    "valueTagClass"in o && (c = o.valueTagClass),
                    c === n.Type.UTF8 && (a = i.util.encodeUtf8(a));
                    var u = !1;
                    "valueConstructed"in o && (u = o.valueConstructed);
                    var f = n.create(n.Class.UNIVERSAL, n.Type.SEQUENCE, !0, [n.create(n.Class.UNIVERSAL, n.Type.OID, !1, n.oidToDer(o.type).getBytes()), n.create(n.Class.UNIVERSAL, n.Type.SET, !0, [n.create(n.Class.UNIVERSAL, c, u, a)])]);
                    t.value.push(f)
                }
                return t
            }
            s.certificateFromPem = function(e, t, r) {
                var o = i.pem.decode(e)[0];
                if ("CERTIFICATE" !== o.type && "X509 CERTIFICATE" !== o.type && "TRUSTED CERTIFICATE" !== o.type) {
                    var a = new Error('Could not convert certificate from PEM; PEM header type is not "CERTIFICATE", "X509 CERTIFICATE", or "TRUSTED CERTIFICATE".');
                    throw a.headerType = o.type,
                    a
                }
                if (o.procType && "ENCRYPTED" === o.procType.type)
                    throw new Error("Could not convert certificate from PEM; PEM is encrypted.");
                var c = n.fromDer(o.body, r);
                return s.certificateFromAsn1(c, t)
            }
            ,
            s.certificateToPem = function(e, t) {
                var r = {
                    type: "CERTIFICATE",
                    body: n.toDer(s.certificateToAsn1(e)).getBytes()
                };
                return i.pem.encode(r, {
                    maxline: t
                })
            }
            ,
            s.publicKeyFromPem = function(e) {
                var t = i.pem.decode(e)[0];
                if ("PUBLIC KEY" !== t.type && "RSA PUBLIC KEY" !== t.type) {
                    var r = new Error('Could not convert public key from PEM; PEM header type is not "PUBLIC KEY" or "RSA PUBLIC KEY".');
                    throw r.headerType = t.type,
                    r
                }
                if (t.procType && "ENCRYPTED" === t.procType.type)
                    throw new Error("Could not convert public key from PEM; PEM is encrypted.");
                var o = n.fromDer(t.body);
                return s.publicKeyFromAsn1(o)
            }
            ,
            s.publicKeyToPem = function(e, t) {
                var r = {
                    type: "PUBLIC KEY",
                    body: n.toDer(s.publicKeyToAsn1(e)).getBytes()
                };
                return i.pem.encode(r, {
                    maxline: t
                })
            }
            ,
            s.publicKeyToRSAPublicKeyPem = function(e, t) {
                var r = {
                    type: "RSA PUBLIC KEY",
                    body: n.toDer(s.publicKeyToRSAPublicKey(e)).getBytes()
                };
                return i.pem.encode(r, {
                    maxline: t
                })
            }
            ,
            s.getPublicKeyFingerprint = function(e, t) {
                var r, o = (t = t || {}).md || i.md.sha1.create();
                switch (t.type || "RSAPublicKey") {
                case "RSAPublicKey":
                    r = n.toDer(s.publicKeyToRSAPublicKey(e)).getBytes();
                    break;
                case "SubjectPublicKeyInfo":
                    r = n.toDer(s.publicKeyToAsn1(e)).getBytes();
                    break;
                default:
                    throw new Error('Unknown fingerprint type "' + t.type + '".')
                }
                o.start(),
                o.update(r);
                var a = o.digest();
                if ("hex" === t.encoding) {
                    var c = a.toHex();
                    return t.delimiter ? c.match(/.{2}/g).join(t.delimiter) : c
                }
                if ("binary" === t.encoding)
                    return a.getBytes();
                if (t.encoding)
                    throw new Error('Unknown encoding "' + t.encoding + '".');
                return a
            }
            ,
            s.certificationRequestFromPem = function(e, t, r) {
                var o = i.pem.decode(e)[0];
                if ("CERTIFICATE REQUEST" !== o.type) {
                    var a = new Error('Could not convert certification request from PEM; PEM header type is not "CERTIFICATE REQUEST".');
                    throw a.headerType = o.type,
                    a
                }
                if (o.procType && "ENCRYPTED" === o.procType.type)
                    throw new Error("Could not convert certification request from PEM; PEM is encrypted.");
                var c = n.fromDer(o.body, r);
                return s.certificationRequestFromAsn1(c, t)
            }
            ,
            s.certificationRequestToPem = function(e, t) {
                var r = {
                    type: "CERTIFICATE REQUEST",
                    body: n.toDer(s.certificationRequestToAsn1(e)).getBytes()
                };
                return i.pem.encode(r, {
                    maxline: t
                })
            }
            ,
            s.createCertificate = function() {
                var e = {
                    version: 2,
                    serialNumber: "00",
                    signatureOid: null,
                    signature: null,
                    siginfo: {}
                };
                return e.siginfo.algorithmOid = null,
                e.validity = {},
                e.validity.notBefore = new Date,
                e.validity.notAfter = new Date,
                e.issuer = {},
                e.issuer.getField = function(t) {
                    return d(e.issuer, t)
                }
                ,
                e.issuer.addField = function(t) {
                    g([t]),
                    e.issuer.attributes.push(t)
                }
                ,
                e.issuer.attributes = [],
                e.issuer.hash = null,
                e.subject = {},
                e.subject.getField = function(t) {
                    return d(e.subject, t)
                }
                ,
                e.subject.addField = function(t) {
                    g([t]),
                    e.subject.attributes.push(t)
                }
                ,
                e.subject.attributes = [],
                e.subject.hash = null,
                e.extensions = [],
                e.publicKey = null,
                e.md = null,
                e.setSubject = function(t, r) {
                    g(t),
                    e.subject.attributes = t,
                    delete e.subject.uniqueId,
                    r && (e.subject.uniqueId = r),
                    e.subject.hash = null
                }
                ,
                e.setIssuer = function(t, r) {
                    g(t),
                    e.issuer.attributes = t,
                    delete e.issuer.uniqueId,
                    r && (e.issuer.uniqueId = r),
                    e.issuer.hash = null
                }
                ,
                e.setExtensions = function(t) {
                    for (var r = 0; r < t.length; ++r)
                        m(t[r], {
                            cert: e
                        });
                    e.extensions = t
                }
                ,
                e.getExtension = function(t) {
                    "string" == typeof t && (t = {
                        name: t
                    });
                    for (var r, i = null, n = 0; null === i && n < e.extensions.length; ++n)
                        r = e.extensions[n],
                        t.id && r.id === t.id ? i = r : t.name && r.name === t.name && (i = r);
                    return i
                }
                ,
                e.sign = function(t, r) {
                    e.md = r || i.md.sha1.create();
                    var a = o[e.md.algorithm + "WithRSAEncryption"];
                    if (!a) {
                        var c = new Error("Could not compute certificate digest. Unknown message digest algorithm OID.");
                        throw c.algorithm = e.md.algorithm,
                        c
                    }
                    e.signatureOid = e.siginfo.algorithmOid = a,
                    e.tbsCertificate = s.getTBSCertificate(e);
                    var u = n.toDer(e.tbsCertificate);
                    e.md.update(u.getBytes()),
                    e.signature = t.sign(e.md)
                }
                ,
                e.verify = function(t) {
                    var r = !1;
                    if (!e.issued(t)) {
                        var a = t.issuer
                          , c = e.subject;
                        throw (b = new Error("The parent certificate did not issue the given child certificate; the child certificate's issuer does not match the parent's subject.")).expectedIssuer = a.attributes,
                        b.actualIssuer = c.attributes,
                        b
                    }
                    var u = t.md;
                    if (null === u) {
                        if (t.signatureOid in o)
                            switch (o[t.signatureOid]) {
                            case "sha1WithRSAEncryption":
                                u = i.md.sha1.create();
                                break;
                            case "md5WithRSAEncryption":
                                u = i.md.md5.create();
                                break;
                            case "sha256WithRSAEncryption":
                                u = i.md.sha256.create();
                                break;
                            case "sha384WithRSAEncryption":
                                u = i.md.sha384.create();
                                break;
                            case "sha512WithRSAEncryption":
                                u = i.md.sha512.create();
                                break;
                            case "RSASSA-PSS":
                                u = i.md.sha256.create()
                            }
                        if (null === u)
                            throw (b = new Error("Could not compute certificate digest. Unknown signature OID.")).signatureOid = t.signatureOid,
                            b;
                        var f = t.tbsCertificate || s.getTBSCertificate(t)
                          , h = n.toDer(f);
                        u.update(h.getBytes())
                    }
                    if (null !== u) {
                        var l;
                        switch (t.signatureOid) {
                        case o.sha1WithRSAEncryption:
                            l = void 0;
                            break;
                        case o["RSASSA-PSS"]:
                            var d, p, b;
                            if (void 0 === (d = o[t.signatureParameters.mgf.hash.algorithmOid]) || void 0 === i.md[d])
                                throw (b = new Error("Unsupported MGF hash function.")).oid = t.signatureParameters.mgf.hash.algorithmOid,
                                b.name = d,
                                b;
                            if (void 0 === (p = o[t.signatureParameters.mgf.algorithmOid]) || void 0 === i.mgf[p])
                                throw (b = new Error("Unsupported MGF function.")).oid = t.signatureParameters.mgf.algorithmOid,
                                b.name = p,
                                b;
                            if (p = i.mgf[p].create(i.md[d].create()),
                            void 0 === (d = o[t.signatureParameters.hash.algorithmOid]) || void 0 === i.md[d])
                                throw {
                                    message: "Unsupported RSASSA-PSS hash function.",
                                    oid: t.signatureParameters.hash.algorithmOid,
                                    name: d
                                };
                            l = i.pss.create(i.md[d].create(), p, t.signatureParameters.saltLength)
                        }
                        r = e.publicKey.verify(u.digest().getBytes(), t.signature, l)
                    }
                    return r
                }
                ,
                e.isIssuer = function(t) {
                    var r = !1
                      , i = e.issuer
                      , n = t.subject;
                    if (i.hash && n.hash)
                        r = i.hash === n.hash;
                    else if (i.attributes.length === n.attributes.length) {
                        var s, o;
                        r = !0;
                        for (var a = 0; r && a < i.attributes.length; ++a)
                            s = i.attributes[a],
                            o = n.attributes[a],
                            s.type === o.type && s.value === o.value || (r = !1)
                    }
                    return r
                }
                ,
                e.issued = function(t) {
                    return t.isIssuer(e)
                }
                ,
                e.generateSubjectKeyIdentifier = function() {
                    return s.getPublicKeyFingerprint(e.publicKey, {
                        type: "RSAPublicKey"
                    })
                }
                ,
                e.verifySubjectKeyIdentifier = function() {
                    for (var t = o.subjectKeyIdentifier, r = 0; r < e.extensions.length; ++r) {
                        var n = e.extensions[r];
                        if (n.id === t) {
                            var s = e.generateSubjectKeyIdentifier().getBytes();
                            return i.util.hexToBytes(n.subjectKeyIdentifier) === s
                        }
                    }
                    return !1
                }
                ,
                e
            }
            ,
            s.certificateFromAsn1 = function(e, t) {
                var r = {}
                  , a = [];
                if (!n.validate(e, u, r, a))
                    throw (l = new Error("Cannot read X.509 certificate. ASN.1 object is not an X509v3 Certificate.")).errors = a,
                    l;
                if (n.derToOid(r.publicKeyOid) !== s.oids.rsaEncryption)
                    throw new Error("Cannot read public key. OID is not RSA.");
                var c = s.createCertificate();
                c.version = r.certVersion ? r.certVersion.charCodeAt(0) : 0;
                var f = i.util.createBuffer(r.certSerialNumber);
                c.serialNumber = f.toHex(),
                c.signatureOid = i.asn1.derToOid(r.certSignatureOid),
                c.signatureParameters = p(c.signatureOid, r.certSignatureParams, !0),
                c.siginfo.algorithmOid = i.asn1.derToOid(r.certinfoSignatureOid),
                c.siginfo.parameters = p(c.siginfo.algorithmOid, r.certinfoSignatureParams, !1),
                c.signature = r.certSignature;
                var h = [];
                if (void 0 !== r.certValidity1UTCTime && h.push(n.utcTimeToDate(r.certValidity1UTCTime)),
                void 0 !== r.certValidity2GeneralizedTime && h.push(n.generalizedTimeToDate(r.certValidity2GeneralizedTime)),
                void 0 !== r.certValidity3UTCTime && h.push(n.utcTimeToDate(r.certValidity3UTCTime)),
                void 0 !== r.certValidity4GeneralizedTime && h.push(n.generalizedTimeToDate(r.certValidity4GeneralizedTime)),
                h.length > 2)
                    throw new Error("Cannot read notBefore/notAfter validity times; more than two times were provided in the certificate.");
                if (h.length < 2)
                    throw new Error("Cannot read notBefore/notAfter validity times; they were not provided as either UTCTime or GeneralizedTime.");
                if (c.validity.notBefore = h[0],
                c.validity.notAfter = h[1],
                c.tbsCertificate = r.tbsCertificate,
                t) {
                    var l;
                    if (c.md = null,
                    c.signatureOid in o)
                        switch (o[c.signatureOid]) {
                        case "sha1WithRSAEncryption":
                            c.md = i.md.sha1.create();
                            break;
                        case "md5WithRSAEncryption":
                            c.md = i.md.md5.create();
                            break;
                        case "sha256WithRSAEncryption":
                            c.md = i.md.sha256.create();
                            break;
                        case "sha384WithRSAEncryption":
                            c.md = i.md.sha384.create();
                            break;
                        case "sha512WithRSAEncryption":
                            c.md = i.md.sha512.create();
                            break;
                        case "RSASSA-PSS":
                            c.md = i.md.sha256.create()
                        }
                    if (null === c.md)
                        throw (l = new Error("Could not compute certificate digest. Unknown signature OID.")).signatureOid = c.signatureOid,
                        l;
                    var b = n.toDer(c.tbsCertificate);
                    c.md.update(b.getBytes())
                }
                var m = i.md.sha1.create();
                c.issuer.getField = function(e) {
                    return d(c.issuer, e)
                }
                ,
                c.issuer.addField = function(e) {
                    g([e]),
                    c.issuer.attributes.push(e)
                }
                ,
                c.issuer.attributes = s.RDNAttributesAsArray(r.certIssuer, m),
                r.certIssuerUniqueId && (c.issuer.uniqueId = r.certIssuerUniqueId),
                c.issuer.hash = m.digest().toHex();
                var y = i.md.sha1.create();
                return c.subject.getField = function(e) {
                    return d(c.subject, e)
                }
                ,
                c.subject.addField = function(e) {
                    g([e]),
                    c.subject.attributes.push(e)
                }
                ,
                c.subject.attributes = s.RDNAttributesAsArray(r.certSubject, y),
                r.certSubjectUniqueId && (c.subject.uniqueId = r.certSubjectUniqueId),
                c.subject.hash = y.digest().toHex(),
                r.certExtensions ? c.extensions = s.certificateExtensionsFromAsn1(r.certExtensions) : c.extensions = [],
                c.publicKey = s.publicKeyFromAsn1(r.subjectPublicKeyInfo),
                c
            }
            ,
            s.certificateExtensionsFromAsn1 = function(e) {
                for (var t = [], r = 0; r < e.value.length; ++r)
                    for (var i = e.value[r], n = 0; n < i.value.length; ++n)
                        t.push(s.certificateExtensionFromAsn1(i.value[n]));
                return t
            }
            ,
            s.certificateExtensionFromAsn1 = function(e) {
                var t = {};
                if (t.id = n.derToOid(e.value[0].value),
                t.critical = !1,
                e.value[1].type === n.Type.BOOLEAN ? (t.critical = 0 !== e.value[1].value.charCodeAt(0),
                t.value = e.value[2].value) : t.value = e.value[1].value,
                t.id in o)
                    if (t.name = o[t.id],
                    "keyUsage" === t.name) {
                        var r = 0
                          , s = 0;
                        (c = n.fromDer(t.value)).value.length > 1 && (r = c.value.charCodeAt(1),
                        s = c.value.length > 2 ? c.value.charCodeAt(2) : 0),
                        t.digitalSignature = 128 == (128 & r),
                        t.nonRepudiation = 64 == (64 & r),
                        t.keyEncipherment = 32 == (32 & r),
                        t.dataEncipherment = 16 == (16 & r),
                        t.keyAgreement = 8 == (8 & r),
                        t.keyCertSign = 4 == (4 & r),
                        t.cRLSign = 2 == (2 & r),
                        t.encipherOnly = 1 == (1 & r),
                        t.decipherOnly = 128 == (128 & s)
                    } else if ("basicConstraints" === t.name) {
                        (c = n.fromDer(t.value)).value.length > 0 && c.value[0].type === n.Type.BOOLEAN ? t.cA = 0 !== c.value[0].value.charCodeAt(0) : t.cA = !1;
                        var a = null;
                        c.value.length > 0 && c.value[0].type === n.Type.INTEGER ? a = c.value[0].value : c.value.length > 1 && (a = c.value[1].value),
                        null !== a && (t.pathLenConstraint = n.derToInteger(a))
                    } else if ("extKeyUsage" === t.name)
                        for (var c = n.fromDer(t.value), u = 0; u < c.value.length; ++u) {
                            var f = n.derToOid(c.value[u].value);
                            f in o ? t[o[f]] = !0 : t[f] = !0
                        }
                    else if ("nsCertType" === t.name) {
                        r = 0;
                        (c = n.fromDer(t.value)).value.length > 1 && (r = c.value.charCodeAt(1)),
                        t.client = 128 == (128 & r),
                        t.server = 64 == (64 & r),
                        t.email = 32 == (32 & r),
                        t.objsign = 16 == (16 & r),
                        t.reserved = 8 == (8 & r),
                        t.sslCA = 4 == (4 & r),
                        t.emailCA = 2 == (2 & r),
                        t.objCA = 1 == (1 & r)
                    } else if ("subjectAltName" === t.name || "issuerAltName" === t.name) {
                        var h;
                        t.altNames = [];
                        c = n.fromDer(t.value);
                        for (var l = 0; l < c.value.length; ++l) {
                            var d = {
                                type: (h = c.value[l]).type,
                                value: h.value
                            };
                            switch (t.altNames.push(d),
                            h.type) {
                            case 1:
                            case 2:
                            case 6:
                                break;
                            case 7:
                                d.ip = i.util.bytesToIP(h.value);
                                break;
                            case 8:
                                d.oid = n.derToOid(h.value)
                            }
                        }
                    } else if ("subjectKeyIdentifier" === t.name) {
                        c = n.fromDer(t.value);
                        t.subjectKeyIdentifier = i.util.bytesToHex(c.value)
                    }
                return t
            }
            ,
            s.certificationRequestFromAsn1 = function(e, t) {
                var r = {}
                  , a = [];
                if (!n.validate(e, l, r, a))
                    throw (u = new Error("Cannot read PKCS#10 certificate request. ASN.1 object is not a PKCS#10 CertificationRequest.")).errors = a,
                    u;
                if (n.derToOid(r.publicKeyOid) !== s.oids.rsaEncryption)
                    throw new Error("Cannot read public key. OID is not RSA.");
                var c = s.createCertificationRequest();
                if (c.version = r.csrVersion ? r.csrVersion.charCodeAt(0) : 0,
                c.signatureOid = i.asn1.derToOid(r.csrSignatureOid),
                c.signatureParameters = p(c.signatureOid, r.csrSignatureParams, !0),
                c.siginfo.algorithmOid = i.asn1.derToOid(r.csrSignatureOid),
                c.siginfo.parameters = p(c.siginfo.algorithmOid, r.csrSignatureParams, !1),
                c.signature = r.csrSignature,
                c.certificationRequestInfo = r.certificationRequestInfo,
                t) {
                    var u;
                    if (c.md = null,
                    c.signatureOid in o)
                        switch (o[c.signatureOid]) {
                        case "sha1WithRSAEncryption":
                            c.md = i.md.sha1.create();
                            break;
                        case "md5WithRSAEncryption":
                            c.md = i.md.md5.create();
                            break;
                        case "sha256WithRSAEncryption":
                            c.md = i.md.sha256.create();
                            break;
                        case "sha384WithRSAEncryption":
                            c.md = i.md.sha384.create();
                            break;
                        case "sha512WithRSAEncryption":
                            c.md = i.md.sha512.create();
                            break;
                        case "RSASSA-PSS":
                            c.md = i.md.sha256.create()
                        }
                    if (null === c.md)
                        throw (u = new Error("Could not compute certification request digest. Unknown signature OID.")).signatureOid = c.signatureOid,
                        u;
                    var f = n.toDer(c.certificationRequestInfo);
                    c.md.update(f.getBytes())
                }
                var h = i.md.sha1.create();
                return c.subject.getField = function(e) {
                    return d(c.subject, e)
                }
                ,
                c.subject.addField = function(e) {
                    g([e]),
                    c.subject.attributes.push(e)
                }
                ,
                c.subject.attributes = s.RDNAttributesAsArray(r.certificationRequestInfoSubject, h),
                c.subject.hash = h.digest().toHex(),
                c.publicKey = s.publicKeyFromAsn1(r.subjectPublicKeyInfo),
                c.getAttribute = function(e) {
                    return d(c, e)
                }
                ,
                c.addAttribute = function(e) {
                    g([e]),
                    c.attributes.push(e)
                }
                ,
                c.attributes = s.CRIAttributesAsArray(r.certificationRequestInfoAttributes || []),
                c
            }
            ,
            s.createCertificationRequest = function() {
                var e = {
                    version: 0,
                    signatureOid: null,
                    signature: null,
                    siginfo: {}
                };
                return e.siginfo.algorithmOid = null,
                e.subject = {},
                e.subject.getField = function(t) {
                    return d(e.subject, t)
                }
                ,
                e.subject.addField = function(t) {
                    g([t]),
                    e.subject.attributes.push(t)
                }
                ,
                e.subject.attributes = [],
                e.subject.hash = null,
                e.publicKey = null,
                e.attributes = [],
                e.getAttribute = function(t) {
                    return d(e, t)
                }
                ,
                e.addAttribute = function(t) {
                    g([t]),
                    e.attributes.push(t)
                }
                ,
                e.md = null,
                e.setSubject = function(t) {
                    g(t),
                    e.subject.attributes = t,
                    e.subject.hash = null
                }
                ,
                e.setAttributes = function(t) {
                    g(t),
                    e.attributes = t
                }
                ,
                e.sign = function(t, r) {
                    e.md = r || i.md.sha1.create();
                    var a = o[e.md.algorithm + "WithRSAEncryption"];
                    if (!a) {
                        var c = new Error("Could not compute certification request digest. Unknown message digest algorithm OID.");
                        throw c.algorithm = e.md.algorithm,
                        c
                    }
                    e.signatureOid = e.siginfo.algorithmOid = a,
                    e.certificationRequestInfo = s.getCertificationRequestInfo(e);
                    var u = n.toDer(e.certificationRequestInfo);
                    e.md.update(u.getBytes()),
                    e.signature = t.sign(e.md)
                }
                ,
                e.verify = function() {
                    var t = !1
                      , r = e.md;
                    if (null === r) {
                        if (e.signatureOid in o)
                            switch (o[e.signatureOid]) {
                            case "sha1WithRSAEncryption":
                                r = i.md.sha1.create();
                                break;
                            case "md5WithRSAEncryption":
                                r = i.md.md5.create();
                                break;
                            case "sha256WithRSAEncryption":
                                r = i.md.sha256.create();
                                break;
                            case "sha384WithRSAEncryption":
                                r = i.md.sha384.create();
                                break;
                            case "sha512WithRSAEncryption":
                                r = i.md.sha512.create();
                                break;
                            case "RSASSA-PSS":
                                r = i.md.sha256.create()
                            }
                        if (null === r)
                            throw (l = new Error("Could not compute certification request digest. Unknown signature OID.")).signatureOid = e.signatureOid,
                            l;
                        var a = e.certificationRequestInfo || s.getCertificationRequestInfo(e)
                          , c = n.toDer(a);
                        r.update(c.getBytes())
                    }
                    if (null !== r) {
                        var u;
                        switch (e.signatureOid) {
                        case o.sha1WithRSAEncryption:
                            break;
                        case o["RSASSA-PSS"]:
                            var f, h, l;
                            if (void 0 === (f = o[e.signatureParameters.mgf.hash.algorithmOid]) || void 0 === i.md[f])
                                throw (l = new Error("Unsupported MGF hash function.")).oid = e.signatureParameters.mgf.hash.algorithmOid,
                                l.name = f,
                                l;
                            if (void 0 === (h = o[e.signatureParameters.mgf.algorithmOid]) || void 0 === i.mgf[h])
                                throw (l = new Error("Unsupported MGF function.")).oid = e.signatureParameters.mgf.algorithmOid,
                                l.name = h,
                                l;
                            if (h = i.mgf[h].create(i.md[f].create()),
                            void 0 === (f = o[e.signatureParameters.hash.algorithmOid]) || void 0 === i.md[f])
                                throw (l = new Error("Unsupported RSASSA-PSS hash function.")).oid = e.signatureParameters.hash.algorithmOid,
                                l.name = f,
                                l;
                            u = i.pss.create(i.md[f].create(), h, e.signatureParameters.saltLength)
                        }
                        t = e.publicKey.verify(r.digest().getBytes(), e.signature, u)
                    }
                    return t
                }
                ,
                e
            }
            ;
            var w = new Date("1950-01-01T00:00:00Z")
              , E = new Date("2050-01-01T00:00:00Z");
            function _(e) {
                return e >= w && e < E ? n.create(n.Class.UNIVERSAL, n.Type.UTCTIME, !1, n.dateToUtcTime(e)) : n.create(n.Class.UNIVERSAL, n.Type.GENERALIZEDTIME, !1, n.dateToGeneralizedTime(e))
            }
            s.getTBSCertificate = function(e) {
                var t = _(e.validity.notBefore)
                  , r = _(e.validity.notAfter)
                  , o = n.create(n.Class.UNIVERSAL, n.Type.SEQUENCE, !0, [n.create(n.Class.CONTEXT_SPECIFIC, 0, !0, [n.create(n.Class.UNIVERSAL, n.Type.INTEGER, !1, n.integerToDer(e.version).getBytes())]), n.create(n.Class.UNIVERSAL, n.Type.INTEGER, !1, i.util.hexToBytes(e.serialNumber)), n.create(n.Class.UNIVERSAL, n.Type.SEQUENCE, !0, [n.create(n.Class.UNIVERSAL, n.Type.OID, !1, n.oidToDer(e.siginfo.algorithmOid).getBytes()), y(e.siginfo.algorithmOid, e.siginfo.parameters)]), b(e.issuer), n.create(n.Class.UNIVERSAL, n.Type.SEQUENCE, !0, [t, r]), b(e.subject), s.publicKeyToAsn1(e.publicKey)]);
                return e.issuer.uniqueId && o.value.push(n.create(n.Class.CONTEXT_SPECIFIC, 1, !0, [n.create(n.Class.UNIVERSAL, n.Type.BITSTRING, !1, String.fromCharCode(0) + e.issuer.uniqueId)])),
                e.subject.uniqueId && o.value.push(n.create(n.Class.CONTEXT_SPECIFIC, 2, !0, [n.create(n.Class.UNIVERSAL, n.Type.BITSTRING, !1, String.fromCharCode(0) + e.subject.uniqueId)])),
                e.extensions.length > 0 && o.value.push(s.certificateExtensionsToAsn1(e.extensions)),
                o
            }
            ,
            s.getCertificationRequestInfo = function(e) {
                return n.create(n.Class.UNIVERSAL, n.Type.SEQUENCE, !0, [n.create(n.Class.UNIVERSAL, n.Type.INTEGER, !1, n.integerToDer(e.version).getBytes()), b(e.subject), s.publicKeyToAsn1(e.publicKey), v(e)])
            }
            ,
            s.distinguishedNameToAsn1 = function(e) {
                return b(e)
            }
            ,
            s.certificateToAsn1 = function(e) {
                var t = e.tbsCertificate || s.getTBSCertificate(e);
                return n.create(n.Class.UNIVERSAL, n.Type.SEQUENCE, !0, [t, n.create(n.Class.UNIVERSAL, n.Type.SEQUENCE, !0, [n.create(n.Class.UNIVERSAL, n.Type.OID, !1, n.oidToDer(e.signatureOid).getBytes()), y(e.signatureOid, e.signatureParameters)]), n.create(n.Class.UNIVERSAL, n.Type.BITSTRING, !1, String.fromCharCode(0) + e.signature)])
            }
            ,
            s.certificateExtensionsToAsn1 = function(e) {
                var t = n.create(n.Class.CONTEXT_SPECIFIC, 3, !0, [])
                  , r = n.create(n.Class.UNIVERSAL, n.Type.SEQUENCE, !0, []);
                t.value.push(r);
                for (var i = 0; i < e.length; ++i)
                    r.value.push(s.certificateExtensionToAsn1(e[i]));
                return t
            }
            ,
            s.certificateExtensionToAsn1 = function(e) {
                var t = n.create(n.Class.UNIVERSAL, n.Type.SEQUENCE, !0, []);
                t.value.push(n.create(n.Class.UNIVERSAL, n.Type.OID, !1, n.oidToDer(e.id).getBytes())),
                e.critical && t.value.push(n.create(n.Class.UNIVERSAL, n.Type.BOOLEAN, !1, String.fromCharCode(255)));
                var r = e.value;
                return "string" != typeof e.value && (r = n.toDer(r).getBytes()),
                t.value.push(n.create(n.Class.UNIVERSAL, n.Type.OCTETSTRING, !1, r)),
                t
            }
            ,
            s.certificationRequestToAsn1 = function(e) {
                var t = e.certificationRequestInfo || s.getCertificationRequestInfo(e);
                return n.create(n.Class.UNIVERSAL, n.Type.SEQUENCE, !0, [t, n.create(n.Class.UNIVERSAL, n.Type.SEQUENCE, !0, [n.create(n.Class.UNIVERSAL, n.Type.OID, !1, n.oidToDer(e.signatureOid).getBytes()), y(e.signatureOid, e.signatureParameters)]), n.create(n.Class.UNIVERSAL, n.Type.BITSTRING, !1, String.fromCharCode(0) + e.signature)])
            }
            ,
            s.createCaStore = function(e) {
                var t = {
                    certs: {}
                };
                function r(e) {
                    return o(e),
                    t.certs[e.hash] || null
                }
                function o(e) {
                    if (!e.hash) {
                        var t = i.md.sha1.create();
                        e.attributes = s.RDNAttributesAsArray(b(e), t),
                        e.hash = t.digest().toHex()
                    }
                }
                if (t.getIssuer = function(e) {
                    return r(e.issuer)
                }
                ,
                t.addCertificate = function(e) {
                    if ("string" == typeof e && (e = i.pki.certificateFromPem(e)),
                    o(e.subject),
                    !t.hasCertificate(e))
                        if (e.subject.hash in t.certs) {
                            var r = t.certs[e.subject.hash];
                            i.util.isArray(r) || (r = [r]),
                            r.push(e),
                            t.certs[e.subject.hash] = r
                        } else
                            t.certs[e.subject.hash] = e
                }
                ,
                t.hasCertificate = function(e) {
                    "string" == typeof e && (e = i.pki.certificateFromPem(e));
                    var t = r(e.subject);
                    if (!t)
                        return !1;
                    i.util.isArray(t) || (t = [t]);
                    for (var o = n.toDer(s.certificateToAsn1(e)).getBytes(), a = 0; a < t.length; ++a) {
                        if (o === n.toDer(s.certificateToAsn1(t[a])).getBytes())
                            return !0
                    }
                    return !1
                }
                ,
                t.listAllCertificates = function() {
                    var e = [];
                    for (var r in t.certs)
                        if (t.certs.hasOwnProperty(r)) {
                            var n = t.certs[r];
                            if (i.util.isArray(n))
                                for (var s = 0; s < n.length; ++s)
                                    e.push(n[s]);
                            else
                                e.push(n)
                        }
                    return e
                }
                ,
                t.removeCertificate = function(e) {
                    var a;
                    if ("string" == typeof e && (e = i.pki.certificateFromPem(e)),
                    o(e.subject),
                    !t.hasCertificate(e))
                        return null;
                    var c = r(e.subject);
                    if (!i.util.isArray(c))
                        return a = t.certs[e.subject.hash],
                        delete t.certs[e.subject.hash],
                        a;
                    for (var u = n.toDer(s.certificateToAsn1(e)).getBytes(), f = 0; f < c.length; ++f) {
                        u === n.toDer(s.certificateToAsn1(c[f])).getBytes() && (a = c[f],
                        c.splice(f, 1))
                    }
                    return 0 === c.length && delete t.certs[e.subject.hash],
                    a
                }
                ,
                e)
                    for (var a = 0; a < e.length; ++a) {
                        var c = e[a];
                        t.addCertificate(c)
                    }
                return t
            }
            ,
            s.certificateError = {
                bad_certificate: "forge.pki.BadCertificate",
                unsupported_certificate: "forge.pki.UnsupportedCertificate",
                certificate_revoked: "forge.pki.CertificateRevoked",
                certificate_expired: "forge.pki.CertificateExpired",
                certificate_unknown: "forge.pki.CertificateUnknown",
                unknown_ca: "forge.pki.UnknownCertificateAuthority"
            },
            s.verifyCertificateChain = function(e, t, r) {
                "function" == typeof r && (r = {
                    verify: r
                }),
                r = r || {};
                var n = (t = t.slice(0)).slice(0)
                  , o = r.validityCheckDate;
                void 0 === o && (o = new Date);
                var a = !0
                  , c = null
                  , u = 0;
                do {
                    var f = t.shift()
                      , h = null
                      , l = !1;
                    if (o && (o < f.validity.notBefore || o > f.validity.notAfter) && (c = {
                        message: "Certificate is not valid yet or has expired.",
                        error: s.certificateError.certificate_expired,
                        notBefore: f.validity.notBefore,
                        notAfter: f.validity.notAfter,
                        now: o
                    }),
                    null === c) {
                        if (null === (h = t[0] || e.getIssuer(f)) && f.isIssuer(f) && (l = !0,
                        h = f),
                        h) {
                            var d = h;
                            i.util.isArray(d) || (d = [d]);
                            for (var p = !1; !p && d.length > 0; ) {
                                h = d.shift();
                                try {
                                    p = h.verify(f)
                                } catch (e) {}
                            }
                            p || (c = {
                                message: "Certificate signature is invalid.",
                                error: s.certificateError.bad_certificate
                            })
                        }
                        null !== c || h && !l || e.hasCertificate(f) || (c = {
                            message: "Certificate is not trusted.",
                            error: s.certificateError.unknown_ca
                        })
                    }
                    if (null === c && h && !f.isIssuer(h) && (c = {
                        message: "Certificate issuer is invalid.",
                        error: s.certificateError.bad_certificate
                    }),
                    null === c)
                        for (var b = {
                            keyUsage: !0,
                            basicConstraints: !0
                        }, g = 0; null === c && g < f.extensions.length; ++g) {
                            var m = f.extensions[g];
                            !m.critical || m.name in b || (c = {
                                message: "Certificate has an unsupported critical extension.",
                                error: s.certificateError.unsupported_certificate
                            })
                        }
                    if (null === c && (!a || 0 === t.length && (!h || l))) {
                        var y = f.getExtension("basicConstraints")
                          , v = f.getExtension("keyUsage");
                        if (null !== v && (v.keyCertSign && null !== y || (c = {
                            message: "Certificate keyUsage or basicConstraints conflict or indicate that the certificate is not a CA. If the certificate is the only one in the chain or isn't the first then the certificate must be a valid CA.",
                            error: s.certificateError.bad_certificate
                        })),
                        null !== c || null === y || y.cA || (c = {
                            message: "Certificate basicConstraints indicates the certificate is not a CA.",
                            error: s.certificateError.bad_certificate
                        }),
                        null === c && null !== v && "pathLenConstraint"in y)
                            u - 1 > y.pathLenConstraint && (c = {
                                message: "Certificate basicConstraints pathLenConstraint violated.",
                                error: s.certificateError.bad_certificate
                            })
                    }
                    var w = null === c || c.error
                      , E = r.verify ? r.verify(w, u, n) : w;
                    if (!0 !== E)
                        throw !0 === w && (c = {
                            message: "The application rejected the certificate.",
                            error: s.certificateError.bad_certificate
                        }),
                        (E || 0 === E) && ("object" != typeof E || i.util.isArray(E) ? "string" == typeof E && (c.error = E) : (E.message && (c.message = E.message),
                        E.error && (c.error = E.error))),
                        c;
                    c = null,
                    a = !1,
                    ++u
                } while (t.length > 0);return !0
            }
        }
        , {
            "./aes": 328,
            "./asn1": 330,
            "./des": 334,
            "./forge": 336,
            "./md": 339,
            "./mgf": 340,
            "./oids": 342,
            "./pem": 345,
            "./pss": 351,
            "./rsa": 354,
            "./util": 358
        }],
        360: [function(e, t, r) {
            "use strict";
            var i;
            if (!Object.keys) {
                var n = Object.prototype.hasOwnProperty
                  , s = Object.prototype.toString
                  , o = e("./isArguments")
                  , a = Object.prototype.propertyIsEnumerable
                  , c = !a.call({
                    toString: null
                }, "toString")
                  , u = a.call((function() {}
                ), "prototype")
                  , f = ["toString", "toLocaleString", "valueOf", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "constructor"]
                  , h = function(e) {
                    var t = e.constructor;
                    return t && t.prototype === e
                }
                  , l = {
                    $applicationCache: !0,
                    $console: !0,
                    $external: !0,
                    $frame: !0,
                    $frameElement: !0,
                    $frames: !0,
                    $innerHeight: !0,
                    $innerWidth: !0,
                    $onmozfullscreenchange: !0,
                    $onmozfullscreenerror: !0,
                    $outerHeight: !0,
                    $outerWidth: !0,
                    $pageXOffset: !0,
                    $pageYOffset: !0,
                    $parent: !0,
                    $scrollLeft: !0,
                    $scrollTop: !0,
                    $scrollX: !0,
                    $scrollY: !0,
                    $self: !0,
                    $webkitIndexedDB: !0,
                    $webkitStorageInfo: !0,
                    $window: !0
                }
                  , d = function() {
                    if ("undefined" == typeof window)
                        return !1;
                    for (var e in window)
                        try {
                            if (!l["$" + e] && n.call(window, e) && null !== window[e] && "object" == typeof window[e])
                                try {
                                    h(window[e])
                                } catch (e) {
                                    return !0
                                }
                        } catch (e) {
                            return !0
                        }
                    return !1
                }();
                i = function(e) {
                    var t = null !== e && "object" == typeof e
                      , r = "[object Function]" === s.call(e)
                      , i = o(e)
                      , a = t && "[object String]" === s.call(e)
                      , l = [];
                    if (!t && !r && !i)
                        throw new TypeError("Object.keys called on a non-object");
                    var p = u && r;
                    if (a && e.length > 0 && !n.call(e, 0))
                        for (var b = 0; b < e.length; ++b)
                            l.push(String(b));
                    if (i && e.length > 0)
                        for (var g = 0; g < e.length; ++g)
                            l.push(String(g));
                    else
                        for (var m in e)
                            p && "prototype" === m || !n.call(e, m) || l.push(String(m));
                    if (c)
                        for (var y = function(e) {
                            if ("undefined" == typeof window || !d)
                                return h(e);
                            try {
                                return h(e)
                            } catch (e) {
                                return !1
                            }
                        }(e), v = 0; v < f.length; ++v)
                            y && "constructor" === f[v] || !n.call(e, f[v]) || l.push(f[v]);
                    return l
                }
            }
            t.exports = i
        }
        , {
            "./isArguments": 362
        }],
        361: [function(e, t, r) {
            "use strict";
            var i = Array.prototype.slice
              , n = e("./isArguments")
              , s = Object.keys
              , o = s ? function(e) {
                return s(e)
            }
            : e("./implementation")
              , a = Object.keys;
            o.shim = function() {
                Object.keys ? function() {
                    var e = Object.keys(arguments);
                    return e && e.length === arguments.length
                }(1, 2) || (Object.keys = function(e) {
                    return n(e) ? a(i.call(e)) : a(e)
                }
                ) : Object.keys = o;
                return Object.keys || o
            }
            ,
            t.exports = o
        }
        , {
            "./implementation": 360,
            "./isArguments": 362
        }],
        362: [function(e, t, r) {
            "use strict";
            var i = Object.prototype.toString;
            t.exports = function(e) {
                var t = i.call(e)
                  , r = "[object Arguments]" === t;
                return r || (r = "[object Array]" !== t && null !== e && "object" == typeof e && "number" == typeof e.length && e.length >= 0 && "[object Function]" === i.call(e.callee)),
                r
            }
        }
        , {}],
        363: [function(e, t, r) {
            "use strict";
            const i = e("p-some")
              , n = e("p-cancelable");
            t.exports = (e,t)=>{
                const r = i(e, {
                    ...t,
                    count: 1
                });
                return n.fn(async e=>{
                    e(()=>{
                        r.cancel()
                    }
                    );
                    const [t] = await r;
                    return t
                }
                )()
            }
            ,
            t.exports.AggregateError = i.AggregateError
        }
        , {
            "p-cancelable": 364,
            "p-some": 370
        }],
        364: [function(e, t, r) {
            "use strict";
            class i extends Error {
                constructor(e) {
                    super(e || "Promise was canceled"),
                    this.name = "CancelError"
                }
                get isCanceled() {
                    return !0
                }
            }
            class n {
                static fn(e) {
                    return (...t)=>new n((r,i,n)=>{
                        t.push(n),
                        e(...t).then(r, i)
                    }
                    )
                }
                constructor(e) {
                    this._cancelHandlers = [],
                    this._isPending = !0,
                    this._isCanceled = !1,
                    this._rejectOnCancel = !0,
                    this._promise = new Promise((t,r)=>{
                        this._reject = r;
                        const i = e=>{
                            if (!this._isPending)
                                throw new Error("The `onCancel` handler was attached after the promise settled.");
                            this._cancelHandlers.push(e)
                        }
                        ;
                        return Object.defineProperties(i, {
                            shouldReject: {
                                get: ()=>this._rejectOnCancel,
                                set: e=>{
                                    this._rejectOnCancel = e
                                }
                            }
                        }),
                        e(e=>{
                            this._isPending = !1,
                            t(e)
                        }
                        , e=>{
                            this._isPending = !1,
                            r(e)
                        }
                        , i)
                    }
                    )
                }
                then(e, t) {
                    return this._promise.then(e, t)
                }
                catch(e) {
                    return this._promise.catch(e)
                }
                finally(e) {
                    return this._promise.finally(e)
                }
                cancel(e) {
                    if (this._isPending && !this._isCanceled) {
                        if (this._cancelHandlers.length > 0)
                            try {
                                for (const e of this._cancelHandlers)
                                    e()
                            } catch (e) {
                                this._reject(e)
                            }
                        this._isCanceled = !0,
                        this._rejectOnCancel && this._reject(new i(e))
                    }
                }
                get isCanceled() {
                    return this._isCanceled
                }
            }
            Object.setPrototypeOf(n.prototype, Promise.prototype),
            t.exports = n,
            t.exports.CancelError = i
        }
        , {}],
        365: [function(e, t, r) {
            "use strict";
            t.exports = ()=>{
                const e = {};
                return e.promise = new Promise((t,r)=>{
                    e.resolve = t,
                    e.reject = r
                }
                ),
                e
            }
        }
        , {}],
        366: [function(e, t, r) {
            const i = e("fast-fifo")
              , n = e("p-defer");
            t.exports = class {
                constructor() {
                    this._buffer = new i,
                    this._waitingConsumers = new i
                }
                push(e) {
                    const {promise: t, resolve: r} = n();
                    return this._buffer.push({
                        chunk: e,
                        resolve: r
                    }),
                    this._consume(),
                    t
                }
                _consume() {
                    for (; !this._waitingConsumers.isEmpty() && !this._buffer.isEmpty(); ) {
                        const e = this._waitingConsumers.shift()
                          , t = this._buffer.shift();
                        e.resolve(t.chunk),
                        t.resolve()
                    }
                }
                shift() {
                    const {promise: e, resolve: t} = n();
                    return this._waitingConsumers.push({
                        resolve: t
                    }),
                    this._consume(),
                    e
                }
                isEmpty() {
                    return this._buffer.isEmpty()
                }
            }
        }
        , {
            "fast-fifo": 195,
            "p-defer": 365
        }],
        367: [function(e, t, r) {
            "use strict";
            const i = e("p-try")
              , n = e=>{
                if (!Number.isInteger(e) && e !== 1 / 0 || !(e > 0))
                    return Promise.reject(new TypeError("Expected `concurrency` to be a number from 1 and up"));
                const t = [];
                let r = 0;
                const n = ()=>{
                    r--,
                    t.length > 0 && t.shift()()
                }
                  , s = (e,t,...s)=>{
                    r++;
                    const o = i(e, ...s);
                    t(o),
                    o.then(n, n)
                }
                  , o = (i,...n)=>new Promise(o=>((i,n,...o)=>{
                    r < e ? s(i, n, ...o) : t.push(s.bind(null, i, n, ...o))
                }
                )(i, o, ...n));
                return Object.defineProperties(o, {
                    activeCount: {
                        get: ()=>r
                    },
                    pendingCount: {
                        get: ()=>t.length
                    },
                    clearQueue: {
                        value: ()=>{
                            t.length = 0
                        }
                    }
                }),
                o
            }
            ;
            t.exports = n,
            t.exports.default = n
        }
        , {
            "p-try": 371
        }],
        368: [function(e, t, r) {
            "use strict";
            const i = async e=>{
                try {
                    return {
                        isFulfilled: !0,
                        isRejected: !1,
                        value: await e
                    }
                } catch (e) {
                    return {
                        isFulfilled: !1,
                        isRejected: !0,
                        reason: e
                    }
                }
            }
            ;
            t.exports = i,
            t.exports.default = i
        }
        , {}],
        369: [function(e, t, r) {
            "use strict";
            const i = e("p-reflect")
              , n = e("p-limit");
            t.exports = async(e,t={})=>{
                const {concurrency: r=1 / 0} = t
                  , s = n(r);
                return Promise.all(e.map(e=>e && "function" == typeof e.then ? i(e) : i("function" == typeof e ? s(()=>e()) : Promise.resolve(e))))
            }
        }
        , {
            "p-limit": 367,
            "p-reflect": 368
        }],
        370: [function(e, t, r) {
            "use strict";
            const i = e("aggregate-error")
              , n = e("p-cancelable");
            class s extends Error {
            }
            t.exports = (e,t)=>new n((r,n,o)=>{
                const {count: a, filter: c=(()=>!0)} = t;
                if (!Number.isFinite(a))
                    return void n(new TypeError(`Expected a finite number, got ${typeof t.count}`));
                const u = []
                  , f = [];
                let h = 0
                  , l = !1;
                const d = new Set
                  , p = ()=>(u.length === a && (r(u),
                l = !0),
                h - f.length < a && (n(new i(f)),
                l = !0),
                l)
                  , b = ()=>{
                    for (const t of e)
                        d.has(t) || "function" != typeof t.cancel || t.cancel()
                }
                ;
                o(b);
                for (const t of e)
                    h++,
                    (async()=>{
                        try {
                            const e = await t;
                            if (l)
                                return;
                            if (!c(e))
                                throw new s("Value does not satisfy filter");
                            u.push(e)
                        } catch (e) {
                            f.push(e)
                        } finally {
                            d.add(t),
                            !l && p() && b()
                        }
                    }
                    )();
                a > h && (n(new RangeError(`Expected input to contain at least ${t.count} items, but contains ${h} items`)),
                b())
            }
            ),
            t.exports.AggregateError = i,
            t.exports.FilterError = s
        }
        , {
            "aggregate-error": 161,
            "p-cancelable": 364
        }],
        371: [function(e, t, r) {
            "use strict";
            const i = (e,...t)=>new Promise(r=>{
                r(e(...t))
            }
            );
            t.exports = i,
            t.exports.default = i
        }
        , {}],
        372: [function(e, t, r) {
            "use strict";
            const i = e("multihashes")
              , n = e("cids")
              , s = e("libp2p-crypto/src/keys")
              , o = e("class-is")
              , {PeerIdProto: a} = e("./proto")
              , c = e("uint8arrays/equals")
              , u = e("uint8arrays/from-string")
              , f = e("uint8arrays/to-string");
            const h = o(class {
                constructor(e, t, r) {
                    if (!(e instanceof Uint8Array))
                        throw new Error("invalid id provided");
                    if (t && r && !c(t.public.bytes, r.bytes))
                        throw new Error("inconsistent arguments");
                    this._id = e,
                    this._idB58String = i.toB58String(this.id),
                    this._privKey = t,
                    this._pubKey = r
                }
                get id() {
                    return this._id
                }
                set id(e) {
                    throw new Error("Id is immutable")
                }
                get privKey() {
                    return this._privKey
                }
                set privKey(e) {
                    this._privKey = e
                }
                get pubKey() {
                    if (this._pubKey)
                        return this._pubKey;
                    if (this._privKey)
                        return this._privKey.public;
                    try {
                        const e = i.decode(this.id);
                        "identity" === e.name && (this._pubKey = s.unmarshalPublicKey(e.digest))
                    } catch (e) {}
                    return this._pubKey
                }
                set pubKey(e) {
                    this._pubKey = e
                }
                marshalPubKey() {
                    if (this.pubKey)
                        return s.marshalPublicKey(this.pubKey)
                }
                marshalPrivKey() {
                    if (this.privKey)
                        return s.marshalPrivateKey(this.privKey)
                }
                marshal(e) {
                    return a.encode({
                        id: this.toBytes(),
                        pubKey: this.marshalPubKey(),
                        privKey: e ? null : this.marshalPrivKey()
                    })
                }
                toPrint() {
                    let e = this.toB58String();
                    e.startsWith("Qm") && (e = e.slice(2));
                    let t = 6;
                    return e.length < t && (t = e.length),
                    "<peer.ID " + e.substr(0, t) + ">"
                }
                toJSON() {
                    return {
                        id: this.toB58String(),
                        privKey: p(this.marshalPrivKey()),
                        pubKey: p(this.marshalPubKey())
                    }
                }
                toHexString() {
                    return i.toHexString(this.id)
                }
                toBytes() {
                    return this.id
                }
                toB58String() {
                    return this._idB58String
                }
                toString() {
                    if (!this._idCIDString) {
                        const e = new n(1,"libp2p-key",this.id,"base32");
                        this._idCIDString = e.toBaseEncodedString("base32")
                    }
                    return this._idCIDString
                }
                equals(e) {
                    if (e instanceof Uint8Array)
                        return c(this.id, e);
                    if (e.id)
                        return c(this.id, e.id);
                    throw new Error("not valid Id")
                }
                isEqual(e) {
                    return this.equals(e)
                }
                isValid() {
                    return Boolean(this.privKey && this.privKey.public && this.privKey.public.bytes && this.pubKey.bytes instanceof Uint8Array && c(this.privKey.public.bytes, this.pubKey.bytes))
                }
                hasInlinePublicKey() {
                    try {
                        if ("identity" === i.decode(this.id).name)
                            return !0
                    } catch (e) {}
                    return !1
                }
            }
            , {
                className: "PeerId",
                symbolName: "@libp2p/js-peer-id/PeerId"
            });
            r = t.exports = h;
            const l = e=>e.bytes.length <= 42 ? i.encode(e.bytes, "identity") : e.hash()
              , d = async(e,t)=>{
                const r = await l(t);
                return new h(r,e,t)
            }
            ;
            r.create = async e=>{
                (e = e || {}).bits = e.bits || 2048,
                e.keyType = e.keyType || "RSA";
                const t = await s.generateKeyPair(e.keyType, e.bits);
                return d(t, t.public)
            }
            ,
            r.createFromHexString = e=>new h(i.fromHexString(e)),
            r.createFromBytes = e=>new h(e),
            r.createFromB58String = e=>r.createFromCID(e);
            function p(e) {
                if (e)
                    return f(e, "base64pad")
            }
            r.createFromCID = e=>{
                if (!(e=>"libp2p-key" === e.codec || "dag-pb" === e.codec)(e = n.isCID(e) ? e : new n(e)))
                    throw new Error("Supplied PeerID CID has invalid multicodec: " + e.codec);
                return new h(e.multihash)
            }
            ,
            r.createFromPubKey = async e=>{
                let t = e;
                if ("string" == typeof t && (t = u(e, "base64pad")),
                !(t instanceof Uint8Array))
                    throw new Error("Supplied key is neither a base64 string nor a Uint8Array");
                const r = await s.unmarshalPublicKey(t);
                return d(null, r)
            }
            ,
            r.createFromPrivKey = async e=>{
                if ("string" == typeof e && (e = u(e, "base64pad")),
                !(e instanceof Uint8Array))
                    throw new Error("Supplied key is neither a base64 string nor a Uint8Array");
                const t = await s.unmarshalPrivateKey(e);
                return d(t, t.public)
            }
            ,
            r.createFromJSON = async e=>{
                const t = i.fromB58String(e.id)
                  , r = e.privKey && u(e.privKey, "base64pad")
                  , n = e.pubKey && u(e.pubKey, "base64pad")
                  , o = n && await s.unmarshalPublicKey(n);
                if (!r)
                    return new h(t,null,o);
                const a = await s.unmarshalPrivateKey(r)
                  , f = await l(a.public);
                let d;
                if (o && (d = await l(o)),
                o && !c(f, d))
                    throw new Error("Public and private key do not match");
                if (t && !c(f, t))
                    throw new Error("Id and private key do not match");
                return new h(t,a,o)
            }
            ,
            r.createFromProtobuf = async e=>{
                "string" == typeof e && (e = u(e, "base16"));
                let t, r, {id: i, privKey: n, pubKey: o} = a.decode(e);
                if (n = !!n && await s.unmarshalPrivateKey(n),
                o = !!o && await s.unmarshalPublicKey(o),
                n && (r = await l(n.public)),
                o && (t = await l(o)),
                n) {
                    if (o && !c(r, t))
                        throw new Error("Public and private key do not match");
                    return new h(r,n,n.public)
                }
                if (o)
                    return new h(t,null,o);
                if (i)
                    return new h(i);
                throw new Error("Protobuf did not contain any usable key material")
            }
            ,
            r.isPeerId = e=>Boolean("object" == typeof e && e._id && e._idB58String)
        }
        , {
            "./proto": 373,
            cids: 169,
            "class-is": 170,
            "libp2p-crypto/src/keys": 261,
            multihashes: 315,
            "uint8arrays/equals": 411,
            "uint8arrays/from-string": 412,
            "uint8arrays/to-string": 413
        }],
        373: [function(e, t, r) {
            "use strict";
            const i = e("protons");
            t.exports = i("\n\nmessage PeerIdProto {\n  required bytes id = 1;\n  bytes pubKey = 2;\n  bytes privKey = 3;\n}\n\n")
        }
        , {
            protons: 397
        }],
        374: [function(e, t, r) {
            var i = e("./parse")
              , n = e("./stringify");
            t.exports = i,
            t.exports.parse = i,
            t.exports.stringify = n
        }
        , {
            "./parse": 375,
            "./stringify": 376
        }],
        375: [function(e, t, r) {
            var i = e("./tokenize")
              , n = ["int32", "int64", "uint32", "uint64", "sint32", "sint64", "bool", "fixed64", "sfixed64", "double", "fixed32", "sfixed32", "float"]
              , s = function(e) {
                for (var t = {}; e.length; )
                    switch (e[0]) {
                    case "[":
                    case ",":
                        e.shift();
                        var r = e.shift();
                        if ("(" === r && (r = e.shift(),
                        e.shift()),
                        "=" !== e[0])
                            throw new Error("Unexpected token in field options: " + e[0]);
                        if (e.shift(),
                        "]" === e[0])
                            throw new Error("Unexpected ] in field option");
                        t[r] = e.shift();
                        break;
                    case "]":
                        return e.shift(),
                        t;
                    default:
                        throw new Error("Unexpected token in field options: " + e[0])
                    }
                throw new Error("No closing tag for field options")
            }
              , o = function(e) {
                for (var t = {
                    name: null,
                    type: null,
                    tag: -1,
                    map: null,
                    oneof: null,
                    required: !1,
                    repeated: !1,
                    options: {}
                }; e.length; )
                    switch (e[0]) {
                    case "=":
                        e.shift(),
                        t.tag = Number(e.shift());
                        break;
                    case "map":
                        if (t.type = "map",
                        t.map = {
                            from: null,
                            to: null
                        },
                        e.shift(),
                        "<" !== e[0])
                            throw new Error("Unexpected token in map type: " + e[0]);
                        if (e.shift(),
                        t.map.from = e.shift(),
                        "," !== e[0])
                            throw new Error("Unexpected token in map type: " + e[0]);
                        if (e.shift(),
                        t.map.to = e.shift(),
                        ">" !== e[0])
                            throw new Error("Unexpected token in map type: " + e[0]);
                        e.shift(),
                        t.name = e.shift();
                        break;
                    case "repeated":
                    case "required":
                    case "optional":
                        var r = e.shift();
                        t.required = "required" === r,
                        t.repeated = "repeated" === r,
                        t.type = e.shift(),
                        t.name = e.shift();
                        break;
                    case "[":
                        t.options = s(e);
                        break;
                    case ";":
                        if (null === t.name)
                            throw new Error("Missing field name");
                        if (null === t.type)
                            throw new Error("Missing type in message field: " + t.name);
                        if (-1 === t.tag)
                            throw new Error("Missing tag number in message field: " + t.name);
                        return e.shift(),
                        t;
                    default:
                        throw new Error("Unexpected token in message field: " + e[0])
                    }
                throw new Error("No ; found for message field")
            }
              , a = function(e) {
                for (var t = {
                    enums: [],
                    options: {},
                    messages: [],
                    fields: [],
                    extends: [],
                    extensions: null
                }; e.length; )
                    switch (e[0]) {
                    case "map":
                    case "repeated":
                    case "optional":
                    case "required":
                        t.fields.push(o(e));
                        break;
                    case "enum":
                        t.enums.push(p(e));
                        break;
                    case "message":
                        t.messages.push(f(e));
                        break;
                    case "extensions":
                        t.extensions = u(e);
                        break;
                    case "oneof":
                        e.shift();
                        var r = e.shift();
                        if ("{" !== e[0])
                            throw new Error("Unexpected token in oneof: " + e[0]);
                        for (e.shift(); "}" !== e[0]; ) {
                            e.unshift("optional");
                            var i = o(e);
                            i.oneof = r,
                            t.fields.push(i)
                        }
                        e.shift();
                        break;
                    case "extend":
                        t.extends.push(c(e));
                        break;
                    case ";":
                        e.shift();
                        break;
                    case "reserved":
                        for (e.shift(); ";" !== e[0]; )
                            e.shift();
                        break;
                    case "option":
                        var n = b(e);
                        if (void 0 !== t.options[n.name])
                            throw new Error("Duplicate option " + n.name);
                        t.options[n.name] = n.value;
                        break;
                    default:
                        e.unshift("optional"),
                        t.fields.push(o(e))
                    }
                return t
            }
              , c = function(e) {
                return {
                    name: e[1],
                    message: f(e)
                }
            }
              , u = function(e) {
                e.shift();
                var t = Number(e.shift());
                if (isNaN(t))
                    throw new Error("Invalid from in extensions definition");
                if ("to" !== e.shift())
                    throw new Error("Expected keyword 'to' in extensions definition");
                var r = e.shift();
                if ("max" === r && (r = 536870911),
                r = Number(r),
                isNaN(r))
                    throw new Error("Invalid to in extensions definition");
                if (";" !== e.shift())
                    throw new Error("Missing ; in extensions definition");
                return {
                    from: t,
                    to: r
                }
            }
              , f = function(e) {
                e.shift();
                var t = 1
                  , r = []
                  , i = {
                    name: e.shift(),
                    options: {},
                    enums: [],
                    extends: [],
                    messages: [],
                    fields: []
                };
                if ("{" !== e[0])
                    throw new Error("Expected { but found " + e[0]);
                for (e.shift(); e.length; ) {
                    if ("{" === e[0] ? t++ : "}" === e[0] && t--,
                    !t)
                        return e.shift(),
                        r = a(r),
                        i.enums = r.enums,
                        i.messages = r.messages,
                        i.fields = r.fields,
                        i.extends = r.extends,
                        i.extensions = r.extensions,
                        i.options = r.options,
                        i;
                    r.push(e.shift())
                }
                if (t)
                    throw new Error("No closing tag for message")
            }
              , h = function(e) {
                e.shift();
                var t = e.shift();
                if (";" !== e[0])
                    throw new Error("Expected ; but found " + e[0]);
                return e.shift(),
                t
            }
              , l = function(e) {
                if (e.shift(),
                "=" !== e[0])
                    throw new Error("Expected = but found " + e[0]);
                e.shift();
                var t = e.shift();
                switch (t) {
                case '"proto2"':
                    t = 2;
                    break;
                case '"proto3"':
                    t = 3;
                    break;
                default:
                    throw new Error("Expected protobuf syntax version but found " + t)
                }
                if (";" !== e[0])
                    throw new Error("Expected ; but found " + e[0]);
                return e.shift(),
                t
            }
              , d = function(e) {
                if (e.length < 4)
                    throw new Error("Invalid enum value: " + e.slice(0, 3).join(" "));
                if ("=" !== e[1])
                    throw new Error("Expected = but found " + e[1]);
                if (";" !== e[3] && "[" !== e[3])
                    throw new Error("Expected ; or [ but found " + e[1]);
                var t = e.shift();
                e.shift();
                var r = {
                    value: null,
                    options: {}
                };
                return r.value = Number(e.shift()),
                "[" === e[0] && (r.options = s(e)),
                e.shift(),
                {
                    name: t,
                    val: r
                }
            }
              , p = function(e) {
                e.shift();
                var t = {}
                  , r = {
                    name: e.shift(),
                    values: {},
                    options: {}
                };
                if ("{" !== e[0])
                    throw new Error("Expected { but found " + e[0]);
                for (e.shift(); e.length; ) {
                    if ("}" === e[0])
                        return e.shift(),
                        ";" === e[0] && e.shift(),
                        r;
                    if ("option" !== e[0]) {
                        var i = d(e);
                        r.values[i.name] = i.val
                    } else
                        t = b(e),
                        r.options[t.name] = t.value
                }
                throw new Error("No closing tag for enum")
            }
              , b = function(e) {
                for (var t = null, r = null, i = function(e) {
                    return "true" === e || "false" !== e && e.replace(/^"+|"+$/gm, "")
                }; e.length; ) {
                    if (";" === e[0])
                        return e.shift(),
                        {
                            name: t,
                            value: r
                        };
                    switch (e[0]) {
                    case "option":
                        e.shift();
                        var n = "(" === e[0];
                        if (n && e.shift(),
                        t = e.shift(),
                        n) {
                            if (")" !== e[0])
                                throw new Error("Expected ) but found " + e[0]);
                            e.shift()
                        }
                        "." === e[0][0] && (t += e.shift());
                        break;
                    case "=":
                        if (e.shift(),
                        null === t)
                            throw new Error("Expected key for option with value: " + e[0]);
                        if (r = i(e.shift()),
                        "optimize_for" === t && !/^(SPEED|CODE_SIZE|LITE_RUNTIME)$/.test(r))
                            throw new Error("Unexpected value for option optimize_for: " + r);
                        "{" === r && (r = g(e));
                        break;
                    default:
                        throw new Error("Unexpected token in option: " + e[0])
                    }
                }
            }
              , g = function(e) {
                for (var t = function(e) {
                    return "true" === e || "false" !== e && e.replace(/^"+|"+$/gm, "")
                }, r = {}; e.length; ) {
                    if ("}" === e[0])
                        return e.shift(),
                        r;
                    var i = "(" === e[0];
                    i && e.shift();
                    var n = e.shift();
                    if (i) {
                        if (")" !== e[0])
                            throw new Error("Expected ) but found " + e[0]);
                        e.shift()
                    }
                    var s = null;
                    switch (e[0]) {
                    case ":":
                        if (void 0 !== r[n])
                            throw new Error("Duplicate option map key " + n);
                        e.shift(),
                        "{" === (s = t(e.shift())) && (s = g(e)),
                        r[n] = s,
                        ";" === e[0] && e.shift();
                        break;
                    case "{":
                        if (e.shift(),
                        s = g(e),
                        void 0 === r[n] && (r[n] = []),
                        !Array.isArray(r[n]))
                            throw new Error("Duplicate option map key " + n);
                        r[n].push(s);
                        break;
                    default:
                        throw new Error("Unexpected token in option map: " + e[0])
                    }
                }
                throw new Error("No closing tag for option map")
            }
              , m = function(e) {
                e.shift();
                var t = e.shift().replace(/^"+|"+$/gm, "");
                if (";" !== e[0])
                    throw new Error("Unexpected token: " + e[0] + '. Expected ";"');
                return e.shift(),
                t
            }
              , y = function(e) {
                e.shift();
                var t = {
                    name: e.shift(),
                    methods: [],
                    options: {}
                };
                if ("{" !== e[0])
                    throw new Error("Expected { but found " + e[0]);
                for (e.shift(); e.length; ) {
                    if ("}" === e[0])
                        return e.shift(),
                        ";" === e[0] && e.shift(),
                        t;
                    switch (e[0]) {
                    case "option":
                        var r = b(e);
                        if (void 0 !== t.options[r.name])
                            throw new Error("Duplicate option " + r.name);
                        t.options[r.name] = r.value;
                        break;
                    case "rpc":
                        t.methods.push(v(e));
                        break;
                    default:
                        throw new Error("Unexpected token in service: " + e[0])
                    }
                }
                throw new Error("No closing tag for service")
            }
              , v = function(e) {
                e.shift();
                var t = {
                    name: e.shift(),
                    input_type: null,
                    output_type: null,
                    client_streaming: !1,
                    server_streaming: !1,
                    options: {}
                };
                if ("(" !== e[0])
                    throw new Error("Expected ( but found " + e[0]);
                if (e.shift(),
                "stream" === e[0] && (e.shift(),
                t.client_streaming = !0),
                t.input_type = e.shift(),
                ")" !== e[0])
                    throw new Error("Expected ) but found " + e[0]);
                if (e.shift(),
                "returns" !== e[0])
                    throw new Error("Expected returns but found " + e[0]);
                if (e.shift(),
                "(" !== e[0])
                    throw new Error("Expected ( but found " + e[0]);
                if (e.shift(),
                "stream" === e[0] && (e.shift(),
                t.server_streaming = !0),
                t.output_type = e.shift(),
                ")" !== e[0])
                    throw new Error("Expected ) but found " + e[0]);
                if (e.shift(),
                ";" === e[0])
                    return e.shift(),
                    t;
                if ("{" !== e[0])
                    throw new Error("Expected { but found " + e[0]);
                for (e.shift(); e.length; ) {
                    if ("}" === e[0])
                        return e.shift(),
                        ";" === e[0] && e.shift(),
                        t;
                    if ("option" !== e[0])
                        throw new Error("Unexpected token in rpc options: " + e[0]);
                    var r = b(e);
                    if (void 0 !== t.options[r.name])
                        throw new Error("Duplicate option " + r.name);
                    t.options[r.name] = r.value
                }
                throw new Error("No closing tag for rpc")
            };
            t.exports = function(e) {
                for (var t = i(e.toString()), r = 0; r < t.length; r++) {
                    var s;
                    if (/^("|')([^'"]*)$/.test(t[r]))
                        for (s = 1 === t[r].length ? r + 1 : r; s < t.length; s++)
                            if (/^[^'"\\]*(?:\\.[^'"\\]*)*("|')$/.test(t[s])) {
                                t = t.slice(0, r).concat(t.slice(r, s + 1).join("")).concat(t.slice(s + 1));
                                break
                            }
                }
                for (var o = {
                    syntax: 3,
                    package: null,
                    imports: [],
                    enums: [],
                    messages: [],
                    options: {},
                    extends: []
                }, a = !0; t.length; ) {
                    switch (t[0]) {
                    case "package":
                        o.package = h(t);
                        break;
                    case "syntax":
                        if (!a)
                            throw new Error("Protobuf syntax version should be first thing in file");
                        o.syntax = l(t);
                        break;
                    case "message":
                        o.messages.push(f(t));
                        break;
                    case "enum":
                        o.enums.push(p(t));
                        break;
                    case "option":
                        var u = b(t);
                        if (o.options[u.name])
                            throw new Error("Duplicate option " + u.name);
                        o.options[u.name] = u.value;
                        break;
                    case "import":
                        o.imports.push(m(t));
                        break;
                    case "extend":
                        o.extends.push(c(t));
                        break;
                    case "service":
                        o.services || (o.services = []),
                        o.services.push(y(t));
                        break;
                    default:
                        throw new Error("Unexpected token: " + t[0])
                    }
                    a = !1
                }
                return o.extends.forEach((function(e) {
                    o.messages.forEach((function(t) {
                        t.name === e.name && e.message.fields.forEach((function(e) {
                            if (!t.extensions || e.tag < t.extensions.from || e.tag > t.extensions.to)
                                throw new Error(t.name + " does not declare " + e.tag + " as an extension number");
                            t.fields.push(e)
                        }
                        ))
                    }
                    ))
                }
                )),
                o.messages.forEach((function(e) {
                    e.fields.forEach((function(t) {
                        var r, i, s, a;
                        if (t.options && "true" === t.options.packed && -1 === n.indexOf(t.type)) {
                            if (-1 === t.type.indexOf(".")) {
                                if (e.enums && e.enums.some((function(e) {
                                    return e.name === t.type
                                }
                                )))
                                    return
                            } else {
                                if ((r = t.type.split(".")).length > 2)
                                    throw new Error("what is this?");
                                if (i = r[0],
                                s = r[1],
                                o.messages.some((function(e) {
                                    if (e.name === i)
                                        return a = e,
                                        e
                                }
                                )),
                                a && a.enums && a.enums.some((function(e) {
                                    return e.name === s
                                }
                                )))
                                    return
                            }
                            throw new Error("Fields of type " + t.type + ' cannot be declared [packed=true]. Only repeated fields of primitive numeric types (types which use the varint, 32-bit, or 64-bit wire types) can be declared "packed". See https://developers.google.com/protocol-buffers/docs/encoding#optional')
                        }
                    }
                    ))
                }
                )),
                o
            }
        }
        , {
            "./tokenize": 377
        }],
        376: [function(e, t, r) {
            var i = function(e, t) {
                var r = e.repeated ? "repeated" : e.required ? "required" : "optional";
                "map" === e.type && (r = "map<" + e.map.from + "," + e.map.to + ">"),
                e.oneof && (r = "");
                var i = Object.keys(e.options || {}).map((function(t) {
                    return t + " = " + e.options[t]
                }
                )).join(",");
                return i && (i = " [" + i + "]"),
                t.push((r ? r + " " : "") + ("map" === e.map ? "" : e.type + " ") + e.name + " = " + e.tag + i + ";"),
                t
            }
              , n = function(e, t) {
                t.push("message " + e.name + " {"),
                e.options || (e.options = {}),
                a(e.options, t),
                e.enums || (e.enums = []),
                e.enums.forEach((function(e) {
                    t.push(s(e, []))
                }
                )),
                e.messages || (e.messages = []),
                e.messages.forEach((function(e) {
                    t.push(n(e, []))
                }
                ));
                var r = {};
                return e.fields || (e.fields = []),
                e.fields.forEach((function(e) {
                    e.oneof ? (r[e.oneof] || (r[e.oneof] = []),
                    r[e.oneof].push(i(e, []))) : t.push(i(e, []))
                }
                )),
                Object.keys(r).forEach((function(e) {
                    r[e].unshift("oneof " + e + " {"),
                    r[e].push("}"),
                    t.push(r[e])
                }
                )),
                t.push("}", ""),
                t
            }
              , s = function(e, t) {
                t.push("enum " + e.name + " {"),
                e.options || (e.options = {});
                var r = a(e.options, []);
                return r.length > 1 && t.push(r.slice(0, -1)),
                Object.keys(e.values).map((function(r) {
                    var i = o(e.values[r]);
                    t.push([r + " = " + i + ";"])
                }
                )),
                t.push("}", ""),
                t
            }
              , o = function(e, t) {
                var r = Object.keys(e.options || {}).map((function(t) {
                    return t + " = " + e.options[t]
                }
                )).join(",");
                return r && (r = " [" + r + "]"),
                e.value + r
            }
              , a = function(e, t) {
                var r = Object.keys(e);
                return r.forEach((function(r) {
                    var i = e[r];
                    ~r.indexOf(".") && (r = "(" + r + ")");
                    var n = typeof i;
                    "object" === n ? (i = c(i, [])).length && t.push("option " + r + " = {", i, "};") : ("string" === n && "optimize_for" !== r && (i = '"' + i + '"'),
                    t.push("option " + r + " = " + i + ";"))
                }
                )),
                r.length > 0 && t.push(""),
                t
            }
              , c = function(e, t) {
                return Object.keys(e).forEach((function(r) {
                    var i = e[r]
                      , n = typeof i;
                    "object" === n ? Array.isArray(i) ? i.forEach((function(e) {
                        (e = c(e, [])).length && t.push(r + " {", e, "}")
                    }
                    )) : (i = c(i, [])).length && t.push(r + " {", i, "}") : ("string" === n && (i = '"' + i + '"'),
                    t.push(r + ": " + i))
                }
                )),
                t
            }
              , u = function(e, t) {
                var r = "rpc " + e.name + "(";
                e.client_streaming && (r += "stream "),
                r += e.input_type + ") returns (",
                e.server_streaming && (r += "stream "),
                r += e.output_type + ")",
                e.options || (e.options = {});
                var i = a(e.options, []);
                return i.length > 1 ? t.push(r + " {", i.slice(0, -1), "}") : t.push(r + ";"),
                t
            }
              , f = function(e) {
                return function(t) {
                    return Array.isArray(t) ? t.map(f(e + "  ")).join("\n") : e + t
                }
            };
            t.exports = function(e) {
                var t = [];
                return t.push('syntax = "proto' + e.syntax + '";', ""),
                e.package && t.push("package " + e.package + ";", ""),
                e.options || (e.options = {}),
                a(e.options, t),
                e.enums || (e.enums = []),
                e.enums.forEach((function(e) {
                    s(e, t)
                }
                )),
                e.messages || (e.messages = []),
                e.messages.forEach((function(e) {
                    n(e, t)
                }
                )),
                e.services && e.services.forEach((function(e) {
                    !function(e, t) {
                        t.push("service " + e.name + " {"),
                        e.options || (e.options = {}),
                        a(e.options, t),
                        e.methods || (e.methods = []),
                        e.methods.forEach((function(e) {
                            t.push(u(e, []))
                        }
                        )),
                        t.push("}", "")
                    }(e, t)
                }
                )),
                t.map(f("")).join("\n")
            }
        }
        , {}],
        377: [function(e, t, r) {
            t.exports = function(e) {
                var t, r = function(e) {
                    return e.trim()
                };
                return e.replace(/([;,{}()=:[\]<>]|\/\*|\*\/)/g, " $1 ").split(/\n/).map(r).filter(Boolean).map((function(e) {
                    var t = e.indexOf("//");
                    return t > -1 ? e.slice(0, t) : e
                }
                )).map(r).filter(Boolean).join("\n").split(/\s+|\n+/gm).filter((t = !1,
                function(e) {
                    return "/*" === e ? (t = !0,
                    !1) : "*/" === e ? (t = !1,
                    !1) : !t
                }
                ))
            }
        }
        , {}],
        378: [function(e, t, r) {
            "use strict";
            const i = e("varint")
              , n = e("./utils").defined;
            function s(e) {
                return `${e.substring(0, 1).toUpperCase()}${e.substring(1)}`
            }
            function o(e, t, r, i) {
                if (Object.prototype.hasOwnProperty.call(e, t))
                    return;
                const n = s(t);
                Object.defineProperties(e, {
                    [t]: {
                        enumerable: !0,
                        configurable: !0,
                        set: e=>{
                            r = e
                        }
                        ,
                        get: ()=>void 0 === r ? i : r
                    },
                    [`has${n}`]: {
                        configurable: !0,
                        value: ()=>void 0 !== r
                    },
                    [`set${n}`]: {
                        configurable: !0,
                        value: e=>{
                            r = e
                        }
                    },
                    [`get${n}`]: {
                        configurable: !0,
                        value: ()=>r
                    },
                    [`clear${n}`]: {
                        configurable: !0,
                        value: ()=>{
                            r = void 0,
                            e[t] = void 0
                        }
                    }
                })
            }
            var a = function(e, t, r, n) {
                switch (e) {
                case 0:
                    return i.decode(t, n),
                    n + i.decode.bytes;
                case 1:
                    return n + 8;
                case 2:
                    var s = i.decode(t, n);
                    return n + i.decode.bytes + s;
                case 3:
                case 4:
                    throw new Error("Groups are not supported");
                case 5:
                    return n + 4;
                default:
                    throw new Error("Unknown wire type: " + e)
                }
            }
              , c = function(e) {
                if (e.map)
                    return {};
                if (e.repeated)
                    return [];
                switch (e.type) {
                case "string":
                    return "";
                case "bool":
                    return !1;
                case "float":
                case "double":
                case "sfixed32":
                case "fixed32":
                case "varint":
                case "enum":
                case "uint64":
                case "uint32":
                case "int64":
                case "int32":
                case "sint64":
                case "sint32":
                    return 0;
                default:
                    return null
                }
            }
              , u = function(e, t) {
                if (void 0 === t)
                    return t;
                switch (e.type) {
                case "bool":
                    return "true" === t;
                case "float":
                case "double":
                case "sfixed32":
                case "fixed32":
                case "varint":
                case "enum":
                case "uint64":
                case "uint32":
                case "int64":
                case "int32":
                case "sint64":
                case "sint32":
                    return parseInt(t, 10);
                default:
                    return t
                }
            };
            t.exports = function(e, t, r) {
                const f = []
                  , h = {}
                  , l = []
                  , d = [];
                for (var p = 0; p < r.length; p++) {
                    const r = e.fields[p];
                    h[r.tag] = p;
                    const i = r.options && r.options.default
                      , n = t(r.type, e.id, !1);
                    d[p] = [i, n && n.values],
                    e.fields[p].packed = r.repeated && r.options && r.options.packed && "false" !== r.options.packed,
                    r.required && f.push(r.name),
                    r.oneof && l.push(r.name)
                }
                function b(e, t, r, n, a, c, u) {
                    const f = t.name;
                    if (t.oneof) {
                        const e = Object.keys(r);
                        for (var h = 0; h < e.length; h++)
                            if (l.indexOf(e[h]) > -1) {
                                const t = s(e[h]);
                                delete r[`has${t}`],
                                delete r[`get${t}`],
                                delete r[`set${t}`],
                                delete r[`clear${t}`],
                                delete r[e[h]]
                            }
                    }
                    let d;
                    if (e.message) {
                        const s = i.decode(n, c);
                        c += i.decode.bytes;
                        const o = e.decode(n, a, c, c + s);
                        t.map ? (d = r[f] || {})[o.key] = o.value : t.repeated ? (d = r[f] || []).push(o) : d = o
                    } else
                        t.repeated ? (d = r[f] || []).push(e.decode(n, a, c)) : d = e.decode(n, a, c);
                    return o(r, f, d),
                    c += e.decode.bytes
                }
                return function t(s, p, g, m) {
                    if (null == g && (g = 0),
                    null == m && (m = s.length),
                    !(m <= s.length && g <= s.length))
                        throw new Error("Decoded message is not valid");
                    p || (p = new DataView(s.buffer,s.byteOffset,s.byteLength));
                    for (var y, v = g, w = {}; ; ) {
                        if (m <= g) {
                            var E, _, S = "", k = 0;
                            for (k = 0; k < f.length; k++)
                                if (S = f[k],
                                !n(w[S]))
                                    throw new Error("Decoded message is not valid, missing required field: " + S);
                            for (k = 0; k < r.length; k++) {
                                let t;
                                if (y = e.fields[k],
                                _ = d[k][0],
                                E = d[k][1],
                                S = y.name,
                                !Object.prototype.hasOwnProperty.call(w, S)) {
                                    var A = !1;
                                    if (y.oneof)
                                        for (var C = Object.keys(w), I = 0; I < C.length; I++)
                                            if (l.indexOf(C[I]) > -1) {
                                                A = !0;
                                                break
                                            }
                                    A || (E ? y.repeated ? _ = [] : (_ = _ && E[_] ? E[_].value : E[Object.keys(E)[0]].value,
                                    _ = parseInt(_ || 0, 10)) : (t = c(y),
                                    _ = u(y, _)),
                                    o(w, S, _, t))
                                }
                            }
                            return t.bytes = g - v,
                            w
                        }
                        var T = i.decode(s, g);
                        g += i.decode.bytes;
                        var B = h[T >> 3];
                        if (null != B) {
                            var M = r[B];
                            if ((y = e.fields[B]).packed) {
                                var R = i.decode(s, g);
                                for (R += g += i.decode.bytes; g < R; )
                                    g = b(M, y, w, s, p, g)
                            } else
                                g = b(M, y, w, s, p, g)
                        } else
                            g = a(7 & T, s, p, g)
                    }
                }
            }
        }
        , {
            "./utils": 396,
            varint: 417
        }],
        379: [function(e, t, r) {
            "use strict";
            var i = e("./utils").defined
              , n = e("varint");
            t.exports = function(e, t, r, s, o) {
                const a = Object.keys(s)
                  , c = r.length
                  , u = {};
                for (let t = 0; t < c; t++) {
                    u[t] = {
                        p: n.encode(e.fields[t].tag << 3 | 2),
                        h: n.encode(e.fields[t].tag << 3 | r[t].type)
                    };
                    const i = e.fields[t];
                    e.fields[t].packed = i.repeated && i.options && i.options.packed && "false" !== i.options.packed
                }
                function f(e, t, r, i, s, o, a) {
                    let c = 0;
                    if (!o)
                        for (c = 0; c < i.length; c++)
                            e[r++] = i[c];
                    return s.message && (n.encode(s.encodingLength(a), e, r),
                    r += n.encode.bytes),
                    s.encode(a, e, t, r),
                    r + s.encode.bytes
                }
                return function t(h, l, d, p=0) {
                    null == l && (l = new Uint8Array(o(h))),
                    null == d && (d = new DataView(l.buffer,l.byteOffset,l.byteLength));
                    const b = p
                      , g = Object.keys(h);
                    let m = 0
                      , y = !1;
                    for (m = 0; m < a.length; m++) {
                        const e = a[m]
                          , t = s[m];
                        if (g.indexOf(t) > -1) {
                            if (y)
                                throw new Error("only one of the properties defined in oneof " + e + " can be set");
                            y = !0
                        }
                    }
                    for (m = 0; m < c; m++) {
                        const t = r[m]
                          , s = e.fields[m];
                        let o = h[s.name]
                          , a = 0;
                        if (!i(o)) {
                            if (s.required)
                                throw new Error(s.name + " is required");
                            continue
                        }
                        const c = u[m].p
                          , b = u[m].h
                          , g = s.packed;
                        if (s.map) {
                            const e = Object.keys(o);
                            for (a = 0; a < e.length; a++)
                                e[a] = {
                                    key: e[a],
                                    value: o[e[a]]
                                };
                            o = e
                        }
                        if (g) {
                            let e = 0;
                            for (a = 0; a < o.length; a++)
                                Object.prototype.hasOwnProperty.call(o, a) && (e += t.encodingLength(o[a]));
                            if (e) {
                                for (a = 0; a < b.length; a++)
                                    l[p++] = c[a];
                                n.encode(e, l, p),
                                p += n.encode.bytes
                            }
                        }
                        if (s.repeated) {
                            let e;
                            for (a = 0; a < o.length; a++)
                                e = o[a],
                                i(e) && (p = f(l, d, p, b, t, g, e))
                        } else
                            p = f(l, d, p, b, t, g, o)
                    }
                    return t.bytes = p - b,
                    l
                }
            }
        }
        , {
            "./utils": 396,
            varint: 417
        }],
        380: [function(e, t, r) {
            "use strict";
            var i = e("./utils").defined
              , n = e("varint");
            t.exports = function(e, t, r) {
                const s = Object.keys(r)
                  , o = t.length
                  , a = new Array(o);
                for (let r = 0; r < e.fields.length; r++) {
                    a[r] = n.encodingLength(e.fields[r].tag << 3 | t[r].type);
                    const i = e.fields[r];
                    e.fields[r].packed = i.repeated && i.options && i.options.packed && "false" !== i.options.packed
                }
                return function(c) {
                    let u = 0
                      , f = 0
                      , h = 0;
                    for (f = 0; f < s.length; f++) {
                        const e = s[f]
                          , t = r[e];
                        let n = !1;
                        for (h = 0; h < t.length; h++)
                            if (i(c[t[h]])) {
                                if (n)
                                    throw new Error("only one of the properties defined in oneof " + e + " can be set");
                                n = !0
                            }
                    }
                    for (f = 0; f < o; f++) {
                        const r = t[f]
                          , s = e.fields[f];
                        let o = c[s.name];
                        const l = a[f];
                        let d;
                        if (i(o)) {
                            if (s.map) {
                                const e = Object.keys(o);
                                for (h = 0; h < e.length; h++)
                                    e[h] = {
                                        key: e[h],
                                        value: o[e[h]]
                                    };
                                o = e
                            }
                            if (s.packed) {
                                let e = 0;
                                for (h = 0; h < o.length; h++)
                                    i(o[h]) && (e += d = r.encodingLength(o[h]),
                                    r.message && (e += n.encodingLength(d)));
                                e && (u += l + e + n.encodingLength(e))
                            } else if (s.repeated)
                                for (h = 0; h < o.length; h++)
                                    i(o[h]) && (u += l + (d = r.encodingLength(o[h])) + (r.message ? n.encodingLength(d) : 0));
                            else
                                u += l + (d = r.encodingLength(o)) + (r.message ? n.encodingLength(d) : 0)
                        } else if (s.required)
                            throw new Error(s.name + " is required")
                    }
                    return u
                }
            }
        }
        , {
            "./utils": 396,
            varint: 417
        }],
        381: [function(e, t, r) {
            "use strict";
            const i = e("./encoder");
            t.exports = i(0, (function e(t, r, i, n) {
                r[n] = t ? 1 : 0,
                e.bytes = 1
            }
            ), (function e(t, r, i) {
                const n = t[i] > 0;
                return e.bytes = 1,
                n
            }
            ), (function() {
                return 1
            }
            ))
        }
        , {
            "./encoder": 384
        }],
        382: [function(e, t, r) {
            "use strict";
            const i = e("varint")
              , n = e("./encoder");
            function s(e) {
                return e.byteLength
            }
            t.exports = n(2, (function e(t, r, n, o) {
                const a = o
                  , c = s(t);
                i.encode(c, r, o),
                o += i.encode.bytes,
                r.set(t, o),
                o += c,
                e.bytes = o - a
            }
            ), (function e(t, r, n) {
                const s = n
                  , o = i.decode(t, n);
                n += i.decode.bytes;
                const a = t.slice(n, n + o);
                return n += a.length,
                e.bytes = n - s,
                a
            }
            ), (function(e) {
                const t = s(e);
                return i.encodingLength(t) + t
            }
            ))
        }
        , {
            "./encoder": 384,
            varint: 417
        }],
        383: [function(e, t, r) {
            "use strict";
            const i = e("./encoder");
            t.exports = i(1, (function e(t, r, i, n) {
                i.setFloat64(n, t, !0),
                e.bytes = 8
            }
            ), (function e(t, r, i) {
                const n = r.getFloat64(i, !0);
                return e.bytes = 8,
                n
            }
            ), (function() {
                return 8
            }
            ))
        }
        , {
            "./encoder": 384
        }],
        384: [function(e, t, r) {
            "use strict";
            t.exports = function(e, t, r, i) {
                return t.bytes = r.bytes = 0,
                {
                    type: e,
                    encode: t,
                    decode: r,
                    encodingLength: i
                }
            }
        }
        , {}],
        385: [function(e, t, r) {
            "use strict";
            const i = e("./encoder");
            t.exports = i(5, (function e(t, r, i, n) {
                i.setUint32(n, t, !0),
                e.bytes = 4
            }
            ), (function e(t, r, i) {
                const n = r.getUint32(i, !0);
                return e.bytes = 4,
                n
            }
            ), (function(e) {
                return 4
            }
            ))
        }
        , {
            "./encoder": 384
        }],
        386: [function(e, t, r) {
            "use strict";
            const i = e("./encoder");
            t.exports = i(1, (function e(t, r, i, n) {
                for (const e of t)
                    r[n] = e,
                    n++;
                e.bytes = 8
            }
            ), (function e(t, r, i) {
                const n = t.slice(i, i + 8);
                return e.bytes = 8,
                n
            }
            ), (function() {
                return 8
            }
            ))
        }
        , {
            "./encoder": 384
        }],
        387: [function(e, t, r) {
            "use strict";
            const i = e("./encoder");
            t.exports = i(5, (function e(t, r, i, n) {
                i.setFloat32(n, t, !0),
                e.bytes = 4
            }
            ), (function e(t, r, i) {
                const n = r.getFloat32(i, !0);
                return e.bytes = 4,
                n
            }
            ), (function() {
                return 4
            }
            ))
        }
        , {
            "./encoder": 384
        }],
        388: [function(e, t, r) {
            "use strict";
            r.make = e("./encoder"),
            r.bytes = e("./bytes"),
            r.string = e("./string"),
            r.bool = e("./bool"),
            r.int32 = e("./int32"),
            r.int64 = e("./int64"),
            r.sint32 = r.sint64 = e("./sint64"),
            r.uint32 = r.uint64 = r.enum = r.varint = e("./varint"),
            r.fixed64 = r.sfixed64 = e("./fixed64"),
            r.double = e("./double"),
            r.fixed32 = e("./fixed32"),
            r.sfixed32 = e("./sfixed32"),
            r.float = e("./float")
        }
        , {
            "./bool": 381,
            "./bytes": 382,
            "./double": 383,
            "./encoder": 384,
            "./fixed32": 385,
            "./fixed64": 386,
            "./float": 387,
            "./int32": 389,
            "./int64": 390,
            "./sfixed32": 391,
            "./sint64": 392,
            "./string": 393,
            "./varint": 394
        }],
        389: [function(e, t, r) {
            "use strict";
            const i = e("varint")
              , n = e("./encoder");
            t.exports = n(0, (function e(t, r, n, s) {
                i.encode(t < 0 ? t + 4294967296 : t, r, s),
                e.bytes = i.encode.bytes
            }
            ), (function e(t, r, n) {
                const s = i.decode(t, n);
                return e.bytes = i.decode.bytes,
                s > 2147483647 ? s - 4294967296 : s
            }
            ), (function(e) {
                return i.encodingLength(e < 0 ? e + 4294967296 : e)
            }
            ))
        }
        , {
            "./encoder": 384,
            varint: 417
        }],
        390: [function(e, t, r) {
            "use strict";
            const i = e("varint")
              , n = e("./encoder");
            t.exports = n(0, (function e(t, r, n, s) {
                if (t < 0) {
                    const n = s + 9;
                    for (i.encode(-1 * t, r, s),
                    r[s += i.encode.bytes - 1] = 128 | r[s]; s < n - 1; )
                        r[++s] = 255;
                    r[n] = 1,
                    e.bytes = 10
                } else
                    i.encode(t, r, s),
                    e.bytes = i.encode.bytes
            }
            ), (function e(t, r, n) {
                let s = i.decode(t, n);
                if (s >= Math.pow(2, 63)) {
                    let r = 9;
                    for (; 255 === t[n + r - 1]; )
                        r--;
                    r = r || 9;
                    const o = t.subarray(n, n + r);
                    o[r - 1] = 127 & o[r - 1],
                    s = -1 * i.decode(o, 0),
                    e.bytes = 10
                } else
                    e.bytes = i.decode.bytes;
                return s
            }
            ), (function(e) {
                return e < 0 ? 10 : i.encodingLength(e)
            }
            ))
        }
        , {
            "./encoder": 384,
            varint: 417
        }],
        391: [function(e, t, r) {
            "use strict";
            const i = e("./encoder");
            t.exports = i(5, (function e(t, r, i, n) {
                i.setInt32(n, t, !0),
                e.bytes = 4
            }
            ), (function e(t, r, i) {
                const n = r.getInt32(i, !0);
                return e.bytes = 4,
                n
            }
            ), (function(e) {
                return 4
            }
            ))
        }
        , {
            "./encoder": 384
        }],
        392: [function(e, t, r) {
            "use strict";
            const i = e("signed-varint")
              , n = e("./encoder");
            t.exports = n(0, (function e(t, r, n, s) {
                i.encode(t, r, s),
                e.bytes = i.encode.bytes
            }
            ), (function e(t, r, n) {
                const s = i.decode(t, n);
                return e.bytes = i.decode.bytes,
                s
            }
            ), i.encodingLength)
        }
        , {
            "./encoder": 384,
            "signed-varint": 405
        }],
        393: [function(e, t, r) {
            "use strict";
            const i = e("varint")
              , n = e("uint8arrays/from-string")
              , s = e("uint8arrays/to-string")
              , o = e("./encoder");
            t.exports = o(2, (function e(t, r, s, o) {
                const a = o
                  , c = n(t).byteLength;
                i.encode(c, r, o, "utf-8"),
                o += i.encode.bytes;
                const u = n(t);
                r.set(u, o),
                o += u.length,
                e.bytes = o - a
            }
            ), (function e(t, r, n) {
                const o = n
                  , a = i.decode(t, n);
                n += i.decode.bytes;
                const c = s(t.subarray(n, n + a));
                return n += a,
                e.bytes = n - o,
                c
            }
            ), (function(e) {
                const t = n(e).byteLength;
                return i.encodingLength(t) + t
            }
            ))
        }
        , {
            "./encoder": 384,
            "uint8arrays/from-string": 412,
            "uint8arrays/to-string": 413,
            varint: 417
        }],
        394: [function(e, t, r) {
            "use strict";
            const i = e("varint")
              , n = e("./encoder");
            t.exports = n(0, (function e(t, r, n, s) {
                i.encode(t, r, s),
                e.bytes = i.encode.bytes
            }
            ), (function e(t, r, n) {
                const s = i.decode(t, n);
                return e.bytes = i.decode.bytes,
                s
            }
            ), i.encodingLength)
        }
        , {
            "./encoder": 384,
            varint: 417
        }],
        395: [function(e, t, r) {
            "use strict";
            const i = e("./encodings")
              , n = e("./decode")
              , s = e("./encode")
              , o = e("./encoding-length")
              , a = e("varint");
            t.exports = function(e, t) {
                const r = {}
                  , c = {}
                  , u = {}
                  , f = function(e, t) {
                    e.enums && e.enums.forEach((function(e) {
                        e.id = t + (t ? "." : "") + e.name,
                        c[e.id] = e,
                        f(e, e.id)
                    }
                    )),
                    e.messages && e.messages.forEach((function(i) {
                        i.id = t + (t ? "." : "") + i.name,
                        r[i.id] = i,
                        i.fields.forEach((function(i) {
                            if (!i.map)
                                return;
                            const n = "Map_" + i.map.from + "_" + i.map.to
                              , s = {
                                name: n,
                                enums: [],
                                messages: [],
                                fields: [{
                                    name: "key",
                                    type: i.map.from,
                                    tag: 1,
                                    repeated: !1,
                                    required: !0
                                }, {
                                    name: "value",
                                    type: i.map.to,
                                    tag: 2,
                                    repeated: !1,
                                    required: !1
                                }],
                                extensions: null,
                                id: t + (t ? "." : "") + n
                            };
                            r[s.id] || (r[s.id] = s,
                            e.messages.push(s)),
                            i.type = n,
                            i.repeated = !0
                        }
                        )),
                        f(i, i.id)
                    }
                    ))
                };
                f(e, "");
                const h = function(e, t) {
                    e.messages.forEach((function(r) {
                        t[r.name] = l(r.name, e.id)
                    }
                    )),
                    e.enums.forEach((function(e) {
                        t[e.name] = function(e) {
                            if (!e)
                                return null;
                            const t = {};
                            return Object.keys(e).forEach((function(r) {
                                t[r] = e[r].value
                            }
                            )),
                            t
                        }(e.values)
                    }
                    )),
                    t.type = 2,
                    t.message = !0,
                    t.name = e.name;
                    const r = {};
                    e.fields.forEach((function(e) {
                        e.oneof && (r[e.oneof] || (r[e.oneof] = []),
                        r[e.oneof].push(e.name))
                    }
                    ));
                    const i = e.fields.map((function(t) {
                        return l(t.type, e.id)
                    }
                    ))
                      , a = o(e, i, r)
                      , c = s(e, l, i, r, a)
                      , u = n(e, l, i);
                    return c.bytes = u.bytes = 0,
                    t.buffer = !0,
                    t.encode = c,
                    t.decode = u,
                    t.encodingLength = a,
                    t
                }
                  , l = function(e, n, s) {
                    if (t && t[e])
                        return t[e];
                    if (i[e])
                        return i[e];
                    const o = (n ? n + "." + e : e).split(".").map((function(t, r, i) {
                        return i.slice(0, r).concat(e).join(".")
                    }
                    )).reverse().reduce((function(e, t) {
                        return e || r[t] || c[t]
                    }
                    ), null);
                    if (!1 === s)
                        return o;
                    if (!o)
                        throw new Error("Could not resolve " + e);
                    return o.values ? function(e) {
                        const t = Object.keys(e.values || []).map((function(t) {
                            return parseInt(e.values[t].value, 10)
                        }
                        ));
                        return i.make(0, (function e(r, i, n, s) {
                            if (!t.length || -1 === t.indexOf(r))
                                throw new Error("Invalid enum value: " + r);
                            return a.encode(r, i, s),
                            e.bytes = a.encode.bytes,
                            i
                        }
                        ), (function e(r, i, n) {
                            var s = a.decode(r, n);
                            if (!t.length || -1 === t.indexOf(s))
                                throw new Error("Invalid enum value: " + s);
                            return e.bytes = a.decode.bytes,
                            s
                        }
                        ), a.encodingLength)
                    }(o) : u[o.id] || h(o, u[o.id] = {})
                };
                return (e.enums || []).concat((e.messages || []).map((function(e) {
                    return l(e.id)
                }
                )))
            }
        }
        , {
            "./decode": 378,
            "./encode": 379,
            "./encoding-length": 380,
            "./encodings": 388,
            varint: 417
        }],
        396: [function(e, t, r) {
            "use strict";
            r.defined = function(e) {
                return null != e && ("number" != typeof e || !isNaN(e))
            }
        }
        , {}],
        397: [function(e, t, r) {
            "use strict";
            var i = e("protocol-buffers-schema")
              , n = e("./compile");
            t.exports = function(e, t) {
                if (t || (t = {}),
                !e)
                    throw new Error("Pass in a .proto string or a protobuf-schema parsed object");
                var r = "object" != typeof e || e instanceof Uint8Array ? i.parse(e) : e
                  , s = function() {
                    var e = this;
                    n(r, t.encodings || {}).forEach((function(t) {
                        e[t.name] = function(e) {
                            if (!e)
                                return null;
                            var t = {};
                            return Object.keys(e).forEach((function(r) {
                                t[r] = e[r].value
                            }
                            )),
                            t
                        }(t.values) || t
                    }
                    ))
                };
                return s.prototype.toString = function() {
                    return i.stringify(r)
                }
                ,
                s.prototype.toJSON = function() {
                    return r
                }
                ,
                new s
            }
        }
        , {
            "./compile": 395,
            "protocol-buffers-schema": 374
        }],
        398: [function(e, t, r) {
            "use strict";
            t.exports = o;
            var i = e("ms")
              , n = o.prototype
              , s = new Date % 1e9;
            function o(e) {
                e = e || {},
                this.id = e.id || (1e9 * Math.random() >>> 0) + s++,
                this.max = e.max || 1 / 0,
                this.items = e.items || [],
                this._lookup = {},
                this.size = this.items.length,
                this.lastModified = new Date(e.lastModified || new Date);
                for (var t, r, i = this.items.length; i--; )
                    t = this.items[i],
                    r = new Date(t.expires) - new Date,
                    this._lookup[t.key] = t,
                    r > 0 ? this.expire(t.key, r) : r <= 0 && this.delete(t.key)
            }
            n.has = function(e) {
                return e in this._lookup
            }
            ,
            n.get = function(e) {
                if (!this.has(e))
                    return null;
                var t = this._lookup[e];
                return t.refresh && this.expire(e, t.refresh),
                this.items.splice(this.items.indexOf(t), 1),
                this.items.push(t),
                t.value
            }
            ,
            n.meta = function(e) {
                if (!this.has(e))
                    return null;
                var t = this._lookup[e];
                return "meta"in t ? t.meta : null
            }
            ,
            n.set = function(e, t, r) {
                var i = this._lookup[e]
                  , n = this._lookup[e] = {
                    key: e,
                    value: t
                };
                return this.lastModified = new Date,
                i ? (clearTimeout(i.timeout),
                this.items.splice(this.items.indexOf(i), 1, n)) : (this.size >= this.max && this.delete(this.items[0].key),
                this.items.push(n),
                this.size++),
                r && ("ttl"in r && this.expire(e, r.ttl),
                "meta"in r && (n.meta = r.meta),
                r.refresh && (n.refresh = r.ttl)),
                this
            }
            ,
            n.delete = function(e) {
                var t = this._lookup[e];
                return !!t && (this.lastModified = new Date,
                this.items.splice(this.items.indexOf(t), 1),
                clearTimeout(t.timeout),
                delete this._lookup[e],
                this.size--,
                this)
            }
            ,
            n.expire = function(e, t) {
                var r = t || 0
                  , n = this._lookup[e];
                if (!n)
                    return this;
                if ("string" == typeof r && (r = i(t)),
                "number" != typeof r)
                    throw new TypeError("Expiration time must be a string or number.");
                return clearTimeout(n.timeout),
                n.timeout = setTimeout(this.delete.bind(this, n.key), r),
                n.expires = Number(new Date) + r,
                this
            }
            ,
            n.clear = function() {
                for (var e = this.items.length; e--; )
                    this.delete(this.items[e].key);
                return this
            }
            ,
            n.toJSON = function() {
                for (var e, t = new Array(this.items.length), r = t.length; r--; )
                    e = this.items[r],
                    t[r] = {
                        key: e.key,
                        meta: e.meta,
                        value: e.value,
                        expires: e.expires,
                        refresh: e.refresh
                    };
                return {
                    id: this.id,
                    max: isFinite(this.max) ? this.max : void 0,
                    lastModified: this.lastModified,
                    items: t
                }
            }
        }
        , {
            ms: 287
        }],
        399: [function(e, t, r) {
            "use strict";
            var i = e("./time");
            function n(e, t, r) {
                var n = this;
                this._started = i(),
                this._rescheduled = 0,
                this._scheduled = t,
                this._args = r,
                this._timer = setTimeout((function t() {
                    n._rescheduled > 0 ? (n._scheduled = n._rescheduled - (i() - n._started),
                    n._timer = setTimeout(t, n._scheduled),
                    n._rescheduled = 0) : e.apply(null, n._args)
                }
                ), t)
            }
            n.prototype.reschedule = function(e) {
                var t = i();
                return !(t + e - (this._started + this._scheduled) < 0) && (this._started = t,
                this._rescheduled = e,
                !0)
            }
            ,
            n.prototype.clear = function() {
                clearTimeout(this._timer)
            }
            ,
            t.exports = function() {
                if ("function" != typeof arguments[0])
                    throw new Error("callback needed");
                if ("number" != typeof arguments[1])
                    throw new Error("timeout needed");
                var e;
                if (arguments.length > 0) {
                    e = new Array(arguments.length - 2);
                    for (var t = 0; t < e.length; t++)
                        e[t] = arguments[t + 2]
                }
                return new n(arguments[0],arguments[1],e)
            }
        }
        , {
            "./time": 400
        }],
        400: [function(e, t, r) {
            "use strict";
            t.exports = function() {
                return Date.now()
            }
        }
        , {}],
        401: [function(e, t, r) {
            "use strict";
            var i = e("truncate-utf8-bytes")
              , n = /[\/\?<>\\:\*\|"]/g
              , s = /[\x00-\x1f\x80-\x9f]/g
              , o = /^\.+$/
              , a = /^(con|prn|aux|nul|com[0-9]|lpt[0-9])(\..*)?$/i
              , c = /[\. ]+$/;
            function u(e, t) {
                if ("string" != typeof e)
                    throw new Error("Input must be string");
                var r = e.replace(n, t).replace(s, t).replace(o, t).replace(a, t).replace(c, t);
                return i(r, 255)
            }
            t.exports = function(e, t) {
                var r = t && t.replacement || ""
                  , i = u(e, r);
                return "" === r ? i : u(i, "")
            }
        }
        , {
            "truncate-utf8-bytes": 408
        }],
        402: [function(e, t, r) {
            t.exports = e("./lib")(e("./lib/elliptic"))
        }
        , {
            "./lib": 404,
            "./lib/elliptic": 403
        }],
        403: [function(e, t, r) {
            const i = new (0,
            e("elliptic").ec)("secp256k1")
              , n = i.curve
              , s = n.n.constructor;
            function o(e) {
                const t = e[0];
                switch (t) {
                case 2:
                case 3:
                    return 33 !== e.length ? null : function(e, t) {
                        let r = new s(t);
                        if (r.cmp(n.p) >= 0)
                            return null;
                        let o = (r = r.toRed(n.red)).redSqr().redIMul(r).redIAdd(n.b).redSqrt();
                        return 3 === e !== o.isOdd() && (o = o.redNeg()),
                        i.keyPair({
                            pub: {
                                x: r,
                                y: o
                            }
                        })
                    }(t, e.subarray(1, 33));
                case 4:
                case 6:
                case 7:
                    return 65 !== e.length ? null : function(e, t, r) {
                        let o = new s(t)
                          , a = new s(r);
                        if (o.cmp(n.p) >= 0 || a.cmp(n.p) >= 0)
                            return null;
                        if (o = o.toRed(n.red),
                        a = a.toRed(n.red),
                        (6 === e || 7 === e) && a.isOdd() !== (7 === e))
                            return null;
                        const c = o.redSqr().redIMul(o);
                        return a.redSqr().redISub(c.redIAdd(n.b)).isZero() ? i.keyPair({
                            pub: {
                                x: o,
                                y: a
                            }
                        }) : null
                    }(t, e.subarray(1, 33), e.subarray(33, 65));
                default:
                    return null
                }
            }
            function a(e, t) {
                const r = t.encode(null, 33 === e.length);
                for (let t = 0; t < e.length; ++t)
                    e[t] = r[t]
            }
            t.exports = {
                contextRandomize: ()=>0,
                privateKeyVerify(e) {
                    const t = new s(e);
                    return t.cmp(n.n) < 0 && !t.isZero() ? 0 : 1
                },
                privateKeyNegate(e) {
                    const t = new s(e)
                      , r = n.n.sub(t).umod(n.n).toArrayLike(Uint8Array, "be", 32);
                    return e.set(r),
                    0
                },
                privateKeyTweakAdd(e, t) {
                    const r = new s(t);
                    if (r.cmp(n.n) >= 0)
                        return 1;
                    if (r.iadd(new s(e)),
                    r.cmp(n.n) >= 0 && r.isub(n.n),
                    r.isZero())
                        return 1;
                    const i = r.toArrayLike(Uint8Array, "be", 32);
                    return e.set(i),
                    0
                },
                privateKeyTweakMul(e, t) {
                    let r = new s(t);
                    if (r.cmp(n.n) >= 0 || r.isZero())
                        return 1;
                    r.imul(new s(e)),
                    r.cmp(n.n) >= 0 && (r = r.umod(n.n));
                    const i = r.toArrayLike(Uint8Array, "be", 32);
                    return e.set(i),
                    0
                },
                publicKeyVerify: e=>null === o(e) ? 1 : 0,
                publicKeyCreate(e, t) {
                    const r = new s(t);
                    return r.cmp(n.n) >= 0 || r.isZero() ? 1 : (a(e, i.keyFromPrivate(t).getPublic()),
                    0)
                },
                publicKeyConvert(e, t) {
                    const r = o(t);
                    return null === r ? 1 : (a(e, r.getPublic()),
                    0)
                },
                publicKeyNegate(e, t) {
                    const r = o(t);
                    if (null === r)
                        return 1;
                    const i = r.getPublic();
                    return i.y = i.y.redNeg(),
                    a(e, i),
                    0
                },
                publicKeyCombine(e, t) {
                    const r = new Array(t.length);
                    for (let e = 0; e < t.length; ++e)
                        if (r[e] = o(t[e]),
                        null === r[e])
                            return 1;
                    let i = r[0].getPublic();
                    for (let e = 1; e < r.length; ++e)
                        i = i.add(r[e].pub);
                    return i.isInfinity() ? 2 : (a(e, i),
                    0)
                },
                publicKeyTweakAdd(e, t, r) {
                    const i = o(t);
                    if (null === i)
                        return 1;
                    if ((r = new s(r)).cmp(n.n) >= 0)
                        return 2;
                    const c = i.getPublic().add(n.g.mul(r));
                    return c.isInfinity() ? 2 : (a(e, c),
                    0)
                },
                publicKeyTweakMul(e, t, r) {
                    const i = o(t);
                    return null === i ? 1 : (r = new s(r)).cmp(n.n) >= 0 || r.isZero() ? 2 : (a(e, i.getPublic().mul(r)),
                    0)
                },
                signatureNormalize(e) {
                    const t = new s(e.subarray(0, 32))
                      , r = new s(e.subarray(32, 64));
                    return t.cmp(n.n) >= 0 || r.cmp(n.n) >= 0 ? 1 : (1 === r.cmp(i.nh) && e.set(n.n.sub(r).toArrayLike(Uint8Array, "be", 32), 32),
                    0)
                },
                signatureExport(e, t) {
                    const r = t.subarray(0, 32)
                      , i = t.subarray(32, 64);
                    if (new s(r).cmp(n.n) >= 0)
                        return 1;
                    if (new s(i).cmp(n.n) >= 0)
                        return 1;
                    const {output: o} = e;
                    let a = o.subarray(4, 37);
                    a[0] = 0,
                    a.set(r, 1);
                    let c = 33
                      , u = 0;
                    for (; c > 1 && 0 === a[u] && !(128 & a[u + 1]); --c,
                    ++u)
                        ;
                    if (128 & (a = a.subarray(u))[0])
                        return 1;
                    if (c > 1 && 0 === a[0] && !(128 & a[1]))
                        return 1;
                    let f = o.subarray(39, 72);
                    f[0] = 0,
                    f.set(i, 1);
                    let h = 33
                      , l = 0;
                    for (; h > 1 && 0 === f[l] && !(128 & f[l + 1]); --h,
                    ++l)
                        ;
                    return 128 & (f = f.subarray(l))[0] ? 1 : h > 1 && 0 === f[0] && !(128 & f[1]) ? 1 : (e.outputlen = 6 + c + h,
                    o[0] = 48,
                    o[1] = e.outputlen - 2,
                    o[2] = 2,
                    o[3] = a.length,
                    o.set(a, 4),
                    o[4 + c] = 2,
                    o[5 + c] = f.length,
                    o.set(f, 6 + c),
                    0)
                },
                signatureImport(e, t) {
                    if (t.length < 8)
                        return 1;
                    if (t.length > 72)
                        return 1;
                    if (48 !== t[0])
                        return 1;
                    if (t[1] !== t.length - 2)
                        return 1;
                    if (2 !== t[2])
                        return 1;
                    const r = t[3];
                    if (0 === r)
                        return 1;
                    if (5 + r >= t.length)
                        return 1;
                    if (2 !== t[4 + r])
                        return 1;
                    const i = t[5 + r];
                    if (0 === i)
                        return 1;
                    if (6 + r + i !== t.length)
                        return 1;
                    if (128 & t[4])
                        return 1;
                    if (r > 1 && 0 === t[4] && !(128 & t[5]))
                        return 1;
                    if (128 & t[r + 6])
                        return 1;
                    if (i > 1 && 0 === t[r + 6] && !(128 & t[r + 7]))
                        return 1;
                    let o = t.subarray(4, 4 + r);
                    if (33 === o.length && 0 === o[0] && (o = o.subarray(1)),
                    o.length > 32)
                        return 1;
                    let a = t.subarray(6 + r);
                    if (33 === a.length && 0 === a[0] && (a = a.slice(1)),
                    a.length > 32)
                        throw new Error("S length is too long");
                    let c = new s(o);
                    c.cmp(n.n) >= 0 && (c = new s(0));
                    let u = new s(t.subarray(6 + r));
                    return u.cmp(n.n) >= 0 && (u = new s(0)),
                    e.set(c.toArrayLike(Uint8Array, "be", 32), 0),
                    e.set(u.toArrayLike(Uint8Array, "be", 32), 32),
                    0
                },
                ecdsaSign(e, t, r, o, a) {
                    if (a) {
                        const e = a;
                        a = i=>{
                            const n = e(t, r, null, o, i);
                            if (!(n instanceof Uint8Array && 32 === n.length))
                                throw new Error("This is the way");
                            return new s(n)
                        }
                    }
                    const c = new s(r);
                    if (c.cmp(n.n) >= 0 || c.isZero())
                        return 1;
                    let u;
                    try {
                        u = i.sign(t, r, {
                            canonical: !0,
                            k: a,
                            pers: o
                        })
                    } catch (e) {
                        return 1
                    }
                    return e.signature.set(u.r.toArrayLike(Uint8Array, "be", 32), 0),
                    e.signature.set(u.s.toArrayLike(Uint8Array, "be", 32), 32),
                    e.recid = u.recoveryParam,
                    0
                },
                ecdsaVerify(e, t, r) {
                    const a = {
                        r: e.subarray(0, 32),
                        s: e.subarray(32, 64)
                    }
                      , c = new s(a.r)
                      , u = new s(a.s);
                    if (c.cmp(n.n) >= 0 || u.cmp(n.n) >= 0)
                        return 1;
                    if (1 === u.cmp(i.nh) || c.isZero() || u.isZero())
                        return 3;
                    const f = o(r);
                    if (null === f)
                        return 2;
                    const h = f.getPublic();
                    return i.verify(t, a, h) ? 0 : 3
                },
                ecdsaRecover(e, t, r, o) {
                    const c = {
                        r: t.slice(0, 32),
                        s: t.slice(32, 64)
                    }
                      , u = new s(c.r)
                      , f = new s(c.s);
                    if (u.cmp(n.n) >= 0 || f.cmp(n.n) >= 0)
                        return 1;
                    if (u.isZero() || f.isZero())
                        return 2;
                    let h;
                    try {
                        h = i.recoverPubKey(o, c, r)
                    } catch (e) {
                        return 2
                    }
                    return a(e, h),
                    0
                },
                ecdh(e, t, r, a, c, u, f) {
                    const h = o(t);
                    if (null === h)
                        return 1;
                    const l = new s(r);
                    if (l.cmp(n.n) >= 0 || l.isZero())
                        return 2;
                    const d = h.getPublic().mul(l);
                    if (void 0 === c) {
                        const t = d.encode(null, !0)
                          , r = i.hash().update(t).digest();
                        for (let t = 0; t < 32; ++t)
                            e[t] = r[t]
                    } else {
                        u || (u = new Uint8Array(32));
                        const t = d.getX().toArray("be", 32);
                        for (let e = 0; e < 32; ++e)
                            u[e] = t[e];
                        f || (f = new Uint8Array(32));
                        const r = d.getY().toArray("be", 32);
                        for (let e = 0; e < 32; ++e)
                            f[e] = r[e];
                        const i = c(u, f, a);
                        if (!(i instanceof Uint8Array && i.length === e.length))
                            return 2;
                        e.set(i)
                    }
                    return 0
                }
            }
        }
        , {
            elliptic: 177
        }],
        404: [function(e, t, r) {
            const i = "Impossible case. Please create issue."
              , n = "The tweak was out of range or the resulted private key is invalid"
              , s = "The tweak was out of range or equal to zero"
              , o = "Unknow error on context randomization"
              , a = "Private Key is invalid"
              , c = "Public Key could not be parsed"
              , u = "Public Key serialization error"
              , f = "The sum of the public keys is not valid"
              , h = "Signature could not be parsed"
              , l = "The nonce generation function failed, or the private key was invalid"
              , d = "Public key could not be recover"
              , p = "Scalar was invalid (zero or overflow)";
            function b(e, t) {
                if (!e)
                    throw new Error(t)
            }
            function g(e, t, r) {
                if (b(t instanceof Uint8Array, `Expected ${e} to be an Uint8Array`),
                void 0 !== r)
                    if (Array.isArray(r)) {
                        const i = `Expected ${e} to be an Uint8Array with length [${r.join(", ")}]`;
                        b(r.includes(t.length), i)
                    } else {
                        const i = `Expected ${e} to be an Uint8Array with length ${r}`;
                        b(t.length === r, i)
                    }
            }
            function m(e) {
                b("Boolean" === v(e), "Expected compressed to be a Boolean")
            }
            function y(e=(e=>new Uint8Array(e)), t) {
                return "function" == typeof e && (e = e(t)),
                g("output", e, t),
                e
            }
            function v(e) {
                return Object.prototype.toString.call(e).slice(8, -1)
            }
            t.exports = e=>({
                contextRandomize(t) {
                    switch (b(null === t || t instanceof Uint8Array, "Expected seed to be an Uint8Array or null"),
                    null !== t && g("seed", t, 32),
                    e.contextRandomize(t)) {
                    case 1:
                        throw new Error(o)
                    }
                },
                privateKeyVerify: t=>(g("private key", t, 32),
                0 === e.privateKeyVerify(t)),
                privateKeyNegate(t) {
                    switch (g("private key", t, 32),
                    e.privateKeyNegate(t)) {
                    case 0:
                        return t;
                    case 1:
                        throw new Error(i)
                    }
                },
                privateKeyTweakAdd(t, r) {
                    switch (g("private key", t, 32),
                    g("tweak", r, 32),
                    e.privateKeyTweakAdd(t, r)) {
                    case 0:
                        return t;
                    case 1:
                        throw new Error(n)
                    }
                },
                privateKeyTweakMul(t, r) {
                    switch (g("private key", t, 32),
                    g("tweak", r, 32),
                    e.privateKeyTweakMul(t, r)) {
                    case 0:
                        return t;
                    case 1:
                        throw new Error(s)
                    }
                },
                publicKeyVerify: t=>(g("public key", t, [33, 65]),
                0 === e.publicKeyVerify(t)),
                publicKeyCreate(t, r=!0, i) {
                    switch (g("private key", t, 32),
                    m(r),
                    i = y(i, r ? 33 : 65),
                    e.publicKeyCreate(i, t)) {
                    case 0:
                        return i;
                    case 1:
                        throw new Error(a);
                    case 2:
                        throw new Error(u)
                    }
                },
                publicKeyConvert(t, r=!0, i) {
                    switch (g("public key", t, [33, 65]),
                    m(r),
                    i = y(i, r ? 33 : 65),
                    e.publicKeyConvert(i, t)) {
                    case 0:
                        return i;
                    case 1:
                        throw new Error(c);
                    case 2:
                        throw new Error(u)
                    }
                },
                publicKeyNegate(t, r=!0, n) {
                    switch (g("public key", t, [33, 65]),
                    m(r),
                    n = y(n, r ? 33 : 65),
                    e.publicKeyNegate(n, t)) {
                    case 0:
                        return n;
                    case 1:
                        throw new Error(c);
                    case 2:
                        throw new Error(i);
                    case 3:
                        throw new Error(u)
                    }
                },
                publicKeyCombine(t, r=!0, i) {
                    b(Array.isArray(t), "Expected public keys to be an Array"),
                    b(t.length > 0, "Expected public keys array will have more than zero items");
                    for (const e of t)
                        g("public key", e, [33, 65]);
                    switch (m(r),
                    i = y(i, r ? 33 : 65),
                    e.publicKeyCombine(i, t)) {
                    case 0:
                        return i;
                    case 1:
                        throw new Error(c);
                    case 2:
                        throw new Error(f);
                    case 3:
                        throw new Error(u)
                    }
                },
                publicKeyTweakAdd(t, r, i=!0, s) {
                    switch (g("public key", t, [33, 65]),
                    g("tweak", r, 32),
                    m(i),
                    s = y(s, i ? 33 : 65),
                    e.publicKeyTweakAdd(s, t, r)) {
                    case 0:
                        return s;
                    case 1:
                        throw new Error(c);
                    case 2:
                        throw new Error(n)
                    }
                },
                publicKeyTweakMul(t, r, i=!0, n) {
                    switch (g("public key", t, [33, 65]),
                    g("tweak", r, 32),
                    m(i),
                    n = y(n, i ? 33 : 65),
                    e.publicKeyTweakMul(n, t, r)) {
                    case 0:
                        return n;
                    case 1:
                        throw new Error(c);
                    case 2:
                        throw new Error(s)
                    }
                },
                signatureNormalize(t) {
                    switch (g("signature", t, 64),
                    e.signatureNormalize(t)) {
                    case 0:
                        return t;
                    case 1:
                        throw new Error(h)
                    }
                },
                signatureExport(t, r) {
                    g("signature", t, 64);
                    const n = {
                        output: r = y(r, 72),
                        outputlen: 72
                    };
                    switch (e.signatureExport(n, t)) {
                    case 0:
                        return r.slice(0, n.outputlen);
                    case 1:
                        throw new Error(h);
                    case 2:
                        throw new Error(i)
                    }
                },
                signatureImport(t, r) {
                    switch (g("signature", t),
                    r = y(r, 64),
                    e.signatureImport(r, t)) {
                    case 0:
                        return r;
                    case 1:
                        throw new Error(h);
                    case 2:
                        throw new Error(i)
                    }
                },
                ecdsaSign(t, r, n={}, s) {
                    g("message", t, 32),
                    g("private key", r, 32),
                    b("Object" === v(n), "Expected options to be an Object"),
                    void 0 !== n.data && g("options.data", n.data),
                    void 0 !== n.noncefn && b("Function" === v(n.noncefn), "Expected options.noncefn to be a Function");
                    const o = {
                        signature: s = y(s, 64),
                        recid: null
                    };
                    switch (e.ecdsaSign(o, t, r, n.data, n.noncefn)) {
                    case 0:
                        return o;
                    case 1:
                        throw new Error(l);
                    case 2:
                        throw new Error(i)
                    }
                },
                ecdsaVerify(t, r, i) {
                    switch (g("signature", t, 64),
                    g("message", r, 32),
                    g("public key", i, [33, 65]),
                    e.ecdsaVerify(t, r, i)) {
                    case 0:
                        return !0;
                    case 3:
                        return !1;
                    case 1:
                        throw new Error(h);
                    case 2:
                        throw new Error(c)
                    }
                },
                ecdsaRecover(t, r, n, s=!0, o) {
                    switch (g("signature", t, 64),
                    b("Number" === v(r) && r >= 0 && r <= 3, "Expected recovery id to be a Number within interval [0, 3]"),
                    g("message", n, 32),
                    m(s),
                    o = y(o, s ? 33 : 65),
                    e.ecdsaRecover(o, t, r, n)) {
                    case 0:
                        return o;
                    case 1:
                        throw new Error(h);
                    case 2:
                        throw new Error(d);
                    case 3:
                        throw new Error(i)
                    }
                },
                ecdh(t, r, i={}, n) {
                    switch (g("public key", t, [33, 65]),
                    g("private key", r, 32),
                    b("Object" === v(i), "Expected options to be an Object"),
                    void 0 !== i.data && g("options.data", i.data),
                    void 0 !== i.hashfn ? (b("Function" === v(i.hashfn), "Expected options.hashfn to be a Function"),
                    void 0 !== i.xbuf && g("options.xbuf", i.xbuf, 32),
                    void 0 !== i.ybuf && g("options.ybuf", i.ybuf, 32),
                    g("output", n)) : n = y(n, 32),
                    e.ecdh(n, t, r, i.data, i.hashfn, i.xbuf, i.ybuf)) {
                    case 0:
                        return n;
                    case 1:
                        throw new Error(c);
                    case 2:
                        throw new Error(p)
                    }
                }
            })
        }
        , {}],
        405: [function(e, t, r) {
            var i = e("varint");
            r.encode = function e(t, r, n) {
                t = t >= 0 ? 2 * t : -2 * t - 1;
                var s = i.encode(t, r, n);
                return e.bytes = i.encode.bytes,
                s
            }
            ,
            r.decode = function e(t, r) {
                var n = i.decode(t, r);
                return e.bytes = i.decode.bytes,
                1 & n ? (n + 1) / -2 : n / 2
            }
            ,
            r.encodingLength = function(e) {
                return i.encodingLength(e >= 0 ? 2 * e : -2 * e - 1)
            }
        }
        , {
            varint: 417
        }],
        406: [function(e, t, r) {
            (function(e) {
                !function(e, i) {
                    "object" == typeof r && void 0 !== t ? i(r) : "function" == typeof define && define.amd ? define(["exports"], i) : i((e = "undefined" != typeof globalThis ? globalThis : e || self).streamingIterables = {})
                }(this, (function(t) {
                    "use strict";
                    function r(e) {
                        if ("function" == typeof e.next)
                            return e;
                        if ("function" == typeof e[Symbol.iterator])
                            return e[Symbol.iterator]();
                        if ("function" == typeof e[Symbol.asyncIterator])
                            return e[Symbol.asyncIterator]();
                        throw new TypeError('"values" does not to conform to any of the iterator or iterable protocols')
                    }
                    function i() {
                        let e, t;
                        return {
                            promise: new Promise((r,i)=>{
                                t = r,
                                e = i
                            }
                            ),
                            reject: e,
                            resolve: t
                        }
                    }
                    function n(e, t) {
                        const n = r(t)
                          , s = []
                          , o = [];
                        let a = !1
                          , c = !1;
                        async function u() {
                            if (!c && !(a || s.length >= e)) {
                                a = !0;
                                try {
                                    const {done: e, value: t} = await n.next();
                                    e ? c = !0 : s.push({
                                        value: t
                                    })
                                } catch (e) {
                                    c = !0,
                                    s.push({
                                        error: e
                                    })
                                }
                                !function() {
                                    for (; o.length > 0 && s.length > 0; ) {
                                        const e = o.shift()
                                          , {error: t, value: r} = s.shift();
                                        t ? e.reject(t) : e.resolve({
                                            done: !1,
                                            value: r
                                        })
                                    }
                                    for (; o.length > 0 && c; ) {
                                        const {resolve: e} = o.shift();
                                        e({
                                            done: !0,
                                            value: void 0
                                        })
                                    }
                                }(),
                                a = !1,
                                u()
                            }
                        }
                        const f = {
                            next: async function() {
                                if (s.length > 0) {
                                    const {error: e, value: t} = s.shift();
                                    if (e)
                                        throw e;
                                    return u(),
                                    {
                                        done: !1,
                                        value: t
                                    }
                                }
                                if (c)
                                    return {
                                        done: !0,
                                        value: void 0
                                    };
                                const e = i();
                                return o.push(e),
                                u(),
                                e.promise
                            },
                            [Symbol.asyncIterator]: ()=>f
                        };
                        return f
                    }
                    function s(e, t) {
                        return void 0 === t ? t=>s(e, t) : 0 === e ? t : t[Symbol.asyncIterator] ? n(e, t) : function*(e, t) {
                            const r = [];
                            let i;
                            try {
                                for (const i of t)
                                    r.push(i),
                                    r.length <= e || (yield r.shift())
                            } catch (e) {
                                i = e
                            }
                            for (const e of r)
                                yield e;
                            if (i)
                                throw i
                        }(e, t)
                    }
                    async function *o(e, t) {
                        for await(const r of t)
                            await e(r) && (yield r)
                    }
                    function a(e, t) {
                        return void 0 === t ? t=>o(e, t) : o(e, t)
                    }
                    async function *c(e) {
                        for await(const t of e)
                            t && "string" != typeof t && (t[Symbol.iterator] || t[Symbol.asyncIterator]) ? yield*c(t) : yield t
                    }
                    async function *u(e, t) {
                        for await(const r of t)
                            yield await e(r)
                    }
                    function f(e, t) {
                        return void 0 === t ? t=>u(e, t) : u(e, t)
                    }
                    function h(e, t, n) {
                        const s = r(n)
                          , o = []
                          , a = [];
                        let c = !1
                          , u = !1
                          , f = 0
                          , h = null;
                        function l() {
                            for (; a.length > 0 && o.length > 0; ) {
                                const {resolve: e} = a.shift();
                                e({
                                    done: !1,
                                    value: o.shift()
                                })
                            }
                            for (; a.length > 0 && 0 === f && c; ) {
                                const {resolve: e, reject: t} = a.shift();
                                h ? (t(h),
                                h = null) : e({
                                    done: !0,
                                    value: void 0
                                })
                            }
                        }
                        async function d() {
                            if (c)
                                l();
                            else if (!(u || f + o.length >= e)) {
                                u = !0,
                                f++;
                                try {
                                    const {done: e, value: r} = await s.next();
                                    e ? (c = !0,
                                    f--,
                                    l()) : async function(e) {
                                        try {
                                            const r = await t(e);
                                            if (r && r[Symbol.asyncIterator])
                                                for await(const e of r)
                                                    o.push(e);
                                            else
                                                o.push(r)
                                        } catch (e) {
                                            c = !0,
                                            h = e
                                        }
                                        f--,
                                        l(),
                                        d()
                                    }(r)
                                } catch (e) {
                                    c = !0,
                                    f--,
                                    h = e,
                                    l()
                                }
                                u = !1,
                                d()
                            }
                        }
                        const p = {
                            next: async function() {
                                if (0 === o.length) {
                                    const e = i();
                                    return a.push(e),
                                    d(),
                                    e.promise
                                }
                                const e = o.shift();
                                return d(),
                                {
                                    done: !1,
                                    value: e
                                }
                            },
                            [Symbol.asyncIterator]: ()=>p
                        };
                        return p
                    }
                    async function l(e) {
                        return new Promise(t=>{
                            e.once("readable", ()=>{
                                t()
                            }
                            )
                        }
                        )
                    }
                    function d(e, ...t) {
                        let r = e();
                        for (const e of t)
                            r = e(r);
                        return r
                    }
                    function p(e, t, i) {
                        return void 0 === t ? (t,r)=>p(e, t, r) : void 0 === i ? r=>p(e, t, r) : 1 === e ? f(t, i) : async function*(e, t, i) {
                            let n = null;
                            const o = r(d(()=>i, s(1), (async function*(e) {
                                for await(const t of e) {
                                    if (n)
                                        return;
                                    yield t
                                }
                            }
                            ), f(e=>({
                                value: t(e)
                            })), s(e - 1)));
                            for (; ; ) {
                                const {value: e, done: t} = await o.next();
                                if (t)
                                    break;
                                try {
                                    const t = await e.value;
                                    n || (yield t)
                                } catch (e) {
                                    n = e
                                }
                            }
                            if (n)
                                throw n
                        }(e, t, i)
                    }
                    async function b(e, t, r) {
                        let i = t;
                        for await(const t of r)
                            i = await e(i, t);
                        return i
                    }
                    async function *g(e, t) {
                        for await(const r of t)
                            await e(r),
                            yield r
                    }
                    function m(e, t) {
                        let r = e[0] + t[0]
                          , i = e[1] + t[1];
                        if (i >= 1e9) {
                            const e = i % 1e9;
                            r += (i - e) / 1e9,
                            i = e
                        }
                        return [r, i]
                    }
                    function y(e, t, n) {
                        const s = r(n)
                          , o = []
                          , a = [];
                        let c = !1
                          , u = !1
                          , f = 0
                          , h = null;
                        function l() {
                            for (; a.length > 0 && o.length > 0; ) {
                                const {resolve: e} = a.shift();
                                e({
                                    done: !1,
                                    value: o.shift()
                                })
                            }
                            for (; a.length > 0 && 0 === f && c; ) {
                                const {resolve: e, reject: t} = a.shift();
                                h ? (t(h),
                                h = null) : e({
                                    done: !0,
                                    value: void 0
                                })
                            }
                        }
                        async function d() {
                            if (c)
                                l();
                            else if (!(u || f + o.length >= e)) {
                                u = !0,
                                f++;
                                try {
                                    const {done: e, value: r} = await s.next();
                                    e ? (c = !0,
                                    f--,
                                    l()) : async function(e) {
                                        try {
                                            const r = await t(e);
                                            o.push(r)
                                        } catch (e) {
                                            c = !0,
                                            h = e
                                        }
                                        f--,
                                        l(),
                                        d()
                                    }(r)
                                } catch (e) {
                                    c = !0,
                                    f--,
                                    h = e,
                                    l()
                                }
                                u = !1,
                                d()
                            }
                        }
                        const p = {
                            next: async function() {
                                if (0 === o.length) {
                                    const e = i();
                                    return a.push(e),
                                    d(),
                                    e.promise
                                }
                                const e = o.shift();
                                return d(),
                                {
                                    done: !1,
                                    value: e
                                }
                            },
                            [Symbol.asyncIterator]: ()=>p
                        };
                        return p
                    }
                    async function v(e, t) {
                        let r = null
                          , i = null
                          , n = null;
                        const s = e=>{
                            r = e,
                            i && i(e)
                        }
                          , o = ()=>{
                            n && n()
                        }
                        ;
                        e.once("error", s);
                        const a = ()=>new Promise((t,s)=>{
                            if (r)
                                return s(r);
                            e.once("drain", o),
                            n = t,
                            i = s
                        }
                        );
                        for await(const i of t)
                            if (!1 === e.write(i) && await a(),
                            r)
                                break;
                        if (e.removeListener("error", s),
                        e.removeListener("drain", o),
                        r)
                            throw r
                    }
                    t.batch = function e(t, r) {
                        return void 0 === r ? r=>e(t, r) : r[Symbol.asyncIterator] ? async function*(e, t) {
                            let r = [];
                            for await(const i of t)
                                r.push(i),
                                r.length === e && (yield r,
                                r = []);
                            r.length > 0 && (yield r)
                        }(t, r) : function*(e, t) {
                            let r = [];
                            for (const i of t)
                                r.push(i),
                                r.length === e && (yield r,
                                r = []);
                            r.length > 0 && (yield r)
                        }(t, r)
                    }
                    ,
                    t.buffer = s,
                    t.collect = function(e) {
                        return e[Symbol.asyncIterator] ? async function(e) {
                            const t = [];
                            for await(const r of e)
                                t.push(r);
                            return t
                        }(e) : Array.from(e)
                    }
                    ,
                    t.concat = function(...e) {
                        return e.find(e=>void 0 !== e[Symbol.asyncIterator]) ? async function*(e) {
                            for await(const t of e)
                                yield*t
                        }(e) : function*(e) {
                            for (const t of e)
                                yield*t
                        }(e)
                    }
                    ,
                    t.consume = function(e) {
                        if (e[Symbol.asyncIterator])
                            return async function(e) {
                                for await(const t of e)
                                    ;
                            }(e);
                        for (const t of e)
                            ;
                    }
                    ,
                    t.filter = a,
                    t.flatMap = function e(t, r) {
                        return void 0 === r ? r=>e(t, r) : a(e=>null != e, c(f(t, r)))
                    }
                    ,
                    t.flatTransform = function e(t, r, i) {
                        return void 0 === r ? (r,i)=>i ? e(t, r, i) : e(t, r) : void 0 === i ? i=>e(t, r, i) : a(e=>null != e, c(h(t, r, i)))
                    }
                    ,
                    t.flatten = c,
                    t.fromStream = function(e) {
                        return "function" == typeof e[Symbol.asyncIterator] ? e : async function*(e) {
                            for (; ; ) {
                                const t = e.read();
                                if (null === t) {
                                    if (e._readableState.ended)
                                        break;
                                    await l(e)
                                } else
                                    yield t
                            }
                        }(e)
                    }
                    ,
                    t.getIterator = r,
                    t.map = f,
                    t.merge = async function*(...e) {
                        const t = new Set(e.map(r));
                        for (; t.size > 0; )
                            for (const e of t) {
                                const r = await e.next();
                                r.done ? t.delete(e) : yield r.value
                            }
                    }
                    ,
                    t.parallelFlatMap = function e(t, r, i) {
                        return void 0 === r ? (r,i)=>i ? e(t, r, i) : e(t, r) : void 0 === i ? i=>e(t, r, i) : a(e=>null != e, c(p(t, r, i)))
                    }
                    ,
                    t.parallelMap = p,
                    t.parallelMerge = async function*(...e) {
                        const t = e.map(r)
                          , i = new Set
                          , n = new Map;
                        let s = null
                          , o = null
                          , a = null;
                        const c = e=>{
                            s = e,
                            o && o(e)
                        }
                          , u = e=>{
                            a && a(e)
                        }
                          , f = ()=>new Promise((e,t)=>{
                            if (s && t(s),
                            n.size > 0)
                                return e();
                            a = e,
                            o = t
                        }
                        )
                          , h = e=>{
                            const t = Promise.resolve(e.next()).then(async({done: r, value: s})=>{
                                r || n.set(e, s),
                                i.delete(t)
                            }
                            );
                            i.add(t),
                            t.then(u, c)
                        }
                        ;
                        for (const e of t)
                            h(e);
                        for (; ; ) {
                            if (0 === i.size && 0 === n.size)
                                return;
                            await f();
                            for (const [e,t] of n)
                                n.delete(e),
                                yield t,
                                h(e)
                        }
                    }
                    ,
                    t.pipeline = d,
                    t.reduce = function e(t, r, i) {
                        return void 0 === r ? (r,i)=>i ? b(t, r, i) : e(t, r) : void 0 === i ? i=>e(t, r, i) : b(t, r, i)
                    }
                    ,
                    t.take = function e(t, r) {
                        return void 0 === r ? r=>e(t, r) : r[Symbol.asyncIterator] ? async function*(e, t) {
                            let r = 0;
                            for await(const i of t)
                                if (yield await i,
                                ++r >= e)
                                    break
                        }(t, r) : function*(e, t) {
                            let r = 0;
                            for (const i of t)
                                if (yield i,
                                ++r >= e)
                                    break
                        }(t, r)
                    }
                    ,
                    t.tap = function(e, t) {
                        return void 0 === t ? t=>g(e, t) : g(e, t)
                    }
                    ,
                    t.time = function t(r={}, i) {
                        return void 0 === i ? e=>t(r, e) : void 0 !== i[Symbol.asyncIterator] ? async function*(t, r) {
                            const i = r[Symbol.asyncIterator]();
                            let n = [0, 0];
                            for (; ; ) {
                                const r = e.hrtime()
                                  , {value: s, done: o} = await i.next()
                                  , a = e.hrtime(r);
                                if (n = m(n, a),
                                t.progress && t.progress(a, n),
                                o)
                                    return t.total && t.total(n),
                                    s;
                                yield s
                            }
                        }(r, i) : function*(t, r) {
                            const i = r[Symbol.iterator]();
                            let n = [0, 0];
                            for (; ; ) {
                                const r = e.hrtime()
                                  , {value: s, done: o} = i.next()
                                  , a = e.hrtime(r);
                                if (n = m(n, a),
                                t.progress && t.progress(a, n),
                                o)
                                    return t.total && t.total(n),
                                    s;
                                yield s
                            }
                        }(r, i)
                    }
                    ,
                    t.transform = function e(t, r, i) {
                        return void 0 === r ? (r,i)=>i ? e(t, r, i) : e(t, r) : void 0 === i ? i=>e(t, r, i) : y(t, r, i)
                    }
                    ,
                    t.writeToStream = function(e, t) {
                        return void 0 === t ? t=>v(e, t) : v(e, t)
                    }
                    ,
                    Object.defineProperty(t, "__esModule", {
                        value: !0
                    })
                }
                ))
            }
            ).call(this, e("_process"))
        }
        , {
            _process: 118
        }],
        407: [function(e, t, r) {
            "use strict";
            const {AbortController: i} = "undefined" != typeof self ? self : "undefined" != typeof window ? window : e("abort-controller")
              , n = e("retimer");
            class s extends i {
                constructor(e) {
                    super(),
                    this._ms = e,
                    this._timer = n(()=>this.abort(), e),
                    Object.setPrototypeOf(this, s.prototype)
                }
                abort() {
                    return this._timer.clear(),
                    super.abort()
                }
                clear() {
                    this._timer.clear()
                }
                reset() {
                    this._timer.clear(),
                    this._timer = n(()=>this.abort(), this._ms)
                }
            }
            t.exports = s,
            t.exports.TimeoutController = s
        }
        , {
            "abort-controller": 158,
            retimer: 399
        }],
        408: [function(e, t, r) {
            "use strict";
            var i = e("./lib/truncate")
              , n = e("utf8-byte-length/browser");
            t.exports = i.bind(null, n)
        }
        , {
            "./lib/truncate": 409,
            "utf8-byte-length/browser": 414
        }],
        409: [function(e, t, r) {
            "use strict";
            function i(e) {
                return e >= 55296 && e <= 56319
            }
            function n(e) {
                return e >= 56320 && e <= 57343
            }
            t.exports = function(e, t, r) {
                if ("string" != typeof t)
                    throw new Error("Input must be string");
                for (var s, o, a = t.length, c = 0, u = 0; u < a; u += 1) {
                    if (s = t.charCodeAt(u),
                    o = t[u],
                    i(s) && n(t.charCodeAt(u + 1)) && (o += t[u += 1]),
                    (c += e(o)) === r)
                        return t.slice(0, u + 1);
                    if (c > r)
                        return t.slice(0, u - o.length + 1)
                }
                return t
            }
        }
        , {}],
        410: [function(e, t, r) {
            arguments[4][300][0].apply(r, arguments)
        }
        , {
            dup: 300
        }],
        411: [function(e, t, r) {
            "use strict";
            t.exports = function(e, t) {
                if (e === t)
                    return !0;
                if (e.byteLength !== t.byteLength)
                    return !1;
                for (let r = 0; r < e.byteLength; r++)
                    if (e[r] !== t[r])
                        return !1;
                return !0
            }
        }
        , {}],
        412: [function(e, t, r) {
            "use strict";
            const {names: i} = e("multibase/src/constants")
              , {TextEncoder: n} = e("web-encoding")
              , s = new n;
            t.exports = function(e, t="utf8") {
                if ("utf8" === t || "utf-8" === t)
                    return s.encode(e);
                if ("ascii" === t)
                    return function(e) {
                        const t = new Uint8Array(e.length);
                        for (let r = 0; r < e.length; r++)
                            t[r] = e.charCodeAt(r);
                        return t
                    }(e);
                const r = i[t];
                if (!r)
                    throw new Error("Unknown base");
                return r.decode(e)
            }
        }
        , {
            "multibase/src/constants": 296,
            "web-encoding": 419
        }],
        413: [function(e, t, r) {
            "use strict";
            const {names: i} = e("multibase/src/constants")
              , {TextDecoder: n} = e("web-encoding")
              , s = new n("utf8");
            t.exports = function(e, t="utf8") {
                if ("utf8" === t || "utf-8" === t)
                    return s.decode(e);
                if ("ascii" === t)
                    return function(e) {
                        let t = "";
                        for (let r = 0; r < e.length; r++)
                            t += String.fromCharCode(e[r]);
                        return t
                    }(e);
                const r = i[t];
                if (!r)
                    throw new Error("Unknown base");
                return r.encode(e)
            }
        }
        , {
            "multibase/src/constants": 296,
            "web-encoding": 419
        }],
        414: [function(e, t, r) {
            "use strict";
            function i(e) {
                return e >= 55296 && e <= 56319
            }
            function n(e) {
                return e >= 56320 && e <= 57343
            }
            t.exports = function(e) {
                if ("string" != typeof e)
                    throw new Error("Input must be string");
                for (var t = e.length, r = 0, s = null, o = null, a = 0; a < t; a++)
                    n(s = e.charCodeAt(a)) ? null != o && i(o) ? r += 1 : r += 3 : s <= 127 ? r += 1 : s >= 128 && s <= 2047 ? r += 2 : s >= 2048 && s <= 65535 && (r += 3),
                    o = s;
                return r
            }
        }
        , {}],
        415: [function(e, t, r) {
            t.exports = function e(t, r) {
                var s, o = 0, a = (r = r || 0,
                0), c = r, u = t.length;
                do {
                    if (c >= u)
                        throw e.bytes = 0,
                        new RangeError("Could not decode varint");
                    s = t[c++],
                    o += a < 28 ? (s & n) << a : (s & n) * Math.pow(2, a),
                    a += 7
                } while (s >= i);e.bytes = c - r;
                return o
            }
            ;
            var i = 128
              , n = 127
        }
        , {}],
        416: [function(e, t, r) {
            t.exports = function e(t, r, o) {
                r = r || [];
                o = o || 0;
                var a = o;
                for (; t >= s; )
                    r[o++] = 255 & t | i,
                    t /= 128;
                for (; t & n; )
                    r[o++] = 255 & t | i,
                    t >>>= 7;
                r[o] = 0 | t;
                e.bytes = o - a + 1;
                return r
            }
            ;
            var i = 128
              , n = -128
              , s = Math.pow(2, 31)
        }
        , {}],
        417: [function(e, t, r) {
            arguments[4][312][0].apply(r, arguments)
        }
        , {
            "./decode.js": 415,
            "./encode.js": 416,
            "./length.js": 418,
            dup: 312
        }],
        418: [function(e, t, r) {
            arguments[4][313][0].apply(r, arguments)
        }
        , {
            dup: 313
        }],
        419: [function(e, t, r) {
            "use strict";
            r.TextEncoder = TextEncoder,
            r.TextDecoder = TextDecoder
        }
        , {}],
        420: [function(e, t, r) {
            t.exports = {
                name: "libp2p",
                version: "0.29.3",
                description: "JavaScript implementation of libp2p, a modular peer to peer network stack",
                leadMaintainer: "Jacob Heun <jacobheun@gmail.com>",
                main: "src/index.js",
                files: ["dist", "src"],
                scripts: {},
                repository: {
                    type: "git",
                    url: "https://github.com/libp2p/js-libp2p.git"
                },
                keywords: ["libp2p", "network", "p2p", "peer", "peer-to-peer", "IPFS"],
                bugs: {
                    url: "https://github.com/libp2p/js-libp2p/issues"
                },
                homepage: "https://libp2p.io",
                license: "MIT",
                engines: {
                    node: ">=12.0.0",
                    npm: ">=6.0.0"
                },
                dependencies: {
                    "abort-controller": "^3.0.0",
                    "aggregate-error": "^3.0.1",
                    "any-signal": "^1.1.0",
                    "bignumber.js": "^9.0.0",
                    "class-is": "^1.1.0",
                    debug: "^4.1.1",
                    "err-code": "^2.0.0",
                    events: "^3.1.0",
                    hashlru: "^2.3.0",
                    "interface-datastore": "^2.0.0",
                    "ipfs-utils": "^2.2.0",
                    "it-all": "^1.0.1",
                    "it-buffer": "^0.1.2",
                    "it-handshake": "^1.0.1",
                    "it-length-prefixed": "^3.0.1",
                    "it-pipe": "^1.1.0",
                    "it-protocol-buffers": "^0.2.0",
                    "libp2p-crypto": "^0.18.0",
                    "libp2p-interfaces": "^0.5.1",
                    "libp2p-utils": "^0.2.0",
                    mafmt: "^8.0.0",
                    "merge-options": "^2.0.0",
                    "moving-average": "^1.0.0",
                    multiaddr: "^8.1.0",
                    multicodec: "^2.0.0",
                    "multistream-select": "^1.0.0",
                    "mutable-proxy": "^1.0.0",
                    "node-forge": "^0.9.1",
                    "p-any": "^3.0.0",
                    "p-fifo": "^1.0.0",
                    "p-settle": "^4.0.1",
                    "peer-id": "^0.14.2",
                    protons: "^2.0.0",
                    retimer: "^2.0.0",
                    "sanitize-filename": "^1.6.3",
                    "streaming-iterables": "^5.0.2",
                    "timeout-abort-controller": "^1.1.1",
                    varint: "^5.0.0",
                    xsalsa20: "^1.0.2"
                },
                devDependencies: {
                    "@nodeutils/defaults-deep": "^1.1.0",
                    "abortable-iterator": "^3.0.0",
                    aegir: "^27.0.0",
                    chai: "^4.2.0",
                    "chai-as-promised": "^7.1.1",
                    "chai-bytes": "^0.1.2",
                    "chai-string": "^1.5.0",
                    cids: "^1.0.0",
                    delay: "^4.3.0",
                    "dirty-chai": "^2.0.1",
                    "interop-libp2p": "^0.3.0",
                    "ipfs-http-client": "^47.0.1",
                    "it-concat": "^1.0.0",
                    "it-pair": "^1.0.0",
                    "it-pushable": "^1.4.0",
                    libp2p: ".",
                    "libp2p-bootstrap": "^0.12.0",
                    "libp2p-delegated-content-routing": "^0.7.0",
                    "libp2p-delegated-peer-routing": "^0.7.0",
                    "libp2p-floodsub": "^0.23.0",
                    "libp2p-gossipsub": "^0.6.0",
                    "libp2p-kad-dht": "^0.20.0",
                    "libp2p-mdns": "^0.15.0",
                    "libp2p-mplex": "^0.10.1",
                    "libp2p-noise": "^2.0.0",
                    "libp2p-secio": "^0.13.1",
                    "libp2p-tcp": "^0.15.1",
                    "libp2p-webrtc-star": "^0.20.0",
                    "libp2p-websockets": "^0.14.0",
                    multihashes: "^3.0.1",
                    nock: "^13.0.3",
                    "p-defer": "^3.0.0",
                    "p-times": "^3.0.0",
                    "p-wait-for": "^3.1.0",
                    "promisify-es6": "^1.0.3",
                    rimraf: "^3.0.2",
                    sinon: "^9.0.2",
                    uint8arrays: "^1.1.0"
                },
                contributors: ["David Dias <daviddias.p@gmail.com>", "Jacob Heun <jacobheun@gmail.com>", "Vasco Santos <vasco.santos@moxy.studio>", "Alan Shaw <alan@tableflip.io>", "Alex Potsides <alex@achingbrain.net>", "Cayman <caymannava@gmail.com>", "Pedro Teixeira <i@pgte.me>", "Friedel Ziegelmayer <dignifiedquire@gmail.com>", "Maciej Krüger <mkg20001@gmail.com>", "Hugo Dias <mail@hugodias.me>", "dirkmc <dirkmdev@gmail.com>", "Volker Mische <volker.mische@gmail.com>", "Richard Littauer <richard.littauer@gmail.com>", "Elven <mon.samuel@qq.com>", "Andrew Nesbitt <andrewnez@gmail.com>", "Giovanni T. Parra <fiatjaf@gmail.com>", "Ryan Bell <ryan@piing.net>", "Thomas Eizinger <thomas@eizinger.io>", "ᴠɪᴄᴛᴏʀ ʙᴊᴇʟᴋʜᴏʟᴍ <victorbjelkholm@gmail.com>", "Didrik Nordström <didrik@betamos.se>", "Henrique Dias <hacdias@gmail.com>", "Fei Liu <liu.feiwood@gmail.com>", "Irakli Gozalishvili <rfobic@gmail.com>", "Ethan Lam <elmemphis2000@gmail.com>", "Joel Gustafson <joelg@mit.edu>", "Julien Bouquillon <contact@revolunet.com>", "Kevin Kwok <antimatter15@gmail.com>", "Nuno Nogueira <nunofmn@gmail.com>", "Dmitriy Ryajov <dryajov@gmail.com>", "RasmusErik Voel Jensen <github@solsort.com>", "Diogo Silva <fsdiogo@gmail.com>", "robertkiel <robert.kiel@validitylabs.org>", "Soeren <nikorpoulsen@gmail.com>", "Sönke Hahn <soenkehahn@gmail.com>", "Tiago Alves <alvesjtiago@gmail.com>", "Daijiro Wachi <daijiro.wachi@gmail.com>", "Yusef Napora <yusef@napora.org>", "Zane Starr <zcstarr@gmail.com>", "Cindy Wu <ciindy.wu@gmail.com>", "Chris Bratlien <chrisbratlien@gmail.com>", "ebinks <elizabethjbinks@gmail.com>", "Bernd Strehl <bernd.strehl@gmail.com>", "isan_rivkin <isanrivkin@gmail.com>", "Florian-Merle <florian.david.merle@gmail.com>", "Francis Gulotta <wizard@roborooter.com>", "Felipe Martins <felipebrasil93@gmail.com>"],
                readme: '<h1 align="center">\n  <a href="libp2p.io"><img width="250" src="https://github.com/libp2p/libp2p/blob/master/logo/black-bg-2.png?raw=true" alt="libp2p hex logo" /></a>\n</h1>\n\n<h3 align="center">The JavaScript implementation of the libp2p Networking Stack.</h3>\n\n<p align="center">\n  <a href="http://protocol.ai"><img src="https://img.shields.io/badge/made%20by-Protocol%20Labs-blue.svg?style=flat-square" /></a>\n  <a href="http://libp2p.io/"><img src="https://img.shields.io/badge/project-libp2p-yellow.svg?style=flat-square" /></a>\n  <a href="http://webchat.freenode.net/?channels=%23libp2p"><img src="https://img.shields.io/badge/freenode-%23libp2p-yellow.svg?style=flat-square" /></a>\n  <a href="https://riot.im/app/#/room/#libp2p:matrix.org"><img src="https://img.shields.io/badge/matrix-%23libp2p%3Apermaweb.io-blue.svg?style=flat-square" /> </a>\n  <a href="https://discord.gg/66KBrm2"><img src="https://img.shields.io/discord/475789330380488707?color=blueviolet&label=discord&style=flat-square" /></a>\n  <a href="https://discuss.libp2p.io"><img src="https://img.shields.io/discourse/https/discuss.libp2p.io/posts.svg" /></a>\n  <a href="https://www.npmjs.com/package/libp2p"><img src="https://img.shields.io/npm/dm/libp2p.svg" /></a>\n  <a href="https://www.jsdelivr.com/package/npm/libp2p"><img src="https://data.jsdelivr.com/v1/package/npm/libp2p/badge"/></a>\n</p>\n\n<p align="center">\n  <a href="https://travis-ci.com/libp2p/js-libp2p"><img src="https://flat.badgen.net/travis/libp2p/js-libp2p" /></a>\n  <a href="https://codecov.io/gh/libp2p/js-libp2p"><img src="https://img.shields.io/codecov/c/github/ipfs/js-ipfs-multipart/master.svg?style=flat-square"></a>\n  <a href="https://bundlephobia.com/result?p=ipfsd-ctl"><img src="https://flat.badgen.net/bundlephobia/minzip/ipfsd-ctl"></a>\n  <br>\n  <a href="https://david-dm.org/libp2p/js-libp2p"><img src="https://david-dm.org/libp2p/js-libp2p.svg?style=flat-square" /></a>\n  <a href="https://github.com/feross/standard"><img src="https://img.shields.io/badge/code%20style-standard-brightgreen.svg?style=flat-square"></a>\n  <a href="https://github.com/RichardLitt/standard-readme"><img src="https://img.shields.io/badge/standard--readme-OK-green.svg?style=flat-square" /></a>\n  <a href=""><img src="https://img.shields.io/badge/npm-%3E%3D6.0.0-orange.svg?style=flat-square" /></a>\n  <a href=""><img src="https://img.shields.io/badge/Node.js-%3E%3D12.0.0-orange.svg?style=flat-square" /></a>\n  <br>\n</p>\n\n### Project status\n\nWe\'ve come a long way, but this project is still in Alpha, lots of development is happening, API might change, beware of the Dragons 🐉..\n\nThe documentation in the master branch may contain changes from a pre-release.\nIf you are looking for the documentation of the latest release, you can view the latest release on [**npm**](https://www.npmjs.com/package/libp2p), or select the tag in github that matches the version you are looking for.\n\n**Want to get started?** Check our [GETTING_STARTED.md](./doc/GETTING_STARTED.md) guide and [examples folder](/examples).\n\n**Want to update libp2p in your project?** Check our [migrations folder](./doc/migrations).\n\n[**`Weekly Core Dev Calls`**](https://github.com/libp2p/team-mgmt/issues/16)\n\n## Lead Maintainer\n\n[Jacob Heun](https://github.com/jacobheun/)\n\n## Table of Contents\n\n- [Background](#background)\n- [Install](#install)\n- [Usage](#usage)\n  - [Configuration](#configuration)\n  - [API](#api)\n  - [Getting Started](#getting-started)\n  - [Tutorials and Examples](#tutorials-and-examples)\n- [Development](#development)\n  - [Tests](#tests)\n  - [Packages](#packages)\n- [Contribute](#contribute)\n- [License](#license)\n\n## Background\n\nlibp2p is the product of a long and arduous quest to understand the evolution of the Internet networking stack. In order to build P2P applications, devs have long had to make custom ad-hoc solutions to fit their needs, sometimes making some hard assumptions about their runtimes and the state of the network at the time of their development. Today, looking back more than 20 years, we see a clear pattern in the types of mechanisms built around the Internet Protocol, IP, which can be found throughout many layers of the OSI layer system, libp2p distils these mechanisms into flat categories and defines clear interfaces that once exposed, enable other protocols and applications to use and swap them, enabling upgradability and adaptability for the runtime, without breaking the API.\n\nWe are in the process of writing better documentation, blog posts, tutorials and a formal specification. Today you can find:\n\n- [libp2p.io](https://libp2p.io)\n- [docs.libp2p.io](https://docs.libp2p.io)\n- [Specification (WIP)](https://github.com/libp2p/specs)\n- [Discussion Forums](https://discuss.libp2p.io)\n- Talks\n  - [`libp2p <3 ethereum` at DEVCON2](https://ethereumfoundation.org/devcon/?session=libp2p) [📼 video](https://www.youtube.com/watch?v=HxueJbeMVG4) [slides](https://ethereumfoundation.org/devcon/wp-content/uploads/2016/10/libp2p-HEART-devp2p-IPFS-PLUS-Ethereum-networking.pdf) [📼 demo-1](https://ethereumfoundation.org/devcon/wp-content/uploads/2016/10/libp2p_demo1-1.mp4) [📼 demo-2](https://ethereumfoundation.org/devcon/wp-content/uploads/2016/10/libp2p_demo2-1.mp4)\n- Articles\n  - [The overview of libp2p](https://github.com/libp2p/libp2p#description)\n\nTo sum up, libp2p is a "network stack" -- a protocol suite -- that cleanly separates concerns, and enables sophisticated applications to only use the protocols they absolutely need, without giving up interoperability and upgradeability. libp2p grew out of IPFS, but it is built so that lots of people can use it, for lots of different projects.\n\n## Install\n\n```sh\nnpm install libp2p\n```\n\n## Usage\n\n### Configuration\n\nFor all the information on how you can configure libp2p see [CONFIGURATION.md](./doc/CONFIGURATION.md).\n\n### API\n\nThe specification is available on [API.md](./doc/API.md).\n\n### Getting started\n\nIf you are starting your journey with `js-libp2p`, read the [GETTING_STARTED.md](./doc/GETTING_STARTED.md) guide.\n\n### Tutorials and Examples\n\nYou can find multiple examples on the [examples folder](./examples) that will guide you through using libp2p for several scenarios.\n\n## Development\n\n**Clone and install dependencies:**\n\n```sh\n> git clone https://github.com/libp2p/js-libp2p.git\n> cd js-libp2p\n> npm install\n```\n\n### Tests\n\n#### Run unit tests\n\n```sh\n# run all the unit tsts\n> npm test\n\n# run just Node.js tests\n> npm run test:node\n\n# run just Browser tests (Chrome)\n> npm run test:browser\n```\n\n### Packages\n\nList of packages currently in existence for libp2p\n\n> This table is generated using the module `package-table` with `package-table --data=package-list.json`.\n\n| Package | Version | Deps | CI | Coverage | Lead Maintainer |\n| ---------|---------|---------|---------|---------|--------- |\n| **libp2p** |\n| [`libp2p`](//github.com/libp2p/js-libp2p) | [![npm](https://img.shields.io/npm/v/libp2p.svg?maxAge=86400&style=flat-square)](//github.com/libp2p/js-libp2p/releases) | [![Deps](https://david-dm.org/libp2p/js-libp2p.svg?style=flat-square)](https://david-dm.org/libp2p/js-libp2p) | [![Travis CI](https://flat.badgen.net/travis/libp2p/js-libp2p/master)](https://travis-ci.com/libp2p/js-libp2p) | [![codecov](https://codecov.io/gh/libp2p/js-libp2p/branch/master/graph/badge.svg?style=flat-square)](https://codecov.io/gh/libp2p/js-libp2p) | [Jacob Heun](mailto:jacobheun@gmail.com) |\n| [`libp2p-daemon`](//github.com/libp2p/js-libp2p-daemon) | [![npm](https://img.shields.io/npm/v/libp2p-daemon.svg?maxAge=86400&style=flat-square)](//github.com/libp2p/js-libp2p-daemon/releases) | [![Deps](https://david-dm.org/libp2p/js-libp2p-daemon.svg?style=flat-square)](https://david-dm.org/libp2p/js-libp2p-daemon) | [![Travis CI](https://flat.badgen.net/travis/libp2p/js-libp2p-daemon/master)](https://travis-ci.com/libp2p/js-libp2p-daemon) | [![codecov](https://codecov.io/gh/libp2p/js-libp2p-daemon/branch/master/graph/badge.svg?style=flat-square)](https://codecov.io/gh/libp2p/js-libp2p-daemon) | [Jacob Heun](mailto:jacobheun@gmail.com) |\n| [`libp2p-daemon-client`](//github.com/libp2p/js-libp2p-daemon-client) | [![npm](https://img.shields.io/npm/v/libp2p-daemon-client.svg?maxAge=86400&style=flat-square)](//github.com/libp2p/js-libp2p-daemon-client/releases) | [![Deps](https://david-dm.org/libp2p/js-libp2p-daemon-client.svg?style=flat-square)](https://david-dm.org/libp2p/js-libp2p-daemon-client) | [![Travis CI](https://flat.badgen.net/travis/libp2p/js-libp2p-daemon-client/master)](https://travis-ci.com/libp2p/js-libp2p-daemon-client) | [![codecov](https://codecov.io/gh/libp2p/js-libp2p-daemon-client/branch/master/graph/badge.svg?style=flat-square)](https://codecov.io/gh/libp2p/js-libp2p-daemon-client) | [Vasco Santos](mailto:santos.vasco10@gmail.com) |\n| [`libp2p-interfaces`](//github.com/libp2p/js-interfaces) | [![npm](https://img.shields.io/npm/v/libp2p-interfaces.svg?maxAge=86400&style=flat-square)](//github.com/libp2p/js-interfaces/releases) | [![Deps](https://david-dm.org/libp2p/js-interfaces.svg?style=flat-square)](https://david-dm.org/libp2p/js-interfaces) | [![Travis CI](https://flat.badgen.net/travis/libp2p/js-interfaces/master)](https://travis-ci.com/libp2p/js-interfaces) | [![codecov](https://codecov.io/gh/libp2p/js-interfaces/branch/master/graph/badge.svg?style=flat-square)](https://codecov.io/gh/libp2p/js-interfaces) | [Jacob Heun](mailto:jacobheun@gmail.com) |\n| [`interop-libp2p`](//github.com/libp2p/interop) | [![npm](https://img.shields.io/npm/v/interop-libp2p.svg?maxAge=86400&style=flat-square)](//github.com/libp2p/interop/releases) | [![Deps](https://david-dm.org/libp2p/interop.svg?style=flat-square)](https://david-dm.org/libp2p/interop) | [![Travis CI](https://flat.badgen.net/travis/libp2p/interop/master)](https://travis-ci.com/libp2p/interop) | [![codecov](https://codecov.io/gh/libp2p/interop/branch/master/graph/badge.svg?style=flat-square)](https://codecov.io/gh/libp2p/interop) | [Vasco Santos](mailto:santos.vasco10@gmail.com) |\n| **transports** |\n| [`libp2p-tcp`](//github.com/libp2p/js-libp2p-tcp) | [![npm](https://img.shields.io/npm/v/libp2p-tcp.svg?maxAge=86400&style=flat-square)](//github.com/libp2p/js-libp2p-tcp/releases) | [![Deps](https://david-dm.org/libp2p/js-libp2p-tcp.svg?style=flat-square)](https://david-dm.org/libp2p/js-libp2p-tcp) | [![Travis CI](https://flat.badgen.net/travis/libp2p/js-libp2p-tcp/master)](https://travis-ci.com/libp2p/js-libp2p-tcp) | [![codecov](https://codecov.io/gh/libp2p/js-libp2p-tcp/branch/master/graph/badge.svg?style=flat-square)](https://codecov.io/gh/libp2p/js-libp2p-tcp) | [Jacob Heun](mailto:jacobheun@gmail.com) |\n| [`libp2p-webrtc-direct`](//github.com/libp2p/js-libp2p-webrtc-direct) | [![npm](https://img.shields.io/npm/v/libp2p-webrtc-direct.svg?maxAge=86400&style=flat-square)](//github.com/libp2p/js-libp2p-webrtc-direct/releases) | [![Deps](https://david-dm.org/libp2p/js-libp2p-webrtc-direct.svg?style=flat-square)](https://david-dm.org/libp2p/js-libp2p-webrtc-direct) | [![Travis CI](https://flat.badgen.net/travis/libp2p/js-libp2p-webrtc-direct/master)](https://travis-ci.com/libp2p/js-libp2p-webrtc-direct) | [![codecov](https://codecov.io/gh/libp2p/js-libp2p-webrtc-direct/branch/master/graph/badge.svg?style=flat-square)](https://codecov.io/gh/libp2p/js-libp2p-webrtc-direct) | [Vasco Santos](mailto:vasco.santos@moxy.studio) |\n| [`libp2p-webrtc-star`](//github.com/libp2p/js-libp2p-webrtc-star) | [![npm](https://img.shields.io/npm/v/libp2p-webrtc-star.svg?maxAge=86400&style=flat-square)](//github.com/libp2p/js-libp2p-webrtc-star/releases) | [![Deps](https://david-dm.org/libp2p/js-libp2p-webrtc-star.svg?style=flat-square)](https://david-dm.org/libp2p/js-libp2p-webrtc-star) | [![Travis CI](https://flat.badgen.net/travis/libp2p/js-libp2p-webrtc-star/master)](https://travis-ci.com/libp2p/js-libp2p-webrtc-star) | [![codecov](https://codecov.io/gh/libp2p/js-libp2p-webrtc-star/branch/master/graph/badge.svg?style=flat-square)](https://codecov.io/gh/libp2p/js-libp2p-webrtc-star) | [Vasco Santos](mailto:vasco.santos@moxy.studio) |\n| [`libp2p-websockets`](//github.com/libp2p/js-libp2p-websockets) | [![npm](https://img.shields.io/npm/v/libp2p-websockets.svg?maxAge=86400&style=flat-square)](//github.com/libp2p/js-libp2p-websockets/releases) | [![Deps](https://david-dm.org/libp2p/js-libp2p-websockets.svg?style=flat-square)](https://david-dm.org/libp2p/js-libp2p-websockets) | [![Travis CI](https://flat.badgen.net/travis/libp2p/js-libp2p-websockets/master)](https://travis-ci.com/libp2p/js-libp2p-websockets) | [![codecov](https://codecov.io/gh/libp2p/js-libp2p-websockets/branch/master/graph/badge.svg?style=flat-square)](https://codecov.io/gh/libp2p/js-libp2p-websockets) | [Jacob Heun](mailto:jacobheun@gmail.com) |\n| **secure channels** |\n| [`libp2p-noise`](//github.com/NodeFactoryIo/js-libp2p-noise) | [![npm](https://img.shields.io/npm/v/libp2p-noise.svg?maxAge=86400&style=flat-square)](//github.com/NodeFactoryIo/js-libp2p-noise/releases) | [![Deps](https://david-dm.org/NodeFactoryIo/js-libp2p-noise.svg?style=flat-square)](https://david-dm.org/NodeFactoryIo/js-libp2p-noise) | [![Travis CI](https://flat.badgen.net/travis/NodeFactoryIo/js-libp2p-noise/master)](https://travis-ci.com/NodeFactoryIo/js-libp2p-noise) | [![codecov](https://codecov.io/gh/NodeFactoryIo/js-libp2p-noise/branch/master/graph/badge.svg?style=flat-square)](https://codecov.io/gh/NodeFactoryIo/js-libp2p-noise) | N/A |\n| [`libp2p-secio`](//github.com/libp2p/js-libp2p-secio) | [![npm](https://img.shields.io/npm/v/libp2p-secio.svg?maxAge=86400&style=flat-square)](//github.com/libp2p/js-libp2p-secio/releases) | [![Deps](https://david-dm.org/libp2p/js-libp2p-secio.svg?style=flat-square)](https://david-dm.org/libp2p/js-libp2p-secio) | [![Travis CI](https://flat.badgen.net/travis/libp2p/js-libp2p-secio/master)](https://travis-ci.com/libp2p/js-libp2p-secio) | [![codecov](https://codecov.io/gh/libp2p/js-libp2p-secio/branch/master/graph/badge.svg?style=flat-square)](https://codecov.io/gh/libp2p/js-libp2p-secio) | [Friedel Ziegelmayer](mailto:dignifiedquire@gmail.com) |\n| **stream multiplexers** |\n| [`libp2p-mplex`](//github.com/libp2p/js-libp2p-mplex) | [![npm](https://img.shields.io/npm/v/libp2p-mplex.svg?maxAge=86400&style=flat-square)](//github.com/libp2p/js-libp2p-mplex/releases) | [![Deps](https://david-dm.org/libp2p/js-libp2p-mplex.svg?style=flat-square)](https://david-dm.org/libp2p/js-libp2p-mplex) | [![Travis CI](https://flat.badgen.net/travis/libp2p/js-libp2p-mplex/master)](https://travis-ci.com/libp2p/js-libp2p-mplex) | [![codecov](https://codecov.io/gh/libp2p/js-libp2p-mplex/branch/master/graph/badge.svg?style=flat-square)](https://codecov.io/gh/libp2p/js-libp2p-mplex) | [Vasco Santos](mailto:vasco.santos@moxy.studio) |\n| **peer discovery** |\n| [`libp2p-bootstrap`](//github.com/libp2p/js-libp2p-bootstrap) | [![npm](https://img.shields.io/npm/v/libp2p-bootstrap.svg?maxAge=86400&style=flat-square)](//github.com/libp2p/js-libp2p-bootstrap/releases) | [![Deps](https://david-dm.org/libp2p/js-libp2p-bootstrap.svg?style=flat-square)](https://david-dm.org/libp2p/js-libp2p-bootstrap) | [![Travis CI](https://flat.badgen.net/travis/libp2p/js-libp2p-bootstrap/master)](https://travis-ci.com/libp2p/js-libp2p-bootstrap) | [![codecov](https://codecov.io/gh/libp2p/js-libp2p-bootstrap/branch/master/graph/badge.svg?style=flat-square)](https://codecov.io/gh/libp2p/js-libp2p-bootstrap) | [Vasco Santos](mailto:vasco.santos@moxy.studio) |\n| [`libp2p-kad-dht`](//github.com/libp2p/js-libp2p-kad-dht) | [![npm](https://img.shields.io/npm/v/libp2p-kad-dht.svg?maxAge=86400&style=flat-square)](//github.com/libp2p/js-libp2p-kad-dht/releases) | [![Deps](https://david-dm.org/libp2p/js-libp2p-kad-dht.svg?style=flat-square)](https://david-dm.org/libp2p/js-libp2p-kad-dht) | [![Travis CI](https://flat.badgen.net/travis/libp2p/js-libp2p-kad-dht/master)](https://travis-ci.com/libp2p/js-libp2p-kad-dht) | [![codecov](https://codecov.io/gh/libp2p/js-libp2p-kad-dht/branch/master/graph/badge.svg?style=flat-square)](https://codecov.io/gh/libp2p/js-libp2p-kad-dht) | [Vasco Santos](mailto:vasco.santos@moxy.studio) |\n| [`libp2p-mdns`](//github.com/libp2p/js-libp2p-mdns) | [![npm](https://img.shields.io/npm/v/libp2p-mdns.svg?maxAge=86400&style=flat-square)](//github.com/libp2p/js-libp2p-mdns/releases) | [![Deps](https://david-dm.org/libp2p/js-libp2p-mdns.svg?style=flat-square)](https://david-dm.org/libp2p/js-libp2p-mdns) | [![Travis CI](https://flat.badgen.net/travis/libp2p/js-libp2p-mdns/master)](https://travis-ci.com/libp2p/js-libp2p-mdns) | [![codecov](https://codecov.io/gh/libp2p/js-libp2p-mdns/branch/master/graph/badge.svg?style=flat-square)](https://codecov.io/gh/libp2p/js-libp2p-mdns) | [Jacob Heun](mailto:jacobheun@gmail.com) |\n| [`libp2p-webrtc-star`](//github.com/libp2p/js-libp2p-webrtc-star) | [![npm](https://img.shields.io/npm/v/libp2p-webrtc-star.svg?maxAge=86400&style=flat-square)](//github.com/libp2p/js-libp2p-webrtc-star/releases) | [![Deps](https://david-dm.org/libp2p/js-libp2p-webrtc-star.svg?style=flat-square)](https://david-dm.org/libp2p/js-libp2p-webrtc-star) | [![Travis CI](https://flat.badgen.net/travis/libp2p/js-libp2p-webrtc-star/master)](https://travis-ci.com/libp2p/js-libp2p-webrtc-star) | [![codecov](https://codecov.io/gh/libp2p/js-libp2p-webrtc-star/branch/master/graph/badge.svg?style=flat-square)](https://codecov.io/gh/libp2p/js-libp2p-webrtc-star) | [Vasco Santos](mailto:vasco.santos@moxy.studio) |\n| [`@chainsafe/discv5`](//github.com/ChainSafe/discv5) | [![npm](https://img.shields.io/npm/v/@chainsafe/discv5.svg?maxAge=86400&style=flat-square)](//github.com/ChainSafe/discv5/releases) | [![Deps](https://david-dm.org/ChainSafe/discv5.svg?style=flat-square)](https://david-dm.org/ChainSafe/discv5) | [![Travis CI](https://flat.badgen.net/travis/ChainSafe/discv5/master)](https://travis-ci.com/ChainSafe/discv5) | [![codecov](https://codecov.io/gh/ChainSafe/discv5/branch/master/graph/badge.svg?style=flat-square)](https://codecov.io/gh/ChainSafe/discv5) | [Cayman Nava](mailto:caymannava@gmail.com) |\n| **content routing** |\n| [`libp2p-delegated-content-routing`](//github.com/libp2p/js-libp2p-delegated-content-routing) | [![npm](https://img.shields.io/npm/v/libp2p-delegated-content-routing.svg?maxAge=86400&style=flat-square)](//github.com/libp2p/js-libp2p-delegated-content-routing/releases) | [![Deps](https://david-dm.org/libp2p/js-libp2p-delegated-content-routing.svg?style=flat-square)](https://david-dm.org/libp2p/js-libp2p-delegated-content-routing) | [![Travis CI](https://flat.badgen.net/travis/libp2p/js-libp2p-delegated-content-routing/master)](https://travis-ci.com/libp2p/js-libp2p-delegated-content-routing) | [![codecov](https://codecov.io/gh/libp2p/js-libp2p-delegated-content-routing/branch/master/graph/badge.svg?style=flat-square)](https://codecov.io/gh/libp2p/js-libp2p-delegated-content-routing) | [Jacob Heun](mailto:jacobheun@gmail.com) |\n| [`libp2p-kad-dht`](//github.com/libp2p/js-libp2p-kad-dht) | [![npm](https://img.shields.io/npm/v/libp2p-kad-dht.svg?maxAge=86400&style=flat-square)](//github.com/libp2p/js-libp2p-kad-dht/releases) | [![Deps](https://david-dm.org/libp2p/js-libp2p-kad-dht.svg?style=flat-square)](https://david-dm.org/libp2p/js-libp2p-kad-dht) | [![Travis CI](https://flat.badgen.net/travis/libp2p/js-libp2p-kad-dht/master)](https://travis-ci.com/libp2p/js-libp2p-kad-dht) | [![codecov](https://codecov.io/gh/libp2p/js-libp2p-kad-dht/branch/master/graph/badge.svg?style=flat-square)](https://codecov.io/gh/libp2p/js-libp2p-kad-dht) | [Vasco Santos](mailto:vasco.santos@moxy.studio) |\n| **peer routing** |\n| [`libp2p-delegated-peer-routing`](//github.com/libp2p/js-libp2p-delegated-peer-routing) | [![npm](https://img.shields.io/npm/v/libp2p-delegated-peer-routing.svg?maxAge=86400&style=flat-square)](//github.com/libp2p/js-libp2p-delegated-peer-routing/releases) | [![Deps](https://david-dm.org/libp2p/js-libp2p-delegated-peer-routing.svg?style=flat-square)](https://david-dm.org/libp2p/js-libp2p-delegated-peer-routing) | [![Travis CI](https://flat.badgen.net/travis/libp2p/js-libp2p-delegated-peer-routing/master)](https://travis-ci.com/libp2p/js-libp2p-delegated-peer-routing) | [![codecov](https://codecov.io/gh/libp2p/js-libp2p-delegated-peer-routing/branch/master/graph/badge.svg?style=flat-square)](https://codecov.io/gh/libp2p/js-libp2p-delegated-peer-routing) | [Jacob Heun](mailto:jacobheun@gmail.com) |\n| [`libp2p-kad-dht`](//github.com/libp2p/js-libp2p-kad-dht) | [![npm](https://img.shields.io/npm/v/libp2p-kad-dht.svg?maxAge=86400&style=flat-square)](//github.com/libp2p/js-libp2p-kad-dht/releases) | [![Deps](https://david-dm.org/libp2p/js-libp2p-kad-dht.svg?style=flat-square)](https://david-dm.org/libp2p/js-libp2p-kad-dht) | [![Travis CI](https://flat.badgen.net/travis/libp2p/js-libp2p-kad-dht/master)](https://travis-ci.com/libp2p/js-libp2p-kad-dht) | [![codecov](https://codecov.io/gh/libp2p/js-libp2p-kad-dht/branch/master/graph/badge.svg?style=flat-square)](https://codecov.io/gh/libp2p/js-libp2p-kad-dht) | [Vasco Santos](mailto:vasco.santos@moxy.studio) |\n| **utilities** |\n| [`libp2p-crypto`](//github.com/libp2p/js-libp2p-crypto) | [![npm](https://img.shields.io/npm/v/libp2p-crypto.svg?maxAge=86400&style=flat-square)](//github.com/libp2p/js-libp2p-crypto/releases) | [![Deps](https://david-dm.org/libp2p/js-libp2p-crypto.svg?style=flat-square)](https://david-dm.org/libp2p/js-libp2p-crypto) | [![Travis CI](https://flat.badgen.net/travis/libp2p/js-libp2p-crypto/master)](https://travis-ci.com/libp2p/js-libp2p-crypto) | [![codecov](https://codecov.io/gh/libp2p/js-libp2p-crypto/branch/master/graph/badge.svg?style=flat-square)](https://codecov.io/gh/libp2p/js-libp2p-crypto) | [Jacob Heun](mailto:jacobheun@gmail.com) |\n| [`libp2p-crypto-secp256k1`](//github.com/libp2p/js-libp2p-crypto-secp256k1) | [![npm](https://img.shields.io/npm/v/libp2p-crypto-secp256k1.svg?maxAge=86400&style=flat-square)](//github.com/libp2p/js-libp2p-crypto-secp256k1/releases) | [![Deps](https://david-dm.org/libp2p/js-libp2p-crypto-secp256k1.svg?style=flat-square)](https://david-dm.org/libp2p/js-libp2p-crypto-secp256k1) | [![Travis CI](https://flat.badgen.net/travis/libp2p/js-libp2p-crypto-secp256k1/master)](https://travis-ci.com/libp2p/js-libp2p-crypto-secp256k1) | [![codecov](https://codecov.io/gh/libp2p/js-libp2p-crypto-secp256k1/branch/master/graph/badge.svg?style=flat-square)](https://codecov.io/gh/libp2p/js-libp2p-crypto-secp256k1) | [Friedel Ziegelmayer](mailto:dignifiedquire@gmail.com) |\n| **data types** |\n| [`peer-id`](//github.com/libp2p/js-peer-id) | [![npm](https://img.shields.io/npm/v/peer-id.svg?maxAge=86400&style=flat-square)](//github.com/libp2p/js-peer-id/releases) | [![Deps](https://david-dm.org/libp2p/js-peer-id.svg?style=flat-square)](https://david-dm.org/libp2p/js-peer-id) | [![Travis CI](https://flat.badgen.net/travis/libp2p/js-peer-id/master)](https://travis-ci.com/libp2p/js-peer-id) | [![codecov](https://codecov.io/gh/libp2p/js-peer-id/branch/master/graph/badge.svg?style=flat-square)](https://codecov.io/gh/libp2p/js-peer-id) | [Vasco Santos](mailto:santos.vasco10@gmail.com) |\n| **pubsub** |\n| [`libp2p-floodsub`](//github.com/libp2p/js-libp2p-floodsub) | [![npm](https://img.shields.io/npm/v/libp2p-floodsub.svg?maxAge=86400&style=flat-square)](//github.com/libp2p/js-libp2p-floodsub/releases) | [![Deps](https://david-dm.org/libp2p/js-libp2p-floodsub.svg?style=flat-square)](https://david-dm.org/libp2p/js-libp2p-floodsub) | [![Travis CI](https://flat.badgen.net/travis/libp2p/js-libp2p-floodsub/master)](https://travis-ci.com/libp2p/js-libp2p-floodsub) | [![codecov](https://codecov.io/gh/libp2p/js-libp2p-floodsub/branch/master/graph/badge.svg?style=flat-square)](https://codecov.io/gh/libp2p/js-libp2p-floodsub) | [Vasco Santos](mailto:vasco.santos@moxy.studio) |\n| [`libp2p-gossipsub`](//github.com/ChainSafe/js-libp2p-gossipsub) | [![npm](https://img.shields.io/npm/v/libp2p-gossipsub.svg?maxAge=86400&style=flat-square)](//github.com/ChainSafe/js-libp2p-gossipsub/releases) | [![Deps](https://david-dm.org/ChainSafe/js-libp2p-gossipsub.svg?style=flat-square)](https://david-dm.org/ChainSafe/js-libp2p-gossipsub) | [![Travis CI](https://flat.badgen.net/travis/ChainSafe/js-libp2p-gossipsub/master)](https://travis-ci.com/ChainSafe/js-libp2p-gossipsub) | [![codecov](https://codecov.io/gh/ChainSafe/js-libp2p-gossipsub/branch/master/graph/badge.svg?style=flat-square)](https://codecov.io/gh/ChainSafe/js-libp2p-gossipsub) | [Cayman Nava](mailto:caymannava@gmail.com) |\n| **extensions** |\n| [`libp2p-nat-mgnr`](//github.com/libp2p/js-libp2p-nat-mgnr) | [![npm](https://img.shields.io/npm/v/libp2p-nat-mgnr.svg?maxAge=86400&style=flat-square)](//github.com/libp2p/js-libp2p-nat-mgnr/releases) | [![Deps](https://david-dm.org/libp2p/js-libp2p-nat-mgnr.svg?style=flat-square)](https://david-dm.org/libp2p/js-libp2p-nat-mgnr) | [![Travis CI](https://flat.badgen.net/travis/libp2p/js-libp2p-nat-mgnr/master)](https://travis-ci.com/libp2p/js-libp2p-nat-mgnr) | [![codecov](https://codecov.io/gh/libp2p/js-libp2p-nat-mgnr/branch/master/graph/badge.svg?style=flat-square)](https://codecov.io/gh/libp2p/js-libp2p-nat-mgnr) | N/A |\n| [`libp2p-utils`](//github.com/libp2p/js-libp2p-utils) | [![npm](https://img.shields.io/npm/v/libp2p-utils.svg?maxAge=86400&style=flat-square)](//github.com/libp2p/js-libp2p-utils/releases) | [![Deps](https://david-dm.org/libp2p/js-libp2p-utils.svg?style=flat-square)](https://david-dm.org/libp2p/js-libp2p-utils) | [![Travis CI](https://flat.badgen.net/travis/libp2p/js-libp2p-utils/master)](https://travis-ci.com/libp2p/js-libp2p-utils) | [![codecov](https://codecov.io/gh/libp2p/js-libp2p-utils/branch/master/graph/badge.svg?style=flat-square)](https://codecov.io/gh/libp2p/js-libp2p-utils) | [Vasco Santos](mailto:santos.vasco10@gmail.com) |\n\n## Contribute\n\nThe libp2p implementation in JavaScript is a work in progress. As such, there are a few things you can do right now to help out:\n\n - Go through the modules and **check out existing issues**. This would be especially useful for modules in active development. Some knowledge of IPFS/libp2p may be required, as well as the infrastructure behind it - for instance, you may need to read up on p2p and more complex operations like muxing to be able to help technically.\n - **Perform code reviews**. Most of this has been developed by @diasdavid, which means that more eyes will help a) speed the project along b) ensure quality and c) reduce possible future bugs.\n - **Add tests**. There can never be enough tests.\n\n## License\n\n[MIT](LICENSE) © Protocol Labs\n',
                readmeFilename: "package/README.md"
            }
        }
        , {}],
        421: [function(e, t, r) {
            "use strict";
            const i = e("debug");
            i("libp2p:addresses").error = i("libp2p:addresses:error");
            const n = e("multiaddr");
            t.exports = class {
                constructor({listen: e=[], announce: t=[], noAnnounce: r=[]}={}) {
                    this.listen = new Set(e),
                    this.announce = new Set(t),
                    this.noAnnounce = new Set(r)
                }
                getListenAddrs() {
                    return Array.from(this.listen).map(e=>n(e))
                }
                getAnnounceAddrs() {
                    return Array.from(this.announce).map(e=>n(e))
                }
                getNoAnnounceAddrs() {
                    return Array.from(this.noAnnounce).map(e=>n(e))
                }
            }
        }
        , {
            debug: 172,
            multiaddr: 290
        }],
        422: [function(e, t, r) {
            "use strict";
            const i = e("debug")
              , n = i("libp2p:circuit:hop");
            n.error = i("libp2p:circuit:hop:error");
            const s = e("peer-id")
              , {validateAddrs: o} = e("./utils")
              , a = e("./stream-handler")
              , {CircuitRelay: c} = e("../protocol")
              , u = e("it-pipe")
              , f = e("err-code")
              , {codes: h} = e("../../errors")
              , {stop: l} = e("./stop")
              , d = e("./../multicodec");
            t.exports.handleHop = async function({connection: e, request: t, streamHandler: r, circuit: i}) {
                if (!i._options.hop.enabled)
                    return n("HOP request received but we are not acting as a relay"),
                    r.end({
                        type: c.Type.STATUS,
                        code: c.Status.HOP_CANT_SPEAK_RELAY
                    });
                try {
                    o(t, r)
                } catch (t) {
                    return n.error("invalid hop request via peer %s", e.remotePeer.toB58String(), t)
                }
                const a = new s(t.dstPeer.id)
                  , f = i._connectionManager.get(a);
                if (!f && !i._options.hop.active)
                    return n("HOP request received but we are not connected to the destination peer"),
                    r.end({
                        type: c.Type.STATUS,
                        code: c.Status.HOP_NO_CONN_TO_DST
                    });
                const h = {
                    type: c.Type.STOP,
                    dstPeer: t.dstPeer,
                    srcPeer: t.srcPeer
                };
                let d;
                try {
                    d = await l({
                        connection: f,
                        request: h,
                        circuit: i
                    })
                } catch (e) {
                    return n.error(e)
                }
                n("hop request from %s is valid", e.remotePeer.toB58String()),
                r.write({
                    type: c.Type.STATUS,
                    code: c.Status.SUCCESS
                });
                const p = r.rest();
                return u(p, d, p)
            }
            ,
            t.exports.hop = async function({connection: e, request: t}) {
                const {stream: r} = await e.newStream([d.relay])
                  , i = new a({
                    stream: r
                });
                i.write(t);
                const s = await i.read();
                if (s.code === c.Status.SUCCESS)
                    return n("hop request was successful"),
                    i.rest();
                throw n("hop request failed with code %d, closing stream", s.code),
                i.close(),
                f(new Error(`HOP request failed with code ${s.code}`), h.ERR_HOP_REQUEST_FAILED)
            }
            ,
            t.exports.handleCanHop = function({connection: e, streamHandler: t, circuit: r}) {
                const i = r._options.hop.enabled;
                n("can hop (%s) request from %s", i, e.remotePeer.toB58String()),
                t.end({
                    type: c.Type.STATUS,
                    code: i ? c.Status.SUCCESS : c.Status.HOP_CANT_SPEAK_RELAY
                })
            }
        }
        , {
            "../../errors": 438,
            "../protocol": 429,
            "./../multicodec": 428,
            "./stop": 423,
            "./stream-handler": 424,
            "./utils": 425,
            debug: 172,
            "err-code": 193,
            "it-pipe": 243,
            "peer-id": 372
        }],
        423: [function(e, t, r) {
            "use strict";
            const {CircuitRelay: i} = e("../protocol")
              , n = e("../multicodec")
              , s = e("./stream-handler")
              , {validateAddrs: o} = e("./utils")
              , a = e("debug")
              , c = a("libp2p:circuit:stop");
            c.error = a("libp2p:circuit:stop:error"),
            t.exports.handleStop = function({connection: e, request: t, streamHandler: r}) {
                try {
                    o(t, r)
                } catch (t) {
                    return c.error("invalid stop request via peer %s", e.remotePeer.toB58String(), t)
                }
                return c("stop request is valid"),
                r.write({
                    type: i.Type.STATUS,
                    code: i.Status.SUCCESS
                }),
                r.rest()
            }
            ,
            t.exports.stop = async function({connection: e, request: t}) {
                const {stream: r} = await e.newStream([n.relay]);
                c("starting stop request to %s", e.remotePeer.toB58String());
                const o = new s({
                    stream: r
                });
                o.write(t);
                const a = await o.read();
                if (a.code === i.Status.SUCCESS)
                    return c("stop request to %s was successful", e.remotePeer.toB58String()),
                    o.rest();
                c("stop request failed with code %d", a.code),
                o.close()
            }
        }
        , {
            "../multicodec": 428,
            "../protocol": 429,
            "./stream-handler": 424,
            "./utils": 425,
            debug: 172
        }],
        424: [function(e, t, r) {
            "use strict";
            const i = e("it-length-prefixed")
              , n = e("it-handshake")
              , {CircuitRelay: s} = e("../protocol")
              , o = e("debug")
              , a = o("libp2p:circuit:stream-handler");
            a.error = o("libp2p:circuit:stream-handler:error");
            t.exports = class {
                constructor({stream: e, maxLength: t=4096}) {
                    this.stream = e,
                    this.shake = n(this.stream),
                    this.decoder = i.decode.fromReader(this.shake.reader, {
                        maxDataLength: t
                    })
                }
                async read() {
                    const e = await this.decoder.next();
                    if (e.value) {
                        const t = s.decode(e.value.slice());
                        return a("read message type", t.type),
                        t
                    }
                    a("read received no value, closing stream"),
                    this.close()
                }
                write(e) {
                    a("write message type %s", e.type),
                    this.shake.write(i.encode.single(s.encode(e)))
                }
                rest() {
                    return this.shake.rest(),
                    this.shake.stream
                }
                end(e) {
                    this.write(e),
                    this.close()
                }
                close() {
                    a("closing the stream"),
                    this.rest().sink([])
                }
            }
        }
        , {
            "../protocol": 429,
            debug: 172,
            "it-handshake": 235,
            "it-length-prefixed": 238
        }],
        425: [function(e, t, r) {
            "use strict";
            const i = e("multiaddr")
              , {CircuitRelay: n} = e("../protocol");
            function s(e, t) {
                e.write({
                    type: n.Type.STATUS,
                    code: t
                })
            }
            t.exports = {
                validateAddrs: function(e, t) {
                    try {
                        e.dstPeer.addrs.forEach(e=>i(e))
                    } catch (r) {
                        throw s(t, e.type === n.Type.HOP ? n.Status.HOP_DST_MULTIADDR_INVALID : n.Status.STOP_DST_MULTIADDR_INVALID),
                        r
                    }
                    try {
                        e.srcPeer.addrs.forEach(e=>i(e))
                    } catch (r) {
                        throw s(t, e.type === n.Type.HOP ? n.Status.HOP_SRC_MULTIADDR_INVALID : n.Status.STOP_SRC_MULTIADDR_INVALID),
                        r
                    }
                }
            }
        }
        , {
            "../protocol": 429,
            multiaddr: 290
        }],
        426: [function(e, t, r) {
            "use strict";
            const i = e("mafmt")
              , n = e("multiaddr")
              , s = e("peer-id")
              , o = e("class-is")
              , {CircuitRelay: a} = e("./protocol")
              , c = e("debug")
              , u = c("libp2p:circuit");
            u.error = c("libp2p:circuit:error");
            const f = e("libp2p-utils/src/stream-to-ma-conn")
              , {relay: h} = e("./multicodec")
              , l = e("./listener")
              , {handleCanHop: d, handleHop: p, hop: b} = e("./circuit/hop")
              , {handleStop: g} = e("./circuit/stop")
              , m = e("./circuit/stream-handler");
            t.exports = o(class {
                constructor({libp2p: e, upgrader: t}) {
                    this._dialer = e.dialer,
                    this._registrar = e.registrar,
                    this._connectionManager = e.connectionManager,
                    this._upgrader = t,
                    this._options = e._config.relay,
                    this._libp2p = e,
                    this.peerId = e.peerId,
                    this._registrar.handle(h, this._onProtocol.bind(this))
                }
                async _onProtocol({connection: e, stream: t, protocol: r}) {
                    const i = new m({
                        stream: t
                    })
                      , s = await i.read()
                      , o = this;
                    let c;
                    switch (s.type) {
                    case a.Type.CAN_HOP:
                        u("received CAN_HOP request from %s", e.remotePeer.toB58String()),
                        await d({
                            circuit: o,
                            connection: e,
                            streamHandler: i
                        });
                        break;
                    case a.Type.HOP:
                        u("received HOP request from %s", e.remotePeer.toB58String()),
                        c = await p({
                            connection: e,
                            request: s,
                            streamHandler: i,
                            circuit: o
                        });
                        break;
                    case a.Type.STOP:
                        u("received STOP request from %s", e.remotePeer.toB58String()),
                        c = await g({
                            connection: e,
                            request: s,
                            streamHandler: i,
                            circuit: o
                        });
                        break;
                    default:
                        u("Request of type %s not supported", s.type)
                    }
                    if (c) {
                        const e = n(s.dstPeer.addrs[0])
                          , t = n(s.srcPeer.addrs[0])
                          , r = f({
                            stream: c,
                            remoteAddr: e,
                            localAddr: t
                        })
                          , i = a.Type === a.Type.HOP ? "relay" : "inbound";
                        u("new %s connection %s", i, r.remoteAddr);
                        const o = await this._upgrader.upgradeInbound(r);
                        u("%s connection %s upgraded", i, r.remoteAddr),
                        this.handler && this.handler(o)
                    }
                }
                async dial(e, t) {
                    const r = e.toString().split("/p2p-circuit")
                      , i = n(r[0])
                      , o = n(r[r.length - 1])
                      , c = s.createFromCID(i.getPeerId())
                      , h = s.createFromCID(o.getPeerId());
                    let l = !1
                      , d = this._connectionManager.get(c);
                    d || (d = await this._dialer.connectToPeer(i, t),
                    l = !0);
                    try {
                        const t = await b({
                            connection: d,
                            circuit: this,
                            request: {
                                type: a.Type.HOP,
                                srcPeer: {
                                    id: this.peerId.toBytes(),
                                    addrs: this._libp2p.multiaddrs.map(e=>e.bytes)
                                },
                                dstPeer: {
                                    id: h.toBytes(),
                                    addrs: [n(o).bytes]
                                }
                            }
                        })
                          , r = i.encapsulate(`/p2p-circuit/p2p/${this.peerId.toB58String()}`)
                          , s = f({
                            stream: t,
                            remoteAddr: e,
                            localAddr: r
                        });
                        return u("new outbound connection %s", s.remoteAddr),
                        this._upgrader.upgradeOutbound(s)
                    } catch (e) {
                        throw u.error("Circuit relay dial failed", e),
                        l && await d.close(),
                        e
                    }
                }
                createListener(e, t) {
                    return "function" == typeof e && (t = e,
                    e = {}),
                    this.handler = t,
                    l(this, e)
                }
                filter(e) {
                    return (e = Array.isArray(e) ? e : [e]).filter(e=>i.Circuit.matches(e))
                }
            }
            , {
                className: "Circuit",
                symbolName: "@libp2p/js-libp2p-circuit/circuit"
            })
        }
        , {
            "./circuit/hop": 422,
            "./circuit/stop": 423,
            "./circuit/stream-handler": 424,
            "./listener": 427,
            "./multicodec": 428,
            "./protocol": 429,
            "class-is": 170,
            debug: 172,
            "libp2p-utils/src/stream-to-ma-conn": 281,
            mafmt: 282,
            multiaddr: 290,
            "peer-id": 372
        }],
        427: [function(e, t, r) {
            "use strict";
            const i = e("events")
              , n = e("multiaddr")
              , s = e("debug");
            s("libp2p:circuit:listener").err = s("libp2p:circuit:error:listener"),
            t.exports = e=>{
                const t = new i
                  , r = new Map;
                return t.listen = async i=>{
                    const s = String(i).split("/p2p-circuit").find(e=>"" !== e)
                      , o = await e._dialer.connectToPeer(n(s))
                      , a = o.remoteAddr.encapsulate("/p2p-circuit");
                    r.set(o.remotePeer.toB58String(), a),
                    t.emit("listening")
                }
                ,
                t.close = ()=>{}
                ,
                t.getAddrs = ()=>{
                    const e = [];
                    for (const t of r.values())
                        e.push(t);
                    return e
                }
                ,
                t
            }
        }
        , {
            debug: 172,
            events: 83,
            multiaddr: 290
        }],
        428: [function(e, t, r) {
            "use strict";
            t.exports = {
                relay: "/libp2p/circuit/relay/0.1.0"
            }
        }
        , {}],
        429: [function(e, t, r) {
            "use strict";
            const i = e("protons");
            t.exports = i("\nmessage CircuitRelay {\n\n  enum Status {\n    SUCCESS                    = 100;\n    HOP_SRC_ADDR_TOO_LONG      = 220;\n    HOP_DST_ADDR_TOO_LONG      = 221;\n    HOP_SRC_MULTIADDR_INVALID  = 250;\n    HOP_DST_MULTIADDR_INVALID  = 251;\n    HOP_NO_CONN_TO_DST         = 260;\n    HOP_CANT_DIAL_DST          = 261;\n    HOP_CANT_OPEN_DST_STREAM   = 262;\n    HOP_CANT_SPEAK_RELAY       = 270;\n    HOP_CANT_RELAY_TO_SELF     = 280;\n    STOP_SRC_ADDR_TOO_LONG     = 320;\n    STOP_DST_ADDR_TOO_LONG     = 321;\n    STOP_SRC_MULTIADDR_INVALID = 350;\n    STOP_DST_MULTIADDR_INVALID = 351;\n    STOP_RELAY_REFUSED         = 390;\n    MALFORMED_MESSAGE          = 400;\n  }\n\n  enum Type { // RPC identifier, either HOP, STOP or STATUS\n    HOP = 1;\n    STOP = 2;\n    STATUS = 3;\n    CAN_HOP = 4;\n  }\n\n  message Peer {\n    required bytes id = 1;    // peer id\n    repeated bytes addrs = 2; // peer's known addresses\n  }\n\n  optional Type type = 1;     // Type of the message\n\n  optional Peer srcPeer = 2;  // srcPeer and dstPeer are used when Type is HOP or STATUS\n  optional Peer dstPeer = 3;\n\n  optional Status code = 4;   // Status code, used when Type is STATUS\n}\n")
        }
        , {
            protons: 397
        }],
        430: [function(e, t, r) {
            "use strict";
            const i = e("merge-options")
              , {dnsaddrResolver: n} = e("multiaddr/src/resolvers")
              , s = e("./constants")
              , {FaultTolerance: o} = e("./transport-manager")
              , a = {
                addresses: {
                    listen: [],
                    announce: [],
                    noAnnounce: []
                },
                connectionManager: {
                    minConnections: 25
                },
                transportManager: {
                    faultTolerance: o.FATAL_ALL
                },
                dialer: {
                    maxParallelDials: s.MAX_PARALLEL_DIALS,
                    maxDialsPerPeer: s.MAX_PER_PEER_DIALS,
                    dialTimeout: s.DIAL_TIMEOUT,
                    resolvers: {
                        dnsaddr: n
                    }
                },
                metrics: {
                    enabled: !1
                },
                peerStore: {
                    persistence: !1,
                    threshold: 5
                },
                config: {
                    dht: {
                        enabled: !1,
                        kBucketSize: 20,
                        randomWalk: {
                            enabled: !1,
                            queriesPerPeriod: 1,
                            interval: 3e5,
                            timeout: 1e4
                        }
                    },
                    peerDiscovery: {
                        autoDial: !0
                    },
                    pubsub: {
                        enabled: !0,
                        emitSelf: !0,
                        signMessages: !0,
                        strictSigning: !0
                    },
                    relay: {
                        enabled: !0,
                        hop: {
                            enabled: !1,
                            active: !1
                        }
                    },
                    transport: {}
                }
            };
            t.exports.validate = e=>{
                if ((e = i(a, e)).modules.transport.length < 1)
                    throw new Error("'options.modules.transport' must contain at least 1 transport");
                return e
            }
        }
        , {
            "./constants": 434,
            "./transport-manager": 470,
            "merge-options": 283,
            "multiaddr/src/resolvers": 294
        }],
        431: [function(e, t, r) {
            "use strict";
            const i = e("debug")
              , n = i("libp2p:connection-manager");
            n.error = i("libp2p:connection-manager:error");
            const s = e("err-code")
              , o = e("merge-options")
              , a = e("./latency-monitor")
              , c = e("retimer")
              , {EventEmitter: u} = e("events")
              , f = e("peer-id")
              , {ERR_INVALID_PARAMETERS: h} = e("../errors")
              , l = {
                maxConnections: 1 / 0,
                minConnections: 0,
                maxData: 1 / 0,
                maxSentData: 1 / 0,
                maxReceivedData: 1 / 0,
                maxEventLoopDelay: 1 / 0,
                pollInterval: 2e3,
                autoDialInterval: 1e4,
                movingAverageInterval: 6e4,
                defaultPeerValue: 1
            };
            function d(e, t) {
                return e[1] - t[1]
            }
            t.exports = class extends u {
                constructor(e, t) {
                    if (super(),
                    this._libp2p = e,
                    this._peerId = e.peerId.toB58String(),
                    this._options = o.call({
                        ignoreUndefined: !0
                    }, l, t),
                    this._options.maxConnections < this._options.minConnections)
                        throw s(new Error("Connection Manager maxConnections must be greater than minConnections"), h);
                    n("options: %j", this._options),
                    this._libp2p = e,
                    this._peerValues = new Map,
                    this.connections = new Map,
                    this._started = !1,
                    this._timer = null,
                    this._autoDialTimeout = null,
                    this._checkMetrics = this._checkMetrics.bind(this),
                    this._autoDial = this._autoDial.bind(this)
                }
                get size() {
                    return Array.from(this.connections.values()).reduce((e,t)=>e + t.length, 0)
                }
                start() {
                    this._libp2p.metrics && (this._timer = this._timer || c(this._checkMetrics, this._options.pollInterval)),
                    this._latencyMonitor = new a({
                        latencyCheckIntervalMs: this._options.pollInterval,
                        dataEmitIntervalMs: this._options.pollInterval
                    }),
                    this._onLatencyMeasure = this._onLatencyMeasure.bind(this),
                    this._latencyMonitor.on("data", this._onLatencyMeasure),
                    this._started = !0,
                    n("started"),
                    this._options.autoDial && this._autoDial()
                }
                async stop() {
                    this._autoDialTimeout && this._autoDialTimeout.clear(),
                    this._timer && this._timer.clear(),
                    this._latencyMonitor && this._latencyMonitor.removeListener("data", this._onLatencyMeasure),
                    this._started = !1,
                    await this._close(),
                    n("stopped")
                }
                async _close() {
                    const e = [];
                    for (const t of this.connections.values())
                        for (const r of t)
                            e.push(r.close());
                    await e,
                    this.connections.clear()
                }
                setPeerValue(e, t) {
                    if (t < 0 || t > 1)
                        throw new Error("value should be a number between 0 and 1");
                    e.toB58String && (e = e.toB58String()),
                    this._peerValues.set(e, t)
                }
                _checkMetrics() {
                    const e = this._libp2p.metrics.global.movingAverages
                      , t = e.dataReceived[this._options.movingAverageInterval].movingAverage();
                    this._checkMaxLimit("maxReceivedData", t);
                    const r = e.dataSent[this._options.movingAverageInterval].movingAverage();
                    this._checkMaxLimit("maxSentData", r);
                    const i = t + r;
                    this._checkMaxLimit("maxData", i),
                    n("metrics update", i),
                    this._timer = c(this._checkMetrics, this._options.pollInterval)
                }
                onConnect(e) {
                    const t = e.remotePeer
                      , r = t.toB58String()
                      , i = this.connections.get(r);
                    this.emit("peer:connect", e),
                    i ? i.push(e) : this.connections.set(r, [e]),
                    this._libp2p.peerStore.keyBook.set(t, t.pubKey),
                    this._peerValues.has(r) || this._peerValues.set(r, this._options.defaultPeerValue),
                    this._checkMaxLimit("maxConnections", this.size)
                }
                onDisconnect(e) {
                    const t = e.remotePeer.toB58String();
                    let r = this.connections.get(t);
                    r && r.length > 1 ? (r = r.filter(t=>t.id !== e.id),
                    this.connections.set(t, r)) : r && (this.connections.delete(t),
                    this._peerValues.delete(e.remotePeer.toB58String()),
                    this.emit("peer:disconnect", e))
                }
                get(e) {
                    const t = this.getAll(e);
                    return t.length ? t[0] : null
                }
                getAll(e) {
                    if (!f.isPeerId(e))
                        throw s(new Error("peerId must be an instance of peer-id"), h);
                    const t = e.toB58String()
                      , r = this.connections.get(t);
                    return r ? r.filter(e=>"open" === e.stat.status) : []
                }
                _onLatencyMeasure(e) {
                    this._checkMaxLimit("maxEventLoopDelay", e.avgMs)
                }
                _checkMaxLimit(e, t) {
                    const r = this._options[e];
                    n("checking limit of %s. current value: %d of %d", e, t, r),
                    t > r && (n("%s: limit exceeded: %s, %d", this._peerId, e, t),
                    this._maybeDisconnectOne())
                }
                async _autoDial() {
                    const e = this._options.minConnections;
                    if (this.size >= e)
                        return void (this._autoDialTimeout = c(this._autoDial, this._options.autoDialInterval));
                    const t = Array.from(this._libp2p.peerStore.peers.values()).sort((e,t)=>!t.protocols || !t.protocols.length || e.protocols && e.protocols.length ? t.id.pubKey && !e.id.pubKey ? 1 : -1 : 1);
                    for (let r = 0; r < t.length && this.size < e; r++)
                        if (!this.get(t[r].id)) {
                            n("connecting to a peerStore stored peer %s", t[r].id.toB58String());
                            try {
                                if (await this._libp2p.dialer.connectToPeer(t[r].id),
                                !this._started)
                                    return
                            } catch (e) {
                                n.error("could not connect to peerStore stored peer", e)
                            }
                        }
                    this._autoDialTimeout = c(this._autoDial, this._options.autoDialInterval)
                }
                _maybeDisconnectOne() {
                    if (this._options.minConnections < this.connections.size) {
                        const e = Array.from(this._peerValues).sort(d);
                        n("%s: sorted peer values: %j", this._peerId, e);
                        const t = e[0];
                        if (t) {
                            const e = t[0];
                            n("%s: lowest value peer is %s", this._peerId, e),
                            n("%s: closing a connection to %j", this._peerId, e);
                            for (const t of this.connections.values())
                                if (t[0].remotePeer.toB58String() === e) {
                                    t[0].close();
                                    break
                                }
                        }
                    }
                }
            }
        }
        , {
            "../errors": 438,
            "./latency-monitor": 432,
            debug: 172,
            "err-code": 193,
            events: 83,
            "merge-options": 283,
            "peer-id": 372,
            retimer: 399
        }],
        432: [function(e, t, r) {
            "use strict";
            const i = e("ipfs-utils/src/globalthis")
              , n = e("events")
              , s = e("./visibility-change-emitter")
              , o = e("debug")("latency-monitor:LatencyMonitor");
            t.exports = class extends n {
                constructor({latencyCheckIntervalMs: e, dataEmitIntervalMs: t, asyncTestFn: r, latencyRandomPercentage: n}={}) {
                    super();
                    const a = this;
                    a.latencyCheckIntervalMs = e || 500,
                    a.latencyRandomPercentage = n || 10,
                    a._latecyCheckMultiply = a.latencyRandomPercentage / 100 * 2 * a.latencyCheckIntervalMs,
                    a._latecyCheckSubtract = a._latecyCheckMultiply / 2,
                    a.dataEmitIntervalMs = null === t || 0 === t ? void 0 : t || 5e3,
                    o("latencyCheckIntervalMs: %s dataEmitIntervalMs: %s", a.latencyCheckIntervalMs, a.dataEmitIntervalMs),
                    a.dataEmitIntervalMs ? o("Expecting ~%s events per summary", a.latencyCheckIntervalMs / a.dataEmitIntervalMs) : o("Not emitting summaries"),
                    a.asyncTestFn = r,
                    i.process && i.process.hrtime ? (o("Using process.hrtime for timing"),
                    a.now = i.process.hrtime,
                    a.getDeltaMS = e=>{
                        const t = a.now(e);
                        return 1e3 * t[0] + t[1] / 1e6
                    }
                    ) : "undefined" != typeof window && window.performance && window.performance.now ? (o("Using performance.now for timing"),
                    a.now = window.performance.now.bind(window.performance),
                    a.getDeltaMS = e=>Math.round(a.now() - e)) : (o("Using Date.now for timing"),
                    a.now = Date.now,
                    a.getDeltaMS = e=>a.now() - e),
                    a._latencyData = a._initLatencyData(),
                    "undefined" != typeof window && (a._visibilityChangeEmitter = new s,
                    a._visibilityChangeEmitter.on("visibilityChange", e=>{
                        e ? a._startTimers() : (a._emitSummary(),
                        a._stopTimers())
                    }
                    )),
                    a._visibilityChangeEmitter && !a._visibilityChangeEmitter.isVisible() || a._startTimers()
                }
                _startTimers() {
                    this._checkLatencyID || (this._checkLatency(),
                    this.dataEmitIntervalMs && (this._emitIntervalID = setInterval(()=>this._emitSummary(), this.dataEmitIntervalMs),
                    "function" == typeof this._emitIntervalID.unref && this._emitIntervalID.unref()))
                }
                _stopTimers() {
                    this._checkLatencyID && (clearTimeout(this._checkLatencyID),
                    this._checkLatencyID = void 0),
                    this._emitIntervalID && (clearInterval(this._emitIntervalID),
                    this._emitIntervalID = void 0)
                }
                _emitSummary() {
                    const e = this.getSummary();
                    e.events > 0 && this.emit("data", e)
                }
                getSummary() {
                    const e = {
                        events: this._latencyData.events,
                        minMs: this._latencyData.minMs,
                        maxMs: this._latencyData.maxMs,
                        avgMs: this._latencyData.events ? this._latencyData.totalMs / this._latencyData.events : Number.POSITIVE_INFINITY,
                        lengthMs: this.getDeltaMS(this._latencyData.startTime)
                    };
                    return this._latencyData = this._initLatencyData(),
                    o("Summary: %O", e),
                    e
                }
                _checkLatency() {
                    const e = this
                      , t = Math.random() * e._latecyCheckMultiply - e._latecyCheckSubtract
                      , r = {
                        deltaOffset: Math.ceil(e.latencyCheckIntervalMs + t),
                        startTime: e.now()
                    }
                      , i = ()=>{
                        if (!this._checkLatencyID)
                            return;
                        const t = e.getDeltaMS(r.startTime) - r.deltaOffset;
                        e._checkLatency(),
                        e._latencyData.events++,
                        e._latencyData.minMs = Math.min(e._latencyData.minMs, t),
                        e._latencyData.maxMs = Math.max(e._latencyData.maxMs, t),
                        e._latencyData.totalMs += t,
                        o("MS: %s Data: %O", t, e._latencyData)
                    }
                    ;
                    o("localData: %O", r),
                    this._checkLatencyID = setTimeout(()=>{
                        e.asyncTestFn ? (r.deltaOffset = 0,
                        r.startTime = e.now(),
                        e.asyncTestFn(i)) : (r.deltaOffset -= 1,
                        i())
                    }
                    , r.deltaOffset),
                    "function" == typeof this._checkLatencyID.unref && this._checkLatencyID.unref()
                }
                _initLatencyData() {
                    return {
                        startTime: this.now(),
                        minMs: Number.POSITIVE_INFINITY,
                        maxMs: Number.NEGATIVE_INFINITY,
                        events: 0,
                        totalMs: 0
                    }
                }
            }
        }
        , {
            "./visibility-change-emitter": 433,
            debug: 172,
            events: 83,
            "ipfs-utils/src/globalthis": 228
        }],
        433: [function(e, t, r) {
            "use strict";
            const i = e("events")
              , n = e("debug")("latency-monitor:VisibilityChangeEmitter");
            t.exports = class extends i {
                constructor() {
                    super(),
                    "undefined" != typeof document ? (this._initializeVisibilityVarNames(),
                    this._addVisibilityChangeListener()) : n('This is not a browser, no "document" found. Stopping.')
                }
                _initializeVisibilityVarNames() {
                    let e, t;
                    void 0 !== document.hidden ? (e = "hidden",
                    t = "visibilitychange") : void 0 !== document.mozHidden ? (e = "mozHidden",
                    t = "mozvisibilitychange") : void 0 !== document.msHidden ? (e = "msHidden",
                    t = "msvisibilitychange") : void 0 !== document.webkitHidden && (e = "webkitHidden",
                    t = "webkitvisibilitychange"),
                    this._hidden = e,
                    this._visibilityChange = t
                }
                _addVisibilityChangeListener() {
                    void 0 === document.addEventListener || void 0 === document[this._hidden] ? n("Checking page visibility requires a browser that supports the Page Visibility API.") : document.addEventListener(this._visibilityChange, this._handleVisibilityChange.bind(this), !1)
                }
                isVisible() {
                    if (void 0 !== this._hidden && void 0 !== document[this._hidden])
                        return !document[this._hidden]
                }
                _handleVisibilityChange() {
                    const e = !document[this._hidden];
                    n(e ? "Page Visible" : "Page Hidden"),
                    this.emit("visibilityChange", e)
                }
            }
        }
        , {
            debug: 172,
            events: 83
        }],
        434: [function(e, t, r) {
            "use strict";
            t.exports = {
                DIAL_TIMEOUT: 3e4,
                MAX_PARALLEL_DIALS: 100,
                MAX_PER_PEER_DIALS: 4,
                METRICS: {
                    computeThrottleMaxQueueSize: 1e3,
                    computeThrottleTimeout: 2e3,
                    movingAverageIntervals: [6e4, 3e5, 9e5],
                    maxOldPeersRetention: 50
                }
            }
        }
        , {}],
        435: [function(e, t, r) {
            "use strict";
            const i = e("err-code")
              , {messages: n, codes: s} = e("./errors")
              , o = e("it-all")
              , a = e("p-any");
            t.exports = e=>{
                const t = e._modules.contentRouting || []
                  , r = e._dht;
                return r && t.unshift(r),
                {
                    async*findProviders(e, r) {
                        if (!t.length)
                            throw i(new Error("No content routers available"), "NO_ROUTERS_AVAILABLE");
                        const n = await a(t.map(async t=>{
                            const n = await o(t.findProviders(e, r));
                            if (!n || !n.length)
                                throw i(new Error("not found"), "NOT_FOUND");
                            return n
                        }
                        ));
                        for (const e of n)
                            yield e
                    },
                    async provide(e) {
                        if (!t.length)
                            throw i(new Error("No content routers available"), "NO_ROUTERS_AVAILABLE");
                        return Promise.all(t.map(t=>t.provide(e)))
                    },
                    async put(t, o, a) {
                        if (!e.isStarted() || !r.isStarted)
                            throw i(new Error(n.NOT_STARTED_YET), s.DHT_NOT_STARTED);
                        return r.put(t, o, a)
                    },
                    async get(t, o) {
                        if (!e.isStarted() || !r.isStarted)
                            throw i(new Error(n.NOT_STARTED_YET), s.DHT_NOT_STARTED);
                        return r.get(t, o)
                    },
                    async getMany(t, o, a) {
                        if (!e.isStarted() || !r.isStarted)
                            throw i(new Error(n.NOT_STARTED_YET), s.DHT_NOT_STARTED);
                        return r.getMany(t, o, a)
                    }
                }
            }
        }
        , {
            "./errors": 438,
            "err-code": 193,
            "it-all": 232,
            "p-any": 363
        }],
        436: [function(e, t, r) {
            "use strict";
            const i = e("abort-controller")
              , n = e("any-signal")
              , s = e("debug")
              , o = e("err-code");
            s("libp2p:dialer:request").error = s("libp2p:dialer:request:error");
            const a = e("p-fifo")
              , c = e("p-any");
            t.exports.DialRequest = class {
                constructor({addrs: e, dialAction: t, dialer: r}) {
                    this.addrs = e,
                    this.dialer = r,
                    this.dialAction = t
                }
                async run(e) {
                    const t = this.dialer.getTokens(this.addrs.length);
                    if (t.length < 1)
                        throw o(new Error("No dial tokens available"), "ERR_NO_DIAL_TOKENS");
                    const r = new a;
                    t.forEach(e=>r.push(e));
                    const s = this.addrs.map(()=>new i);
                    let u = 0;
                    try {
                        return await c(this.addrs.map(async(i,o)=>{
                            const a = await r.shift();
                            let c;
                            try {
                                const f = s[o].signal;
                                c = await this.dialAction(i, {
                                    ...e,
                                    signal: n([f, e.signal])
                                }),
                                s.splice(o, 1)
                            } finally {
                                u++,
                                this.addrs.length - u >= t.length ? r.push(a) : this.dialer.releaseToken(t.splice(t.indexOf(a), 1)[0])
                            }
                            return c
                        }
                        ))
                    } finally {
                        s.map(e=>e.abort()),
                        t.forEach(e=>this.dialer.releaseToken(e))
                    }
                }
            }
        }
        , {
            "abort-controller": 158,
            "any-signal": 163,
            debug: 172,
            "err-code": 193,
            "p-any": 363,
            "p-fifo": 366
        }],
        437: [function(e, t, r) {
            "use strict";
            const i = e("multiaddr")
              , n = e("err-code")
              , s = e("timeout-abort-controller")
              , o = e("any-signal")
              , a = e("debug")
              , c = a("libp2p:dialer");
            c.error = a("libp2p:dialer:error");
            const {DialRequest: u} = e("./dial-request")
              , f = e("../get-peer")
              , {codes: h} = e("../errors")
              , {DIAL_TIMEOUT: l, MAX_PARALLEL_DIALS: d, MAX_PER_PEER_DIALS: p} = e("../constants");
            t.exports = class {
                constructor({transportManager: e, peerStore: t, concurrency: r=d, timeout: n=l, perPeerLimit: s=p, resolvers: o={}}) {
                    this.transportManager = e,
                    this.peerStore = t,
                    this.concurrency = r,
                    this.timeout = n,
                    this.perPeerLimit = s,
                    this.tokens = [...new Array(r)].map((e,t)=>t),
                    this._pendingDials = new Map;
                    for (const [e,t] of Object.entries(o))
                        i.resolvers.set(e, t)
                }
                destroy() {
                    for (const e of this._pendingDials.values())
                        try {
                            e.controller.abort()
                        } catch (e) {
                            c.error(e)
                        }
                    this._pendingDials.clear()
                }
                async connectToPeer(e, t={}) {
                    const r = await this._createDialTarget(e);
                    if (!r.addrs.length)
                        throw n(new Error("The dial request has no addresses"), h.ERR_NO_VALID_ADDRESSES);
                    const i = this._pendingDials.get(r.id) || this._createPendingDial(r, t);
                    try {
                        const e = await i.promise;
                        return c("dial succeeded to %s", r.id),
                        e
                    } catch (e) {
                        throw i.controller.signal.aborted && (e.code = h.ERR_TIMEOUT),
                        c.error(e),
                        e
                    } finally {
                        i.destroy()
                    }
                }
                async _createDialTarget(e) {
                    const {id: t, multiaddrs: r} = f(e);
                    r && this.peerStore.addressBook.add(t, r);
                    let n = this.peerStore.addressBook.getMultiaddrsForPeer(t) || [];
                    i.isMultiaddr(e) && (n = n.filter(t=>!e.equals(t))).unshift(e);
                    const s = [];
                    for (const e of n) {
                        (await this._resolve(e)).forEach(e=>s.push(e))
                    }
                    return {
                        id: t.toB58String(),
                        addrs: s
                    }
                }
                _createPendingDial(e, t) {
                    const r = new u({
                        addrs: e.addrs,
                        dialAction: (e,t)=>{
                            if (t.signal.aborted)
                                throw n(new Error("already aborted"), h.ERR_ALREADY_ABORTED);
                            return this.transportManager.dial(e, t)
                        }
                        ,
                        dialer: this
                    })
                      , i = new s(this.timeout)
                      , a = [i.signal];
                    t.signal && a.push(t.signal);
                    const c = o(a)
                      , f = {
                        dialRequest: r,
                        controller: i,
                        promise: r.run({
                            ...t,
                            signal: c
                        }),
                        destroy: ()=>{
                            i.clear(),
                            this._pendingDials.delete(e.id)
                        }
                    };
                    return this._pendingDials.set(e.id, f),
                    f
                }
                getTokens(e) {
                    const t = Math.min(e, this.perPeerLimit, this.tokens.length)
                      , r = this.tokens.splice(0, t);
                    return c("%d tokens request, returning %d, %d remaining", e, t, this.tokens.length),
                    r
                }
                releaseToken(e) {
                    this.tokens.indexOf(e) > -1 || (c("token %d released", e),
                    this.tokens.push(e))
                }
                async _resolve(e) {
                    if (!e.protoNames().includes("dnsaddr"))
                        return [e];
                    const t = await this._resolveRecord(e);
                    return (await Promise.all(t.map(e=>this._resolve(e)))).flat().reduce((e,t)=>(e.find(e=>e.equals(t)) || e.push(t),
                    e), [])
                }
                async _resolveRecord(e) {
                    try {
                        return e = i(e.toString()),
                        await e.resolve()
                    } catch (t) {
                        return c.error(`multiaddr ${e} could not be resolved`),
                        []
                    }
                }
            }
        }
        , {
            "../constants": 434,
            "../errors": 438,
            "../get-peer": 439,
            "./dial-request": 436,
            "any-signal": 163,
            debug: 172,
            "err-code": 193,
            multiaddr: 290,
            "timeout-abort-controller": 407
        }],
        438: [function(e, t, r) {
            "use strict";
            r.messages = {
                NOT_STARTED_YET: "The libp2p node is not started yet",
                DHT_DISABLED: "DHT is not available",
                CONN_ENCRYPTION_REQUIRED: "At least one connection encryption module is required"
            },
            r.codes = {
                DHT_DISABLED: "ERR_DHT_DISABLED",
                PUBSUB_NOT_STARTED: "ERR_PUBSUB_NOT_STARTED",
                DHT_NOT_STARTED: "ERR_DHT_NOT_STARTED",
                CONN_ENCRYPTION_REQUIRED: "ERR_CONN_ENCRYPTION_REQUIRED",
                ERR_CONNECTION_ENDED: "ERR_CONNECTION_ENDED",
                ERR_CONNECTION_FAILED: "ERR_CONNECTION_FAILED",
                ERR_NODE_NOT_STARTED: "ERR_NODE_NOT_STARTED",
                ERR_ALREADY_ABORTED: "ERR_ALREADY_ABORTED",
                ERR_NO_VALID_ADDRESSES: "ERR_NO_VALID_ADDRESSES",
                ERR_DISCOVERED_SELF: "ERR_DISCOVERED_SELF",
                ERR_DUPLICATE_TRANSPORT: "ERR_DUPLICATE_TRANSPORT",
                ERR_ENCRYPTION_FAILED: "ERR_ENCRYPTION_FAILED",
                ERR_HOP_REQUEST_FAILED: "ERR_HOP_REQUEST_FAILED",
                ERR_INVALID_KEY: "ERR_INVALID_KEY",
                ERR_INVALID_MESSAGE: "ERR_INVALID_MESSAGE",
                ERR_INVALID_PARAMETERS: "ERR_INVALID_PARAMETERS",
                ERR_INVALID_PEER: "ERR_INVALID_PEER",
                ERR_MUXER_UNAVAILABLE: "ERR_MUXER_UNAVAILABLE",
                ERR_TIMEOUT: "ERR_TIMEOUT",
                ERR_TRANSPORT_UNAVAILABLE: "ERR_TRANSPORT_UNAVAILABLE",
                ERR_TRANSPORT_DIAL_FAILED: "ERR_TRANSPORT_DIAL_FAILED",
                ERR_UNSUPPORTED_PROTOCOL: "ERR_UNSUPPORTED_PROTOCOL",
                ERR_INVALID_MULTIADDR: "ERR_INVALID_MULTIADDR",
                ERR_SIGNATURE_NOT_VALID: "ERR_SIGNATURE_NOT_VALID"
            }
        }
        , {}],
        439: [function(e, t, r) {
            "use strict";
            const i = e("peer-id")
              , n = e("multiaddr")
              , s = e("err-code")
              , {codes: o} = e("./errors");
            t.exports = function(e) {
                let t;
                if ("string" == typeof e && (e = n(e)),
                n.isMultiaddr(e)) {
                    t = e;
                    try {
                        e = i.createFromB58String(e.getPeerId())
                    } catch (t) {
                        throw s(new Error(`${e} is not a valid peer type`), o.ERR_INVALID_MULTIADDR)
                    }
                }
                return {
                    id: e,
                    multiaddrs: t ? [t] : void 0
                }
            }
        }
        , {
            "./errors": 438,
            "err-code": 193,
            multiaddr: 290,
            "peer-id": 372
        }],
        440: [function(e, t, r) {
            "use strict";
            const i = e("../../package.json").version;
            t.exports.PROTOCOL_VERSION = "ipfs/0.1.0",
            t.exports.AGENT_VERSION = `js-libp2p/${i}`,
            t.exports.MULTICODEC_IDENTIFY = "/ipfs/id/1.0.0",
            t.exports.MULTICODEC_IDENTIFY_PUSH = "/ipfs/id/push/1.0.0"
        }
        , {
            "../../package.json": 420
        }],
        441: [function(e, t, r) {
            "use strict";
            const i = e("debug")
              , n = i("libp2p:identify");
            n.error = i("libp2p:identify:error");
            const s = e("err-code")
              , o = e("it-protocol-buffers")
              , a = e("it-length-prefixed")
              , c = e("it-pipe")
              , {collect: u, take: f, consume: h} = e("streaming-iterables")
              , l = e("uint8arrays/from-string")
              , d = e("peer-id")
              , p = e("multiaddr")
              , {toBuffer: b} = e("it-buffer")
              , g = e("./message")
              , m = e("../record/envelope")
              , y = e("../record/peer-record")
              , {MULTICODEC_IDENTIFY: v, MULTICODEC_IDENTIFY_PUSH: w, AGENT_VERSION: E, PROTOCOL_VERSION: _} = e("./consts")
              , {codes: S} = e("../errors");
            class k {
                static getCleanMultiaddr(e) {
                    if (e && e.length > 0)
                        try {
                            return p(e)
                        } catch (e) {
                            return null
                        }
                    return null
                }
                constructor({libp2p: e, protocols: t}) {
                    this.peerStore = e.peerStore,
                    this.connectionManager = e.connectionManager,
                    this.connectionManager.on("peer:connect", e=>{
                        const t = e.remotePeer;
                        this.identify(e, t).catch(n.error)
                    }
                    ),
                    this.peerId = e.peerId,
                    this._libp2p = e,
                    this._protocols = t,
                    this.handleMessage = this.handleMessage.bind(this)
                }
                async push(e) {
                    const t = await this._getSelfPeerRecord()
                      , r = this._libp2p.multiaddrs.map(e=>e.bytes)
                      , i = Array.from(this._protocols.keys())
                      , s = e.map(async e=>{
                        try {
                            const {stream: n} = await e.newStream(w);
                            await c([{
                                listenAddrs: r,
                                signedPeerRecord: t,
                                protocols: i
                            }], o.encode(g), n, h)
                        } catch (e) {
                            n.error("could not push identify update to peer", e)
                        }
                    }
                    );
                    return Promise.all(s)
                }
                pushToPeerStore(e) {
                    const t = [];
                    let r;
                    for (const i of e.peers.values())
                        i.protocols.includes(w) && (r = this.connectionManager.get(i.id)) && t.push(r);
                    this.push(t)
                }
                async identify(e) {
                    const {stream: t} = await e.newStream(v)
                      , [r] = await c([], t, a.decode(), f(1), b, u);
                    if (!r)
                        throw s(new Error("No data could be retrieved"), S.ERR_CONNECTION_ENDED);
                    let i;
                    try {
                        i = g.decode(r)
                    } catch (e) {
                        throw s(e, S.ERR_INVALID_MESSAGE)
                    }
                    let {publicKey: o, listenAddrs: h, protocols: w, observedAddr: E, signedPeerRecord: _} = i;
                    const A = await d.createFromPubKey(o);
                    if (e.remotePeer.toB58String() !== A.toB58String())
                        throw s(new Error("identified peer does not match the expected peer"), S.ERR_INVALID_PEER);
                    E = k.getCleanMultiaddr(E);
                    try {
                        const e = await m.openAndCertify(_, y.DOMAIN);
                        if (this.peerStore.addressBook.consumePeerRecord(e))
                            return void this.peerStore.protoBook.set(A, w)
                    } catch (e) {
                        n("received invalid envelope, discard it and fallback to listenAddrs is available", e)
                    }
                    try {
                        this.peerStore.addressBook.set(A, h.map(e=>p(e)))
                    } catch (e) {
                        n.error("received invalid addrs", e)
                    }
                    this.peerStore.protoBook.set(A, w),
                    this.peerStore.metadataBook.set(A, "AgentVersion", l(i.agentVersion)),
                    n("received observed address of %s", E)
                }
                handleMessage({connection: e, stream: t, protocol: r}) {
                    switch (r) {
                    case v:
                        return this._handleIdentify({
                            connection: e,
                            stream: t
                        });
                    case w:
                        return this._handlePush({
                            connection: e,
                            stream: t
                        });
                    default:
                        n.error("cannot handle unknown protocol %s", r)
                    }
                }
                async _handleIdentify({connection: e, stream: t}) {
                    let r = new Uint8Array(0);
                    this.peerId.pubKey && (r = this.peerId.pubKey.bytes);
                    const i = await this._getSelfPeerRecord()
                      , s = g.encode({
                        protocolVersion: _,
                        agentVersion: E,
                        publicKey: r,
                        listenAddrs: this._libp2p.multiaddrs.map(e=>e.bytes),
                        signedPeerRecord: i,
                        observedAddr: e.remoteAddr.bytes,
                        protocols: Array.from(this._protocols.keys())
                    });
                    try {
                        await c([s], a.encode(), t, h)
                    } catch (e) {
                        n.error("could not respond to identify request", e)
                    }
                }
                async _handlePush({connection: e, stream: t}) {
                    let r;
                    try {
                        const [e] = await c([], t, a.decode(), f(1), b, u);
                        r = g.decode(e)
                    } catch (e) {
                        return n.error("received invalid message", e)
                    }
                    const i = e.remotePeer;
                    try {
                        const e = await m.openAndCertify(r.signedPeerRecord, y.DOMAIN);
                        if (this.peerStore.addressBook.consumePeerRecord(e))
                            return void this.peerStore.protoBook.set(i, r.protocols)
                    } catch (e) {
                        n("received invalid envelope, discard it and fallback to listenAddrs is available", e)
                    }
                    try {
                        this.peerStore.addressBook.set(i, r.listenAddrs.map(e=>p(e)))
                    } catch (e) {
                        n.error("received invalid addrs", e)
                    }
                    this.peerStore.protoBook.set(i, r.protocols)
                }
                async _getSelfPeerRecord() {
                    const e = this.peerStore.addressBook.getRawEnvelope(this.peerId);
                    if (e)
                        return e;
                    try {
                        const e = new y({
                            peerId: this.peerId,
                            multiaddrs: this._libp2p.multiaddrs
                        })
                          , t = await m.seal(e, this.peerId);
                        return this.peerStore.addressBook.consumePeerRecord(t),
                        this.peerStore.addressBook.getRawEnvelope(this.peerId)
                    } catch (e) {
                        n.error("failed to get self peer record")
                    }
                    return null
                }
            }
            t.exports.IdentifyService = k,
            t.exports.multicodecs = {
                IDENTIFY: v,
                IDENTIFY_PUSH: w
            },
            t.exports.Message = g
        }
        , {
            "../errors": 438,
            "../record/envelope": 465,
            "../record/peer-record": 467,
            "./consts": 440,
            "./message": 442,
            debug: 172,
            "err-code": 193,
            "it-buffer": 233,
            "it-length-prefixed": 238,
            "it-pipe": 243,
            "it-protocol-buffers": 244,
            multiaddr: 290,
            "peer-id": 372,
            "streaming-iterables": 406,
            "uint8arrays/from-string": 412
        }],
        442: [function(e, t, r) {
            "use strict";
            const i = e("protons");
            t.exports = i("\nmessage Identify {\n  // protocolVersion determines compatibility between peers\n  optional string protocolVersion = 5; // e.g. ipfs/1.0.0\n\n  // agentVersion is like a UserAgent string in browsers, or client version in bittorrent\n  // includes the client name and client.\n  optional string agentVersion = 6; // e.g. go-ipfs/0.1.0\n\n  // publicKey is this node's public key (which also gives its node.ID)\n  // - may not need to be sent, as secure channel implies it has been sent.\n  // - then again, if we change / disable secure channel, may still want it.\n  optional bytes publicKey = 1;\n\n  // listenAddrs are the multiaddrs the sender node listens for open connections on\n  repeated bytes listenAddrs = 2;\n\n  // oservedAddr is the multiaddr of the remote endpoint that the sender node perceives\n  // this is useful information to convey to the other side, as it helps the remote endpoint\n  // determine whether its connection to the local peer goes through NAT.\n  optional bytes observedAddr = 4;\n\n  repeated string protocols = 3;\n\n  // signedPeerRecord contains a serialized SignedEnvelope containing a PeerRecord,\n  // signed by the sending node. It contains the same addresses as the listenAddrs field, but\n  // in a form that lets us share authenticated addrs with other peers.\n  optional bytes signedPeerRecord = 8;\n}\n").Identify
        }
        , {
            protons: 397
        }],
        443: [function(e, t, r) {
            "use strict";
            const {EventEmitter: i} = e("events")
              , n = e("debug")
              , s = e("ipfs-utils/src/globalthis")
              , o = n("libp2p");
            o.error = n("libp2p:error");
            const a = e("err-code")
              , c = e("peer-id")
              , u = e("./peer-routing")
              , f = e("./content-routing")
              , h = e("./get-peer")
              , {validate: l} = e("./config")
              , {codes: d, messages: p} = e("./errors")
              , b = e("./address-manager")
              , g = e("./connection-manager")
              , m = e("./circuit")
              , y = e("./dialer")
              , v = e("./keychain")
              , w = e("./metrics")
              , E = e("./transport-manager")
              , _ = e("./upgrader")
              , S = e("./peer-store")
              , k = e("./pubsub-adapter")
              , A = e("./peer-store/persistent")
              , C = e("./registrar")
              , I = e("./ping")
              , {IdentifyService: T, multicodecs: B} = e("./identify");
            class M extends i {
                constructor(e) {
                    if (super(),
                    this._options = l(e),
                    this.peerId = this._options.peerId,
                    this.datastore = this._options.datastore,
                    this.peerStore = this.datastore && this._options.peerStore.persistence ? new A({
                        peerId: this.peerId,
                        datastore: this.datastore,
                        ...this._options.peerStore
                    }) : new S({
                        peerId: this.peerId
                    }),
                    this.addresses = this._options.addresses,
                    this.addressManager = new b(this._options.addresses),
                    this._modules = this._options.modules,
                    this._config = this._options.config,
                    this._transport = [],
                    this._discovery = new Map,
                    this._options.connectionManager.minPeers && (this._options.connectionManager.minConnections = this._options.connectionManager.minPeers),
                    this.connectionManager = new g(this,{
                        autoDial: this._config.peerDiscovery.autoDial,
                        ...this._options.connectionManager
                    }),
                    this._options.metrics.enabled && (this.metrics = new w({
                        ...this._options.metrics,
                        connectionManager: this.connectionManager
                    })),
                    this._options.keychain && this._options.keychain.datastore) {
                        o("creating keychain");
                        const e = v.generateOptions();
                        this.keychain = new v(this._options.keychain.datastore,{
                            passPhrase: this._options.keychain.pass,
                            ...e,
                            ...this._options.keychain
                        }),
                        o("keychain constructed")
                    }
                    if (this.upgrader = new _({
                        localPeer: this.peerId,
                        metrics: this.metrics,
                        onConnection: e=>this.connectionManager.onConnect(e),
                        onConnectionEnd: e=>this.connectionManager.onDisconnect(e)
                    }),
                    this.transportManager = new E({
                        libp2p: this,
                        upgrader: this.upgrader,
                        faultTolerance: this._options.transportManager.faultTolerance
                    }),
                    this.registrar = new C({
                        peerStore: this.peerStore,
                        connectionManager: this.connectionManager
                    }),
                    this.handle = this.handle.bind(this),
                    this.registrar.handle = this.handle,
                    !this._modules.connEncryption || !this._modules.connEncryption.length)
                        throw a(new Error(p.CONN_ENCRYPTION_REQUIRED), d.CONN_ENCRYPTION_REQUIRED);
                    if (this._modules.connEncryption.forEach(e=>{
                        this.upgrader.cryptos.set(e.protocol, e)
                    }
                    ),
                    this.dialer = new y({
                        transportManager: this.transportManager,
                        peerStore: this.peerStore,
                        concurrency: this._options.dialer.maxParallelDials,
                        perPeerLimit: this._options.dialer.maxDialsPerPeer,
                        timeout: this._options.dialer.dialTimeout,
                        resolvers: this._options.dialer.resolvers
                    }),
                    this._modules.transport.forEach(e=>{
                        const t = e.prototype[Symbol.toStringTag]
                          , r = this._config.transport[t];
                        this.transportManager.add(t, e, r)
                    }
                    ),
                    this._config.relay.enabled && this.transportManager.add(m.prototype[Symbol.toStringTag], m),
                    this._modules.streamMuxer) {
                        this._modules.streamMuxer.forEach(e=>{
                            this.upgrader.muxers.set(e.multicodec, e)
                        }
                        ),
                        this.identifyService = new T({
                            libp2p: this,
                            protocols: this.upgrader.protocols
                        }),
                        this.handle(Object.values(B), this.identifyService.handleMessage)
                    }
                    if (this._modules.connProtector)
                        this.upgrader.protector = this._modules.connProtector;
                    else if (void 0 !== s.process && s.process.env && s.process.env.LIBP2P_FORCE_PNET)
                        throw new Error("Private network is enforced, but no protector was provided");
                    if (this._modules.dht) {
                        const e = this._modules.dht;
                        this._dht = new e({
                            libp2p: this,
                            dialer: this.dialer,
                            peerId: this.peerId,
                            peerStore: this.peerStore,
                            registrar: this.registrar,
                            datastore: this.datastore,
                            ...this._config.dht
                        })
                    }
                    if (this._modules.pubsub) {
                        const e = this._modules.pubsub;
                        this.pubsub = k(e, this, this._config.pubsub)
                    }
                    this.peerRouting = u(this),
                    this.contentRouting = f(this),
                    I.mount(this),
                    this._onDiscoveryPeer = this._onDiscoveryPeer.bind(this)
                }
                emit(e, ...t) {
                    "error" !== e || this._events.error ? super.emit(e, ...t) : o.error(...t)
                }
                async start() {
                    o("libp2p is starting");
                    try {
                        await this._onStarting(),
                        await this._onDidStart(),
                        o("libp2p has started")
                    } catch (e) {
                        throw this.emit("error", e),
                        o.error("An error occurred starting libp2p", e),
                        await this.stop(),
                        e
                    }
                }
                async stop() {
                    o("libp2p is stopping");
                    try {
                        for (const e of this._discovery.values())
                            e.removeListener("peer", this._onDiscoveryPeer);
                        await Promise.all(Array.from(this._discovery.values(), e=>e.stop())),
                        this._discovery = new Map,
                        await this.peerStore.stop(),
                        await this.connectionManager.stop(),
                        await Promise.all([this.pubsub && this.pubsub.stop(), this._dht && this._dht.stop(), this.metrics && this.metrics.stop()]),
                        await this.transportManager.close(),
                        I.unmount(this),
                        this.dialer.destroy()
                    } catch (e) {
                        e && (o.error(e),
                        this.emit("error", e))
                    }
                    this._isStarted = !1,
                    o("libp2p has stopped")
                }
                async loadKeychain() {
                    try {
                        await this.keychain.findKeyByName("self")
                    } catch (e) {
                        await this.keychain.importPeer("self", this.peerId)
                    }
                }
                isStarted() {
                    return this._isStarted
                }
                get connections() {
                    return this.connectionManager.connections
                }
                dial(e, t) {
                    return this.dialProtocol(e, null, t)
                }
                async dialProtocol(e, t, r) {
                    const {id: i, multiaddrs: n} = h(e);
                    let s = this.connectionManager.get(i);
                    return s ? n && this.peerStore.addressBook.add(i, n) : s = await this.dialer.connectToPeer(e, r),
                    t ? s.newStream(t) : s
                }
                get multiaddrs() {
                    const e = this.addressManager.getNoAnnounceAddrs();
                    return this.transportManager.getAddrs().concat(this.addressManager.getAnnounceAddrs()).filter((t,r,i)=>i.findIndex(e=>e.equals(t)) === r && !e.find(e=>e.equals(t)))
                }
                async hangUp(e) {
                    const {id: t} = h(e)
                      , r = this.connectionManager.connections.get(t.toB58String());
                    r && await Promise.all(r.map(e=>e.close()))
                }
                ping(e) {
                    const {id: t, multiaddrs: r} = h(e);
                    return I(this, r ? r[0] : t)
                }
                handle(e, t) {
                    (e = Array.isArray(e) ? e : [e]).forEach(e=>{
                        this.upgrader.protocols.set(e, t)
                    }
                    ),
                    this.isStarted() && this.identifyService && this.identifyService.pushToPeerStore(this.peerStore)
                }
                unhandle(e) {
                    (e = Array.isArray(e) ? e : [e]).forEach(e=>{
                        this.upgrader.protocols.delete(e)
                    }
                    ),
                    this.isStarted() && this.identifyService && this.identifyService.pushToPeerStore(this.peerStore)
                }
                async _onStarting() {
                    await this.transportManager.listen(),
                    await this.peerStore.start(),
                    this._config.pubsub.enabled && this.pubsub && this.pubsub.start(),
                    this._config.dht.enabled && (this._dht && this._dht.start(),
                    this._dht.on("peer", this._onDiscoveryPeer)),
                    this.metrics && this.metrics.start()
                }
                async _onDidStart() {
                    this._isStarted = !0,
                    this.peerStore.on("peer", e=>{
                        this.emit("peer:discovery", e),
                        this._maybeConnect(e)
                    }
                    );
                    for (const e of this.peerStore.peers.values())
                        this.emit("peer:discovery", e.id);
                    this.connectionManager.start(),
                    await this._setupPeerDiscovery()
                }
                _onDiscoveryPeer(e) {
                    e.id.toB58String() !== this.peerId.toB58String() ? (e.multiaddrs && this.peerStore.addressBook.add(e.id, e.multiaddrs),
                    e.protocols && this.peerStore.protoBook.set(e.id, e.protocols)) : o.error(new Error(d.ERR_DISCOVERED_SELF))
                }
                async _maybeConnect(e) {
                    if (!0 === this._config.peerDiscovery.autoDial && !this.connectionManager.get(e)) {
                        if ((this._options.connectionManager.minConnections || 0) > this.connectionManager.size) {
                            o("connecting to discovered peer %s", e.toB58String());
                            try {
                                await this.dialer.connectToPeer(e)
                            } catch (e) {
                                o.error("could not connect to discovered peer", e)
                            }
                        }
                    }
                }
                async _setupPeerDiscovery() {
                    const e = e=>{
                        let t = {
                            enabled: !0
                        };
                        if (e.tag && this._config.peerDiscovery && this._config.peerDiscovery[e.tag] && (t = {
                            ...t,
                            ...this._config.peerDiscovery[e.tag]
                        }),
                        t.enabled && !this._discovery.has(e.tag)) {
                            let r;
                            (r = "function" == typeof e ? new e(Object.assign({}, t, {
                                peerId: this.peerId,
                                libp2p: this
                            })) : e).on("peer", this._onDiscoveryPeer),
                            this._discovery.set(e.tag, r)
                        }
                    }
                    ;
                    for (const t of this._modules.peerDiscovery || [])
                        e(t);
                    for (const t of this.transportManager.getTransports())
                        t.discovery && e(t.discovery);
                    await Promise.all(Array.from(this._discovery.values(), e=>e.start()))
                }
            }
            M.create = async function(e={}) {
                if (e.peerId)
                    return new M(e);
                const t = await c.create();
                return e.peerId = t,
                new M(e)
            }
            ,
            t.exports = M
        }
        , {
            "./address-manager": 421,
            "./circuit": 426,
            "./config": 430,
            "./connection-manager": 431,
            "./content-routing": 435,
            "./dialer": 437,
            "./errors": 438,
            "./get-peer": 439,
            "./identify": 441,
            "./keychain": 445,
            "./metrics": 447,
            "./peer-routing": 450,
            "./peer-store": 453,
            "./peer-store/persistent": 457,
            "./ping": 462,
            "./pubsub-adapter": 463,
            "./registrar": 469,
            "./transport-manager": 470,
            "./upgrader": 471,
            debug: 172,
            "err-code": 193,
            events: 83,
            "ipfs-utils/src/globalthis": 228,
            "peer-id": 372
        }],
        444: [function(e, t, r) {
            "use strict";
            e("node-forge/lib/pkcs7"),
            e("node-forge/lib/pbe");
            const i = e("node-forge/lib/forge")
              , {certificateForKey: n, findAsync: s} = e("./util")
              , o = e("err-code")
              , a = e("uint8arrays/from-string")
              , c = e("uint8arrays/to-string");
            t.exports = class {
                constructor(e) {
                    if (!e)
                        throw o(new Error("keychain is required"), "ERR_KEYCHAIN_REQUIRED");
                    this.keychain = e
                }
                async encrypt(e, t) {
                    if (!(t instanceof Uint8Array))
                        throw o(new Error("Plain data must be a Uint8Array"), "ERR_INVALID_PARAMS");
                    const r = await this.keychain.findKeyByName(e)
                      , s = await this.keychain._getPrivateKey(e)
                      , c = i.pki.decryptRsaPrivateKey(s, this.keychain._())
                      , u = await n(r, c)
                      , f = i.pkcs7.createEnvelopedData();
                    f.addRecipient(u),
                    f.content = i.util.createBuffer(t),
                    f.encrypt();
                    const h = i.asn1.toDer(f.toAsn1()).getBytes();
                    return a(h, "ascii")
                }
                async decrypt(e) {
                    if (!(e instanceof Uint8Array))
                        throw o(new Error("CMS data is required"), "ERR_INVALID_PARAMS");
                    let t;
                    try {
                        const r = i.util.createBuffer(c(e, "ascii"))
                          , n = i.asn1.fromDer(r);
                        t = i.pkcs7.messageFromAsn1(n)
                    } catch (e) {
                        throw o(new Error("Invalid CMS: " + e.message), "ERR_INVALID_CMS")
                    }
                    const r = t.recipients.filter(e=>e.issuer.find(e=>"O" === e.shortName && "ipfs" === e.value)).filter(e=>e.issuer.find(e=>"CN" === e.shortName)).map(e=>({
                        recipient: e,
                        keyId: e.issuer.find(e=>"CN" === e.shortName).value
                    }))
                      , n = await s(r, async e=>{
                        try {
                            if (await this.keychain.findKeyById(e.keyId))
                                return !0
                        } catch (e) {
                            return !1
                        }
                        return !1
                    }
                    );
                    if (!n) {
                        const e = r.map(e=>e.keyId);
                        throw o(new Error("Decryption needs one of the key(s): " + e.join(", ")), "ERR_MISSING_KEYS", {
                            missingKeys: e
                        })
                    }
                    const u = await this.keychain.findKeyById(n.keyId)
                      , f = await this.keychain._getPrivateKey(u.name)
                      , h = i.pki.decryptRsaPrivateKey(f, this.keychain._());
                    return t.decrypt(n.recipient, h),
                    a(t.content.getBytes(), "ascii")
                }
            }
        }
        , {
            "./util": 446,
            "err-code": 193,
            "node-forge/lib/forge": 336,
            "node-forge/lib/pbe": 343,
            "node-forge/lib/pkcs7": 347,
            "uint8arrays/from-string": 412,
            "uint8arrays/to-string": 413
        }],
        445: [function(e, t, r) {
            "use strict";
            const i = e("sanitize-filename")
              , n = e("merge-options")
              , s = e("libp2p-crypto")
              , o = e("interface-datastore")
              , a = e("./cms")
              , c = e("err-code")
              , {Number: u} = e("ipfs-utils/src/globalthis")
              , f = e("uint8arrays/to-string")
              , h = e("uint8arrays/from-string");
            e("node-forge/lib/sha512");
            const l = "/pkcs8/"
              , d = "/info/"
              , p = {
                minKeyLength: 14,
                minSaltLength: 16,
                minIterationCount: 1e3
            }
              , b = {
                dek: {
                    keyLength: 64,
                    iterationCount: 1e4,
                    salt: "you should override this value with a crypto secure random number",
                    hash: "sha2-512"
                }
            };
            function g(e) {
                return !!e && ("string" == typeof e && e === i(e.trim()))
            }
            async function m(e) {
                const t = 800 * Math.random() + 200;
                throw await new Promise(e=>setTimeout(e, t)),
                e
            }
            function y(e) {
                return new o.Key(l + e)
            }
            function v(e) {
                return new o.Key(d + e)
            }
            t.exports = class {
                constructor(e, t) {
                    if (!e)
                        throw new Error("store is required");
                    if (this.store = e,
                    this.opts = n(b, t),
                    this.opts.passPhrase && this.opts.passPhrase.length < 20)
                        throw new Error("passPhrase must be least 20 characters");
                    if (this.opts.dek.keyLength < p.minKeyLength)
                        throw new Error(`dek.keyLength must be least ${p.minKeyLength} bytes`);
                    if (this.opts.dek.salt.length < p.minSaltLength)
                        throw new Error(`dek.saltLength must be least ${p.minSaltLength} bytes`);
                    if (this.opts.dek.iterationCount < p.minIterationCount)
                        throw new Error(`dek.iterationCount must be least ${p.minIterationCount}`);
                    const r = this.opts.passPhrase ? s.pbkdf2(this.opts.passPhrase, this.opts.dek.salt, this.opts.dek.iterationCount, this.opts.dek.keyLength, this.opts.dek.hash) : "";
                    Object.defineProperty(this, "_", {
                        value: ()=>r
                    })
                }
                get cms() {
                    return new a(this)
                }
                static generateOptions() {
                    const e = Object.assign({}, b)
                      , t = 3 * Math.ceil(p.minSaltLength / 3);
                    return e.dek.salt = f(s.randomBytes(t), "base64"),
                    e
                }
                static get options() {
                    return b
                }
                async createKey(e, t, r) {
                    const i = this;
                    if (!g(e) || "self" === e)
                        return m(c(new Error(`Invalid key name '${e}'`), "ERR_INVALID_KEY_NAME"));
                    if ("string" != typeof t)
                        return m(c(new Error(`Invalid key type '${t}'`), "ERR_INVALID_KEY_TYPE"));
                    const n = y(e);
                    if (await i.store.has(n))
                        return m(c(new Error(`Key '${e}' already exists`), "ERR_KEY_ALREADY_EXISTS"));
                    switch (t.toLowerCase()) {
                    case "rsa":
                        if (!u.isSafeInteger(r) || r < 2048)
                            return m(c(new Error(`Invalid RSA key size ${r}`), "ERR_INVALID_KEY_SIZE"))
                    }
                    let o;
                    try {
                        const a = await s.keys.generateKeyPair(t, r)
                          , c = await a.id()
                          , u = await a.export(this._());
                        o = {
                            name: e,
                            id: c
                        };
                        const f = i.store.batch();
                        f.put(n, h(u)),
                        f.put(v(e), h(JSON.stringify(o))),
                        await f.commit()
                    } catch (e) {
                        return m(e)
                    }
                    return o
                }
                async listKeys() {
                    const e = this
                      , t = {
                        prefix: d
                    }
                      , r = [];
                    for await(const i of e.store.query(t))
                        r.push(JSON.parse(f(i.value)));
                    return r
                }
                async findKeyById(e) {
                    try {
                        return (await this.listKeys()).find(t=>t.id === e)
                    } catch (e) {
                        return m(e)
                    }
                }
                async findKeyByName(e) {
                    if (!g(e))
                        return m(c(new Error(`Invalid key name '${e}'`), "ERR_INVALID_KEY_NAME"));
                    const t = v(e);
                    try {
                        const e = await this.store.get(t);
                        return JSON.parse(f(e))
                    } catch (t) {
                        return m(c(new Error(`Key '${e}' does not exist. ${t.message}`), "ERR_KEY_NOT_FOUND"))
                    }
                }
                async removeKey(e) {
                    if (!g(e) || "self" === e)
                        return m(c(new Error(`Invalid key name '${e}'`), "ERR_INVALID_KEY_NAME"));
                    const t = y(e)
                      , r = await this.findKeyByName(e)
                      , i = this.store.batch();
                    return i.delete(t),
                    i.delete(v(e)),
                    await i.commit(),
                    r
                }
                async renameKey(e, t) {
                    const r = this;
                    if (!g(e) || "self" === e)
                        return m(c(new Error(`Invalid old key name '${e}'`), "ERR_OLD_KEY_NAME_INVALID"));
                    if (!g(t) || "self" === t)
                        return m(c(new Error(`Invalid new key name '${t}'`), "ERR_NEW_KEY_NAME_INVALID"));
                    const i = y(e)
                      , n = y(t)
                      , s = v(e)
                      , o = v(t);
                    if (await r.store.has(n))
                        return m(c(new Error(`Key '${t}' already exists`), "ERR_KEY_ALREADY_EXISTS"));
                    try {
                        const e = await r.store.get(i)
                          , a = await r.store.get(s)
                          , c = JSON.parse(f(a));
                        c.name = t;
                        const u = r.store.batch();
                        return u.put(n, e),
                        u.put(o, h(JSON.stringify(c))),
                        u.delete(i),
                        u.delete(s),
                        await u.commit(),
                        c
                    } catch (e) {
                        return m(e)
                    }
                }
                async exportKey(e, t) {
                    if (!g(e))
                        return m(c(new Error(`Invalid key name '${e}'`), "ERR_INVALID_KEY_NAME"));
                    if (!t)
                        return m(c(new Error("Password is required"), "ERR_PASSWORD_REQUIRED"));
                    const r = y(e);
                    try {
                        const e = await this.store.get(r)
                          , i = f(e);
                        return (await s.keys.import(i, this._())).export(t)
                    } catch (e) {
                        return m(e)
                    }
                }
                async importKey(e, t, r) {
                    if (!g(e) || "self" === e)
                        return m(c(new Error(`Invalid key name '${e}'`), "ERR_INVALID_KEY_NAME"));
                    if (!t)
                        return m(c(new Error("PEM encoded key is required"), "ERR_PEM_REQUIRED"));
                    const i = y(e);
                    if (await this.store.has(i))
                        return m(c(new Error(`Key '${e}' already exists`), "ERR_KEY_ALREADY_EXISTS"));
                    let n, o;
                    try {
                        n = await s.keys.import(t, r)
                    } catch (e) {
                        return m(c(new Error("Cannot read the key, most likely the password is wrong"), "ERR_CANNOT_READ_KEY"))
                    }
                    try {
                        o = await n.id(),
                        t = await n.export(this._())
                    } catch (e) {
                        return m(e)
                    }
                    const a = {
                        name: e,
                        id: o
                    }
                      , u = this.store.batch();
                    return u.put(i, h(t)),
                    u.put(v(e), h(JSON.stringify(a))),
                    await u.commit(),
                    a
                }
                async importPeer(e, t) {
                    const r = this;
                    if (!g(e))
                        return m(c(new Error(`Invalid key name '${e}'`), "ERR_INVALID_KEY_NAME"));
                    if (!t || !t.privKey)
                        return m(c(new Error("Peer.privKey is required"), "ERR_MISSING_PRIVATE_KEY"));
                    const i = t.privKey
                      , n = y(e);
                    if (await r.store.has(n))
                        return m(c(new Error(`Key '${e}' already exists`), "ERR_KEY_ALREADY_EXISTS"));
                    try {
                        const t = await i.id()
                          , s = await i.export(this._())
                          , o = {
                            name: e,
                            id: t
                        }
                          , a = r.store.batch();
                        return a.put(n, h(s)),
                        a.put(v(e), h(JSON.stringify(o))),
                        await a.commit(),
                        o
                    } catch (e) {
                        return m(e)
                    }
                }
                async _getPrivateKey(e) {
                    if (!g(e))
                        return m(c(new Error(`Invalid key name '${e}'`), "ERR_INVALID_KEY_NAME"));
                    try {
                        const t = y(e)
                          , r = await this.store.get(t);
                        return f(r)
                    } catch (t) {
                        return m(c(new Error(`Key '${e}' does not exist. ${t.message}`), "ERR_KEY_NOT_FOUND"))
                    }
                }
            }
        }
        , {
            "./cms": 444,
            "err-code": 193,
            "interface-datastore": 223,
            "ipfs-utils/src/globalthis": 228,
            "libp2p-crypto": 254,
            "merge-options": 283,
            "node-forge/lib/sha512": 357,
            "sanitize-filename": 401,
            "uint8arrays/from-string": 412,
            "uint8arrays/to-string": 413
        }],
        446: [function(e, t, r) {
            "use strict";
            e("node-forge/lib/x509");
            const i = e("node-forge/lib/forge").pki;
            t.exports.certificateForKey = (e,t)=>{
                const r = i.setRsaPublicKey(t.n, t.e)
                  , n = i.createCertificate();
                n.publicKey = r,
                n.serialNumber = "01",
                n.validity.notBefore = new Date,
                n.validity.notAfter = new Date,
                n.validity.notAfter.setFullYear(n.validity.notBefore.getFullYear() + 10);
                const s = [{
                    name: "organizationName",
                    value: "ipfs"
                }, {
                    shortName: "OU",
                    value: "keystore"
                }, {
                    name: "commonName",
                    value: e.id
                }];
                return n.setSubject(s),
                n.setIssuer(s),
                n.setExtensions([{
                    name: "basicConstraints",
                    cA: !0
                }, {
                    name: "keyUsage",
                    keyCertSign: !0,
                    digitalSignature: !0,
                    nonRepudiation: !0,
                    keyEncipherment: !0,
                    dataEncipherment: !0
                }, {
                    name: "extKeyUsage",
                    serverAuth: !0,
                    clientAuth: !0,
                    codeSigning: !0,
                    emailProtection: !0,
                    timeStamping: !0
                }, {
                    name: "nsCertType",
                    client: !0,
                    server: !0,
                    email: !0,
                    objsign: !0,
                    sslCA: !0,
                    emailCA: !0,
                    objCA: !0
                }]),
                n.sign(t),
                n
            }
            ,
            t.exports.findAsync = async function(e, t) {
                const r = e.map(t);
                return e[(await Promise.all(r)).findIndex(e=>e)]
            }
        }
        , {
            "node-forge/lib/forge": 336,
            "node-forge/lib/x509": 359
        }],
        447: [function(e, t, r) {
            "use strict";
            const i = e("merge-options")
              , n = e("it-pipe")
              , {tap: s} = e("streaming-iterables")
              , o = e("./old-peers")
              , {METRICS: a} = e("../constants")
              , c = e("./stats")
              , u = ["dataReceived", "dataSent"]
              , f = {
                in: "dataReceived",
                out: "dataSent"
            };
            class h {
                constructor(e) {
                    this._options = i(a, e),
                    this._globalStats = new c(u,this._options),
                    this._peerStats = new Map,
                    this._protocolStats = new Map,
                    this._oldPeers = o(this._options.maxOldPeersRetention),
                    this._running = !1,
                    this._onMessage = this._onMessage.bind(this),
                    this._connectionManager = e.connectionManager,
                    this._connectionManager.on("peer:disconnect", e=>{
                        this.onPeerDisconnected(e.remotePeer)
                    }
                    )
                }
                start() {
                    this._running = !0
                }
                stop() {
                    this._running = !1,
                    this._globalStats.stop();
                    for (const e of this._peerStats.values())
                        e.stop();
                    for (const e of this._protocolStats.values())
                        e.stop()
                }
                get global() {
                    return this._globalStats
                }
                get peers() {
                    return Array.from(this._peerStats.keys())
                }
                forPeer(e) {
                    const t = e.toB58String();
                    return this._peerStats.get(t) || this._oldPeers.get(t)
                }
                get protocols() {
                    return Array.from(this._protocolStats.keys())
                }
                forProtocol(e) {
                    return this._protocolStats.get(e)
                }
                onPeerDisconnected(e) {
                    const t = e.toB58String()
                      , r = this._peerStats.get(t);
                    r && (r.stop(),
                    this._peerStats.delete(t),
                    this._oldPeers.set(t, r))
                }
                _onMessage({remotePeer: e, protocol: t, direction: r, dataLength: i}) {
                    if (!this._running)
                        return;
                    const n = f[r];
                    let s = this.forPeer(e);
                    if (s || (s = new c(u,this._options),
                    this._peerStats.set(e.toB58String(), s)),
                    s.push(n, i),
                    this._globalStats.push(n, i),
                    t) {
                        let e = this.forProtocol(t);
                        e || (e = new c(u,this._options),
                        this._protocolStats.set(t, e)),
                        e.push(n, i)
                    }
                }
                updatePlaceholder(e, t) {
                    if (!this._running)
                        return;
                    const r = this.forPeer(e)
                      , i = t.toB58String()
                      , n = this.forPeer(t);
                    let s = r;
                    n && (s = h.mergeStats(n, s),
                    this._oldPeers.delete(i)),
                    this._peerStats.delete(e.toB58String()),
                    this._peerStats.set(i, s),
                    s.start()
                }
                trackStream({stream: e, remotePeer: t, protocol: r}) {
                    const i = this
                      , o = e.source;
                    e.source = s(e=>i._onMessage({
                        remotePeer: t,
                        protocol: r,
                        direction: "in",
                        dataLength: e.length
                    }))(o);
                    const a = e.sink;
                    return e.sink = e=>n(e, s(e=>i._onMessage({
                        remotePeer: t,
                        protocol: r,
                        direction: "out",
                        dataLength: e.length
                    })), a),
                    e
                }
                static mergeStats(e, t) {
                    return e.stop(),
                    t.stop(),
                    e._queue = [...e._queue, ...t._queue],
                    e
                }
            }
            t.exports = h
        }
        , {
            "../constants": 434,
            "./old-peers": 448,
            "./stats": 449,
            "it-pipe": 243,
            "merge-options": 283,
            "streaming-iterables": 406
        }],
        448: [function(e, t, r) {
            "use strict";
            const i = e("hashlru");
            t.exports = e=>{
                const t = i(e);
                return t.delete = t.remove,
                t
            }
        }
        , {
            hashlru: 213
        }],
        449: [function(e, t, r) {
            "use strict";
            const i = e("events")
              , n = e("bignumber.js")
              , s = e("moving-average")
              , o = e("retimer");
            t.exports = class extends i {
                constructor(e, t) {
                    super(),
                    this._options = t,
                    this._queue = [],
                    this._stats = {},
                    this._frequencyLastTime = Date.now(),
                    this._frequencyAccumulators = {},
                    this._movingAverages = {},
                    this._update = this._update.bind(this);
                    const r = this._options.movingAverageIntervals;
                    for (var i = 0; i < e.length; i++) {
                        var o = e[i];
                        this._stats[o] = n(0),
                        this._movingAverages[o] = {};
                        for (var a = 0; a < r.length; a++) {
                            var c = r[a];
                            (this._movingAverages[o][c] = s(c)).push(this._frequencyLastTime, 0)
                        }
                    }
                }
                start() {
                    this._queue.length && this._resetComputeTimeout()
                }
                stop() {
                    this._timeout && (this._timeout.clear(),
                    this._timeout = null)
                }
                get snapshot() {
                    return Object.assign({}, this._stats)
                }
                get movingAverages() {
                    return Object.assign({}, this._movingAverages)
                }
                toJSON() {
                    const e = this.snapshot
                      , t = this.movingAverages
                      , r = {
                        dataReceived: e.dataReceived.toString(),
                        dataSent: e.dataSent.toString(),
                        movingAverages: {}
                    }
                      , i = Object.keys(t);
                    for (const e of i) {
                        r.movingAverages[e] = {};
                        for (const i of Object.keys(t[e]))
                            r.movingAverages[e][i] = t[e][i].movingAverage()
                    }
                    return r
                }
                push(e, t) {
                    this._queue.push([e, t, Date.now()]),
                    this._resetComputeTimeout()
                }
                _resetComputeTimeout() {
                    this._timeout = o(this._update, this._nextTimeout())
                }
                _nextTimeout() {
                    const e = this._queue.length / this._options.computeThrottleMaxQueueSize;
                    return Math.max(this._options.computeThrottleTimeout * (1 - e), 0)
                }
                _update() {
                    if (this._timeout = null,
                    this._queue.length) {
                        let e;
                        for (e of this._queue)
                            this._applyOp(e);
                        this._queue = [],
                        this._updateFrequency(e[2]),
                        this.emit("update", this._stats)
                    }
                }
                _updateFrequency(e) {
                    const t = e - this._frequencyLastTime;
                    Object.keys(this._stats).forEach(r=>{
                        this._updateFrequencyFor(r, t, e)
                    }
                    ),
                    this._frequencyLastTime = e
                }
                _updateFrequencyFor(e, t, r) {
                    const i = this._frequencyAccumulators[e] || 0;
                    this._frequencyAccumulators[e] = 0;
                    const n = i / (t || 1) * 1e3;
                    let o = this._movingAverages[e];
                    o || (o = this._movingAverages[e] = {});
                    const a = this._options.movingAverageIntervals;
                    for (var c = 0; c < a.length; c++) {
                        var u = a[c]
                          , f = o[u];
                        f || (f = o[u] = s(u)),
                        f.push(r, n)
                    }
                }
                _applyOp(e) {
                    const t = e[0]
                      , r = e[1];
                    if ("number" != typeof r)
                        throw new Error("invalid increment number:",r);
                    let i;
                    i = Object.prototype.hasOwnProperty.call(this._stats, t) ? this._stats[t] : this._stats[t] = n(0),
                    this._stats[t] = i.plus(r),
                    this._frequencyAccumulators[t] || (this._frequencyAccumulators[t] = 0),
                    this._frequencyAccumulators[t] += r
                }
            }
        }
        , {
            "bignumber.js": 164,
            events: 83,
            "moving-average": 286,
            retimer: 399
        }],
        450: [function(e, t, r) {
            "use strict";
            const i = e("err-code")
              , n = e("p-any");
            t.exports = e=>{
                const t = e._modules.peerRouting || [];
                return e._dht && t.unshift(e._dht),
                {
                    findPeer: async(e,r)=>{
                        if (!t.length)
                            throw i(new Error("No peer routers available"), "NO_ROUTERS_AVAILABLE");
                        return n(t.map(async t=>{
                            const n = await t.findPeer(e, r);
                            if (!n || 0 === Object.keys(n).length)
                                throw i(new Error("not found"), "NOT_FOUND");
                            return n
                        }
                        ))
                    }
                }
            }
        }
        , {
            "err-code": 193,
            "p-any": 363
        }],
        451: [function(e, t, r) {
            "use strict";
            const i = e("err-code")
              , n = e("debug")
              , s = n("libp2p:peer-store:address-book");
            s.error = n("libp2p:peer-store:address-book:error");
            const o = e("multiaddr")
              , a = e("peer-id")
              , c = e("./book")
              , u = e("../record/peer-record")
              , {codes: {ERR_INVALID_PARAMETERS: f}} = e("../errors")
              , h = e("../record/envelope");
            t.exports = class extends c {
                constructor(e) {
                    super({
                        peerStore: e,
                        eventName: "change:multiaddrs",
                        eventProperty: "multiaddrs",
                        eventTransformer: e=>e.addresses ? e.addresses.map(e=>e.multiaddr) : []
                    }),
                    this.data = new Map
                }
                consumePeerRecord(e) {
                    let t;
                    try {
                        t = u.createFromProtobuf(e.payload)
                    } catch (e) {
                        return s.error("invalid peer record received"),
                        !1
                    }
                    if (!t.peerId.equals(e.peerId))
                        return s("signing key does not match PeerId in the PeerRecord"),
                        !1;
                    if (!t.multiaddrs || !t.multiaddrs.length)
                        return !1;
                    const r = t.peerId
                      , i = r.toB58String()
                      , n = (this.data.get(i) || {}).record;
                    if (n && n.seqNumber >= t.seqNumber)
                        return !1;
                    const o = this._toAddresses(t.multiaddrs, !0);
                    return this._setData(r, {
                        addresses: o,
                        record: {
                            raw: e.marshal(),
                            seqNumber: t.seqNumber
                        }
                    }),
                    s(`stored provided peer record for ${i}`),
                    !0
                }
                getRawEnvelope(e) {
                    const t = this.data.get(e.toB58String());
                    if (t && t.record && t.record.raw)
                        return t.record.raw
                }
                getPeerRecord(e) {
                    const t = this.getRawEnvelope(e);
                    if (t)
                        return h.createFromProtobuf(t)
                }
                set(e, t) {
                    if (!a.isPeerId(e))
                        throw s.error("peerId must be an instance of peer-id to store data"),
                        i(new Error("peerId must be an instance of peer-id"), f);
                    const r = this._toAddresses(t)
                      , n = e.toB58String()
                      , o = this.data.get(n) || {}
                      , c = o.addresses;
                    if (!r.length)
                        return this;
                    if (c && c.length === r.length) {
                        if (c.filter(e=>r.some(t=>e.multiaddr.equals(t.multiaddr))).length === c.length)
                            return s(`the addresses provided to store are equal to the already stored for ${n}`),
                            this
                    }
                    return this._setData(e, {
                        addresses: r,
                        record: o.record
                    }),
                    s(`stored provided multiaddrs for ${n}`),
                    c || this._ps.emit("peer", e),
                    this
                }
                add(e, t) {
                    if (!a.isPeerId(e))
                        throw s.error("peerId must be an instance of peer-id to store data"),
                        i(new Error("peerId must be an instance of peer-id"), f);
                    const r = this._toAddresses(t)
                      , n = e.toB58String()
                      , o = this.data.get(n) || {}
                      , c = o.addresses || [];
                    return c.forEach(e=>{
                        r.find(t=>t.multiaddr.equals(e.multiaddr)) || r.push(e)
                    }
                    ),
                    c && c.length === r.length ? (s(`the addresses provided to store are already stored for ${n}`),
                    this) : (this._setData(e, {
                        addresses: r,
                        record: o.record
                    }),
                    s(`added provided multiaddrs for ${n}`),
                    o.addresses || this._ps.emit("peer", e),
                    this)
                }
                get(e) {
                    if (!a.isPeerId(e))
                        throw i(new Error("peerId must be an instance of peer-id"), f);
                    const t = this.data.get(e.toB58String());
                    return t && t.addresses ? [...t.addresses] : void 0
                }
                _toAddresses(e, t=!1) {
                    if (!e)
                        throw s.error("multiaddrs must be provided to store data"),
                        i(new Error("multiaddrs must be provided"), f);
                    const r = [];
                    return e.forEach(e=>{
                        if (!o.isMultiaddr(e))
                            throw s.error(`multiaddr ${e} must be an instance of multiaddr`),
                            i(new Error(`multiaddr ${e} must be an instance of multiaddr`), f);
                        r.push({
                            multiaddr: e,
                            isCertified: t
                        })
                    }
                    ),
                    r
                }
                getMultiaddrsForPeer(e) {
                    if (!a.isPeerId(e))
                        throw i(new Error("peerId must be an instance of peer-id"), f);
                    const t = this.data.get(e.toB58String());
                    if (t && t.addresses)
                        return t.addresses.map(t=>{
                            const r = t.multiaddr
                              , i = r.getPeerId();
                            return i && i === e.toB58String() ? r : r.encapsulate(`/p2p/${e.toB58String()}`)
                        }
                        )
                }
            }
        }
        , {
            "../errors": 438,
            "../record/envelope": 465,
            "../record/peer-record": 467,
            "./book": 452,
            debug: 172,
            "err-code": 193,
            multiaddr: 290,
            "peer-id": 372
        }],
        452: [function(e, t, r) {
            "use strict";
            const i = e("err-code")
              , n = e("peer-id")
              , {codes: {ERR_INVALID_PARAMETERS: s}} = e("../errors")
              , o = e=>e;
            t.exports = class {
                constructor({peerStore: e, eventName: t, eventProperty: r, eventTransformer: i=o}) {
                    this._ps = e,
                    this.eventName = t,
                    this.eventProperty = r,
                    this.eventTransformer = i,
                    this.data = new Map
                }
                set(e, t) {
                    throw i(new Error("set must be implemented by the subclass"), "ERR_NOT_IMPLEMENTED")
                }
                _setData(e, t, {emit: r=!0}={}) {
                    const i = e.toB58String();
                    this.data.set(i, t),
                    r && this._emit(e, t)
                }
                _emit(e, t) {
                    this._ps.emit(this.eventName, {
                        peerId: e,
                        [this.eventProperty]: this.eventTransformer(t)
                    })
                }
                get(e) {
                    if (!n.isPeerId(e))
                        throw i(new Error("peerId must be an instance of peer-id"), s);
                    const t = this.data.get(e.toB58String());
                    return t ? [...t] : void 0
                }
                delete(e) {
                    if (!n.isPeerId(e))
                        throw i(new Error("peerId must be an instance of peer-id"), s);
                    return !!this.data.delete(e.toB58String()) && (this._emit(e, []),
                    !0)
                }
            }
        }
        , {
            "../errors": 438,
            "err-code": 193,
            "peer-id": 372
        }],
        453: [function(e, t, r) {
            "use strict";
            const i = e("err-code")
              , n = e("debug");
            n("libp2p:peer-store").error = n("libp2p:peer-store:error");
            const {EventEmitter: s} = e("events")
              , o = e("peer-id")
              , a = e("./address-book")
              , c = e("./key-book")
              , u = e("./metadata-book")
              , f = e("./proto-book")
              , {ERR_INVALID_PARAMETERS: h} = e("../errors");
            t.exports = class extends s {
                constructor({peerId: e}) {
                    super(),
                    this._peerId = e,
                    this.addressBook = new a(this),
                    this.keyBook = new c(this),
                    this.metadataBook = new u(this),
                    this.protoBook = new f(this)
                }
                start() {}
                stop() {}
                get peers() {
                    const e = new Set([...this.addressBook.data.keys(), ...this.keyBook.data.keys(), ...this.protoBook.data.keys(), ...this.metadataBook.data.keys()]);
                    this._peerId && e.delete(this._peerId.toB58String());
                    const t = new Map;
                    return e.forEach(e=>{
                        t.set(e, this.get(o.createFromCID(e)))
                    }
                    ),
                    t
                }
                delete(e) {
                    const t = this.addressBook.delete(e)
                      , r = this.keyBook.delete(e)
                      , i = this.protoBook.delete(e)
                      , n = this.metadataBook.delete(e);
                    return t || r || i || n
                }
                get(e) {
                    if (!o.isPeerId(e))
                        throw i(new Error("peerId must be an instance of peer-id"), h);
                    const t = this.keyBook.data.get(e.toB58String())
                      , r = this.addressBook.get(e)
                      , n = this.metadataBook.get(e)
                      , s = this.protoBook.get(e);
                    if (t || r || n || s)
                        return {
                            id: t || e,
                            addresses: r || [],
                            protocols: s || [],
                            metadata: n
                        }
                }
            }
        }
        , {
            "../errors": 438,
            "./address-book": 451,
            "./key-book": 454,
            "./metadata-book": 455,
            "./proto-book": 460,
            debug: 172,
            "err-code": 193,
            events: 83,
            "peer-id": 372
        }],
        454: [function(e, t, r) {
            "use strict";
            const i = e("err-code")
              , n = e("debug")
              , s = n("libp2p:peer-store:key-book");
            s.error = n("libp2p:peer-store:key-book:error");
            const o = e("peer-id")
              , a = e("./book")
              , {codes: {ERR_INVALID_PARAMETERS: c}} = e("../errors");
            t.exports = class extends a {
                constructor(e) {
                    super({
                        peerStore: e,
                        eventName: "change:pubkey",
                        eventProperty: "pubkey",
                        eventTransformer: e=>e.pubKey
                    }),
                    this.data = new Map
                }
                set(e, t) {
                    if (!o.isPeerId(e))
                        throw s.error("peerId must be an instance of peer-id to store data"),
                        i(new Error("peerId must be an instance of peer-id"), c);
                    const r = e.toB58String();
                    return !this.data.get(r) && t && (e.pubKey = t,
                    this._setData(e, e),
                    s(`stored provided public key for ${r}`)),
                    this
                }
                get(e) {
                    if (!o.isPeerId(e))
                        throw i(new Error("peerId must be an instance of peer-id"), c);
                    const t = this.data.get(e.toB58String());
                    return t ? t.pubKey : void 0
                }
            }
        }
        , {
            "../errors": 438,
            "./book": 452,
            debug: 172,
            "err-code": 193,
            "peer-id": 372
        }],
        455: [function(e, t, r) {
            "use strict";
            const i = e("err-code")
              , n = e("debug")
              , s = n("libp2p:peer-store:proto-book");
            s.error = n("libp2p:peer-store:proto-book:error");
            const o = e("uint8arrays/equals")
              , a = e("peer-id")
              , c = e("./book")
              , {codes: {ERR_INVALID_PARAMETERS: u}} = e("../errors");
            t.exports = class extends c {
                constructor(e) {
                    super({
                        peerStore: e,
                        eventName: "change:metadata",
                        eventProperty: "metadata"
                    }),
                    this.data = new Map
                }
                set(e, t, r) {
                    if (!a.isPeerId(e))
                        throw s.error("peerId must be an instance of peer-id to store data"),
                        i(new Error("peerId must be an instance of peer-id"), u);
                    if ("string" != typeof t || !(r instanceof Uint8Array))
                        throw s.error("valid key and value must be provided to store data"),
                        i(new Error("valid key and value must be provided"), u);
                    return this._setValue(e, t, r),
                    this
                }
                _setValue(e, t, r, {emit: i=!0}={}) {
                    const n = e.toB58String()
                      , a = this.data.get(n) || new Map
                      , c = a.get(t);
                    c && o(r, c) ? s(`the metadata provided to store is equal to the already stored for ${n} on ${t}`) : (a.set(t, r),
                    this.data.set(n, a),
                    i && this._emit(e, t))
                }
                get(e) {
                    if (!a.isPeerId(e))
                        throw i(new Error("peerId must be an instance of peer-id"), u);
                    return this.data.get(e.toB58String())
                }
                getValue(e, t) {
                    if (!a.isPeerId(e))
                        throw i(new Error("peerId must be an instance of peer-id"), u);
                    const r = this.data.get(e.toB58String());
                    return r && r.get(t)
                }
                delete(e) {
                    if (!a.isPeerId(e))
                        throw i(new Error("peerId must be an instance of peer-id"), u);
                    return !!this.data.delete(e.toB58String()) && (this._emit(e),
                    !0)
                }
                deleteValue(e, t) {
                    if (!a.isPeerId(e))
                        throw i(new Error("peerId must be an instance of peer-id"), u);
                    const r = this.data.get(e.toB58String());
                    return !(!r || !r.delete(t)) && (this._emit(e, t),
                    !0)
                }
            }
        }
        , {
            "../errors": 438,
            "./book": 452,
            debug: 172,
            "err-code": 193,
            "peer-id": 372,
            "uint8arrays/equals": 411
        }],
        456: [function(e, t, r) {
            "use strict";
            t.exports.NAMESPACE_COMMON = "/peers/",
            t.exports.NAMESPACE_ADDRESS = "/peers/addrs/",
            t.exports.NAMESPACE_KEYS = "/peers/keys/",
            t.exports.NAMESPACE_METADATA = "/peers/metadata/",
            t.exports.NAMESPACE_PROTOCOL = "/peers/protos/"
        }
        , {}],
        457: [function(e, t, r) {
            "use strict";
            const i = e("debug")
              , n = i("libp2p:persistent-peer-store");
            n.error = i("libp2p:persistent-peer-store:error");
            const {Key: s} = e("interface-datastore")
              , o = e("multiaddr")
              , a = e("peer-id")
              , c = e("..")
              , {NAMESPACE_ADDRESS: u, NAMESPACE_COMMON: f, NAMESPACE_KEYS: h, NAMESPACE_METADATA: l, NAMESPACE_PROTOCOL: d} = e("./consts")
              , p = e("./pb/address-book.proto")
              , b = e("./pb/proto-book.proto");
            t.exports = class extends c {
                constructor({peerId: e, datastore: t, threshold: r=5}) {
                    super({
                        peerId: e
                    }),
                    this._datastore = t,
                    this._dirtyPeers = new Set,
                    this._dirtyMetadata = new Map,
                    this.threshold = r,
                    this._addDirtyPeer = this._addDirtyPeer.bind(this)
                }
                async start() {
                    n("PeerStore is starting"),
                    this.on("change:protocols", this._addDirtyPeer),
                    this.on("change:multiaddrs", this._addDirtyPeer),
                    this.on("change:pubkey", this._addDirtyPeerKey),
                    this.on("change:metadata", this._addDirtyPeerMetadata);
                    for await(const e of this._datastore.query({
                        prefix: f
                    }))
                        await this._processDatastoreEntry(e);
                    n("PeerStore started")
                }
                async stop() {
                    n("PeerStore is stopping"),
                    this.removeAllListeners(),
                    await this._commitData(),
                    n("PeerStore stopped")
                }
                _addDirtyPeer({peerId: e}) {
                    const t = e.toB58String();
                    n("add dirty peer", t),
                    this._dirtyPeers.add(t),
                    this._dirtyPeers.size >= this.threshold && this._commitData().catch(e=>{
                        n.error("error committing data", e)
                    }
                    )
                }
                _addDirtyPeerKey({peerId: e}) {
                    if (e.hasInlinePublicKey())
                        return;
                    const t = e.toB58String();
                    n("add dirty peer key", t),
                    this._dirtyPeers.add(t),
                    this._dirtyPeers.size >= this.threshold && this._commitData().catch(e=>{
                        n.error("error committing data", e)
                    }
                    )
                }
                _addDirtyPeerMetadata({peerId: e, metadata: t}) {
                    const r = e.toB58String();
                    n("add dirty metadata peer", r),
                    this._dirtyPeers.add(r);
                    const i = this._dirtyMetadata.get(r) || new Set;
                    i.add(t),
                    this._dirtyMetadata.set(r, i),
                    this._dirtyPeers.size >= this.threshold && this._commitData().catch(e=>{
                        n.error("error committing data", e)
                    }
                    )
                }
                async _commitData() {
                    const e = Array.from(this._dirtyPeers);
                    if (!e.length)
                        return;
                    this._dirtyPeers.clear(),
                    n("create batch commit");
                    const t = this._datastore.batch();
                    for (const r of e) {
                        const e = this.keyBook.data.get(r) || a.createFromCID(r);
                        this._batchAddressBook(e, t),
                        !e.hasInlinePublicKey() && this._batchKeyBook(e, t),
                        this._batchMetadataBook(e, t),
                        this._batchProtoBook(e, t)
                    }
                    await t.commit(),
                    n("batch committed")
                }
                _batchAddressBook(e, t) {
                    const r = e.toString()
                      , i = new s(`${u}${r}`)
                      , o = this.addressBook.data.get(e.toB58String());
                    try {
                        if (!o)
                            return void t.delete(i);
                        const e = p.encode({
                            addrs: o.addresses.map(e=>({
                                multiaddr: e.multiaddr.bytes,
                                isCertified: e.isCertified
                            })),
                            certified_record: o.record ? {
                                seq: o.record.seqNumber,
                                raw: o.record.raw
                            } : void 0
                        });
                        t.put(i, e)
                    } catch (e) {
                        n.error(e)
                    }
                }
                _batchKeyBook(e, t) {
                    const r = e.toString()
                      , i = new s(`${h}${r}`);
                    try {
                        if (!e.pubKey)
                            return void t.delete(i);
                        const r = e.marshalPubKey();
                        t.put(i, r)
                    } catch (e) {
                        n.error(e)
                    }
                }
                _batchMetadataBook(e, t) {
                    const r = e.toString()
                      , i = this._dirtyMetadata.get(e.toB58String()) || [];
                    try {
                        i.forEach(i=>{
                            const n = new s(`${l}${r}/${i}`)
                              , o = this.metadataBook.getValue(e, i);
                            o ? t.put(n, o) : t.delete(n)
                        }
                        )
                    } catch (e) {
                        n.error(e)
                    }
                }
                _batchProtoBook(e, t) {
                    const r = e.toString()
                      , i = new s(`${d}${r}`)
                      , o = this.protoBook.get(e);
                    try {
                        if (!o)
                            return void t.delete(i);
                        const e = b.encode({
                            protocols: o
                        });
                        t.put(i, e)
                    } catch (e) {
                        n.error(e)
                    }
                }
                async _processDatastoreEntry({key: e, value: t}) {
                    try {
                        const r = e.toString().split("/")
                          , i = a.createFromCID(r[3]);
                        let s;
                        switch (r[2]) {
                        case "addrs":
                            s = p.decode(t),
                            this.addressBook._setData(i, {
                                addresses: s.addrs.map(e=>({
                                    multiaddr: o(e.multiaddr),
                                    isCertified: Boolean(e.isCertified)
                                })),
                                record: s.certified_record ? {
                                    raw: s.certified_record.raw,
                                    seqNumber: s.certified_record.seq
                                } : void 0
                            }, {
                                emit: !1
                            });
                            break;
                        case "keys":
                            s = await a.createFromPubKey(t),
                            this.keyBook._setData(s, s, {
                                emit: !1
                            });
                            break;
                        case "metadata":
                            this.metadataBook._setValue(i, r[4], t, {
                                emit: !1
                            });
                            break;
                        case "protos":
                            s = b.decode(t),
                            this.protoBook._setData(i, new Set(s.protocols), {
                                emit: !1
                            });
                            break;
                        default:
                            n("invalid data persisted for: ", e.toString())
                        }
                    } catch (e) {
                        n.error(e)
                    }
                }
            }
        }
        , {
            "..": 453,
            "./consts": 456,
            "./pb/address-book.proto": 458,
            "./pb/proto-book.proto": 459,
            debug: 172,
            "interface-datastore": 223,
            multiaddr: 290,
            "peer-id": 372
        }],
        458: [function(e, t, r) {
            "use strict";
            const i = e("protons");
            t.exports = i("\nmessage Addresses {\n  // Address represents a single multiaddr.\n  message Address {\n    required bytes multiaddr = 1;\n\n    // Flag to indicate if the address comes from a certified source.\n    optional bool isCertified = 2;\n  }\n\n  // CertifiedRecord contains a serialized signed PeerRecord used to\n  // populate the signedAddrs list.\n  message CertifiedRecord {\n    // The Seq counter from the signed PeerRecord envelope\n    uint64 seq = 1;\n\n    // The serialized bytes of the SignedEnvelope containing the PeerRecord.\n    bytes raw = 2;\n  }\n\n  // The known multiaddrs.\n  repeated Address addrs = 1;\n\n  // The most recently received signed PeerRecord.\n  CertifiedRecord certified_record = 2;\n}\n").Addresses
        }
        , {
            protons: 397
        }],
        459: [function(e, t, r) {
            "use strict";
            const i = e("protons");
            t.exports = i("\nmessage Protocols {\n  repeated string protocols = 1;\n}\n").Protocols
        }
        , {
            protons: 397
        }],
        460: [function(e, t, r) {
            "use strict";
            const i = e("err-code")
              , n = e("debug")
              , s = n("libp2p:peer-store:proto-book");
            s.error = n("libp2p:peer-store:proto-book:error");
            const o = e("peer-id")
              , a = e("./book")
              , {codes: {ERR_INVALID_PARAMETERS: c}} = e("../errors");
            t.exports = class extends a {
                constructor(e) {
                    super({
                        peerStore: e,
                        eventName: "change:protocols",
                        eventProperty: "protocols",
                        eventTransformer: e=>Array.from(e)
                    }),
                    this.data = new Map
                }
                set(e, t) {
                    if (!o.isPeerId(e))
                        throw s.error("peerId must be an instance of peer-id to store data"),
                        i(new Error("peerId must be an instance of peer-id"), c);
                    if (!t)
                        throw s.error("protocols must be provided to store data"),
                        i(new Error("protocols must be provided"), c);
                    const r = e.toB58String()
                      , n = this.data.get(r)
                      , a = new Set(t);
                    return n && ((e,t)=>e.size === t.size && [...e].every(e=>t.has(e)))(n, a) ? (s(`the protocols provided to store are equal to the already stored for ${r}`),
                    this) : (this._setData(e, a),
                    s(`stored provided protocols for ${r}`),
                    this)
                }
                add(e, t) {
                    if (!o.isPeerId(e))
                        throw s.error("peerId must be an instance of peer-id to store data"),
                        i(new Error("peerId must be an instance of peer-id"), c);
                    if (!t)
                        throw s.error("protocols must be provided to store data"),
                        i(new Error("protocols must be provided"), c);
                    const r = e.toB58String()
                      , n = this.data.get(r) || new Set
                      , a = new Set([...n, ...t]);
                    return n.size === a.size ? (s(`the protocols provided to store are already stored for ${r}`),
                    this) : (t = [...a],
                    this._setData(e, a),
                    s(`added provided protocols for ${r}`),
                    this)
                }
            }
        }
        , {
            "../errors": 438,
            "./book": 452,
            debug: 172,
            "err-code": 193,
            "peer-id": 372
        }],
        461: [function(e, t, r) {
            "use strict";
            t.exports = {
                PROTOCOL: "/ipfs/ping/1.0.0",
                PING_LENGTH: 32
            }
        }
        , {}],
        462: [function(e, t, r) {
            "use strict";
            const i = e("debug")
              , n = i("libp2p-ping");
            n.error = i("libp2p-ping:error");
            const s = e("err-code")
              , o = e("libp2p-crypto")
              , a = e("it-pipe")
              , {toBuffer: c} = e("it-buffer")
              , {collect: u, take: f} = e("streaming-iterables")
              , {PROTOCOL: h, PING_LENGTH: l} = e("./constants");
            (r = t.exports = async function(e, t) {
                n("dialing %s to %s", h, t.toB58String ? t.toB58String() : t);
                const {stream: r} = await e.dialProtocol(t, h)
                  , i = new Date
                  , d = o.randomBytes(l)
                  , [p] = await a([d], r, e=>f(1, e), c, u)
                  , b = Date.now();
                if (!d.equals(p))
                    throw s(new Error("Received wrong ping ack"), "ERR_WRONG_PING_ACK");
                return b - i
            }
            ).mount = function(e) {
                e.handle(h, ({stream: e})=>a(e, e))
            }
            ,
            r.unmount = function(e) {
                e.unhandle(h)
            }
        }
        , {
            "./constants": 461,
            debug: 172,
            "err-code": 193,
            "it-buffer": 233,
            "it-pipe": 243,
            "libp2p-crypto": 254,
            "streaming-iterables": 406
        }],
        463: [function(e, t, r) {
            "use strict";
            t.exports = (e,t,r)=>{
                return new class extends e {
                    subscribe(e, t) {
                        t && this.on(e, t),
                        super.subscribe(e)
                    }
                    unsubscribe(e, t) {
                        t ? this.removeListener(e, t) : this.removeAllListeners(e),
                        0 === this.listenerCount(e) && super.unsubscribe(e)
                    }
                }
                (t,r)
            }
        }
        , {}],
        464: [function(e, t, r) {
            "use strict";
            const i = e("protons");
            t.exports = i("\nmessage Envelope {\n  // public_key is the public key of the keypair the enclosed payload was\n  // signed with.\n  bytes public_key = 1;\n\n  // payload_type encodes the type of payload, so that it can be deserialized\n  // deterministically.\n  bytes payload_type = 2;\n\n  // payload is the actual payload carried inside this envelope.\n  bytes payload = 3;\n\n  // signature is the signature produced by the private key corresponding to\n  // the enclosed public key, over the payload, prefixing a domain string for\n  // additional security.\n  bytes signature = 5;\n}\n").Envelope
        }
        , {
            protons: 397
        }],
        465: [function(e, t, r) {
            "use strict";
            const i = e("debug");
            i("libp2p:envelope").error = i("libp2p:envelope:error");
            const n = e("err-code")
              , s = e("uint8arrays/concat")
              , o = e("uint8arrays/from-string")
              , a = e("libp2p-crypto/src/keys")
              , c = e("peer-id")
              , u = e("varint")
              , f = e("uint8arrays/equals")
              , {codes: h} = e("../../errors")
              , l = e("./envelope.proto");
            class d {
                constructor({peerId: e, payloadType: t, payload: r, signature: i}) {
                    this.peerId = e,
                    this.payloadType = t,
                    this.payload = r,
                    this.signature = i,
                    this._marshal = void 0
                }
                marshal() {
                    if (this._marshal)
                        return this._marshal;
                    const e = a.marshalPublicKey(this.peerId.pubKey);
                    return this._marshal = l.encode({
                        public_key: e,
                        payload_type: this.payloadType,
                        payload: this.payload,
                        signature: this.signature
                    }),
                    this._marshal
                }
                equals(e) {
                    return f(this.peerId.pubKey.bytes, e.peerId.pubKey.bytes) && f(this.payloadType, e.payloadType) && f(this.payload, e.payload) && f(this.signature, e.signature)
                }
                validate(e) {
                    const t = p(e, this.payloadType, this.payload);
                    return this.peerId.pubKey.verify(t, this.signature)
                }
            }
            const p = (e,t,r)=>{
                e = o(e);
                const i = u.encode(e.byteLength)
                  , n = u.encode(t.length)
                  , a = u.encode(r.length);
                return s([new Uint8Array(i), e, new Uint8Array(n), t, new Uint8Array(a), r])
            }
            ;
            d.createFromProtobuf = async e=>{
                const t = l.decode(e)
                  , r = await c.createFromPubKey(t.public_key);
                return new d({
                    peerId: r,
                    payloadType: t.payload_type,
                    payload: t.payload,
                    signature: t.signature
                })
            }
            ,
            d.seal = async(e,t)=>{
                const r = e.domain
                  , i = e.codec
                  , n = e.marshal()
                  , s = p(r, i, n)
                  , o = await t.privKey.sign(s);
                return new d({
                    peerId: t,
                    payloadType: i,
                    payload: n,
                    signature: o
                })
            }
            ,
            d.openAndCertify = async(e,t)=>{
                const r = await d.createFromProtobuf(e);
                if (!await r.validate(t))
                    throw n(new Error("envelope signature is not valid for the given domain"), h.ERR_SIGNATURE_NOT_VALID);
                return r
            }
            ,
            t.exports = d
        }
        , {
            "../../errors": 438,
            "./envelope.proto": 464,
            debug: 172,
            "err-code": 193,
            "libp2p-crypto/src/keys": 261,
            "peer-id": 372,
            "uint8arrays/concat": 410,
            "uint8arrays/equals": 411,
            "uint8arrays/from-string": 412,
            varint: 417
        }],
        466: [function(e, t, r) {
            "use strict";
            const i = e("multicodec");
            t.exports.ENVELOPE_DOMAIN_PEER_RECORD = i.getName(i.LIBP2P_PEER_RECORD),
            t.exports.ENVELOPE_PAYLOAD_TYPE_PEER_RECORD = Uint8Array.from([3, 1])
        }
        , {
            multicodec: 305
        }],
        467: [function(e, t, r) {
            "use strict";
            const i = e("multiaddr")
              , n = e("peer-id")
              , s = e("libp2p-interfaces/src/record")
              , o = e("libp2p-utils/src/array-equals")
              , a = e("./peer-record.proto")
              , {ENVELOPE_DOMAIN_PEER_RECORD: c, ENVELOPE_PAYLOAD_TYPE_PEER_RECORD: u} = e("./consts");
            class f extends s {
                constructor({peerId: e, multiaddrs: t=[], seqNumber: r=Date.now()}) {
                    super(c, u),
                    this.peerId = e,
                    this.multiaddrs = t,
                    this.seqNumber = r,
                    this._marshal = void 0
                }
                marshal() {
                    return this._marshal ? this._marshal : (this._marshal = a.encode({
                        peer_id: this.peerId.toBytes(),
                        seq: this.seqNumber,
                        addresses: this.multiaddrs.map(e=>({
                            multiaddr: e.bytes
                        }))
                    }),
                    this._marshal)
                }
                equals(e) {
                    return !!this.peerId.equals(e.peerId) && (this.seqNumber === e.seqNumber && !!o(this.multiaddrs, e.multiaddrs))
                }
            }
            f.createFromProtobuf = e=>{
                const t = a.decode(e)
                  , r = n.createFromBytes(t.peer_id)
                  , s = (t.addresses || []).map(e=>i(e.multiaddr))
                  , o = t.seq;
                return new f({
                    peerId: r,
                    multiaddrs: s,
                    seqNumber: o
                })
            }
            ,
            f.DOMAIN = c,
            t.exports = f
        }
        , {
            "./consts": 466,
            "./peer-record.proto": 468,
            "libp2p-interfaces/src/record": 278,
            "libp2p-utils/src/array-equals": 280,
            multiaddr: 290,
            "peer-id": 372
        }],
        468: [function(e, t, r) {
            "use strict";
            const i = e("protons");
            t.exports = i("\nmessage PeerRecord {\n    // AddressInfo is a wrapper around a binary multiaddr. It is defined as a\n    // separate message to allow us to add per-address metadata in the future.\n    message AddressInfo {\n        bytes multiaddr = 1;\n    }\n\n    // peer_id contains a libp2p peer id in its binary representation.\n    bytes peer_id = 1;\n\n    // seq contains a monotonically-increasing sequence counter to order PeerRecords in time.\n    uint64 seq = 2;\n\n    // addresses is a list of public listen addresses for the peer.\n    repeated AddressInfo addresses = 3;\n}\n").PeerRecord
        }
        , {
            protons: 397
        }],
        469: [function(e, t, r) {
            "use strict";
            const i = e("debug")
              , n = e("err-code");
            i("libp2p:peer-store").error = i("libp2p:peer-store:error");
            const {ERR_INVALID_PARAMETERS: s} = e("./errors")
              , o = e("libp2p-interfaces/src/topology");
            t.exports = class {
                constructor({peerStore: e, connectionManager: t}) {
                    this.peerStore = e,
                    this.connectionManager = t,
                    this.topologies = new Map,
                    this._handle = void 0,
                    this._onDisconnect = this._onDisconnect.bind(this),
                    this.connectionManager.on("peer:disconnect", this._onDisconnect)
                }
                get handle() {
                    return this._handle
                }
                set handle(e) {
                    this._handle = e
                }
                getConnection(e) {
                    return this.connectionManager.get(e)
                }
                register(e) {
                    if (!o.isTopology(e))
                        throw n(new Error("topology must be an instance of interfaces/topology"), s);
                    const t = parseInt(1e9 * Math.random()).toString(36) + Date.now();
                    return this.topologies.set(t, e),
                    e.registrar = this,
                    t
                }
                unregister(e) {
                    return this.topologies.delete(e)
                }
                _onDisconnect(e, t) {
                    for (const [,r] of this.topologies)
                        r.disconnect(e.remotePeer, t)
                }
            }
        }
        , {
            "./errors": 438,
            debug: 172,
            "err-code": 193,
            "libp2p-interfaces/src/topology": 279
        }],
        470: [function(e, t, r) {
            "use strict";
            const i = e("p-settle")
              , {codes: n} = e("./errors")
              , s = e("err-code")
              , o = e("debug")
              , a = o("libp2p:transports");
            a.error = o("libp2p:transports:error");
            class c {
                constructor({libp2p: e, upgrader: t, faultTolerance: r=u.FATAL_ALL}) {
                    this.libp2p = e,
                    this.upgrader = t,
                    this._transports = new Map,
                    this._listeners = new Map,
                    this._listenerOptions = new Map,
                    this.faultTolerance = r
                }
                add(e, t, r={}) {
                    if (a("adding %s", e),
                    !e)
                        throw s(new Error(`Transport must have a valid key, was given '${e}'`), n.ERR_INVALID_KEY);
                    if (this._transports.has(e))
                        throw s(new Error("There is already a transport with this key"), n.ERR_DUPLICATE_TRANSPORT);
                    const i = new t({
                        ...r,
                        libp2p: this.libp2p,
                        upgrader: this.upgrader
                    });
                    this._transports.set(e, i),
                    this._listenerOptions.set(e, r.listenerOptions || {}),
                    this._listeners.has(e) || this._listeners.set(e, [])
                }
                async close() {
                    const e = [];
                    for (const [t,r] of this._listeners)
                        for (a("closing listeners for %s", t); r.length; ) {
                            const t = r.pop();
                            e.push(t.close())
                        }
                    await Promise.all(e),
                    a("all listeners closed");
                    for (const e of this._listeners.keys())
                        this._listeners.set(e, [])
                }
                async dial(e, t) {
                    const r = this.transportForMultiaddr(e);
                    if (!r)
                        throw s(new Error(`No transport available for address ${String(e)}`), n.ERR_TRANSPORT_UNAVAILABLE);
                    try {
                        return await r.dial(e, t)
                    } catch (e) {
                        throw e.code || (e.code = n.ERR_TRANSPORT_DIAL_FAILED),
                        e
                    }
                }
                getAddrs() {
                    let e = [];
                    for (const t of this._listeners.values())
                        for (const r of t)
                            e = [...e, ...r.getAddrs()];
                    return e
                }
                getTransports() {
                    return this._transports.values()
                }
                transportForMultiaddr(e) {
                    for (const t of this._transports.values()) {
                        if (t.filter([e]).length)
                            return t
                    }
                    return null
                }
                async listen() {
                    const e = this.libp2p.addressManager.getListenAddrs();
                    if (0 === e.length)
                        return void a("no addresses were provided for listening, this node is dial only");
                    const t = [];
                    for (const [r,o] of this._transports.entries()) {
                        const c = o.filter(e)
                          , u = [];
                        for (const e of c) {
                            a("creating listener for %s on %s", r, e);
                            const t = o.createListener(this._listenerOptions.get(r), this.onConnection);
                            this._listeners.get(r).push(t),
                            u.push(t.listen(e))
                        }
                        if (0 !== u.length) {
                            if (!(await i(u)).find(e=>!0 === e.isFulfilled))
                                throw s(new Error(`Transport (${r}) could not listen on any available address`), n.ERR_NO_VALID_ADDRESSES)
                        } else
                            t.push(r)
                    }
                    if (t.length === this._transports.size) {
                        const e = `no valid addresses were provided for transports [${t}]`;
                        if (this.faultTolerance === u.FATAL_ALL)
                            throw s(new Error(e), n.ERR_NO_VALID_ADDRESSES);
                        a(`libp2p in dial mode only: ${e}`)
                    }
                }
                async remove(e) {
                    if (a("removing %s", e),
                    this._listeners.has(e))
                        for (const t of this._listeners.get(e))
                            await t.close();
                    this._transports.delete(e),
                    this._listeners.delete(e)
                }
                async removeAll() {
                    const e = [];
                    for (const t of this._transports.keys())
                        e.push(this.remove(t));
                    await Promise.all(e)
                }
            }
            const u = {
                FATAL_ALL: 0,
                NO_FATAL: 1
            };
            c.FaultTolerance = u,
            t.exports = c
        }
        , {
            "./errors": 438,
            debug: 172,
            "err-code": 193,
            "p-settle": 369
        }],
        471: [function(e, t, r) {
            "use strict";
            const i = e("debug")
              , n = i("libp2p:upgrader");
            n.error = i("libp2p:upgrader:error");
            const s = e("multistream-select")
              , {Connection: o} = e("libp2p-interfaces/src/connection")
              , a = e("libp2p-interfaces/src/connection/status")
              , c = e("peer-id")
              , u = e("it-pipe")
              , f = e("err-code")
              , h = e("mutable-proxy")
              , {codes: l} = e("./errors");
            t.exports = class {
                constructor({localPeer: e, metrics: t, cryptos: r, muxers: i, onConnectionEnd: n=(()=>{}
                ), onConnection: s=(()=>{}
                )}) {
                    this.localPeer = e,
                    this.metrics = t,
                    this.cryptos = r || new Map,
                    this.muxers = i || new Map,
                    this.protector = null,
                    this.protocols = new Map,
                    this.onConnection = s,
                    this.onConnectionEnd = n
                }
                async upgradeInbound(e) {
                    let t, r, i, s, o, a, c;
                    if (this.metrics) {
                        ({setTarget: a, proxy: c} = h());
                        const t = parseInt(1e9 * Math.random()).toString(36) + Date.now();
                        a({
                            toB58String: ()=>t
                        }),
                        e = this.metrics.trackStream({
                            stream: e,
                            remotePeer: c
                        })
                    }
                    n("Starting the inbound connection upgrade");
                    let u = e;
                    this.protector && (u = await this.protector.protect(e));
                    try {
                        ({conn: t, remotePeer: r, protocol: o} = await this._encryptInbound(this.localPeer, u, this.cryptos)),
                        this.muxers.size ? ({stream: i, Muxer: s} = await this._multiplexInbound(t, this.muxers)) : i = t
                    } catch (t) {
                        throw n.error("Failed to upgrade inbound connection", t),
                        await e.close(t),
                        t
                    }
                    return this.metrics && (this.metrics.updatePlaceholder(c, r),
                    a(r)),
                    n("Successfully upgraded inbound connection"),
                    this._createConnection({
                        cryptoProtocol: o,
                        direction: "inbound",
                        maConn: e,
                        upgradedConn: i,
                        Muxer: s,
                        remotePeer: r
                    })
                }
                async upgradeOutbound(e) {
                    let t, r, i, s, o, a, u, f;
                    try {
                        t = c.createFromB58String(e.remoteAddr.getPeerId())
                    } catch (e) {
                        n.error("multiaddr did not contain a valid peer id", e)
                    }
                    if (this.metrics) {
                        ({setTarget: u, proxy: f} = h());
                        const t = parseInt(1e9 * Math.random()).toString(36) + Date.now();
                        u({
                            toB58String: ()=>t
                        }),
                        e = this.metrics.trackStream({
                            stream: e,
                            remotePeer: f
                        })
                    }
                    n("Starting the outbound connection upgrade");
                    let l = e;
                    this.protector && (l = await this.protector.protect(e));
                    try {
                        ({conn: r, remotePeer: i, protocol: o} = await this._encryptOutbound(this.localPeer, l, t, this.cryptos)),
                        this.muxers.size ? ({stream: s, Muxer: a} = await this._multiplexOutbound(r, this.muxers)) : s = r
                    } catch (t) {
                        throw n.error("Failed to upgrade outbound connection", t),
                        await e.close(t),
                        t
                    }
                    return this.metrics && (this.metrics.updatePlaceholder(f, i),
                    u(i)),
                    n("Successfully upgraded outbound connection"),
                    this._createConnection({
                        cryptoProtocol: o,
                        direction: "outbound",
                        maConn: e,
                        upgradedConn: s,
                        Muxer: a,
                        remotePeer: i
                    })
                }
                _createConnection({cryptoProtocol: e, direction: t, maConn: r, upgradedConn: i, Muxer: c, remotePeer: h}) {
                    let d, p, b;
                    c && (d = new c({
                        onStream: async e=>{
                            const r = new s.Listener(e);
                            try {
                                const {stream: i, protocol: s} = await r.handle(Array.from(this.protocols.keys()));
                                n("%s: incoming stream opened on %s", t, s),
                                this.metrics && this.metrics.trackStream({
                                    stream: i,
                                    remotePeer: h,
                                    protocol: s
                                }),
                                b.addStream(e, {
                                    protocol: s
                                }),
                                this._onStream({
                                    connection: b,
                                    stream: {
                                        ...e,
                                        ...i
                                    },
                                    protocol: s
                                })
                            } catch (e) {
                                n.error(e)
                            }
                        }
                        ,
                        onStreamEnd: e=>{
                            b.removeStream(e.id)
                        }
                    }),
                    p = async e=>{
                        n("%s: starting new stream on %s", t, e);
                        const r = d.newStream()
                          , i = new s.Dialer(r);
                        try {
                            const {stream: t, protocol: n} = await i.select(e);
                            return this.metrics && this.metrics.trackStream({
                                stream: t,
                                remotePeer: h,
                                protocol: n
                            }),
                            {
                                stream: {
                                    ...r,
                                    ...t
                                },
                                protocol: n
                            }
                        } catch (e) {
                            throw n.error("could not create new stream", e),
                            f(e, l.ERR_UNSUPPORTED_PROTOCOL)
                        }
                    }
                    ,
                    u(i, d, i).catch(n.error));
                    const g = r.timeline;
                    r.timeline = new Proxy(g,{
                        set: (...e)=>(b && "close" === e[1] && e[2] && !g.close && (async()=>{
                            try {
                                b.stat.status === a.OPEN && await b.close()
                            } catch (e) {
                                n.error(e)
                            } finally {
                                this.onConnectionEnd(b)
                            }
                        }
                        )(),
                        Reflect.set(...e))
                    }),
                    r.timeline.upgraded = Date.now();
                    const m = ()=>{
                        throw f(new Error("connection is not multiplexed"), "ERR_CONNECTION_NOT_MULTIPLEXED")
                    }
                    ;
                    return b = new o({
                        localAddr: r.localAddr,
                        remoteAddr: r.remoteAddr,
                        localPeer: this.localPeer,
                        remotePeer: h,
                        stat: {
                            direction: t,
                            timeline: r.timeline,
                            multiplexer: c && c.multicodec,
                            encryption: e
                        },
                        newStream: p || m,
                        getStreams: ()=>d ? d.streams : m,
                        close: async e=>{
                            await r.close(e),
                            d && d.streams.map(t=>t.abort(e))
                        }
                    }),
                    this.onConnection(b),
                    b
                }
                _onStream({connection: e, stream: t, protocol: r}) {
                    this.protocols.get(r)({
                        connection: e,
                        stream: t,
                        protocol: r
                    })
                }
                async _encryptInbound(e, t, r) {
                    const i = new s.Listener(t)
                      , o = Array.from(r.keys());
                    n("handling inbound crypto protocol selection", o);
                    try {
                        const {stream: t, protocol: s} = await i.handle(o)
                          , a = r.get(s);
                        return n("encrypting inbound connection..."),
                        {
                            ...await a.secureInbound(e, t),
                            protocol: s
                        }
                    } catch (e) {
                        throw f(e, l.ERR_ENCRYPTION_FAILED)
                    }
                }
                async _encryptOutbound(e, t, r, i) {
                    const o = new s.Dialer(t)
                      , a = Array.from(i.keys());
                    n("selecting outbound crypto protocol", a);
                    try {
                        const {stream: t, protocol: s} = await o.select(a)
                          , c = i.get(s);
                        return n("encrypting outbound connection to %j", r),
                        {
                            ...await c.secureOutbound(e, t, r),
                            protocol: s
                        }
                    } catch (e) {
                        throw f(e, l.ERR_ENCRYPTION_FAILED)
                    }
                }
                async _multiplexOutbound(e, t) {
                    const r = new s.Dialer(e)
                      , i = Array.from(t.keys());
                    n("outbound selecting muxer %s", i);
                    try {
                        const {stream: e, protocol: s} = await r.select(i);
                        return n("%s selected as muxer protocol", s),
                        {
                            stream: e,
                            Muxer: t.get(s)
                        }
                    } catch (e) {
                        throw f(e, l.ERR_MUXER_UNAVAILABLE)
                    }
                }
                async _multiplexInbound(e, t) {
                    const r = new s.Listener(e)
                      , i = Array.from(t.keys());
                    n("inbound handling muxers %s", i);
                    try {
                        const {stream: e, protocol: n} = await r.handle(i);
                        return {
                            stream: e,
                            Muxer: t.get(n)
                        }
                    } catch (e) {
                        throw f(e, l.ERR_MUXER_UNAVAILABLE)
                    }
                }
            }
        }
        , {
            "./errors": 438,
            debug: 172,
            "err-code": 193,
            "it-pipe": 243,
            "libp2p-interfaces/src/connection": 276,
            "libp2p-interfaces/src/connection/status": 277,
            "multistream-select": 319,
            "mutable-proxy": 323,
            "peer-id": 372
        }]
    }, {}, [443])(443)
}
));
